'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var react_dom_1 = require('react-dom');
var jsxRuntime = require('react/jsx-runtime');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

function _interopNamespace(e) {
    if (e && e.__esModule) return e;
    var n = Object.create(null);
    if (e) {
        Object.keys(e).forEach(function (k) {
            if (k !== 'default') {
                var d = Object.getOwnPropertyDescriptor(e, k);
                Object.defineProperty(n, k, d.get ? d : {
                    enumerable: true,
                    get: function () {
                        return e[k];
                    }
                });
            }
        });
    }
    n['default'] = e;
    return Object.freeze(n);
}

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var React__namespace = /*#__PURE__*/_interopNamespace(React);
var react_dom_1__default = /*#__PURE__*/_interopDefaultLegacy(react_dom_1);

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __spreadArray(to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || from);
}

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function getDefaultExportFromCjs (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

function createCommonjsModule(fn, basedir, module) {
	return module = {
		path: basedir,
		exports: {},
		require: function (path, base) {
			return commonjsRequire(path, (base === undefined || base === null) ? module.path : base);
		}
	}, fn(module, module.exports), module.exports;
}

function commonjsRequire () {
	throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');
}

var classnames = createCommonjsModule(function (module) {
/*!
  Copyright (c) 2018 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {

	var hasOwn = {}.hasOwnProperty;

	function classNames() {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg)) {
				if (arg.length) {
					var inner = classNames.apply(null, arg);
					if (inner) {
						classes.push(inner);
					}
				}
			} else if (argType === 'object') {
				if (arg.toString === Object.prototype.toString) {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				} else {
					classes.push(arg.toString());
				}
			}
		}

		return classes.join(' ');
	}

	if (module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else {
		window.classNames = classNames;
	}
}());
});

function ReloadIcon(_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__default['default'].createElement("svg", __assign({ viewBox: "0 0 16 16", height: "16", width: "16" }, props),
        React__default['default'].createElement("path", { fill: fillColor, d: "M10.43 4.064l.86-1c-1.19-.868-2.643-1.268-4.163-1.068-3.7.467-6.21 4.201-4.888 7.936.594 1.8 2.048 3.2 3.831 3.734 2.907.867 5.748-.467 7.07-2.867.131-.267.528-.4.858-.267l.594.267c.33.133.529.6.33.933-1.188 2.334-3.5 3.935-6.077 4.201-.33.067-.66.067-.925.067C3.956 16 .521 13 .06 8.932-.47 4.53 2.635.529 6.995.062c2.048-.266 4.096.334 5.682 1.534L13.602.53c.198-.2.528-.133.594.134l.991 4.067c.066.2-.132.467-.33.4l-4.096-.533c-.397 0-.529-.333-.33-.533z" })));
}

var styles$L = {"button":"Button_button___6y6Zv","loading":"Button_loading___2AOmI","secondary":"Button_secondary___cZijp","spinner-left":"Button_spinner-left___3QoJH","spinner-right":"Button_spinner-right___3zMKd","skeleton":"Button_skeleton___3GwiW","label":"Button_label___zfeKR","icon":"Button_icon___1v7Qk","rotate":"Button_rotate___WvjcY","size-small":"Button_size-small___27z2N","size-large":"Button_size-large___3ob9M","size-extra-small":"Button_size-extra-small___3HXxL","fadeOutIn":"Button_fadeOutIn___2NWYj"};

var skeletonStyles = {"skeleton-bg-color-a":"#eee","skeleton-bg-color-b":"#f5f5f5","skeleton-bg-image":"linear-gradient(90deg, #eee, #f5f5f5, #eee)","skeleton-bg-size":"200px 100%","skeleton-bg-initial-position":"-200px 0","skeleton":"theme_skeleton___39-kY","skeletonShimmer":"theme_skeletonShimmer___3hRbX"};

function isPropsForAnchor(props) {
    return "href" in props;
}
var Button = React__namespace.forwardRef(function Button(props, ref) {
    var _a;
    var className = props.className, isLoading = props.isLoading, _b = props.variant, variant = _b === void 0 ? "primary" : _b, _c = props.spinnerAlign, spinnerAlign = _c === void 0 ? "centre" : _c, _d = props.size, size = _d === void 0 ? "medium" : _d, label = props.label, color = props.color, isSkeleton = props.isSkeleton, disabled = props.disabled, href = props.href, buttonProps = __rest(props, ["className", "isLoading", "variant", "spinnerAlign", "size", "label", "color", "isSkeleton", "disabled", "href"]);
    var isDisabled = disabled || isSkeleton;
    var buttonClassNames = classnames(styles$L.button, styles$L["spinner-" + spinnerAlign], styles$L["size-" + size], (_a = {},
        _a[styles$L.loading] = isLoading,
        _a[styles$L.secondary] = variant === "secondary",
        _a[skeletonStyles.skeleton] = isSkeleton,
        _a[styles$L.skeleton] = isSkeleton,
        _a), className);
    var buttonContent = (React__namespace.createElement(React__namespace.Fragment, null,
        React__namespace.createElement("span", { "aria-hidden": isSkeleton ? "true" : undefined, className: styles$L.label }, label),
        React__namespace.createElement("span", { "aria-hidden": isSkeleton ? "true" : undefined, className: styles$L.icon, "data-testid": buttonProps["data-testid"] ? buttonProps["data-testid"] + "-icon" : "button-icon" },
            React__namespace.createElement(ReloadIcon, { fillColor: variant === "secondary" ? (color ? color : "#1fcfec") : "#fff" }))));
    return isPropsForAnchor(props) ? (React__namespace.createElement("a", __assign({ ref: ref, style: { color: color }, className: buttonClassNames, "aria-busy": isSkeleton, "aria-label": label, href: href }, buttonProps), buttonContent)) : (React__namespace.createElement("button", __assign({ ref: ref, style: { color: color }, className: buttonClassNames, "aria-busy": isSkeleton, "aria-label": label, disabled: isDisabled }, buttonProps), buttonContent));
});
var buttonStyles = __assign({}, styles$L);

var styles$K = {"typography":"Typography_typography___Sr-We","h1":"Typography_h1___1ZIxV Typography_typography___Sr-We","h2":"Typography_h2___3htoD Typography_typography___Sr-We","h3":"Typography_h3___34_Am Typography_typography___Sr-We","h4":"Typography_h4___nKqae Typography_typography___Sr-We","p":"Typography_p___1FszF Typography_typography___Sr-We","small":"Typography_small___1v_ME Typography_typography___Sr-We","extraSmall":"Typography_extraSmall___1ovlz Typography_typography___Sr-We","large":"Typography_large___3lDv2 Typography_typography___Sr-We","extraLarge":"Typography_extraLarge___qdKsZ Typography_typography___Sr-We","skeleton":"Typography_skeleton___2McOk"};

var variantTagMap = {
    h1: "h1",
    h2: "h2",
    h3: "h3",
    h4: "h4",
    p: "p",
    small: "p",
    extraSmall: "p",
    large: "p",
    extraLarge: "p",
};
function Typography(props) {
    var _a;
    var className = props.className, children = props.children, isSkeleton = props.isSkeleton, _b = props.skeletonWidth, skeletonWidth = _b === void 0 ? "4rem" : _b, _c = props.skeletonHeight, skeletonHeight = _c === void 0 ? "1rem" : _c, _d = props.variant, variant = _d === void 0 ? "p" : _d, otherProps = __rest(props, ["className", "children", "isSkeleton", "skeletonWidth", "skeletonHeight", "variant"]);
    /**
     * Variant mapped to valid ElementType
     * Capitalize to allow element to be created
     */
    var MappedElement = variantTagMap[variant];
    var skeletonStyle = isSkeleton
        ? {
            width: skeletonWidth,
            height: skeletonHeight,
        }
        : undefined;
    return (React__namespace.createElement(MappedElement, __assign({ "aria-busy": isSkeleton, className: classnames(styles$K[variant], (_a = {}, _a[skeletonStyles.skeleton] = isSkeleton, _a[styles$K.skeleton] = isSkeleton, _a), className), style: skeletonStyle }, otherProps), isSkeleton ? null : children));
}

var styles$J = {"color-blue":"#482DEB","color-blue-hsl":"249, 83%, 55%","color-red":"#EE3355","color-red-hsl":"349, 85%, 57%","color-orange":"#ffaa33","color-orange-hsl":"35, 100%, 60%","color-green":"#2AA24F","color-green-hsl":"139, 59%, 40%","color-light-blue":"#4499EE","color-light-blue-hsl":"210, 83%, 60%","color-grey-blue":"#556680","color-grey-blue-hsl":"216, 20%, 42%","color-primary-navy":"hsl(228.3, 83.6%, 21.6%)","color-primary-navy-light":"hsl(228, 67%, 35%)","color-primary-teal":"color-primary-blue","color-primary-magenta":"hsl(321.9, 86.7%, 47.1%)","color-primary-violet":"hsl(268.6, 85.5%, 70.2%)","color-grey-black":"#1A1B23","color-grey-black-hsl":"233, 15%, 12%","color-grey-slate":"#6f749a","color-grey-slate-hsl":"233, 17.6%, 52%","color-grey-slate-40":"hsla(233, 17.6%, 52%, 40%)","color-grey-light":"hsl(232.5, 100%, 98.4%)","color-grey-white":"hsl(0, 0%, 100%)","color-grey-white-80":"hsla(0, 0%, 100%, 80%)","color-ui-action":"#482DEB","color-ui-action-mid":"#2F1BA6","color-ui-action-dark":"#15095D","color-ui-action-80":"hsla(249, 83%, 55%, 80%)","color-ui-action-60":"hsla(249, 83%, 55%, 60%)","color-ui-action-40":"hsla(249, 83%, 55%, 40%)","color-ui-action-20":"hsla(249, 83%, 55%, 20%)","color-ui-action-10":"hsla(249, 83%, 55%, 10%)","color-ui-action-5":"hsla(249, 83%, 55%, 5%)","color-ui-warning":"#ffaa33","color-ui-warning-mid":"#CC6633","color-ui-warning-dark":"#704100","color-ui-warning-80":"hsla(35, 100%, 60%, 80%)","color-ui-warning-60":"hsla(35, 100%, 60%, 60%)","color-ui-warning-40":"hsla(35, 100%, 60%, 40%)","color-ui-warning-20":"hsla(35, 100%, 60%, 20%)","color-ui-warning-10":"hsla(35, 100%, 60%, 10%)","color-ui-negative":"#EE3355","color-ui-negative-mid":"#A91E36","color-ui-negative-dark":"#6D0E1E","color-ui-negative-80":"hsla(349, 85%, 57%, 80%)","color-ui-negative-60":"hsla(349, 85%, 57%, 60%)","color-ui-negative-40":"hsla(349, 85%, 57%, 40%)","color-ui-negative-20":"hsla(349, 85%, 57%, 20%)","color-ui-negative-10":"hsla(349, 85%, 57%, 10%)","color-ui-positive":"#2AA24F","color-ui-positive-mid":"#26732E","color-ui-positive-dark":"#204A12","color-ui-positive-80":"hsla(139, 59%, 40%, 80%)","color-ui-positive-60":"hsla(139, 59%, 40%, 60%)","color-ui-positive-40":"hsla(139, 59%, 40%, 40%)","color-ui-positive-20":"hsla(139, 59%, 40%, 20%)","color-ui-positive-10":"hsla(139, 59%, 40%, 10%)","color-ui-neutral":"#4499EE","color-ui-neutral-mid":"#1A6FB6","color-ui-neutral-dark":"#02457E","color-ui-neutral-80":"hsla(210, 83%, 60%, 80%)","color-ui-neutral-60":"hsla(210, 83%, 60%, 60%)","color-ui-neutral-40":"hsla(210, 83%, 60%, 40%)","color-ui-neutral-20":"hsla(210, 83%, 60%, 20%)","color-ui-neutral-10":"hsla(210, 83%, 60%, 10%)","color-ui-interface":"#556680","color-ui-interface-80":"hsla(216, 20%, 42%, 80%)","color-ui-interface-60":"hsla(216, 20%, 42%, 60%)","color-ui-interface-40":"hsla(216, 20%, 42%, 40%)","color-ui-interface-20":"hsla(216, 20%, 42%, 20%)","color-ui-interface-10":"hsla(216, 20%, 42%, 10%)","color-ui-blue":"hsl(222.4, 60.4%, 61.4%)","color-ui-steel-blue":"hsl(220, 67%, 61%)","color-ui-inactive":"hsl(212.3,26%,80.4%)","card":"Card_card___3FjBB"};

function Card(_a) {
    var className = _a.className, children = _a.children, otherProps = __rest(_a, ["className", "children"]);
    return (React__namespace.createElement("div", __assign({ className: classnames(styles$J.card, className) }, otherProps), children));
}

var textInputStyles = {"group":"TextInput_group___34kQb","skeleton":"TextInput_skeleton___LV89e","control":"TextInput_control___KNkVc","error":"TextInput_error___3tGqH","label":"TextInput_label___118iu","skeletonLabel":"TextInput_skeletonLabel___1ISbj","labelText":"TextInput_labelText___1HXuO","input":"TextInput_input___2x8AX TextInput_control___KNkVc","leftPad":"TextInput_leftPad___3gVKd","skeletonInput":"TextInput_skeletonInput___3Xmzr","small":"TextInput_small___1a4QO","errorMessage":"TextInput_errorMessage___2sBB0","wrapper":"TextInput_wrapper___k520T","icon":"TextInput_icon___33bv-","right":"TextInput_right___3C8xm","left":"TextInput_left___1oufA","characterCount":"TextInput_characterCount___1dqeS","alignRight":"TextInput_alignRight___2n7Qg","characterCountSkeleton":"TextInput_characterCountSkeleton___2zRME"};

var CharacterCount = function (props) {
    var maxLen = props.maxLen, valueLen = props.valueLen, isSkeleton = props.isSkeleton;
    if (isSkeleton) {
        return React__namespace.createElement("span", null, "\u00A0");
    }
    if (!maxLen || !valueLen) {
        return React__namespace.createElement("span", null, "- characters remaining");
    }
    return (React__namespace.createElement("span", null,
        maxLen - valueLen,
        "/",
        maxLen,
        " characters remaining"));
};

function useCombinedRefs() {
    var refs = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        refs[_i] = arguments[_i];
    }
    var targetRef = React__default['default'].useRef(null);
    React__default['default'].useEffect(function () {
        refs.forEach(function (ref) {
            if (!ref)
                return;
            if (typeof ref === "function") {
                ref(targetRef.current);
            }
            else {
                ref.current = targetRef.current;
            }
        });
    }, [refs]);
    return targetRef;
}

var TextInput = React__namespace.forwardRef(function TextInput(props, ref) {
    var _a, _b, _c, _d;
    var _e;
    var className = props.className, labelClassName = props.labelClassName, inputClassName = props.inputClassName, iconLeftClassName = props.iconLeftClassName, iconRightClassName = props.iconRightClassName, label = props.label, id = props.id, iconRight = props.iconRight, iconLeft = props.iconLeft, error = props.error, errorMessage = props.errorMessage, onClickIcon = props.onClickIcon, _f = props.variant, variant = _f === void 0 ? "default" : _f, isSkeleton = props.isSkeleton, disabled = props.disabled, showCharacterCount = props.showCharacterCount, _g = props.characterCountAlign, characterCountAlign = _g === void 0 ? "right" : _g, focusOnControlClick = props.focusOnControlClick, inputProps = __rest(props, ["className", "labelClassName", "inputClassName", "iconLeftClassName", "iconRightClassName", "label", "id", "iconRight", "iconLeft", "error", "errorMessage", "onClickIcon", "variant", "isSkeleton", "disabled", "showCharacterCount", "characterCountAlign", "focusOnControlClick"]);
    var innerRef = React__namespace.useRef(null);
    var textInputRef = useCombinedRefs(ref, innerRef);
    var controlRef = React__namespace.useRef(null);
    var isDisabled = disabled || isSkeleton;
    var isErrorMessage = error && errorMessage !== undefined;
    var isCharacterCount = showCharacterCount && inputProps.maxLength !== 0;
    var onControlClick = React__namespace.useCallback(function () {
        var _a;
        if (!isDisabled && focusOnControlClick)
            (_a = textInputRef.current) === null || _a === void 0 ? void 0 : _a.focus();
    }, [focusOnControlClick, isDisabled, textInputRef]);
    return (React__namespace.createElement("div", { "aria-busy": isSkeleton, className: classnames(textInputStyles.group, className, (_a = {},
            _a[textInputStyles.small] = variant === "small",
            _a[textInputStyles.skeleton] = isSkeleton,
            _a)), onClick: onControlClick, ref: controlRef },
        isErrorMessage && (React__namespace.createElement(Typography, { role: "alert", variant: "small", className: textInputStyles.errorMessage }, errorMessage)),
        label && (React__namespace.createElement("label", { htmlFor: id, className: classnames(textInputStyles.label, labelClassName, (_b = {},
                _b[skeletonStyles.skeleton] = isSkeleton,
                _b[textInputStyles.skeletonLabel] = isSkeleton,
                _b)) },
            React__namespace.createElement("span", { className: textInputStyles.labelText }, label))),
        React__namespace.createElement("div", { className: classnames(textInputStyles.wrapper) },
            React__namespace.createElement("input", __assign({ name: id, ref: textInputRef, id: id, type: "text", className: classnames(textInputStyles.input, (_c = {},
                    _c[textInputStyles.error] = error,
                    _c[textInputStyles.leftPad] = !!iconLeft,
                    _c[skeletonStyles.skeleton] = isSkeleton,
                    _c[textInputStyles.skeletonInput] = isSkeleton,
                    _c), inputClassName), disabled: isDisabled, "aria-hidden": isSkeleton ? "true" : undefined }, inputProps)),
            iconLeft && (React__namespace.createElement("span", { "data-testid": "text-input-icon-left", onClick: onClickIcon, className: classnames(textInputStyles.icon, textInputStyles.left, iconLeftClassName) }, iconLeft)),
            iconRight && (React__namespace.createElement("span", { "data-testid": "text-input-icon-right", onClick: onClickIcon, className: classnames(textInputStyles.icon, textInputStyles.right, iconRightClassName) }, iconRight))),
        isCharacterCount && (React__namespace.createElement("div", { className: classnames(textInputStyles.characterCount, (_d = {},
                _d[textInputStyles.alignRight] = characterCountAlign === "right",
                _d[skeletonStyles.skeleton] = isSkeleton,
                _d[textInputStyles.characterCountSkeleton] = isSkeleton,
                _d)) },
            React__namespace.createElement(CharacterCount, { maxLen: inputProps.maxLength, valueLen: (_e = inputProps.value) === null || _e === void 0 ? void 0 : _e.toString().length, isSkeleton: isSkeleton })))));
});

function _objectWithoutPropertiesLoose$3(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _extends$3() {
  _extends$3 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends$3.apply(this, arguments);
}

/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var b$2="function"===typeof Symbol&&Symbol.for,c$4=b$2?Symbol.for("react.element"):60103,d$2=b$2?Symbol.for("react.portal"):60106,e$3=b$2?Symbol.for("react.fragment"):60107,f$2=b$2?Symbol.for("react.strict_mode"):60108,g$2=b$2?Symbol.for("react.profiler"):60114,h$2=b$2?Symbol.for("react.provider"):60109,k$1=b$2?Symbol.for("react.context"):60110,l$2=b$2?Symbol.for("react.async_mode"):60111,m$2=b$2?Symbol.for("react.concurrent_mode"):60111,n$3=b$2?Symbol.for("react.forward_ref"):60112,p$2=b$2?Symbol.for("react.suspense"):60113,q$1=b$2?
Symbol.for("react.suspense_list"):60120,r$3=b$2?Symbol.for("react.memo"):60115,t$2=b$2?Symbol.for("react.lazy"):60116,v$1=b$2?Symbol.for("react.block"):60121,w$2=b$2?Symbol.for("react.fundamental"):60117,x$2=b$2?Symbol.for("react.responder"):60118,y$3=b$2?Symbol.for("react.scope"):60119;
function z$1(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c$4:switch(a=a.type,a){case l$2:case m$2:case e$3:case g$2:case f$2:case p$2:return a;default:switch(a=a&&a.$$typeof,a){case k$1:case n$3:case t$2:case r$3:case h$2:return a;default:return u}}case d$2:return u}}}function A$3(a){return z$1(a)===m$2}var AsyncMode=l$2;var ConcurrentMode=m$2;var ContextConsumer$1=k$1;var ContextProvider$1=h$2;var Element$2=c$4;var ForwardRef$1=n$3;var Fragment$1=e$3;var Lazy$1=t$2;var Memo$1=r$3;var Portal$1=d$2;
var Profiler$1=g$2;var StrictMode$1=f$2;var Suspense$1=p$2;var isAsyncMode$1=function(a){return A$3(a)||z$1(a)===l$2};var isConcurrentMode$1=A$3;var isContextConsumer$1=function(a){return z$1(a)===k$1};var isContextProvider$1=function(a){return z$1(a)===h$2};var isElement$3=function(a){return "object"===typeof a&&null!==a&&a.$$typeof===c$4};var isForwardRef$1=function(a){return z$1(a)===n$3};var isFragment$1=function(a){return z$1(a)===e$3};var isLazy$1=function(a){return z$1(a)===t$2};
var isMemo$1=function(a){return z$1(a)===r$3};var isPortal$1=function(a){return z$1(a)===d$2};var isProfiler$1=function(a){return z$1(a)===g$2};var isStrictMode$1=function(a){return z$1(a)===f$2};var isSuspense$1=function(a){return z$1(a)===p$2};
var isValidElementType$1=function(a){return "string"===typeof a||"function"===typeof a||a===e$3||a===m$2||a===g$2||a===f$2||a===p$2||a===q$1||"object"===typeof a&&null!==a&&(a.$$typeof===t$2||a.$$typeof===r$3||a.$$typeof===h$2||a.$$typeof===k$1||a.$$typeof===n$3||a.$$typeof===w$2||a.$$typeof===x$2||a.$$typeof===y$3||a.$$typeof===v$1)};var typeOf$1=z$1;

var reactIs_production_min$1 = {
	AsyncMode: AsyncMode,
	ConcurrentMode: ConcurrentMode,
	ContextConsumer: ContextConsumer$1,
	ContextProvider: ContextProvider$1,
	Element: Element$2,
	ForwardRef: ForwardRef$1,
	Fragment: Fragment$1,
	Lazy: Lazy$1,
	Memo: Memo$1,
	Portal: Portal$1,
	Profiler: Profiler$1,
	StrictMode: StrictMode$1,
	Suspense: Suspense$1,
	isAsyncMode: isAsyncMode$1,
	isConcurrentMode: isConcurrentMode$1,
	isContextConsumer: isContextConsumer$1,
	isContextProvider: isContextProvider$1,
	isElement: isElement$3,
	isForwardRef: isForwardRef$1,
	isFragment: isFragment$1,
	isLazy: isLazy$1,
	isMemo: isMemo$1,
	isPortal: isPortal$1,
	isProfiler: isProfiler$1,
	isStrictMode: isStrictMode$1,
	isSuspense: isSuspense$1,
	isValidElementType: isValidElementType$1,
	typeOf: typeOf$1
};

var reactIs_development$1 = createCommonjsModule(function (module, exports) {



if (process.env.NODE_ENV !== "production") {
  (function() {

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?

var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
}

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;

    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;

          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_LAZY_TYPE:
              case REACT_MEMO_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;

              default:
                return $$typeof;
            }

        }

      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
} // AsyncMode is deprecated along with isAsyncMode

var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;
var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }

  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

exports.AsyncMode = AsyncMode;
exports.ConcurrentMode = ConcurrentMode;
exports.ContextConsumer = ContextConsumer;
exports.ContextProvider = ContextProvider;
exports.Element = Element;
exports.ForwardRef = ForwardRef;
exports.Fragment = Fragment;
exports.Lazy = Lazy;
exports.Memo = Memo;
exports.Portal = Portal;
exports.Profiler = Profiler;
exports.StrictMode = StrictMode;
exports.Suspense = Suspense;
exports.isAsyncMode = isAsyncMode;
exports.isConcurrentMode = isConcurrentMode;
exports.isContextConsumer = isContextConsumer;
exports.isContextProvider = isContextProvider;
exports.isElement = isElement;
exports.isForwardRef = isForwardRef;
exports.isFragment = isFragment;
exports.isLazy = isLazy;
exports.isMemo = isMemo;
exports.isPortal = isPortal;
exports.isProfiler = isProfiler;
exports.isStrictMode = isStrictMode;
exports.isSuspense = isSuspense;
exports.isValidElementType = isValidElementType;
exports.typeOf = typeOf;
  })();
}
});

var reactIs = createCommonjsModule(function (module) {

if (process.env.NODE_ENV === 'production') {
  module.exports = reactIs_production_min$1;
} else {
  module.exports = reactIs_development$1;
}
});

/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty$c = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

var objectAssign = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty$c.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactPropTypesSecret$1 = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

var ReactPropTypesSecret_1 = ReactPropTypesSecret$1;

var printWarning$1 = function() {};

if (process.env.NODE_ENV !== 'production') {
  var ReactPropTypesSecret = ReactPropTypesSecret_1;
  var loggedTypeFailures = {};
  var has$1 = Function.call.bind(Object.prototype.hasOwnProperty);

  printWarning$1 = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (has$1(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning$1(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          );
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning$1(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

/**
 * Resets warning cache when testing.
 *
 * @private
 */
checkPropTypes.resetWarningCache = function() {
  if (process.env.NODE_ENV !== 'production') {
    loggedTypeFailures = {};
  }
};

var checkPropTypes_1 = checkPropTypes;

var has = Function.call.bind(Object.prototype.hasOwnProperty);
var printWarning = function() {};

if (process.env.NODE_ENV !== 'production') {
  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull() {
  return null;
}

var factoryWithTypeCheckers = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret_1) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            printWarning(
              'You are manually calling a React.PropTypes validation ' +
              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret_1);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!reactIs.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if (process.env.NODE_ENV !== 'production') {
        if (arguments.length > 1) {
          printWarning(
            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +
            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
          );
        } else {
          printWarning('Invalid argument supplied to oneOf, expected an array.');
        }
      }
      return emptyFunctionThatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);
        if (type === 'symbol') {
          return String(value);
        }
        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (has(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunctionThatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning(
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
        );
        return emptyFunctionThatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret_1) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from
      // props.
      var allKeys = objectAssign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // falsy value can't be a Symbol
    if (!propValue) {
      return false;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes_1;
  ReactPropTypes.resetWarningCache = checkPropTypes_1.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

function emptyFunction() {}
function emptyFunctionWithReset() {}
emptyFunctionWithReset.resetWarningCache = emptyFunction;

var factoryWithThrowingShims = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret_1) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error(
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
    err.name = 'Invariant Violation';
    throw err;
  }  shim.isRequired = shim;
  function getShim() {
    return shim;
  }  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,

    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };

  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

var propTypes = createCommonjsModule(function (module) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (process.env.NODE_ENV !== 'production') {
  var ReactIs = reactIs;

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = factoryWithTypeCheckers(ReactIs.isElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = factoryWithThrowingShims();
}
});

/** @license React v17.0.2
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var b$1=60103,c$3=60106,d$1=60107,e$2=60108,f$1=60114,g$1=60109,h$1=60110,k=60112,l$1=60113,m$1=60120,n$2=60115,p$1=60116,q=60121,r$2=60122,u=60117,v=60129,w$1=60131;
if("function"===typeof Symbol&&Symbol.for){var x$1=Symbol.for;b$1=x$1("react.element");c$3=x$1("react.portal");d$1=x$1("react.fragment");e$2=x$1("react.strict_mode");f$1=x$1("react.profiler");g$1=x$1("react.provider");h$1=x$1("react.context");k=x$1("react.forward_ref");l$1=x$1("react.suspense");m$1=x$1("react.suspense_list");n$2=x$1("react.memo");p$1=x$1("react.lazy");q=x$1("react.block");r$2=x$1("react.server.block");u=x$1("react.fundamental");v=x$1("react.debug_trace_mode");w$1=x$1("react.legacy_hidden");}
function y$2(a){if("object"===typeof a&&null!==a){var t=a.$$typeof;switch(t){case b$1:switch(a=a.type,a){case d$1:case f$1:case e$2:case l$1:case m$1:return a;default:switch(a=a&&a.$$typeof,a){case h$1:case k:case p$1:case n$2:case g$1:return a;default:return t}}case c$3:return t}}}var z=g$1,A$2=b$1,B$1=k,C$1=d$1,D$2=p$1,E$1=n$2,F=c$3,G=f$1,H=e$2,I=l$1;var ContextConsumer=h$1;var ContextProvider=z;var Element$1=A$2;var ForwardRef=B$1;var Fragment=C$1;var Lazy=D$2;var Memo=E$1;var Portal=F;var Profiler=G;var StrictMode=H;
var Suspense=I;var isAsyncMode=function(){return !1};var isConcurrentMode=function(){return !1};var isContextConsumer=function(a){return y$2(a)===h$1};var isContextProvider=function(a){return y$2(a)===g$1};var isElement$2=function(a){return "object"===typeof a&&null!==a&&a.$$typeof===b$1};var isForwardRef=function(a){return y$2(a)===k};var isFragment=function(a){return y$2(a)===d$1};var isLazy=function(a){return y$2(a)===p$1};var isMemo=function(a){return y$2(a)===n$2};
var isPortal=function(a){return y$2(a)===c$3};var isProfiler=function(a){return y$2(a)===f$1};var isStrictMode=function(a){return y$2(a)===e$2};var isSuspense=function(a){return y$2(a)===l$1};var isValidElementType=function(a){return "string"===typeof a||"function"===typeof a||a===d$1||a===f$1||a===v||a===e$2||a===l$1||a===m$1||a===w$1||"object"===typeof a&&null!==a&&(a.$$typeof===p$1||a.$$typeof===n$2||a.$$typeof===g$1||a.$$typeof===h$1||a.$$typeof===k||a.$$typeof===u||a.$$typeof===q||a[0]===r$2)?!0:!1};
var typeOf=y$2;

var reactIs_production_min = {
	ContextConsumer: ContextConsumer,
	ContextProvider: ContextProvider,
	Element: Element$1,
	ForwardRef: ForwardRef,
	Fragment: Fragment,
	Lazy: Lazy,
	Memo: Memo,
	Portal: Portal,
	Profiler: Profiler,
	StrictMode: StrictMode,
	Suspense: Suspense,
	isAsyncMode: isAsyncMode,
	isConcurrentMode: isConcurrentMode,
	isContextConsumer: isContextConsumer,
	isContextProvider: isContextProvider,
	isElement: isElement$2,
	isForwardRef: isForwardRef,
	isFragment: isFragment,
	isLazy: isLazy,
	isMemo: isMemo,
	isPortal: isPortal,
	isProfiler: isProfiler,
	isStrictMode: isStrictMode,
	isSuspense: isSuspense,
	isValidElementType: isValidElementType,
	typeOf: typeOf
};

var reactIs_development = createCommonjsModule(function (module, exports) {

if (process.env.NODE_ENV !== "production") {
  (function() {

// ATTENTION
// When adding new symbols to this file,
// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var REACT_ELEMENT_TYPE = 0xeac7;
var REACT_PORTAL_TYPE = 0xeaca;
var REACT_FRAGMENT_TYPE = 0xeacb;
var REACT_STRICT_MODE_TYPE = 0xeacc;
var REACT_PROFILER_TYPE = 0xead2;
var REACT_PROVIDER_TYPE = 0xeacd;
var REACT_CONTEXT_TYPE = 0xeace;
var REACT_FORWARD_REF_TYPE = 0xead0;
var REACT_SUSPENSE_TYPE = 0xead1;
var REACT_SUSPENSE_LIST_TYPE = 0xead8;
var REACT_MEMO_TYPE = 0xead3;
var REACT_LAZY_TYPE = 0xead4;
var REACT_BLOCK_TYPE = 0xead9;
var REACT_SERVER_BLOCK_TYPE = 0xeada;
var REACT_FUNDAMENTAL_TYPE = 0xead5;
var REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;
var REACT_LEGACY_HIDDEN_TYPE = 0xeae3;

if (typeof Symbol === 'function' && Symbol.for) {
  var symbolFor = Symbol.for;
  REACT_ELEMENT_TYPE = symbolFor('react.element');
  REACT_PORTAL_TYPE = symbolFor('react.portal');
  REACT_FRAGMENT_TYPE = symbolFor('react.fragment');
  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');
  REACT_PROFILER_TYPE = symbolFor('react.profiler');
  REACT_PROVIDER_TYPE = symbolFor('react.provider');
  REACT_CONTEXT_TYPE = symbolFor('react.context');
  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');
  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');
  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');
  REACT_MEMO_TYPE = symbolFor('react.memo');
  REACT_LAZY_TYPE = symbolFor('react.lazy');
  REACT_BLOCK_TYPE = symbolFor('react.block');
  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');
  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');
  symbolFor('react.scope');
  symbolFor('react.opaque.id');
  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');
  symbolFor('react.offscreen');
  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');
}

// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.

var enableScopeAPI = false; // Experimental Create Event Handle API.

function isValidElementType(type) {
  if (typeof type === 'string' || typeof type === 'function') {
    return true;
  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).


  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI ) {
    return true;
  }

  if (typeof type === 'object' && type !== null) {
    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {
      return true;
    }
  }

  return false;
}

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;

    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
          case REACT_SUSPENSE_LIST_TYPE:
            return type;

          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_LAZY_TYPE:
              case REACT_MEMO_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;

              default:
                return $$typeof;
            }

        }

      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
}
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;
var hasWarnedAboutDeprecatedIsAsyncMode = false;
var hasWarnedAboutDeprecatedIsConcurrentMode = false; // AsyncMode should be deprecated

function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 18+.');
    }
  }

  return false;
}
function isConcurrentMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsConcurrentMode) {
      hasWarnedAboutDeprecatedIsConcurrentMode = true; // Using console['warn'] to evade Babel and ESLint

      console['warn']('The ReactIs.isConcurrentMode() alias has been deprecated, ' + 'and will be removed in React 18+.');
    }
  }

  return false;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

exports.ContextConsumer = ContextConsumer;
exports.ContextProvider = ContextProvider;
exports.Element = Element;
exports.ForwardRef = ForwardRef;
exports.Fragment = Fragment;
exports.Lazy = Lazy;
exports.Memo = Memo;
exports.Portal = Portal;
exports.Profiler = Profiler;
exports.StrictMode = StrictMode;
exports.Suspense = Suspense;
exports.isAsyncMode = isAsyncMode;
exports.isConcurrentMode = isConcurrentMode;
exports.isContextConsumer = isContextConsumer;
exports.isContextProvider = isContextProvider;
exports.isElement = isElement;
exports.isForwardRef = isForwardRef;
exports.isFragment = isFragment;
exports.isLazy = isLazy;
exports.isMemo = isMemo;
exports.isPortal = isPortal;
exports.isProfiler = isProfiler;
exports.isStrictMode = isStrictMode;
exports.isSuspense = isSuspense;
exports.isValidElementType = isValidElementType;
exports.typeOf = typeOf;
  })();
}
});

createCommonjsModule(function (module) {

if (process.env.NODE_ENV === 'production') {
  module.exports = reactIs_production_min;
} else {
  module.exports = reactIs_development;
}
});

function t$1(t){return "object"==typeof t&&null!=t&&1===t.nodeType}function e$1(t,e){return (!e||"hidden"!==t)&&"visible"!==t&&"clip"!==t}function n$1(t,n){if(t.clientHeight<t.scrollHeight||t.clientWidth<t.scrollWidth){var r=getComputedStyle(t,null);return e$1(r.overflowY,n)||e$1(r.overflowX,n)||function(t){var e=function(t){if(!t.ownerDocument||!t.ownerDocument.defaultView)return null;try{return t.ownerDocument.defaultView.frameElement}catch(t){return null}}(t);return !!e&&(e.clientHeight<t.scrollHeight||e.clientWidth<t.scrollWidth)}(t)}return !1}function r$1(t,e,n,r,i,o,l,d){return o<t&&l>e||o>t&&l<e?0:o<=t&&d<=n||l>=e&&d>=n?o-t-r:l>e&&d<n||o<t&&d>n?l-e+i:0}function computeScrollIntoView(e,i){var o=window,l=i.scrollMode,d=i.block,u=i.inline,h=i.boundary,a=i.skipOverflowHiddenElements,c="function"==typeof h?h:function(t){return t!==h};if(!t$1(e))throw new TypeError("Invalid target");for(var f=document.scrollingElement||document.documentElement,s=[],p=e;t$1(p)&&c(p);){if((p=p.parentElement)===f){s.push(p);break}null!=p&&p===document.body&&n$1(p)&&!n$1(document.documentElement)||null!=p&&n$1(p,a)&&s.push(p);}for(var m=o.visualViewport?o.visualViewport.width:innerWidth,g=o.visualViewport?o.visualViewport.height:innerHeight,w=window.scrollX||pageXOffset,v=window.scrollY||pageYOffset,W=e.getBoundingClientRect(),b=W.height,H=W.width,y=W.top,E=W.right,M=W.bottom,V=W.left,x="start"===d||"nearest"===d?y:"end"===d?M:y+b/2,I="center"===u?V+H/2:"end"===u?E:V,C=[],T=0;T<s.length;T++){var k=s[T],B=k.getBoundingClientRect(),D=B.height,O=B.width,R=B.top,X=B.right,Y=B.bottom,L=B.left;if("if-needed"===l&&y>=0&&V>=0&&M<=g&&E<=m&&y>=R&&M<=Y&&V>=L&&E<=X)return C;var S=getComputedStyle(k),j=parseInt(S.borderLeftWidth,10),q=parseInt(S.borderTopWidth,10),z=parseInt(S.borderRightWidth,10),A=parseInt(S.borderBottomWidth,10),F=0,G=0,J="offsetWidth"in k?k.offsetWidth-k.clientWidth-j-z:0,K="offsetHeight"in k?k.offsetHeight-k.clientHeight-q-A:0;if(f===k)F="start"===d?x:"end"===d?x-g:"nearest"===d?r$1(v,v+g,g,q,A,v+x,v+x+b,b):x-g/2,G="start"===u?I:"center"===u?I-m/2:"end"===u?I-m:r$1(w,w+m,m,j,z,w+I,w+I+H,H),F=Math.max(0,F+v),G=Math.max(0,G+w);else {F="start"===d?x-R-q:"end"===d?x-Y+A+K:"nearest"===d?r$1(R,Y,D,q,A+K,x,x+b,b):x-(R+D/2)+K/2,G="start"===u?I-L-j:"center"===u?I-(L+O/2)+J/2:"end"===u?I-X+z+J:r$1(L,X,O,j,z+J,I,I+H,H);var N=k.scrollLeft,P=k.scrollTop;x+=P-(F=Math.max(0,Math.min(P+F,k.scrollHeight-D+K))),I+=N-(G=Math.max(0,Math.min(N+G,k.scrollWidth-O+J)));}C.push({el:k,top:F,left:G});}return C}

var idCounter = 0;

function noop$4() {}
/**
 * Scroll node into view if necessary
 * @param {HTMLElement} node the element that should scroll into view
 * @param {HTMLElement} menuNode the menu element of the component
 */


function scrollIntoView(node, menuNode) {
  if (!node) {
    return;
  }

  var actions = computeScrollIntoView(node, {
    boundary: menuNode,
    block: 'nearest',
    scrollMode: 'if-needed'
  });
  actions.forEach(function (_ref) {
    var el = _ref.el,
        top = _ref.top,
        left = _ref.left;
    el.scrollTop = top;
    el.scrollLeft = left;
  });
}
/**
 * @param {HTMLElement} parent the parent node
 * @param {HTMLElement} child the child node
 * @param {Window} environment The window context where downshift renders.
 * @return {Boolean} whether the parent is the child or the child is in the parent
 */


function isOrContainsNode(parent, child, environment) {
  var result = parent === child || child instanceof environment.Node && parent.contains && parent.contains(child);
  return result;
}
/**
 * Simple debounce implementation. Will call the given
 * function once after the time given has passed since
 * it was last called.
 * @param {Function} fn the function to call after the time
 * @param {Number} time the time to wait
 * @return {Function} the debounced function
 */


function debounce$1(fn, time) {
  var timeoutId;

  function cancel() {
    if (timeoutId) {
      clearTimeout(timeoutId);
    }
  }

  function wrapper() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    cancel();
    timeoutId = setTimeout(function () {
      timeoutId = null;
      fn.apply(void 0, args);
    }, time);
  }

  wrapper.cancel = cancel;
  return wrapper;
}
/**
 * This is intended to be used to compose event handlers.
 * They are executed in order until one of them sets
 * `event.preventDownshiftDefault = true`.
 * @param {...Function} fns the event handler functions
 * @return {Function} the event handler to add to an element
 */


function callAllEventHandlers() {
  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    fns[_key2] = arguments[_key2];
  }

  return function (event) {
    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
      args[_key3 - 1] = arguments[_key3];
    }

    return fns.some(function (fn) {
      if (fn) {
        fn.apply(void 0, [event].concat(args));
      }

      return event.preventDownshiftDefault || event.hasOwnProperty('nativeEvent') && event.nativeEvent.preventDownshiftDefault;
    });
  };
}

function handleRefs() {
  for (var _len4 = arguments.length, refs = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
    refs[_key4] = arguments[_key4];
  }

  return function (node) {
    refs.forEach(function (ref) {
      if (typeof ref === 'function') {
        ref(node);
      } else if (ref) {
        ref.current = node;
      }
    });
  };
}
/**
 * This generates a unique ID for an instance of Downshift
 * @return {String} the unique ID
 */


function generateId() {
  return String(idCounter++);
}
/**
 * Default implementation for status message. Only added when menu is open.
 * Will specift if there are results in the list, and if so, how many,
 * and what keys are relevant.
 *
 * @param {Object} param the downshift state and other relevant properties
 * @return {String} the a11y status message
 */


function getA11yStatusMessage$1(_ref2) {
  var isOpen = _ref2.isOpen,
      resultCount = _ref2.resultCount,
      previousResultCount = _ref2.previousResultCount;

  if (!isOpen) {
    return '';
  }

  if (!resultCount) {
    return 'No results are available.';
  }

  if (resultCount !== previousResultCount) {
    return resultCount + " result" + (resultCount === 1 ? ' is' : 's are') + " available, use up and down arrow keys to navigate. Press Enter key to select.";
  }

  return '';
}
/**
 * This will perform a shallow merge of the given state object
 * with the state coming from props
 * (for the controlled component scenario)
 * This is used in state updater functions so they're referencing
 * the right state regardless of where it comes from.
 *
 * @param {Object} state The state of the component/hook.
 * @param {Object} props The props that may contain controlled values.
 * @returns {Object} The merged controlled state.
 */


function getState(state, props) {
  return Object.keys(state).reduce(function (prevState, key) {
    prevState[key] = isControlledProp(props, key) ? props[key] : state[key];
    return prevState;
  }, {});
}
/**
 * This determines whether a prop is a "controlled prop" meaning it is
 * state which is controlled by the outside of this component rather
 * than within this component.
 *
 * @param {Object} props The props that may contain controlled values.
 * @param {String} key the key to check
 * @return {Boolean} whether it is a controlled controlled prop
 */


function isControlledProp(props, key) {
  return props[key] !== undefined;
}
/**
 * Normalizes the 'key' property of a KeyboardEvent in IE/Edge
 * @param {Object} event a keyboardEvent object
 * @return {String} keyboard key
 */


function normalizeArrowKey(event) {
  var key = event.key,
      keyCode = event.keyCode;
  /* istanbul ignore next (ie) */

  if (keyCode >= 37 && keyCode <= 40 && key.indexOf('Arrow') !== 0) {
    return "Arrow" + key;
  }

  return key;
}
/**
 * Returns the new index in the list, in a circular way. If next value is out of bonds from the total,
 * it will wrap to either 0 or itemCount - 1.
 *
 * @param {number} moveAmount Number of positions to move. Negative to move backwards, positive forwards.
 * @param {number} baseIndex The initial position to move from.
 * @param {number} itemCount The total number of items.
 * @param {Function} getItemNodeFromIndex Used to check if item is disabled.
 * @param {boolean} circular Specify if navigation is circular. Default is true.
 * @returns {number} The new index after the move.
 */


function getNextWrappingIndex(moveAmount, baseIndex, itemCount, getItemNodeFromIndex, circular) {
  if (circular === void 0) {
    circular = true;
  }

  if (itemCount === 0) {
    return -1;
  }

  var itemsLastIndex = itemCount - 1;

  if (typeof baseIndex !== 'number' || baseIndex < 0 || baseIndex >= itemCount) {
    baseIndex = moveAmount > 0 ? -1 : itemsLastIndex + 1;
  }

  var newIndex = baseIndex + moveAmount;

  if (newIndex < 0) {
    newIndex = circular ? itemsLastIndex : 0;
  } else if (newIndex > itemsLastIndex) {
    newIndex = circular ? 0 : itemsLastIndex;
  }

  var nonDisabledNewIndex = getNextNonDisabledIndex(moveAmount, newIndex, itemCount, getItemNodeFromIndex, circular);

  if (nonDisabledNewIndex === -1) {
    return baseIndex >= itemCount ? -1 : baseIndex;
  }

  return nonDisabledNewIndex;
}
/**
 * Returns the next index in the list of an item that is not disabled.
 *
 * @param {number} moveAmount Number of positions to move. Negative to move backwards, positive forwards.
 * @param {number} baseIndex The initial position to move from.
 * @param {number} itemCount The total number of items.
 * @param {Function} getItemNodeFromIndex Used to check if item is disabled.
 * @param {boolean} circular Specify if navigation is circular. Default is true.
 * @returns {number} The new index. Returns baseIndex if item is not disabled. Returns next non-disabled item otherwise. If no non-disabled found it will return -1.
 */


function getNextNonDisabledIndex(moveAmount, baseIndex, itemCount, getItemNodeFromIndex, circular) {
  var currentElementNode = getItemNodeFromIndex(baseIndex);

  if (!currentElementNode || !currentElementNode.hasAttribute('disabled')) {
    return baseIndex;
  }

  if (moveAmount > 0) {
    for (var index = baseIndex + 1; index < itemCount; index++) {
      if (!getItemNodeFromIndex(index).hasAttribute('disabled')) {
        return index;
      }
    }
  } else {
    for (var _index = baseIndex - 1; _index >= 0; _index--) {
      if (!getItemNodeFromIndex(_index).hasAttribute('disabled')) {
        return _index;
      }
    }
  }

  if (circular) {
    return moveAmount > 0 ? getNextNonDisabledIndex(1, 0, itemCount, getItemNodeFromIndex, false) : getNextNonDisabledIndex(-1, itemCount - 1, itemCount, getItemNodeFromIndex, false);
  }

  return -1;
}
/**
 * Checks if event target is within the downshift elements.
 *
 * @param {EventTarget} target Target to check.
 * @param {HTMLElement[]} downshiftElements The elements that form downshift (list, toggle button etc).
 * @param {Window} environment The window context where downshift renders.
 * @param {boolean} checkActiveElement Whether to also check activeElement.
 *
 * @returns {boolean} Whether or not the target is within downshift elements.
 */


function targetWithinDownshift(target, downshiftElements, environment, checkActiveElement) {
  if (checkActiveElement === void 0) {
    checkActiveElement = true;
  }

  return downshiftElements.some(function (contextNode) {
    return contextNode && (isOrContainsNode(contextNode, target, environment) || checkActiveElement && isOrContainsNode(contextNode, environment.document.activeElement, environment));
  });
} // eslint-disable-next-line import/no-mutable-exports


var validateControlledUnchanged = noop$4;
/* istanbul ignore next */

if (process.env.NODE_ENV !== 'production') {
  validateControlledUnchanged = function validateControlledUnchanged(state, prevProps, nextProps) {
    var warningDescription = "This prop should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled Downshift element for the lifetime of the component. More info: https://github.com/downshift-js/downshift#control-props";
    Object.keys(state).forEach(function (propKey) {
      if (prevProps[propKey] !== undefined && nextProps[propKey] === undefined) {
        // eslint-disable-next-line no-console
        console.error("downshift: A component has changed the controlled prop \"" + propKey + "\" to be uncontrolled. " + warningDescription);
      } else if (prevProps[propKey] === undefined && nextProps[propKey] !== undefined) {
        // eslint-disable-next-line no-console
        console.error("downshift: A component has changed the uncontrolled prop \"" + propKey + "\" to be controlled. " + warningDescription);
      }
    });
  };
}

var cleanupStatus = debounce$1(function (documentProp) {
  getStatusDiv(documentProp).textContent = '';
}, 500);
/**
 * @param {String} status the status message
 * @param {Object} documentProp document passed by the user.
 */

function setStatus(status, documentProp) {
  var div = getStatusDiv(documentProp);

  if (!status) {
    return;
  }

  div.textContent = status;
  cleanupStatus(documentProp);
}
/**
 * Get the status node or create it if it does not already exist.
 * @param {Object} documentProp document passed by the user.
 * @return {HTMLElement} the status node.
 */


function getStatusDiv(documentProp) {
  if (documentProp === void 0) {
    documentProp = document;
  }

  var statusDiv = documentProp.getElementById('a11y-status-message');

  if (statusDiv) {
    return statusDiv;
  }

  statusDiv = documentProp.createElement('div');
  statusDiv.setAttribute('id', 'a11y-status-message');
  statusDiv.setAttribute('role', 'status');
  statusDiv.setAttribute('aria-live', 'polite');
  statusDiv.setAttribute('aria-relevant', 'additions text');
  Object.assign(statusDiv.style, {
    border: '0',
    clip: 'rect(0 0 0 0)',
    height: '1px',
    margin: '-1px',
    overflow: 'hidden',
    padding: '0',
    position: 'absolute',
    width: '1px'
  });
  documentProp.body.appendChild(statusDiv);
  return statusDiv;
}

process.env.NODE_ENV !== "production" ? '__autocomplete_unknown__' : 0;
process.env.NODE_ENV !== "production" ? '__autocomplete_mouseup__' : 1;
process.env.NODE_ENV !== "production" ? '__autocomplete_item_mouseenter__' : 2;
process.env.NODE_ENV !== "production" ? '__autocomplete_keydown_arrow_up__' : 3;
process.env.NODE_ENV !== "production" ? '__autocomplete_keydown_arrow_down__' : 4;
process.env.NODE_ENV !== "production" ? '__autocomplete_keydown_escape__' : 5;
process.env.NODE_ENV !== "production" ? '__autocomplete_keydown_enter__' : 6;
process.env.NODE_ENV !== "production" ? '__autocomplete_keydown_home__' : 7;
process.env.NODE_ENV !== "production" ? '__autocomplete_keydown_end__' : 8;
process.env.NODE_ENV !== "production" ? '__autocomplete_click_item__' : 9;
process.env.NODE_ENV !== "production" ? '__autocomplete_blur_input__' : 10;
process.env.NODE_ENV !== "production" ? '__autocomplete_change_input__' : 11;
process.env.NODE_ENV !== "production" ? '__autocomplete_keydown_space_button__' : 12;
process.env.NODE_ENV !== "production" ? '__autocomplete_click_button__' : 13;
process.env.NODE_ENV !== "production" ? '__autocomplete_blur_button__' : 14;
process.env.NODE_ENV !== "production" ? '__autocomplete_controlled_prop_updated_selected_item__' : 15;
process.env.NODE_ENV !== "production" ? '__autocomplete_touchend__' : 16;

process.env.NODE_ENV !== "production" ? {
  children: propTypes.func,
  defaultHighlightedIndex: propTypes.number,
  defaultIsOpen: propTypes.bool,
  initialHighlightedIndex: propTypes.number,
  initialSelectedItem: propTypes.any,
  initialInputValue: propTypes.string,
  initialIsOpen: propTypes.bool,
  getA11yStatusMessage: propTypes.func,
  itemToString: propTypes.func,
  onChange: propTypes.func,
  onSelect: propTypes.func,
  onStateChange: propTypes.func,
  onInputValueChange: propTypes.func,
  onUserAction: propTypes.func,
  onOuterClick: propTypes.func,
  selectedItemChanged: propTypes.func,
  stateReducer: propTypes.func,
  itemCount: propTypes.number,
  id: propTypes.string,
  environment: propTypes.shape({
    addEventListener: propTypes.func,
    removeEventListener: propTypes.func,
    document: propTypes.shape({
      getElementById: propTypes.func,
      activeElement: propTypes.any,
      body: propTypes.any
    })
  }),
  suppressRefError: propTypes.bool,
  scrollIntoView: propTypes.func,
  // things we keep in state for uncontrolled components
  // but can accept as props for controlled components

  /* eslint-disable react/no-unused-prop-types */
  selectedItem: propTypes.any,
  isOpen: propTypes.bool,
  inputValue: propTypes.string,
  highlightedIndex: propTypes.number,
  labelId: propTypes.string,
  inputId: propTypes.string,
  menuId: propTypes.string,
  getItemId: propTypes.func
  /* eslint-enable react/no-unused-prop-types */

} : void 0;

var dropdownDefaultStateValues = {
  highlightedIndex: -1,
  isOpen: false,
  selectedItem: null,
  inputValue: ''
};

function callOnChangeProps(action, state, newState) {
  var props = action.props,
      type = action.type;
  var changes = {};
  Object.keys(state).forEach(function (key) {
    invokeOnChangeHandler(key, action, state, newState);

    if (newState[key] !== state[key]) {
      changes[key] = newState[key];
    }
  });

  if (props.onStateChange && Object.keys(changes).length) {
    props.onStateChange(_extends$3({
      type: type
    }, changes));
  }
}

function invokeOnChangeHandler(key, action, state, newState) {
  var props = action.props,
      type = action.type;
  var handler = "on" + capitalizeString(key) + "Change";

  if (props[handler] && newState[key] !== undefined && newState[key] !== state[key]) {
    props[handler](_extends$3({
      type: type
    }, newState));
  }
}
/**
 * Default state reducer that returns the changes.
 *
 * @param {Object} s state.
 * @param {Object} a action with changes.
 * @returns {Object} changes.
 */


function stateReducer(s, a) {
  return a.changes;
}
/**
 * Returns a message to be added to aria-live region when item is selected.
 *
 * @param {Object} selectionParameters Parameters required to build the message.
 * @returns {string} The a11y message.
 */


function getA11ySelectionMessage(selectionParameters) {
  var selectedItem = selectionParameters.selectedItem,
      itemToStringLocal = selectionParameters.itemToString;
  return selectedItem ? itemToStringLocal(selectedItem) + " has been selected." : '';
}
/**
 * Debounced call for updating the a11y message.
 */


var updateA11yStatus = debounce$1(function (getA11yMessage, document) {
  setStatus(getA11yMessage(), document);
}, 200); // istanbul ignore next

var useIsomorphicLayoutEffect$1 = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? React.useLayoutEffect : React.useEffect;

function useElementIds(_ref) {
  var _ref$id = _ref.id,
      id = _ref$id === void 0 ? "downshift-" + generateId() : _ref$id,
      labelId = _ref.labelId,
      menuId = _ref.menuId,
      getItemId = _ref.getItemId,
      toggleButtonId = _ref.toggleButtonId,
      inputId = _ref.inputId;
  var elementIdsRef = React.useRef({
    labelId: labelId || id + "-label",
    menuId: menuId || id + "-menu",
    getItemId: getItemId || function (index) {
      return id + "-item-" + index;
    },
    toggleButtonId: toggleButtonId || id + "-toggle-button",
    inputId: inputId || id + "-input"
  });
  return elementIdsRef.current;
}

function getItemIndex(index, item, items) {
  if (index !== undefined) {
    return index;
  }

  if (items.length === 0) {
    return -1;
  }

  return items.indexOf(item);
}

function itemToString(item) {
  return item ? String(item) : '';
}

function isAcceptedCharacterKey(key) {
  return /^\S{1}$/.test(key);
}

function capitalizeString(string) {
  return "" + string.slice(0, 1).toUpperCase() + string.slice(1);
}

function useLatestRef(val) {
  var ref = React.useRef(val); // technically this is not "concurrent mode safe" because we're manipulating
  // the value during render (so it's not idempotent). However, the places this
  // hook is used is to support memoizing callbacks which will be called
  // *during* render, so we need the latest values *during* render.
  // If not for this, then we'd probably want to use useLayoutEffect instead.

  ref.current = val;
  return ref;
}
/**
 * Computes the controlled state using a the previous state, props,
 * two reducers, one from downshift and an optional one from the user.
 * Also calls the onChange handlers for state values that have changed.
 *
 * @param {Function} reducer Reducer function from downshift.
 * @param {Object} initialState Initial state of the hook.
 * @param {Object} props The hook props.
 * @returns {Array} An array with the state and an action dispatcher.
 */


function useEnhancedReducer(reducer, initialState, props) {
  var prevStateRef = React.useRef();
  var actionRef = React.useRef();
  var enhancedReducer = React.useCallback(function (state, action) {
    actionRef.current = action;
    state = getState(state, action.props);
    var changes = reducer(state, action);
    var newState = action.props.stateReducer(state, _extends$3({}, action, {
      changes: changes
    }));
    return newState;
  }, [reducer]);

  var _useReducer = React.useReducer(enhancedReducer, initialState),
      state = _useReducer[0],
      dispatch = _useReducer[1];

  var propsRef = useLatestRef(props);
  var dispatchWithProps = React.useCallback(function (action) {
    return dispatch(_extends$3({
      props: propsRef.current
    }, action));
  }, [propsRef]);
  var action = actionRef.current;
  React.useEffect(function () {
    if (action && prevStateRef.current && prevStateRef.current !== state) {
      callOnChangeProps(action, getState(prevStateRef.current, action.props), state);
    }

    prevStateRef.current = state;
  }, [state, props, action]);
  return [state, dispatchWithProps];
}
/**
 * Wraps the useEnhancedReducer and applies the controlled prop values before
 * returning the new state.
 *
 * @param {Function} reducer Reducer function from downshift.
 * @param {Object} initialState Initial state of the hook.
 * @param {Object} props The hook props.
 * @returns {Array} An array with the state and an action dispatcher.
 */


function useControlledReducer$1(reducer, initialState, props) {
  var _useEnhancedReducer = useEnhancedReducer(reducer, initialState, props),
      state = _useEnhancedReducer[0],
      dispatch = _useEnhancedReducer[1];

  return [getState(state, props), dispatch];
}

var defaultProps$3 = {
  itemToString: itemToString,
  stateReducer: stateReducer,
  getA11ySelectionMessage: getA11ySelectionMessage,
  scrollIntoView: scrollIntoView,
  circularNavigation: false,
  environment: typeof window === 'undefined'
  /* istanbul ignore next (ssr) */
  ? {} : window
};

function getDefaultValue$1(props, propKey, defaultStateValues) {
  if (defaultStateValues === void 0) {
    defaultStateValues = dropdownDefaultStateValues;
  }

  var defaultPropKey = "default" + capitalizeString(propKey);

  if (defaultPropKey in props) {
    return props[defaultPropKey];
  }

  return defaultStateValues[propKey];
}

function getInitialValue$1(props, propKey, defaultStateValues) {
  if (defaultStateValues === void 0) {
    defaultStateValues = dropdownDefaultStateValues;
  }

  if (propKey in props) {
    return props[propKey];
  }

  var initialPropKey = "initial" + capitalizeString(propKey);

  if (initialPropKey in props) {
    return props[initialPropKey];
  }

  return getDefaultValue$1(props, propKey, defaultStateValues);
}

function getInitialState$2(props) {
  var selectedItem = getInitialValue$1(props, 'selectedItem');
  var isOpen = getInitialValue$1(props, 'isOpen');
  var highlightedIndex = getInitialValue$1(props, 'highlightedIndex');
  var inputValue = getInitialValue$1(props, 'inputValue');
  return {
    highlightedIndex: highlightedIndex < 0 && selectedItem && isOpen ? props.items.indexOf(selectedItem) : highlightedIndex,
    isOpen: isOpen,
    selectedItem: selectedItem,
    inputValue: inputValue
  };
}

function getHighlightedIndexOnOpen(props, state, offset, getItemNodeFromIndex) {
  var items = props.items,
      initialHighlightedIndex = props.initialHighlightedIndex,
      defaultHighlightedIndex = props.defaultHighlightedIndex;
  var selectedItem = state.selectedItem,
      highlightedIndex = state.highlightedIndex;

  if (items.length === 0) {
    return -1;
  } // initialHighlightedIndex will give value to highlightedIndex on initial state only.


  if (initialHighlightedIndex !== undefined && highlightedIndex === initialHighlightedIndex) {
    return initialHighlightedIndex;
  }

  if (defaultHighlightedIndex !== undefined) {
    return defaultHighlightedIndex;
  }

  if (selectedItem) {
    if (offset === 0) {
      return items.indexOf(selectedItem);
    }

    return getNextWrappingIndex(offset, items.indexOf(selectedItem), items.length, getItemNodeFromIndex, false);
  }

  if (offset === 0) {
    return -1;
  }

  return offset < 0 ? items.length - 1 : 0;
}
/**
 * Reuse the movement tracking of mouse and touch events.
 *
 * @param {boolean} isOpen Whether the dropdown is open or not.
 * @param {Array<Object>} downshiftElementRefs Downshift element refs to track movement (toggleButton, menu etc.)
 * @param {Object} environment Environment where component/hook exists.
 * @param {Function} handleBlur Handler on blur from mouse or touch.
 * @returns {Object} Ref containing whether mouseDown or touchMove event is happening
 */


function useMouseAndTouchTracker(isOpen, downshiftElementRefs, environment, handleBlur) {
  var mouseAndTouchTrackersRef = React.useRef({
    isMouseDown: false,
    isTouchMove: false
  });
  React.useEffect(function () {
    // The same strategy for checking if a click occurred inside or outside downsift
    // as in downshift.js.
    var onMouseDown = function onMouseDown() {
      mouseAndTouchTrackersRef.current.isMouseDown = true;
    };

    var onMouseUp = function onMouseUp(event) {
      mouseAndTouchTrackersRef.current.isMouseDown = false;

      if (isOpen && !targetWithinDownshift(event.target, downshiftElementRefs.map(function (ref) {
        return ref.current;
      }), environment)) {
        handleBlur();
      }
    };

    var onTouchStart = function onTouchStart() {
      mouseAndTouchTrackersRef.current.isTouchMove = false;
    };

    var onTouchMove = function onTouchMove() {
      mouseAndTouchTrackersRef.current.isTouchMove = true;
    };

    var onTouchEnd = function onTouchEnd(event) {
      if (isOpen && !mouseAndTouchTrackersRef.current.isTouchMove && !targetWithinDownshift(event.target, downshiftElementRefs.map(function (ref) {
        return ref.current;
      }), environment, false)) {
        handleBlur();
      }
    };

    environment.addEventListener('mousedown', onMouseDown);
    environment.addEventListener('mouseup', onMouseUp);
    environment.addEventListener('touchstart', onTouchStart);
    environment.addEventListener('touchmove', onTouchMove);
    environment.addEventListener('touchend', onTouchEnd);
    return function cleanup() {
      environment.removeEventListener('mousedown', onMouseDown);
      environment.removeEventListener('mouseup', onMouseUp);
      environment.removeEventListener('touchstart', onTouchStart);
      environment.removeEventListener('touchmove', onTouchMove);
      environment.removeEventListener('touchend', onTouchEnd);
    }; // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [isOpen, environment]);
  return mouseAndTouchTrackersRef;
}
/* istanbul ignore next */
// eslint-disable-next-line import/no-mutable-exports


var useGetterPropsCalledChecker = function useGetterPropsCalledChecker() {
  return noop$4;
};
/**
 * Custom hook that checks if getter props are called correctly.
 *
 * @param  {...any} propKeys Getter prop names to be handled.
 * @returns {Function} Setter function called inside getter props to set call information.
 */

/* istanbul ignore next */


if (process.env.NODE_ENV !== 'production') {
  useGetterPropsCalledChecker = function useGetterPropsCalledChecker() {
    var isInitialMountRef = React.useRef(true);

    for (var _len = arguments.length, propKeys = new Array(_len), _key = 0; _key < _len; _key++) {
      propKeys[_key] = arguments[_key];
    }

    var getterPropsCalledRef = React.useRef(propKeys.reduce(function (acc, propKey) {
      acc[propKey] = {};
      return acc;
    }, {}));
    React.useEffect(function () {
      Object.keys(getterPropsCalledRef.current).forEach(function (propKey) {
        var propCallInfo = getterPropsCalledRef.current[propKey];

        if (isInitialMountRef.current) {
          if (!Object.keys(propCallInfo).length) {
            // eslint-disable-next-line no-console
            console.error("downshift: You forgot to call the " + propKey + " getter function on your component / element.");
            return;
          }
        }

        var suppressRefError = propCallInfo.suppressRefError,
            refKey = propCallInfo.refKey,
            elementRef = propCallInfo.elementRef;

        if ((!elementRef || !elementRef.current) && !suppressRefError) {
          // eslint-disable-next-line no-console
          console.error("downshift: The ref prop \"" + refKey + "\" from " + propKey + " was not applied correctly on your element.");
        }
      });
      isInitialMountRef.current = false;
    });
    var setGetterPropCallInfo = React.useCallback(function (propKey, suppressRefError, refKey, elementRef) {
      getterPropsCalledRef.current[propKey] = {
        suppressRefError: suppressRefError,
        refKey: refKey,
        elementRef: elementRef
      };
    }, []);
    return setGetterPropCallInfo;
  };
}

function useA11yMessageSetter(getA11yMessage, dependencyArray, _ref2) {
  var isInitialMount = _ref2.isInitialMount,
      highlightedIndex = _ref2.highlightedIndex,
      items = _ref2.items,
      environment = _ref2.environment,
      rest = _objectWithoutPropertiesLoose$3(_ref2, ["isInitialMount", "highlightedIndex", "items", "environment"]);

  // Sets a11y status message on changes in state.
  React.useEffect(function () {
    if (isInitialMount) {
      return;
    }

    updateA11yStatus(function () {
      return getA11yMessage(_extends$3({
        highlightedIndex: highlightedIndex,
        highlightedItem: items[highlightedIndex],
        resultCount: items.length
      }, rest));
    }, environment.document); // eslint-disable-next-line react-hooks/exhaustive-deps
  }, dependencyArray);
}

function useScrollIntoView(_ref3) {
  var highlightedIndex = _ref3.highlightedIndex,
      isOpen = _ref3.isOpen,
      itemRefs = _ref3.itemRefs,
      getItemNodeFromIndex = _ref3.getItemNodeFromIndex,
      menuElement = _ref3.menuElement,
      scrollIntoViewProp = _ref3.scrollIntoView;
  // used not to scroll on highlight by mouse.
  var shouldScrollRef = React.useRef(true); // Scroll on highlighted item if change comes from keyboard.

  useIsomorphicLayoutEffect$1(function () {
    if (highlightedIndex < 0 || !isOpen || !Object.keys(itemRefs.current).length) {
      return;
    }

    if (shouldScrollRef.current === false) {
      shouldScrollRef.current = true;
    } else {
      scrollIntoViewProp(getItemNodeFromIndex(highlightedIndex), menuElement);
    } // eslint-disable-next-line react-hooks/exhaustive-deps

  }, [highlightedIndex]);
  return shouldScrollRef;
} // eslint-disable-next-line import/no-mutable-exports


var useControlPropsValidator = noop$4;
/* istanbul ignore next */

if (process.env.NODE_ENV !== 'production') {
  useControlPropsValidator = function useControlPropsValidator(_ref4) {
    var isInitialMount = _ref4.isInitialMount,
        props = _ref4.props,
        state = _ref4.state;
    // used for checking when props are moving from controlled to uncontrolled.
    var prevPropsRef = React.useRef(props);
    React.useEffect(function () {
      if (isInitialMount) {
        return;
      }

      validateControlledUnchanged(state, prevPropsRef.current, props);
      prevPropsRef.current = props;
    }, [state, props, isInitialMount]);
  };
}

/* eslint-disable complexity */

function downshiftCommonReducer(state, action, stateChangeTypes) {
  var type = action.type,
      props = action.props;
  var changes;

  switch (type) {
    case stateChangeTypes.ItemMouseMove:
      changes = {
        highlightedIndex: action.index
      };
      break;

    case stateChangeTypes.MenuMouseLeave:
      changes = {
        highlightedIndex: -1
      };
      break;

    case stateChangeTypes.ToggleButtonClick:
    case stateChangeTypes.FunctionToggleMenu:
      changes = {
        isOpen: !state.isOpen,
        highlightedIndex: state.isOpen ? -1 : getHighlightedIndexOnOpen(props, state, 0)
      };
      break;

    case stateChangeTypes.FunctionOpenMenu:
      changes = {
        isOpen: true,
        highlightedIndex: getHighlightedIndexOnOpen(props, state, 0)
      };
      break;

    case stateChangeTypes.FunctionCloseMenu:
      changes = {
        isOpen: false
      };
      break;

    case stateChangeTypes.FunctionSetHighlightedIndex:
      changes = {
        highlightedIndex: action.highlightedIndex
      };
      break;

    case stateChangeTypes.FunctionSetInputValue:
      changes = {
        inputValue: action.inputValue
      };
      break;

    case stateChangeTypes.FunctionReset:
      changes = {
        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),
        isOpen: getDefaultValue$1(props, 'isOpen'),
        selectedItem: getDefaultValue$1(props, 'selectedItem'),
        inputValue: getDefaultValue$1(props, 'inputValue')
      };
      break;

    default:
      throw new Error('Reducer called without proper action type.');
  }

  return _extends$3({}, state, changes);
}
/* eslint-enable complexity */

function getItemIndexByCharacterKey(keysSoFar, highlightedIndex, items, itemToString, getItemNodeFromIndex) {
  var lowerCasedKeysSoFar = keysSoFar.toLowerCase();

  for (var index = 0; index < items.length; index++) {
    var offsetIndex = (index + highlightedIndex + 1) % items.length;

    if (itemToString(items[offsetIndex]).toLowerCase().startsWith(lowerCasedKeysSoFar)) {
      var element = getItemNodeFromIndex(offsetIndex);

      if (!(element && element.hasAttribute('disabled'))) {
        return offsetIndex;
      }
    }
  }

  return highlightedIndex;
}

var propTypes$2 = {
  items: propTypes.array.isRequired,
  itemToString: propTypes.func,
  getA11yStatusMessage: propTypes.func,
  getA11ySelectionMessage: propTypes.func,
  circularNavigation: propTypes.bool,
  highlightedIndex: propTypes.number,
  defaultHighlightedIndex: propTypes.number,
  initialHighlightedIndex: propTypes.number,
  isOpen: propTypes.bool,
  defaultIsOpen: propTypes.bool,
  initialIsOpen: propTypes.bool,
  selectedItem: propTypes.any,
  initialSelectedItem: propTypes.any,
  defaultSelectedItem: propTypes.any,
  id: propTypes.string,
  labelId: propTypes.string,
  menuId: propTypes.string,
  getItemId: propTypes.func,
  toggleButtonId: propTypes.string,
  stateReducer: propTypes.func,
  onSelectedItemChange: propTypes.func,
  onHighlightedIndexChange: propTypes.func,
  onStateChange: propTypes.func,
  onIsOpenChange: propTypes.func,
  environment: propTypes.shape({
    addEventListener: propTypes.func,
    removeEventListener: propTypes.func,
    document: propTypes.shape({
      getElementById: propTypes.func,
      activeElement: propTypes.any,
      body: propTypes.any
    })
  })
};
/**
 * Default implementation for status message. Only added when menu is open.
 * Will specift if there are results in the list, and if so, how many,
 * and what keys are relevant.
 *
 * @param {Object} param the downshift state and other relevant properties
 * @return {String} the a11y status message
 */

function getA11yStatusMessage(_ref) {
  var isOpen = _ref.isOpen,
      resultCount = _ref.resultCount,
      previousResultCount = _ref.previousResultCount;

  if (!isOpen) {
    return '';
  }

  if (!resultCount) {
    return 'No results are available.';
  }

  if (resultCount !== previousResultCount) {
    return resultCount + " result" + (resultCount === 1 ? ' is' : 's are') + " available, use up and down arrow keys to navigate. Press Enter or Space Bar keys to select.";
  }

  return '';
}

var defaultProps$2 = _extends$3({}, defaultProps$3, {
  getA11yStatusMessage: getA11yStatusMessage
}); // eslint-disable-next-line import/no-mutable-exports


var validatePropTypes$2 = noop$4;
/* istanbul ignore next */

if (process.env.NODE_ENV !== 'production') {
  validatePropTypes$2 = function validatePropTypes(options, caller) {
    propTypes.checkPropTypes(propTypes$2, options, 'prop', caller.name);
  };
}

var MenuKeyDownArrowDown = process.env.NODE_ENV !== "production" ? '__menu_keydown_arrow_down__' : 0;
var MenuKeyDownArrowUp = process.env.NODE_ENV !== "production" ? '__menu_keydown_arrow_up__' : 1;
var MenuKeyDownEscape = process.env.NODE_ENV !== "production" ? '__menu_keydown_escape__' : 2;
var MenuKeyDownHome = process.env.NODE_ENV !== "production" ? '__menu_keydown_home__' : 3;
var MenuKeyDownEnd = process.env.NODE_ENV !== "production" ? '__menu_keydown_end__' : 4;
var MenuKeyDownEnter = process.env.NODE_ENV !== "production" ? '__menu_keydown_enter__' : 5;
var MenuKeyDownSpaceButton = process.env.NODE_ENV !== "production" ? '__menu_keydown_space_button__' : 6;
var MenuKeyDownCharacter = process.env.NODE_ENV !== "production" ? '__menu_keydown_character__' : 7;
var MenuBlur = process.env.NODE_ENV !== "production" ? '__menu_blur__' : 8;
var MenuMouseLeave$1 = process.env.NODE_ENV !== "production" ? '__menu_mouse_leave__' : 9;
var ItemMouseMove$1 = process.env.NODE_ENV !== "production" ? '__item_mouse_move__' : 10;
var ItemClick$1 = process.env.NODE_ENV !== "production" ? '__item_click__' : 11;
var ToggleButtonClick$1 = process.env.NODE_ENV !== "production" ? '__togglebutton_click__' : 12;
var ToggleButtonKeyDownArrowDown = process.env.NODE_ENV !== "production" ? '__togglebutton_keydown_arrow_down__' : 13;
var ToggleButtonKeyDownArrowUp = process.env.NODE_ENV !== "production" ? '__togglebutton_keydown_arrow_up__' : 14;
var ToggleButtonKeyDownCharacter = process.env.NODE_ENV !== "production" ? '__togglebutton_keydown_character__' : 15;
var FunctionToggleMenu$1 = process.env.NODE_ENV !== "production" ? '__function_toggle_menu__' : 16;
var FunctionOpenMenu$1 = process.env.NODE_ENV !== "production" ? '__function_open_menu__' : 17;
var FunctionCloseMenu$1 = process.env.NODE_ENV !== "production" ? '__function_close_menu__' : 18;
var FunctionSetHighlightedIndex$1 = process.env.NODE_ENV !== "production" ? '__function_set_highlighted_index__' : 19;
var FunctionSelectItem$1 = process.env.NODE_ENV !== "production" ? '__function_select_item__' : 20;
var FunctionSetInputValue$1 = process.env.NODE_ENV !== "production" ? '__function_set_input_value__' : 21;
var FunctionReset$2 = process.env.NODE_ENV !== "production" ? '__function_reset__' : 22;

var stateChangeTypes$2 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  MenuKeyDownArrowDown: MenuKeyDownArrowDown,
  MenuKeyDownArrowUp: MenuKeyDownArrowUp,
  MenuKeyDownEscape: MenuKeyDownEscape,
  MenuKeyDownHome: MenuKeyDownHome,
  MenuKeyDownEnd: MenuKeyDownEnd,
  MenuKeyDownEnter: MenuKeyDownEnter,
  MenuKeyDownSpaceButton: MenuKeyDownSpaceButton,
  MenuKeyDownCharacter: MenuKeyDownCharacter,
  MenuBlur: MenuBlur,
  MenuMouseLeave: MenuMouseLeave$1,
  ItemMouseMove: ItemMouseMove$1,
  ItemClick: ItemClick$1,
  ToggleButtonClick: ToggleButtonClick$1,
  ToggleButtonKeyDownArrowDown: ToggleButtonKeyDownArrowDown,
  ToggleButtonKeyDownArrowUp: ToggleButtonKeyDownArrowUp,
  ToggleButtonKeyDownCharacter: ToggleButtonKeyDownCharacter,
  FunctionToggleMenu: FunctionToggleMenu$1,
  FunctionOpenMenu: FunctionOpenMenu$1,
  FunctionCloseMenu: FunctionCloseMenu$1,
  FunctionSetHighlightedIndex: FunctionSetHighlightedIndex$1,
  FunctionSelectItem: FunctionSelectItem$1,
  FunctionSetInputValue: FunctionSetInputValue$1,
  FunctionReset: FunctionReset$2
});

/* eslint-disable complexity */

function downshiftSelectReducer(state, action) {
  var type = action.type,
      props = action.props,
      shiftKey = action.shiftKey;
  var changes;

  switch (type) {
    case ItemClick$1:
      changes = {
        isOpen: getDefaultValue$1(props, 'isOpen'),
        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),
        selectedItem: props.items[action.index]
      };
      break;

    case ToggleButtonKeyDownCharacter:
      {
        var lowercasedKey = action.key;
        var inputValue = "" + state.inputValue + lowercasedKey;
        var itemIndex = getItemIndexByCharacterKey(inputValue, state.selectedItem ? props.items.indexOf(state.selectedItem) : -1, props.items, props.itemToString, action.getItemNodeFromIndex);
        changes = _extends$3({
          inputValue: inputValue
        }, itemIndex >= 0 && {
          selectedItem: props.items[itemIndex]
        });
      }
      break;

    case ToggleButtonKeyDownArrowDown:
      changes = {
        highlightedIndex: getHighlightedIndexOnOpen(props, state, 1, action.getItemNodeFromIndex),
        isOpen: true
      };
      break;

    case ToggleButtonKeyDownArrowUp:
      changes = {
        highlightedIndex: getHighlightedIndexOnOpen(props, state, -1, action.getItemNodeFromIndex),
        isOpen: true
      };
      break;

    case MenuKeyDownEnter:
    case MenuKeyDownSpaceButton:
      changes = _extends$3({
        isOpen: getDefaultValue$1(props, 'isOpen'),
        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex')
      }, state.highlightedIndex >= 0 && {
        selectedItem: props.items[state.highlightedIndex]
      });
      break;

    case MenuKeyDownHome:
      changes = {
        highlightedIndex: getNextNonDisabledIndex(1, 0, props.items.length, action.getItemNodeFromIndex, false)
      };
      break;

    case MenuKeyDownEnd:
      changes = {
        highlightedIndex: getNextNonDisabledIndex(-1, props.items.length - 1, props.items.length, action.getItemNodeFromIndex, false)
      };
      break;

    case MenuKeyDownEscape:
      changes = {
        isOpen: false,
        highlightedIndex: -1
      };
      break;

    case MenuBlur:
      changes = {
        isOpen: false,
        highlightedIndex: -1
      };
      break;

    case MenuKeyDownCharacter:
      {
        var _lowercasedKey = action.key;

        var _inputValue = "" + state.inputValue + _lowercasedKey;

        var highlightedIndex = getItemIndexByCharacterKey(_inputValue, state.highlightedIndex, props.items, props.itemToString, action.getItemNodeFromIndex);
        changes = _extends$3({
          inputValue: _inputValue
        }, highlightedIndex >= 0 && {
          highlightedIndex: highlightedIndex
        });
      }
      break;

    case MenuKeyDownArrowDown:
      changes = {
        highlightedIndex: getNextWrappingIndex(shiftKey ? 5 : 1, state.highlightedIndex, props.items.length, action.getItemNodeFromIndex, props.circularNavigation)
      };
      break;

    case MenuKeyDownArrowUp:
      changes = {
        highlightedIndex: getNextWrappingIndex(shiftKey ? -5 : -1, state.highlightedIndex, props.items.length, action.getItemNodeFromIndex, props.circularNavigation)
      };
      break;

    case FunctionSelectItem$1:
      changes = {
        selectedItem: action.selectedItem
      };
      break;

    default:
      return downshiftCommonReducer(state, action, stateChangeTypes$2);
  }

  return _extends$3({}, state, changes);
}
/* eslint-enable complexity */

useSelect.stateChangeTypes = stateChangeTypes$2;

function useSelect(userProps) {
  if (userProps === void 0) {
    userProps = {};
  }

  validatePropTypes$2(userProps, useSelect); // Props defaults and destructuring.

  var props = _extends$3({}, defaultProps$2, userProps);

  var items = props.items,
      scrollIntoView = props.scrollIntoView,
      environment = props.environment,
      initialIsOpen = props.initialIsOpen,
      defaultIsOpen = props.defaultIsOpen,
      itemToString = props.itemToString,
      getA11ySelectionMessage = props.getA11ySelectionMessage,
      getA11yStatusMessage = props.getA11yStatusMessage; // Initial state depending on controlled props.

  var initialState = getInitialState$2(props);

  var _useControlledReducer = useControlledReducer$1(downshiftSelectReducer, initialState, props),
      state = _useControlledReducer[0],
      dispatch = _useControlledReducer[1];

  var isOpen = state.isOpen,
      highlightedIndex = state.highlightedIndex,
      selectedItem = state.selectedItem,
      inputValue = state.inputValue; // Element efs.

  var toggleButtonRef = React.useRef(null);
  var menuRef = React.useRef(null);
  var itemRefs = React.useRef({}); // used not to trigger menu blur action in some scenarios.

  var shouldBlurRef = React.useRef(true); // used to keep the inputValue clearTimeout object between renders.

  var clearTimeoutRef = React.useRef(null); // prevent id re-generation between renders.

  var elementIds = useElementIds(props); // used to keep track of how many items we had on previous cycle.

  var previousResultCountRef = React.useRef();
  var isInitialMountRef = React.useRef(true); // utility callback to get item element.

  var latest = useLatestRef({
    state: state,
    props: props
  }); // Some utils.

  var getItemNodeFromIndex = React.useCallback(function (index) {
    return itemRefs.current[elementIds.getItemId(index)];
  }, [elementIds]); // Effects.
  // Sets a11y status message on changes in state.

  useA11yMessageSetter(getA11yStatusMessage, [isOpen, highlightedIndex, inputValue, items], _extends$3({
    isInitialMount: isInitialMountRef.current,
    previousResultCount: previousResultCountRef.current,
    items: items,
    environment: environment,
    itemToString: itemToString
  }, state)); // Sets a11y status message on changes in selectedItem.

  useA11yMessageSetter(getA11ySelectionMessage, [selectedItem], _extends$3({
    isInitialMount: isInitialMountRef.current,
    previousResultCount: previousResultCountRef.current,
    items: items,
    environment: environment,
    itemToString: itemToString
  }, state)); // Scroll on highlighted item if change comes from keyboard.

  var shouldScrollRef = useScrollIntoView({
    menuElement: menuRef.current,
    highlightedIndex: highlightedIndex,
    isOpen: isOpen,
    itemRefs: itemRefs,
    scrollIntoView: scrollIntoView,
    getItemNodeFromIndex: getItemNodeFromIndex
  }); // Sets cleanup for the keysSoFar callback, debounded after 500ms.

  React.useEffect(function () {
    // init the clean function here as we need access to dispatch.
    clearTimeoutRef.current = debounce$1(function (outerDispatch) {
      outerDispatch({
        type: FunctionSetInputValue$1,
        inputValue: ''
      });
    }, 500); // Cancel any pending debounced calls on mount

    return function () {
      clearTimeoutRef.current.cancel();
    };
  }, []); // Invokes the keysSoFar callback set up above.

  React.useEffect(function () {
    if (!inputValue) {
      return;
    }

    clearTimeoutRef.current(dispatch);
  }, [dispatch, inputValue]);
  useControlPropsValidator({
    isInitialMount: isInitialMountRef.current,
    props: props,
    state: state
  });
  /* Controls the focus on the menu or the toggle button. */

  React.useEffect(function () {
    // Don't focus menu on first render.
    if (isInitialMountRef.current) {
      // Unless it was initialised as open.
      if ((initialIsOpen || defaultIsOpen || isOpen) && menuRef.current) {
        menuRef.current.focus();
      }

      return;
    } // Focus menu on open.


    if (isOpen) {
      // istanbul ignore else
      if (menuRef.current) {
        menuRef.current.focus();
      }

      return;
    } // Focus toggleButton on close, but not if it was closed with (Shift+)Tab.


    if (environment.document.activeElement === menuRef.current) {
      // istanbul ignore else
      if (toggleButtonRef.current) {
        shouldBlurRef.current = false;
        toggleButtonRef.current.focus();
      }
    } // eslint-disable-next-line react-hooks/exhaustive-deps

  }, [isOpen]);
  React.useEffect(function () {
    if (isInitialMountRef.current) {
      return;
    }

    previousResultCountRef.current = items.length;
  }); // Add mouse/touch events to document.

  var mouseAndTouchTrackersRef = useMouseAndTouchTracker(isOpen, [menuRef, toggleButtonRef], environment, function () {
    dispatch({
      type: MenuBlur
    });
  });
  var setGetterPropCallInfo = useGetterPropsCalledChecker('getMenuProps', 'getToggleButtonProps'); // Make initial ref false.

  React.useEffect(function () {
    isInitialMountRef.current = false;
  }, []); // Reset itemRefs on close.

  React.useEffect(function () {
    if (!isOpen) {
      itemRefs.current = {};
    }
  }, [isOpen]); // Event handler functions.

  var toggleButtonKeyDownHandlers = React.useMemo(function () {
    return {
      ArrowDown: function ArrowDown(event) {
        event.preventDefault();
        dispatch({
          type: ToggleButtonKeyDownArrowDown,
          getItemNodeFromIndex: getItemNodeFromIndex,
          shiftKey: event.shiftKey
        });
      },
      ArrowUp: function ArrowUp(event) {
        event.preventDefault();
        dispatch({
          type: ToggleButtonKeyDownArrowUp,
          getItemNodeFromIndex: getItemNodeFromIndex,
          shiftKey: event.shiftKey
        });
      }
    };
  }, [dispatch, getItemNodeFromIndex]);
  var menuKeyDownHandlers = React.useMemo(function () {
    return {
      ArrowDown: function ArrowDown(event) {
        event.preventDefault();
        dispatch({
          type: MenuKeyDownArrowDown,
          getItemNodeFromIndex: getItemNodeFromIndex,
          shiftKey: event.shiftKey
        });
      },
      ArrowUp: function ArrowUp(event) {
        event.preventDefault();
        dispatch({
          type: MenuKeyDownArrowUp,
          getItemNodeFromIndex: getItemNodeFromIndex,
          shiftKey: event.shiftKey
        });
      },
      Home: function Home(event) {
        event.preventDefault();
        dispatch({
          type: MenuKeyDownHome,
          getItemNodeFromIndex: getItemNodeFromIndex
        });
      },
      End: function End(event) {
        event.preventDefault();
        dispatch({
          type: MenuKeyDownEnd,
          getItemNodeFromIndex: getItemNodeFromIndex
        });
      },
      Escape: function Escape() {
        dispatch({
          type: MenuKeyDownEscape
        });
      },
      Enter: function Enter(event) {
        event.preventDefault();
        dispatch({
          type: MenuKeyDownEnter
        });
      },
      ' ': function _(event) {
        event.preventDefault();
        dispatch({
          type: MenuKeyDownSpaceButton
        });
      }
    };
  }, [dispatch, getItemNodeFromIndex]); // Action functions.

  var toggleMenu = React.useCallback(function () {
    dispatch({
      type: FunctionToggleMenu$1
    });
  }, [dispatch]);
  var closeMenu = React.useCallback(function () {
    dispatch({
      type: FunctionCloseMenu$1
    });
  }, [dispatch]);
  var openMenu = React.useCallback(function () {
    dispatch({
      type: FunctionOpenMenu$1
    });
  }, [dispatch]);
  var setHighlightedIndex = React.useCallback(function (newHighlightedIndex) {
    dispatch({
      type: FunctionSetHighlightedIndex$1,
      highlightedIndex: newHighlightedIndex
    });
  }, [dispatch]);
  var selectItem = React.useCallback(function (newSelectedItem) {
    dispatch({
      type: FunctionSelectItem$1,
      selectedItem: newSelectedItem
    });
  }, [dispatch]);
  var reset = React.useCallback(function () {
    dispatch({
      type: FunctionReset$2
    });
  }, [dispatch]);
  var setInputValue = React.useCallback(function (newInputValue) {
    dispatch({
      type: FunctionSetInputValue$1,
      inputValue: newInputValue
    });
  }, [dispatch]); // Getter functions.

  var getLabelProps = React.useCallback(function (labelProps) {
    return _extends$3({
      id: elementIds.labelId,
      htmlFor: elementIds.toggleButtonId
    }, labelProps);
  }, [elementIds]);
  var getMenuProps = React.useCallback(function (_temp, _temp2) {
    var _extends2;

    var _ref = _temp === void 0 ? {} : _temp,
        onMouseLeave = _ref.onMouseLeave,
        _ref$refKey = _ref.refKey,
        refKey = _ref$refKey === void 0 ? 'ref' : _ref$refKey,
        onKeyDown = _ref.onKeyDown,
        onBlur = _ref.onBlur,
        ref = _ref.ref,
        rest = _objectWithoutPropertiesLoose$3(_ref, ["onMouseLeave", "refKey", "onKeyDown", "onBlur", "ref"]);

    var _ref2 = _temp2 === void 0 ? {} : _temp2,
        _ref2$suppressRefErro = _ref2.suppressRefError,
        suppressRefError = _ref2$suppressRefErro === void 0 ? false : _ref2$suppressRefErro;

    var latestState = latest.current.state;

    var menuHandleKeyDown = function menuHandleKeyDown(event) {
      var key = normalizeArrowKey(event);

      if (key && menuKeyDownHandlers[key]) {
        menuKeyDownHandlers[key](event);
      } else if (isAcceptedCharacterKey(key)) {
        dispatch({
          type: MenuKeyDownCharacter,
          key: key,
          getItemNodeFromIndex: getItemNodeFromIndex
        });
      }
    };

    var menuHandleBlur = function menuHandleBlur() {
      // if the blur was a result of selection, we don't trigger this action.
      if (shouldBlurRef.current === false) {
        shouldBlurRef.current = true;
        return;
      }

      var shouldBlur = !mouseAndTouchTrackersRef.current.isMouseDown;
      /* istanbul ignore else */

      if (shouldBlur) {
        dispatch({
          type: MenuBlur
        });
      }
    };

    var menuHandleMouseLeave = function menuHandleMouseLeave() {
      dispatch({
        type: MenuMouseLeave$1
      });
    };

    setGetterPropCallInfo('getMenuProps', suppressRefError, refKey, menuRef);
    return _extends$3((_extends2 = {}, _extends2[refKey] = handleRefs(ref, function (menuNode) {
      menuRef.current = menuNode;
    }), _extends2.id = elementIds.menuId, _extends2.role = 'listbox', _extends2['aria-labelledby'] = elementIds.labelId, _extends2.tabIndex = -1, _extends2), latestState.isOpen && latestState.highlightedIndex > -1 && {
      'aria-activedescendant': elementIds.getItemId(latestState.highlightedIndex)
    }, {
      onMouseLeave: callAllEventHandlers(onMouseLeave, menuHandleMouseLeave),
      onKeyDown: callAllEventHandlers(onKeyDown, menuHandleKeyDown),
      onBlur: callAllEventHandlers(onBlur, menuHandleBlur)
    }, rest);
  }, [dispatch, latest, menuKeyDownHandlers, mouseAndTouchTrackersRef, setGetterPropCallInfo, elementIds, getItemNodeFromIndex]);
  var getToggleButtonProps = React.useCallback(function (_temp3, _temp4) {
    var _extends3;

    var _ref3 = _temp3 === void 0 ? {} : _temp3,
        onClick = _ref3.onClick,
        onKeyDown = _ref3.onKeyDown,
        _ref3$refKey = _ref3.refKey,
        refKey = _ref3$refKey === void 0 ? 'ref' : _ref3$refKey,
        ref = _ref3.ref,
        rest = _objectWithoutPropertiesLoose$3(_ref3, ["onClick", "onKeyDown", "refKey", "ref"]);

    var _ref4 = _temp4 === void 0 ? {} : _temp4,
        _ref4$suppressRefErro = _ref4.suppressRefError,
        suppressRefError = _ref4$suppressRefErro === void 0 ? false : _ref4$suppressRefErro;

    var toggleButtonHandleClick = function toggleButtonHandleClick() {
      dispatch({
        type: ToggleButtonClick$1
      });
    };

    var toggleButtonHandleKeyDown = function toggleButtonHandleKeyDown(event) {
      var key = normalizeArrowKey(event);

      if (key && toggleButtonKeyDownHandlers[key]) {
        toggleButtonKeyDownHandlers[key](event);
      } else if (isAcceptedCharacterKey(key)) {
        dispatch({
          type: ToggleButtonKeyDownCharacter,
          key: key,
          getItemNodeFromIndex: getItemNodeFromIndex
        });
      }
    };

    var toggleProps = _extends$3((_extends3 = {}, _extends3[refKey] = handleRefs(ref, function (toggleButtonNode) {
      toggleButtonRef.current = toggleButtonNode;
    }), _extends3.id = elementIds.toggleButtonId, _extends3['aria-haspopup'] = 'listbox', _extends3['aria-expanded'] = latest.current.state.isOpen, _extends3['aria-labelledby'] = elementIds.labelId + " " + elementIds.toggleButtonId, _extends3), rest);

    if (!rest.disabled) {
      toggleProps.onClick = callAllEventHandlers(onClick, toggleButtonHandleClick);
      toggleProps.onKeyDown = callAllEventHandlers(onKeyDown, toggleButtonHandleKeyDown);
    }

    setGetterPropCallInfo('getToggleButtonProps', suppressRefError, refKey, toggleButtonRef);
    return toggleProps;
  }, [dispatch, latest, toggleButtonKeyDownHandlers, setGetterPropCallInfo, elementIds, getItemNodeFromIndex]);
  var getItemProps = React.useCallback(function (_temp5) {
    var _extends4;

    var _ref5 = _temp5 === void 0 ? {} : _temp5,
        item = _ref5.item,
        index = _ref5.index,
        onMouseMove = _ref5.onMouseMove,
        onClick = _ref5.onClick,
        _ref5$refKey = _ref5.refKey,
        refKey = _ref5$refKey === void 0 ? 'ref' : _ref5$refKey,
        ref = _ref5.ref,
        rest = _objectWithoutPropertiesLoose$3(_ref5, ["item", "index", "onMouseMove", "onClick", "refKey", "ref"]);

    var _latest$current = latest.current,
        latestState = _latest$current.state,
        latestProps = _latest$current.props;

    var itemHandleMouseMove = function itemHandleMouseMove() {
      if (index === latestState.highlightedIndex) {
        return;
      }

      shouldScrollRef.current = false;
      dispatch({
        type: ItemMouseMove$1,
        index: index
      });
    };

    var itemHandleClick = function itemHandleClick() {
      dispatch({
        type: ItemClick$1,
        index: index
      });
    };

    var itemIndex = getItemIndex(index, item, latestProps.items);

    if (itemIndex < 0) {
      throw new Error('Pass either item or item index in getItemProps!');
    }

    var itemProps = _extends$3((_extends4 = {
      role: 'option',
      'aria-selected': "" + (itemIndex === latestState.highlightedIndex),
      id: elementIds.getItemId(itemIndex)
    }, _extends4[refKey] = handleRefs(ref, function (itemNode) {
      if (itemNode) {
        itemRefs.current[elementIds.getItemId(itemIndex)] = itemNode;
      }
    }), _extends4), rest);

    if (!rest.disabled) {
      itemProps.onMouseMove = callAllEventHandlers(onMouseMove, itemHandleMouseMove);
      itemProps.onClick = callAllEventHandlers(onClick, itemHandleClick);
    }

    return itemProps;
  }, [dispatch, latest, shouldScrollRef, elementIds]);
  return {
    // prop getters.
    getToggleButtonProps: getToggleButtonProps,
    getLabelProps: getLabelProps,
    getMenuProps: getMenuProps,
    getItemProps: getItemProps,
    // actions.
    toggleMenu: toggleMenu,
    openMenu: openMenu,
    closeMenu: closeMenu,
    setHighlightedIndex: setHighlightedIndex,
    selectItem: selectItem,
    reset: reset,
    setInputValue: setInputValue,
    // state.
    highlightedIndex: highlightedIndex,
    isOpen: isOpen,
    selectedItem: selectedItem,
    inputValue: inputValue
  };
}

var InputKeyDownArrowDown = process.env.NODE_ENV !== "production" ? '__input_keydown_arrow_down__' : 0;
var InputKeyDownArrowUp = process.env.NODE_ENV !== "production" ? '__input_keydown_arrow_up__' : 1;
var InputKeyDownEscape = process.env.NODE_ENV !== "production" ? '__input_keydown_escape__' : 2;
var InputKeyDownHome = process.env.NODE_ENV !== "production" ? '__input_keydown_home__' : 3;
var InputKeyDownEnd = process.env.NODE_ENV !== "production" ? '__input_keydown_end__' : 4;
var InputKeyDownEnter = process.env.NODE_ENV !== "production" ? '__input_keydown_enter__' : 5;
var InputChange = process.env.NODE_ENV !== "production" ? '__input_change__' : 6;
var InputBlur = process.env.NODE_ENV !== "production" ? '__input_blur__' : 7;
var MenuMouseLeave = process.env.NODE_ENV !== "production" ? '__menu_mouse_leave__' : 8;
var ItemMouseMove = process.env.NODE_ENV !== "production" ? '__item_mouse_move__' : 9;
var ItemClick = process.env.NODE_ENV !== "production" ? '__item_click__' : 10;
var ToggleButtonClick = process.env.NODE_ENV !== "production" ? '__togglebutton_click__' : 11;
var FunctionToggleMenu = process.env.NODE_ENV !== "production" ? '__function_toggle_menu__' : 12;
var FunctionOpenMenu = process.env.NODE_ENV !== "production" ? '__function_open_menu__' : 13;
var FunctionCloseMenu = process.env.NODE_ENV !== "production" ? '__function_close_menu__' : 14;
var FunctionSetHighlightedIndex = process.env.NODE_ENV !== "production" ? '__function_set_highlighted_index__' : 15;
var FunctionSelectItem = process.env.NODE_ENV !== "production" ? '__function_select_item__' : 16;
var FunctionSetInputValue = process.env.NODE_ENV !== "production" ? '__function_set_input_value__' : 17;
var FunctionReset$1 = process.env.NODE_ENV !== "production" ? '__function_reset__' : 18;
var ControlledPropUpdatedSelectedItem = process.env.NODE_ENV !== "production" ? '__controlled_prop_updated_selected_item__' : 19;

var stateChangeTypes$1 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  InputKeyDownArrowDown: InputKeyDownArrowDown,
  InputKeyDownArrowUp: InputKeyDownArrowUp,
  InputKeyDownEscape: InputKeyDownEscape,
  InputKeyDownHome: InputKeyDownHome,
  InputKeyDownEnd: InputKeyDownEnd,
  InputKeyDownEnter: InputKeyDownEnter,
  InputChange: InputChange,
  InputBlur: InputBlur,
  MenuMouseLeave: MenuMouseLeave,
  ItemMouseMove: ItemMouseMove,
  ItemClick: ItemClick,
  ToggleButtonClick: ToggleButtonClick,
  FunctionToggleMenu: FunctionToggleMenu,
  FunctionOpenMenu: FunctionOpenMenu,
  FunctionCloseMenu: FunctionCloseMenu,
  FunctionSetHighlightedIndex: FunctionSetHighlightedIndex,
  FunctionSelectItem: FunctionSelectItem,
  FunctionSetInputValue: FunctionSetInputValue,
  FunctionReset: FunctionReset$1,
  ControlledPropUpdatedSelectedItem: ControlledPropUpdatedSelectedItem
});

function getInitialState$1(props) {
  var initialState = getInitialState$2(props);
  var selectedItem = initialState.selectedItem;
  var inputValue = initialState.inputValue;

  if (inputValue === '' && selectedItem && props.defaultInputValue === undefined && props.initialInputValue === undefined && props.inputValue === undefined) {
    inputValue = props.itemToString(selectedItem);
  }

  return _extends$3({}, initialState, {
    inputValue: inputValue
  });
}

var propTypes$1 = {
  items: propTypes.array.isRequired,
  itemToString: propTypes.func,
  getA11yStatusMessage: propTypes.func,
  getA11ySelectionMessage: propTypes.func,
  circularNavigation: propTypes.bool,
  highlightedIndex: propTypes.number,
  defaultHighlightedIndex: propTypes.number,
  initialHighlightedIndex: propTypes.number,
  isOpen: propTypes.bool,
  defaultIsOpen: propTypes.bool,
  initialIsOpen: propTypes.bool,
  selectedItem: propTypes.any,
  initialSelectedItem: propTypes.any,
  defaultSelectedItem: propTypes.any,
  inputValue: propTypes.string,
  defaultInputValue: propTypes.string,
  initialInputValue: propTypes.string,
  id: propTypes.string,
  labelId: propTypes.string,
  menuId: propTypes.string,
  getItemId: propTypes.func,
  inputId: propTypes.string,
  toggleButtonId: propTypes.string,
  stateReducer: propTypes.func,
  onSelectedItemChange: propTypes.func,
  onHighlightedIndexChange: propTypes.func,
  onStateChange: propTypes.func,
  onIsOpenChange: propTypes.func,
  onInputValueChange: propTypes.func,
  environment: propTypes.shape({
    addEventListener: propTypes.func,
    removeEventListener: propTypes.func,
    document: propTypes.shape({
      getElementById: propTypes.func,
      activeElement: propTypes.any,
      body: propTypes.any
    })
  })
};
/**
 * The useCombobox version of useControlledReducer, which also
 * checks if the controlled prop selectedItem changed between
 * renders. If so, it will also update inputValue with its
 * string equivalent. It uses the common useEnhancedReducer to
 * compute the rest of the state.
 *
 * @param {Function} reducer Reducer function from downshift.
 * @param {Object} initialState Initial state of the hook.
 * @param {Object} props The hook props.
 * @returns {Array} An array with the state and an action dispatcher.
 */

function useControlledReducer(reducer, initialState, props) {
  var previousSelectedItemRef = React.useRef();

  var _useEnhancedReducer = useEnhancedReducer(reducer, initialState, props),
      state = _useEnhancedReducer[0],
      dispatch = _useEnhancedReducer[1]; // ToDo: if needed, make same approach as selectedItemChanged from Downshift.


  React.useEffect(function () {
    if (isControlledProp(props, 'selectedItem')) {
      if (previousSelectedItemRef.current !== props.selectedItem) {
        dispatch({
          type: ControlledPropUpdatedSelectedItem,
          inputValue: props.itemToString(props.selectedItem)
        });
      }

      previousSelectedItemRef.current = state.selectedItem === previousSelectedItemRef.current ? props.selectedItem : state.selectedItem;
    }
  });
  return [getState(state, props), dispatch];
} // eslint-disable-next-line import/no-mutable-exports


var validatePropTypes$1 = noop$4;
/* istanbul ignore next */

if (process.env.NODE_ENV !== 'production') {
  validatePropTypes$1 = function validatePropTypes(options, caller) {
    propTypes.checkPropTypes(propTypes$1, options, 'prop', caller.name);
  };
}

var defaultProps$1 = _extends$3({}, defaultProps$3, {
  getA11yStatusMessage: getA11yStatusMessage$1,
  circularNavigation: true
});

/* eslint-disable complexity */

function downshiftUseComboboxReducer(state, action) {
  var type = action.type,
      props = action.props,
      shiftKey = action.shiftKey;
  var changes;

  switch (type) {
    case ItemClick:
      changes = {
        isOpen: getDefaultValue$1(props, 'isOpen'),
        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),
        selectedItem: props.items[action.index],
        inputValue: props.itemToString(props.items[action.index])
      };
      break;

    case InputKeyDownArrowDown:
      if (state.isOpen) {
        changes = {
          highlightedIndex: getNextWrappingIndex(shiftKey ? 5 : 1, state.highlightedIndex, props.items.length, action.getItemNodeFromIndex, props.circularNavigation)
        };
      } else {
        changes = {
          highlightedIndex: getHighlightedIndexOnOpen(props, state, 1, action.getItemNodeFromIndex),
          isOpen: props.items.length >= 0
        };
      }

      break;

    case InputKeyDownArrowUp:
      if (state.isOpen) {
        changes = {
          highlightedIndex: getNextWrappingIndex(shiftKey ? -5 : -1, state.highlightedIndex, props.items.length, action.getItemNodeFromIndex, props.circularNavigation)
        };
      } else {
        changes = {
          highlightedIndex: getHighlightedIndexOnOpen(props, state, -1, action.getItemNodeFromIndex),
          isOpen: props.items.length >= 0
        };
      }

      break;

    case InputKeyDownEnter:
      changes = _extends$3({}, state.isOpen && state.highlightedIndex >= 0 && {
        selectedItem: props.items[state.highlightedIndex],
        isOpen: getDefaultValue$1(props, 'isOpen'),
        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),
        inputValue: props.itemToString(props.items[state.highlightedIndex])
      });
      break;

    case InputKeyDownEscape:
      changes = _extends$3({
        isOpen: false,
        highlightedIndex: -1
      }, !state.isOpen && {
        selectedItem: null,
        inputValue: ''
      });
      break;

    case InputKeyDownHome:
      changes = {
        highlightedIndex: getNextNonDisabledIndex(1, 0, props.items.length, action.getItemNodeFromIndex, false)
      };
      break;

    case InputKeyDownEnd:
      changes = {
        highlightedIndex: getNextNonDisabledIndex(-1, props.items.length - 1, props.items.length, action.getItemNodeFromIndex, false)
      };
      break;

    case InputBlur:
      changes = _extends$3({
        isOpen: false,
        highlightedIndex: -1
      }, state.highlightedIndex >= 0 && action.selectItem && {
        selectedItem: props.items[state.highlightedIndex],
        inputValue: props.itemToString(props.items[state.highlightedIndex])
      });
      break;

    case InputChange:
      changes = {
        isOpen: true,
        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),
        inputValue: action.inputValue
      };
      break;

    case FunctionSelectItem:
      changes = {
        selectedItem: action.selectedItem,
        inputValue: props.itemToString(action.selectedItem)
      };
      break;

    case ControlledPropUpdatedSelectedItem:
      changes = {
        inputValue: action.inputValue
      };
      break;

    default:
      return downshiftCommonReducer(state, action, stateChangeTypes$1);
  }

  return _extends$3({}, state, changes);
}
/* eslint-enable complexity */

useCombobox.stateChangeTypes = stateChangeTypes$1;

function useCombobox(userProps) {
  if (userProps === void 0) {
    userProps = {};
  }

  validatePropTypes$1(userProps, useCombobox); // Props defaults and destructuring.

  var props = _extends$3({}, defaultProps$1, userProps);

  var initialIsOpen = props.initialIsOpen,
      defaultIsOpen = props.defaultIsOpen,
      items = props.items,
      scrollIntoView = props.scrollIntoView,
      environment = props.environment,
      getA11yStatusMessage = props.getA11yStatusMessage,
      getA11ySelectionMessage = props.getA11ySelectionMessage,
      itemToString = props.itemToString; // Initial state depending on controlled props.

  var initialState = getInitialState$1(props);

  var _useControlledReducer = useControlledReducer(downshiftUseComboboxReducer, initialState, props),
      state = _useControlledReducer[0],
      dispatch = _useControlledReducer[1];

  var isOpen = state.isOpen,
      highlightedIndex = state.highlightedIndex,
      selectedItem = state.selectedItem,
      inputValue = state.inputValue; // Element refs.

  var menuRef = React.useRef(null);
  var itemRefs = React.useRef({});
  var inputRef = React.useRef(null);
  var toggleButtonRef = React.useRef(null);
  var comboboxRef = React.useRef(null);
  var isInitialMountRef = React.useRef(true); // prevent id re-generation between renders.

  var elementIds = useElementIds(props); // used to keep track of how many items we had on previous cycle.

  var previousResultCountRef = React.useRef(); // utility callback to get item element.

  var latest = useLatestRef({
    state: state,
    props: props
  });
  var getItemNodeFromIndex = React.useCallback(function (index) {
    return itemRefs.current[elementIds.getItemId(index)];
  }, [elementIds]); // Effects.
  // Sets a11y status message on changes in state.

  useA11yMessageSetter(getA11yStatusMessage, [isOpen, highlightedIndex, inputValue, items], _extends$3({
    isInitialMount: isInitialMountRef.current,
    previousResultCount: previousResultCountRef.current,
    items: items,
    environment: environment,
    itemToString: itemToString
  }, state)); // Sets a11y status message on changes in selectedItem.

  useA11yMessageSetter(getA11ySelectionMessage, [selectedItem], _extends$3({
    isInitialMount: isInitialMountRef.current,
    previousResultCount: previousResultCountRef.current,
    items: items,
    environment: environment,
    itemToString: itemToString
  }, state)); // Scroll on highlighted item if change comes from keyboard.

  var shouldScrollRef = useScrollIntoView({
    menuElement: menuRef.current,
    highlightedIndex: highlightedIndex,
    isOpen: isOpen,
    itemRefs: itemRefs,
    scrollIntoView: scrollIntoView,
    getItemNodeFromIndex: getItemNodeFromIndex
  });
  useControlPropsValidator({
    isInitialMount: isInitialMountRef.current,
    props: props,
    state: state
  }); // Focus the input on first render if required.

  React.useEffect(function () {
    var focusOnOpen = initialIsOpen || defaultIsOpen || isOpen;

    if (focusOnOpen && inputRef.current) {
      inputRef.current.focus();
    } // eslint-disable-next-line react-hooks/exhaustive-deps

  }, []);
  React.useEffect(function () {
    if (isInitialMountRef.current) {
      return;
    }

    previousResultCountRef.current = items.length;
  }); // Add mouse/touch events to document.

  var mouseAndTouchTrackersRef = useMouseAndTouchTracker(isOpen, [comboboxRef, menuRef, toggleButtonRef], environment, function () {
    dispatch({
      type: InputBlur,
      selectItem: false
    });
  });
  var setGetterPropCallInfo = useGetterPropsCalledChecker('getInputProps', 'getComboboxProps', 'getMenuProps'); // Make initial ref false.

  React.useEffect(function () {
    isInitialMountRef.current = false;
  }, []); // Reset itemRefs on close.

  React.useEffect(function () {
    if (!isOpen) {
      itemRefs.current = {};
    }
  }, [isOpen]);
  /* Event handler functions */

  var inputKeyDownHandlers = React.useMemo(function () {
    return {
      ArrowDown: function ArrowDown(event) {
        event.preventDefault();
        dispatch({
          type: InputKeyDownArrowDown,
          shiftKey: event.shiftKey,
          getItemNodeFromIndex: getItemNodeFromIndex
        });
      },
      ArrowUp: function ArrowUp(event) {
        event.preventDefault();
        dispatch({
          type: InputKeyDownArrowUp,
          shiftKey: event.shiftKey,
          getItemNodeFromIndex: getItemNodeFromIndex
        });
      },
      Home: function Home(event) {
        if (!latest.current.state.isOpen) {
          return;
        }

        event.preventDefault();
        dispatch({
          type: InputKeyDownHome,
          getItemNodeFromIndex: getItemNodeFromIndex
        });
      },
      End: function End(event) {
        if (!latest.current.state.isOpen) {
          return;
        }

        event.preventDefault();
        dispatch({
          type: InputKeyDownEnd,
          getItemNodeFromIndex: getItemNodeFromIndex
        });
      },
      Escape: function Escape() {
        var latestState = latest.current.state;

        if (latestState.isOpen || latestState.inputValue || latestState.selectedItem || latestState.highlightedIndex > -1) {
          dispatch({
            type: InputKeyDownEscape
          });
        }
      },
      Enter: function Enter(event) {
        var latestState = latest.current.state; // if closed or no highlighted index, do nothing.

        if (!latestState.isOpen || latestState.highlightedIndex < 0 || event.which === 229 // if IME composing, wait for next Enter keydown event.
        ) {
            return;
          }

        event.preventDefault();
        dispatch({
          type: InputKeyDownEnter,
          getItemNodeFromIndex: getItemNodeFromIndex
        });
      }
    };
  }, [dispatch, latest, getItemNodeFromIndex]); // Getter props.

  var getLabelProps = React.useCallback(function (labelProps) {
    return _extends$3({
      id: elementIds.labelId,
      htmlFor: elementIds.inputId
    }, labelProps);
  }, [elementIds]);
  var getMenuProps = React.useCallback(function (_temp, _temp2) {
    var _extends2;

    var _ref = _temp === void 0 ? {} : _temp,
        onMouseLeave = _ref.onMouseLeave,
        _ref$refKey = _ref.refKey,
        refKey = _ref$refKey === void 0 ? 'ref' : _ref$refKey,
        ref = _ref.ref,
        rest = _objectWithoutPropertiesLoose$3(_ref, ["onMouseLeave", "refKey", "ref"]);

    var _ref2 = _temp2 === void 0 ? {} : _temp2,
        _ref2$suppressRefErro = _ref2.suppressRefError,
        suppressRefError = _ref2$suppressRefErro === void 0 ? false : _ref2$suppressRefErro;

    setGetterPropCallInfo('getMenuProps', suppressRefError, refKey, menuRef);
    return _extends$3((_extends2 = {}, _extends2[refKey] = handleRefs(ref, function (menuNode) {
      menuRef.current = menuNode;
    }), _extends2.id = elementIds.menuId, _extends2.role = 'listbox', _extends2['aria-labelledby'] = elementIds.labelId, _extends2.onMouseLeave = callAllEventHandlers(onMouseLeave, function () {
      dispatch({
        type: MenuMouseLeave
      });
    }), _extends2), rest);
  }, [dispatch, setGetterPropCallInfo, elementIds]);
  var getItemProps = React.useCallback(function (_temp3) {
    var _extends3, _ref4;

    var _ref3 = _temp3 === void 0 ? {} : _temp3,
        item = _ref3.item,
        index = _ref3.index,
        _ref3$refKey = _ref3.refKey,
        refKey = _ref3$refKey === void 0 ? 'ref' : _ref3$refKey,
        ref = _ref3.ref,
        onMouseMove = _ref3.onMouseMove,
        onClick = _ref3.onClick;
        _ref3.onPress;
        var rest = _objectWithoutPropertiesLoose$3(_ref3, ["item", "index", "refKey", "ref", "onMouseMove", "onClick", "onPress"]);

    var _latest$current = latest.current,
        latestProps = _latest$current.props,
        latestState = _latest$current.state;
    var itemIndex = getItemIndex(index, item, latestProps.items);

    if (itemIndex < 0) {
      throw new Error('Pass either item or item index in getItemProps!');
    }

    var onSelectKey = 'onClick';
    var customClickHandler = onClick;

    var itemHandleMouseMove = function itemHandleMouseMove() {
      if (index === latestState.highlightedIndex) {
        return;
      }

      shouldScrollRef.current = false;
      dispatch({
        type: ItemMouseMove,
        index: index
      });
    };

    var itemHandleClick = function itemHandleClick() {
      dispatch({
        type: ItemClick,
        index: index
      });

      if (inputRef.current) {
        inputRef.current.focus();
      }
    };

    return _extends$3((_extends3 = {}, _extends3[refKey] = handleRefs(ref, function (itemNode) {
      if (itemNode) {
        itemRefs.current[elementIds.getItemId(itemIndex)] = itemNode;
      }
    }), _extends3.role = 'option', _extends3['aria-selected'] = "" + (itemIndex === latestState.highlightedIndex), _extends3.id = elementIds.getItemId(itemIndex), _extends3), !rest.disabled && (_ref4 = {
      onMouseMove: callAllEventHandlers(onMouseMove, itemHandleMouseMove)
    }, _ref4[onSelectKey] = callAllEventHandlers(customClickHandler, itemHandleClick), _ref4), rest);
  }, [dispatch, latest, shouldScrollRef, elementIds]);
  var getToggleButtonProps = React.useCallback(function (_temp4) {
    var _extends4;

    var _ref5 = _temp4 === void 0 ? {} : _temp4,
        onClick = _ref5.onClick;
        _ref5.onPress;
        var _ref5$refKey = _ref5.refKey,
        refKey = _ref5$refKey === void 0 ? 'ref' : _ref5$refKey,
        ref = _ref5.ref,
        rest = _objectWithoutPropertiesLoose$3(_ref5, ["onClick", "onPress", "refKey", "ref"]);

    var toggleButtonHandleClick = function toggleButtonHandleClick() {
      dispatch({
        type: ToggleButtonClick
      });

      if (!latest.current.state.isOpen && inputRef.current) {
        inputRef.current.focus();
      }
    };

    return _extends$3((_extends4 = {}, _extends4[refKey] = handleRefs(ref, function (toggleButtonNode) {
      toggleButtonRef.current = toggleButtonNode;
    }), _extends4.id = elementIds.toggleButtonId, _extends4.tabIndex = -1, _extends4), !rest.disabled && _extends$3({}, {
      onClick: callAllEventHandlers(onClick, toggleButtonHandleClick)
    }), rest);
  }, [dispatch, latest, elementIds]);
  var getInputProps = React.useCallback(function (_temp5, _temp6) {
    var _extends5;

    var _ref6 = _temp5 === void 0 ? {} : _temp5,
        onKeyDown = _ref6.onKeyDown,
        onChange = _ref6.onChange,
        onInput = _ref6.onInput,
        onBlur = _ref6.onBlur;
        _ref6.onChangeText;
        var _ref6$refKey = _ref6.refKey,
        refKey = _ref6$refKey === void 0 ? 'ref' : _ref6$refKey,
        ref = _ref6.ref,
        rest = _objectWithoutPropertiesLoose$3(_ref6, ["onKeyDown", "onChange", "onInput", "onBlur", "onChangeText", "refKey", "ref"]);

    var _ref7 = _temp6 === void 0 ? {} : _temp6,
        _ref7$suppressRefErro = _ref7.suppressRefError,
        suppressRefError = _ref7$suppressRefErro === void 0 ? false : _ref7$suppressRefErro;

    setGetterPropCallInfo('getInputProps', suppressRefError, refKey, inputRef);
    var latestState = latest.current.state;

    var inputHandleKeyDown = function inputHandleKeyDown(event) {
      var key = normalizeArrowKey(event);

      if (key && inputKeyDownHandlers[key]) {
        inputKeyDownHandlers[key](event);
      }
    };

    var inputHandleChange = function inputHandleChange(event) {
      dispatch({
        type: InputChange,
        inputValue: event.target.value
      });
    };

    var inputHandleBlur = function inputHandleBlur() {
      /* istanbul ignore else */
      if (latestState.isOpen && !mouseAndTouchTrackersRef.current.isMouseDown) {
        dispatch({
          type: InputBlur,
          selectItem: true
        });
      }
    };
    /* istanbul ignore next (preact) */


    var onChangeKey = 'onChange';
    var eventHandlers = {};

    if (!rest.disabled) {
      var _eventHandlers;

      eventHandlers = (_eventHandlers = {}, _eventHandlers[onChangeKey] = callAllEventHandlers(onChange, onInput, inputHandleChange), _eventHandlers.onKeyDown = callAllEventHandlers(onKeyDown, inputHandleKeyDown), _eventHandlers.onBlur = callAllEventHandlers(onBlur, inputHandleBlur), _eventHandlers);
    }

    return _extends$3((_extends5 = {}, _extends5[refKey] = handleRefs(ref, function (inputNode) {
      inputRef.current = inputNode;
    }), _extends5.id = elementIds.inputId, _extends5['aria-autocomplete'] = 'list', _extends5['aria-controls'] = elementIds.menuId, _extends5), latestState.isOpen && latestState.highlightedIndex > -1 && {
      'aria-activedescendant': elementIds.getItemId(latestState.highlightedIndex)
    }, {
      'aria-labelledby': elementIds.labelId,
      // https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion
      // revert back since autocomplete="nope" is ignored on latest Chrome and Opera
      autoComplete: 'off',
      value: latestState.inputValue
    }, eventHandlers, rest);
  }, [dispatch, inputKeyDownHandlers, latest, mouseAndTouchTrackersRef, setGetterPropCallInfo, elementIds]);
  var getComboboxProps = React.useCallback(function (_temp7, _temp8) {
    var _extends6;

    var _ref8 = _temp7 === void 0 ? {} : _temp7,
        _ref8$refKey = _ref8.refKey,
        refKey = _ref8$refKey === void 0 ? 'ref' : _ref8$refKey,
        ref = _ref8.ref,
        rest = _objectWithoutPropertiesLoose$3(_ref8, ["refKey", "ref"]);

    var _ref9 = _temp8 === void 0 ? {} : _temp8,
        _ref9$suppressRefErro = _ref9.suppressRefError,
        suppressRefError = _ref9$suppressRefErro === void 0 ? false : _ref9$suppressRefErro;

    setGetterPropCallInfo('getComboboxProps', suppressRefError, refKey, comboboxRef);
    return _extends$3((_extends6 = {}, _extends6[refKey] = handleRefs(ref, function (comboboxNode) {
      comboboxRef.current = comboboxNode;
    }), _extends6.role = 'combobox', _extends6['aria-haspopup'] = 'listbox', _extends6['aria-owns'] = elementIds.menuId, _extends6['aria-expanded'] = latest.current.state.isOpen, _extends6), rest);
  }, [latest, setGetterPropCallInfo, elementIds]); // returns

  var toggleMenu = React.useCallback(function () {
    dispatch({
      type: FunctionToggleMenu
    });
  }, [dispatch]);
  var closeMenu = React.useCallback(function () {
    dispatch({
      type: FunctionCloseMenu
    });
  }, [dispatch]);
  var openMenu = React.useCallback(function () {
    dispatch({
      type: FunctionOpenMenu
    });
  }, [dispatch]);
  var setHighlightedIndex = React.useCallback(function (newHighlightedIndex) {
    dispatch({
      type: FunctionSetHighlightedIndex,
      highlightedIndex: newHighlightedIndex
    });
  }, [dispatch]);
  var selectItem = React.useCallback(function (newSelectedItem) {
    dispatch({
      type: FunctionSelectItem,
      selectedItem: newSelectedItem
    });
  }, [dispatch]);
  var setInputValue = React.useCallback(function (newInputValue) {
    dispatch({
      type: FunctionSetInputValue,
      inputValue: newInputValue
    });
  }, [dispatch]);
  var reset = React.useCallback(function () {
    dispatch({
      type: FunctionReset$1
    });
  }, [dispatch]);
  return {
    // prop getters.
    getItemProps: getItemProps,
    getLabelProps: getLabelProps,
    getMenuProps: getMenuProps,
    getInputProps: getInputProps,
    getComboboxProps: getComboboxProps,
    getToggleButtonProps: getToggleButtonProps,
    // actions.
    toggleMenu: toggleMenu,
    openMenu: openMenu,
    closeMenu: closeMenu,
    setHighlightedIndex: setHighlightedIndex,
    setInputValue: setInputValue,
    selectItem: selectItem,
    reset: reset,
    // state.
    highlightedIndex: highlightedIndex,
    isOpen: isOpen,
    selectedItem: selectedItem,
    inputValue: inputValue
  };
}
/**
 * Returns a message to be added to aria-live region when item is removed.
 *
 * @param {Object} selectionParameters Parameters required to build the message.
 * @returns {string} The a11y message.
 */


function getA11yRemovalMessage(selectionParameters) {
  var removedSelectedItem = selectionParameters.removedSelectedItem,
      itemToStringLocal = selectionParameters.itemToString;
  return itemToStringLocal(removedSelectedItem) + " has been removed.";
}

({
  selectedItems: propTypes.array,
  initialSelectedItems: propTypes.array,
  defaultSelectedItems: propTypes.array,
  itemToString: propTypes.func,
  getA11yRemovalMessage: propTypes.func,
  stateReducer: propTypes.func,
  activeIndex: propTypes.number,
  initialActiveIndex: propTypes.number,
  defaultActiveIndex: propTypes.number,
  onActiveIndexChange: propTypes.func,
  onSelectedItemsChange: propTypes.func,
  keyNavigationNext: propTypes.string,
  keyNavigationPrevious: propTypes.string,
  environment: propTypes.shape({
    addEventListener: propTypes.func,
    removeEventListener: propTypes.func,
    document: propTypes.shape({
      getElementById: propTypes.func,
      activeElement: propTypes.any,
      body: propTypes.any
    })
  })
});
({
  itemToString: defaultProps$3.itemToString,
  stateReducer: defaultProps$3.stateReducer,
  environment: defaultProps$3.environment,
  getA11yRemovalMessage: getA11yRemovalMessage,
  keyNavigationNext: 'ArrowRight',
  keyNavigationPrevious: 'ArrowLeft'
}); // eslint-disable-next-line import/no-mutable-exports
/* istanbul ignore next */

if (process.env.NODE_ENV !== 'production') ;

process.env.NODE_ENV !== "production" ? '__selected_item_click__' : 0;
process.env.NODE_ENV !== "production" ? '__selected_item_keydown_delete__' : 1;
process.env.NODE_ENV !== "production" ? '__selected_item_keydown_backspace__' : 2;
process.env.NODE_ENV !== "production" ? '__selected_item_keydown_navigation_next__' : 3;
process.env.NODE_ENV !== "production" ? '__selected_item_keydown_navigation_previous__' : 4;
process.env.NODE_ENV !== "production" ? '__dropdown_keydown_navigation_previous__' : 5;
process.env.NODE_ENV !== "production" ? '__dropdown_keydown_backspace__' : 6;
process.env.NODE_ENV !== "production" ? '__dropdown_click__' : 7;
process.env.NODE_ENV !== "production" ? '__function_add_selected_item__' : 8;
process.env.NODE_ENV !== "production" ? '__function_remove_selected_item__' : 9;
process.env.NODE_ENV !== "production" ? '__function_set_selected_items__' : 10;
process.env.NODE_ENV !== "production" ? '__function_set_active_index__' : 11;
process.env.NODE_ENV !== "production" ? '__function_reset__' : 12;

/**
 * Simple ponyfill for Object.fromEntries
 */

var fromEntries = function fromEntries(entries) {
  return entries.reduce(function (acc, _ref) {
    var key = _ref[0],
        value = _ref[1];
    acc[key] = value;
    return acc;
  }, {});
};
/**
 * Small wrapper around `useLayoutEffect` to get rid of the warning on SSR envs
 */

var useIsomorphicLayoutEffect = typeof window !== 'undefined' && window.document && window.document.createElement ? React__namespace.useLayoutEffect : React__namespace.useEffect;

var top = 'top';
var bottom = 'bottom';
var right = 'right';
var left = 'left';
var auto = 'auto';
var basePlacements = [top, bottom, right, left];
var start$1 = 'start';
var end = 'end';
var clippingParents = 'clippingParents';
var viewport = 'viewport';
var popper = 'popper';
var reference = 'reference';
var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {
  return acc.concat([placement + "-" + start$1, placement + "-" + end]);
}, []);
var placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {
  return acc.concat([placement, placement + "-" + start$1, placement + "-" + end]);
}, []); // modifiers that need to read the DOM

var beforeRead = 'beforeRead';
var read = 'read';
var afterRead = 'afterRead'; // pure-logic modifiers

var beforeMain = 'beforeMain';
var main = 'main';
var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)

var beforeWrite = 'beforeWrite';
var write = 'write';
var afterWrite = 'afterWrite';
var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];

function getNodeName(element) {
  return element ? (element.nodeName || '').toLowerCase() : null;
}

function getWindow(node) {
  if (node == null) {
    return window;
  }

  if (node.toString() !== '[object Window]') {
    var ownerDocument = node.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView || window : window;
  }

  return node;
}

function isElement$1(node) {
  var OwnElement = getWindow(node).Element;
  return node instanceof OwnElement || node instanceof Element;
}

function isHTMLElement(node) {
  var OwnElement = getWindow(node).HTMLElement;
  return node instanceof OwnElement || node instanceof HTMLElement;
}

function isShadowRoot(node) {
  // IE 11 has no ShadowRoot
  if (typeof ShadowRoot === 'undefined') {
    return false;
  }

  var OwnElement = getWindow(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}

// and applies them to the HTMLElements such as popper and arrow

function applyStyles(_ref) {
  var state = _ref.state;
  Object.keys(state.elements).forEach(function (name) {
    var style = state.styles[name] || {};
    var attributes = state.attributes[name] || {};
    var element = state.elements[name]; // arrow is optional + virtual elements

    if (!isHTMLElement(element) || !getNodeName(element)) {
      return;
    } // Flow doesn't support to extend this property, but it's the most
    // effective way to apply styles to an HTMLElement
    // $FlowFixMe[cannot-write]


    Object.assign(element.style, style);
    Object.keys(attributes).forEach(function (name) {
      var value = attributes[name];

      if (value === false) {
        element.removeAttribute(name);
      } else {
        element.setAttribute(name, value === true ? '' : value);
      }
    });
  });
}

function effect$2(_ref2) {
  var state = _ref2.state;
  var initialStyles = {
    popper: {
      position: state.options.strategy,
      left: '0',
      top: '0',
      margin: '0'
    },
    arrow: {
      position: 'absolute'
    },
    reference: {}
  };
  Object.assign(state.elements.popper.style, initialStyles.popper);
  state.styles = initialStyles;

  if (state.elements.arrow) {
    Object.assign(state.elements.arrow.style, initialStyles.arrow);
  }

  return function () {
    Object.keys(state.elements).forEach(function (name) {
      var element = state.elements[name];
      var attributes = state.attributes[name] || {};
      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them

      var style = styleProperties.reduce(function (style, property) {
        style[property] = '';
        return style;
      }, {}); // arrow is optional + virtual elements

      if (!isHTMLElement(element) || !getNodeName(element)) {
        return;
      }

      Object.assign(element.style, style);
      Object.keys(attributes).forEach(function (attribute) {
        element.removeAttribute(attribute);
      });
    });
  };
} // eslint-disable-next-line import/no-unused-modules


var applyStyles$1 = {
  name: 'applyStyles',
  enabled: true,
  phase: 'write',
  fn: applyStyles,
  effect: effect$2,
  requires: ['computeStyles']
};

function getBasePlacement(placement) {
  return placement.split('-')[0];
}

function getBoundingClientRect(element) {
  var rect = element.getBoundingClientRect();
  return {
    width: rect.width,
    height: rect.height,
    top: rect.top,
    right: rect.right,
    bottom: rect.bottom,
    left: rect.left,
    x: rect.left,
    y: rect.top
  };
}

// means it doesn't take into account transforms.

function getLayoutRect(element) {
  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.
  // Fixes https://github.com/popperjs/popper-core/issues/1223

  var width = element.offsetWidth;
  var height = element.offsetHeight;

  if (Math.abs(clientRect.width - width) <= 1) {
    width = clientRect.width;
  }

  if (Math.abs(clientRect.height - height) <= 1) {
    height = clientRect.height;
  }

  return {
    x: element.offsetLeft,
    y: element.offsetTop,
    width: width,
    height: height
  };
}

function contains(parent, child) {
  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method

  if (parent.contains(child)) {
    return true;
  } // then fallback to custom implementation with Shadow DOM support
  else if (rootNode && isShadowRoot(rootNode)) {
      var next = child;

      do {
        if (next && parent.isSameNode(next)) {
          return true;
        } // $FlowFixMe[prop-missing]: need a better way to handle this...


        next = next.parentNode || next.host;
      } while (next);
    } // Give up, the result is false


  return false;
}

function getComputedStyle$1(element) {
  return getWindow(element).getComputedStyle(element);
}

function isTableElement(element) {
  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;
}

function getDocumentElement(element) {
  // $FlowFixMe[incompatible-return]: assume body is always available
  return ((isElement$1(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]
  element.document) || window.document).documentElement;
}

function getParentNode(element) {
  if (getNodeName(element) === 'html') {
    return element;
  }

  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    element.parentNode || ( // DOM Element detected
    isShadowRoot(element) ? element.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    getDocumentElement(element) // fallback

  );
}

function getTrueOffsetParent(element) {
  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837
  getComputedStyle$1(element).position === 'fixed') {
    return null;
  }

  return element.offsetParent;
} // `.offsetParent` reports `null` for fixed elements, while absolute elements
// return the containing block


function getContainingBlock(element) {
  var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') !== -1;
  var isIE = navigator.userAgent.indexOf('Trident') !== -1;

  if (isIE && isHTMLElement(element)) {
    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport
    var elementCss = getComputedStyle$1(element);

    if (elementCss.position === 'fixed') {
      return null;
    }
  }

  var currentNode = getParentNode(element);

  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {
    var css = getComputedStyle$1(currentNode); // This is non-exhaustive but covers the most common CSS properties that
    // create a containing block.
    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block

    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }

  return null;
} // Gets the closest ancestor positioned element. Handles some edge cases,
// such as table ancestors and cross browser bugs.


function getOffsetParent(element) {
  var window = getWindow(element);
  var offsetParent = getTrueOffsetParent(element);

  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === 'static') {
    offsetParent = getTrueOffsetParent(offsetParent);
  }

  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle$1(offsetParent).position === 'static')) {
    return window;
  }

  return offsetParent || getContainingBlock(element) || window;
}

function getMainAxisFromPlacement(placement) {
  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';
}

var max = Math.max;
var min = Math.min;
var round = Math.round;

function within(min$1, value, max$1) {
  return max(min$1, min(value, max$1));
}

function getFreshSideObject() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}

function mergePaddingObject(paddingObject) {
  return Object.assign({}, getFreshSideObject(), paddingObject);
}

function expandToHashMap(value, keys) {
  return keys.reduce(function (hashMap, key) {
    hashMap[key] = value;
    return hashMap;
  }, {});
}

var toPaddingObject = function toPaddingObject(padding, state) {
  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {
    placement: state.placement
  })) : padding;
  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));
};

function arrow(_ref) {
  var _state$modifiersData$;

  var state = _ref.state,
      name = _ref.name,
      options = _ref.options;
  var arrowElement = state.elements.arrow;
  var popperOffsets = state.modifiersData.popperOffsets;
  var basePlacement = getBasePlacement(state.placement);
  var axis = getMainAxisFromPlacement(basePlacement);
  var isVertical = [left, right].indexOf(basePlacement) >= 0;
  var len = isVertical ? 'height' : 'width';

  if (!arrowElement || !popperOffsets) {
    return;
  }

  var paddingObject = toPaddingObject(options.padding, state);
  var arrowRect = getLayoutRect(arrowElement);
  var minProp = axis === 'y' ? top : left;
  var maxProp = axis === 'y' ? bottom : right;
  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];
  var startDiff = popperOffsets[axis] - state.rects.reference[axis];
  var arrowOffsetParent = getOffsetParent(arrowElement);
  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is
  // outside of the popper bounds

  var min = paddingObject[minProp];
  var max = clientSize - arrowRect[len] - paddingObject[maxProp];
  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
  var offset = within(min, center, max); // Prevents breaking syntax highlighting...

  var axisProp = axis;
  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);
}

function effect$1(_ref2) {
  var state = _ref2.state,
      options = _ref2.options;
  var _options$element = options.element,
      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;

  if (arrowElement == null) {
    return;
  } // CSS selector


  if (typeof arrowElement === 'string') {
    arrowElement = state.elements.popper.querySelector(arrowElement);

    if (!arrowElement) {
      return;
    }
  }

  if (process.env.NODE_ENV !== "production") {
    if (!isHTMLElement(arrowElement)) {
      console.error(['Popper: "arrow" element must be an HTMLElement (not an SVGElement).', 'To use an SVG arrow, wrap it in an HTMLElement that will be used as', 'the arrow.'].join(' '));
    }
  }

  if (!contains(state.elements.popper, arrowElement)) {
    if (process.env.NODE_ENV !== "production") {
      console.error(['Popper: "arrow" modifier\'s `element` must be a child of the popper', 'element.'].join(' '));
    }

    return;
  }

  state.elements.arrow = arrowElement;
} // eslint-disable-next-line import/no-unused-modules


var arrow$1 = {
  name: 'arrow',
  enabled: true,
  phase: 'main',
  fn: arrow,
  effect: effect$1,
  requires: ['popperOffsets'],
  requiresIfExists: ['preventOverflow']
};

var unsetSides = {
  top: 'auto',
  right: 'auto',
  bottom: 'auto',
  left: 'auto'
}; // Round the offsets to the nearest suitable subpixel based on the DPR.
// Zooming can change the DPR, but it seems to report a value that will
// cleanly divide the values into the appropriate subpixels.

function roundOffsetsByDPR(_ref) {
  var x = _ref.x,
      y = _ref.y;
  var win = window;
  var dpr = win.devicePixelRatio || 1;
  return {
    x: round(round(x * dpr) / dpr) || 0,
    y: round(round(y * dpr) / dpr) || 0
  };
}

function mapToStyles(_ref2) {
  var _Object$assign2;

  var popper = _ref2.popper,
      popperRect = _ref2.popperRect,
      placement = _ref2.placement,
      offsets = _ref2.offsets,
      position = _ref2.position,
      gpuAcceleration = _ref2.gpuAcceleration,
      adaptive = _ref2.adaptive,
      roundOffsets = _ref2.roundOffsets;

  var _ref3 = roundOffsets === true ? roundOffsetsByDPR(offsets) : typeof roundOffsets === 'function' ? roundOffsets(offsets) : offsets,
      _ref3$x = _ref3.x,
      x = _ref3$x === void 0 ? 0 : _ref3$x,
      _ref3$y = _ref3.y,
      y = _ref3$y === void 0 ? 0 : _ref3$y;

  var hasX = offsets.hasOwnProperty('x');
  var hasY = offsets.hasOwnProperty('y');
  var sideX = left;
  var sideY = top;
  var win = window;

  if (adaptive) {
    var offsetParent = getOffsetParent(popper);
    var heightProp = 'clientHeight';
    var widthProp = 'clientWidth';

    if (offsetParent === getWindow(popper)) {
      offsetParent = getDocumentElement(popper);

      if (getComputedStyle$1(offsetParent).position !== 'static') {
        heightProp = 'scrollHeight';
        widthProp = 'scrollWidth';
      }
    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it


    offsetParent = offsetParent;

    if (placement === top) {
      sideY = bottom; // $FlowFixMe[prop-missing]

      y -= offsetParent[heightProp] - popperRect.height;
      y *= gpuAcceleration ? 1 : -1;
    }

    if (placement === left) {
      sideX = right; // $FlowFixMe[prop-missing]

      x -= offsetParent[widthProp] - popperRect.width;
      x *= gpuAcceleration ? 1 : -1;
    }
  }

  var commonStyles = Object.assign({
    position: position
  }, adaptive && unsetSides);

  if (gpuAcceleration) {
    var _Object$assign;

    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) < 2 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
  }

  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : '', _Object$assign2[sideX] = hasX ? x + "px" : '', _Object$assign2.transform = '', _Object$assign2));
}

function computeStyles(_ref4) {
  var state = _ref4.state,
      options = _ref4.options;
  var _options$gpuAccelerat = options.gpuAcceleration,
      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,
      _options$adaptive = options.adaptive,
      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,
      _options$roundOffsets = options.roundOffsets,
      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;

  if (process.env.NODE_ENV !== "production") {
    var transitionProperty = getComputedStyle$1(state.elements.popper).transitionProperty || '';

    if (adaptive && ['transform', 'top', 'right', 'bottom', 'left'].some(function (property) {
      return transitionProperty.indexOf(property) >= 0;
    })) {
      console.warn(['Popper: Detected CSS transitions on at least one of the following', 'CSS properties: "transform", "top", "right", "bottom", "left".', '\n\n', 'Disable the "computeStyles" modifier\'s `adaptive` option to allow', 'for smooth transitions, or remove these properties from the CSS', 'transition declaration on the popper element if only transitioning', 'opacity or background-color for example.', '\n\n', 'We recommend using the popper element as a wrapper around an inner', 'element that can have any CSS property transitioned for animations.'].join(' '));
    }
  }

  var commonStyles = {
    placement: getBasePlacement(state.placement),
    popper: state.elements.popper,
    popperRect: state.rects.popper,
    gpuAcceleration: gpuAcceleration
  };

  if (state.modifiersData.popperOffsets != null) {
    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.popperOffsets,
      position: state.options.strategy,
      adaptive: adaptive,
      roundOffsets: roundOffsets
    })));
  }

  if (state.modifiersData.arrow != null) {
    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.arrow,
      position: 'absolute',
      adaptive: false,
      roundOffsets: roundOffsets
    })));
  }

  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-placement': state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


var computeStyles$1 = {
  name: 'computeStyles',
  enabled: true,
  phase: 'beforeWrite',
  fn: computeStyles,
  data: {}
};

var passive = {
  passive: true
};

function effect(_ref) {
  var state = _ref.state,
      instance = _ref.instance,
      options = _ref.options;
  var _options$scroll = options.scroll,
      scroll = _options$scroll === void 0 ? true : _options$scroll,
      _options$resize = options.resize,
      resize = _options$resize === void 0 ? true : _options$resize;
  var window = getWindow(state.elements.popper);
  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);

  if (scroll) {
    scrollParents.forEach(function (scrollParent) {
      scrollParent.addEventListener('scroll', instance.update, passive);
    });
  }

  if (resize) {
    window.addEventListener('resize', instance.update, passive);
  }

  return function () {
    if (scroll) {
      scrollParents.forEach(function (scrollParent) {
        scrollParent.removeEventListener('scroll', instance.update, passive);
      });
    }

    if (resize) {
      window.removeEventListener('resize', instance.update, passive);
    }
  };
} // eslint-disable-next-line import/no-unused-modules


var eventListeners = {
  name: 'eventListeners',
  enabled: true,
  phase: 'write',
  fn: function fn() {},
  effect: effect,
  data: {}
};

var hash$1 = {
  left: 'right',
  right: 'left',
  bottom: 'top',
  top: 'bottom'
};
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash$1[matched];
  });
}

var hash = {
  start: 'end',
  end: 'start'
};
function getOppositeVariationPlacement(placement) {
  return placement.replace(/start|end/g, function (matched) {
    return hash[matched];
  });
}

function getWindowScroll(node) {
  var win = getWindow(node);
  var scrollLeft = win.pageXOffset;
  var scrollTop = win.pageYOffset;
  return {
    scrollLeft: scrollLeft,
    scrollTop: scrollTop
  };
}

function getWindowScrollBarX(element) {
  // If <html> has a CSS width greater than the viewport, then this will be
  // incorrect for RTL.
  // Popper 1 is broken in this case and never had a bug report so let's assume
  // it's not an issue. I don't think anyone ever specifies width on <html>
  // anyway.
  // Browsers where the left scrollbar doesn't cause an issue report `0` for
  // this (e.g. Edge 2019, IE11, Safari)
  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;
}

function getViewportRect(element) {
  var win = getWindow(element);
  var html = getDocumentElement(element);
  var visualViewport = win.visualViewport;
  var width = html.clientWidth;
  var height = html.clientHeight;
  var x = 0;
  var y = 0; // NB: This isn't supported on iOS <= 12. If the keyboard is open, the popper
  // can be obscured underneath it.
  // Also, `html.clientHeight` adds the bottom bar height in Safari iOS, even
  // if it isn't open, so if this isn't available, the popper will be detected
  // to overflow the bottom of the screen too early.

  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height; // Uses Layout Viewport (like Chrome; Safari does not currently)
    // In Chrome, it returns a value very close to 0 (+/-) but contains rounding
    // errors due to floating point numbers, so we need to check precision.
    // Safari returns a number <= 0, usually < -1 when pinch-zoomed
    // Feature detection fails in mobile emulation mode in Chrome.
    // Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) <
    // 0.001
    // Fallback here: "Not Safari" userAgent

    if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }

  return {
    width: width,
    height: height,
    x: x + getWindowScrollBarX(element),
    y: y
  };
}

// of the `<html>` and `<body>` rect bounds if horizontally scrollable

function getDocumentRect(element) {
  var _element$ownerDocumen;

  var html = getDocumentElement(element);
  var winScroll = getWindowScroll(element);
  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);
  var y = -winScroll.scrollTop;

  if (getComputedStyle$1(body || html).direction === 'rtl') {
    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;
  }

  return {
    width: width,
    height: height,
    x: x,
    y: y
  };
}

function isScrollParent(element) {
  // Firefox wants us to check `-x` and `-y` variations as well
  var _getComputedStyle = getComputedStyle$1(element),
      overflow = _getComputedStyle.overflow,
      overflowX = _getComputedStyle.overflowX,
      overflowY = _getComputedStyle.overflowY;

  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}

function getScrollParent(node) {
  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {
    // $FlowFixMe[incompatible-return]: assume body is always available
    return node.ownerDocument.body;
  }

  if (isHTMLElement(node) && isScrollParent(node)) {
    return node;
  }

  return getScrollParent(getParentNode(node));
}

/*
given a DOM element, return the list of all scroll parents, up the list of ancesors
until we get to the top window object. This list is what we attach scroll listeners
to, because if any of these parent elements scroll, we'll need to re-calculate the
reference element's position.
*/

function listScrollParents(element, list) {
  var _element$ownerDocumen;

  if (list === void 0) {
    list = [];
  }

  var scrollParent = getScrollParent(element);
  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
  var win = getWindow(scrollParent);
  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
  var updatedList = list.concat(target);
  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
  updatedList.concat(listScrollParents(getParentNode(target)));
}

function rectToClientRect(rect) {
  return Object.assign({}, rect, {
    left: rect.x,
    top: rect.y,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  });
}

function getInnerBoundingClientRect(element) {
  var rect = getBoundingClientRect(element);
  rect.top = rect.top + element.clientTop;
  rect.left = rect.left + element.clientLeft;
  rect.bottom = rect.top + element.clientHeight;
  rect.right = rect.left + element.clientWidth;
  rect.width = element.clientWidth;
  rect.height = element.clientHeight;
  rect.x = rect.left;
  rect.y = rect.top;
  return rect;
}

function getClientRectFromMixedType(element, clippingParent) {
  return clippingParent === viewport ? rectToClientRect(getViewportRect(element)) : isHTMLElement(clippingParent) ? getInnerBoundingClientRect(clippingParent) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
} // A "clipping parent" is an overflowable container with the characteristic of
// clipping (or hiding) overflowing elements with a position different from
// `initial`


function getClippingParents(element) {
  var clippingParents = listScrollParents(getParentNode(element));
  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle$1(element).position) >= 0;
  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;

  if (!isElement$1(clipperElement)) {
    return [];
  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414


  return clippingParents.filter(function (clippingParent) {
    return isElement$1(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';
  });
} // Gets the maximum area that the element is visible in due to any number of
// clipping parents


function getClippingRect(element, boundary, rootBoundary) {
  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);
  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);
  var firstClippingParent = clippingParents[0];
  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {
    var rect = getClientRectFromMixedType(element, clippingParent);
    accRect.top = max(rect.top, accRect.top);
    accRect.right = min(rect.right, accRect.right);
    accRect.bottom = min(rect.bottom, accRect.bottom);
    accRect.left = max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromMixedType(element, firstClippingParent));
  clippingRect.width = clippingRect.right - clippingRect.left;
  clippingRect.height = clippingRect.bottom - clippingRect.top;
  clippingRect.x = clippingRect.left;
  clippingRect.y = clippingRect.top;
  return clippingRect;
}

function getVariation(placement) {
  return placement.split('-')[1];
}

function computeOffsets(_ref) {
  var reference = _ref.reference,
      element = _ref.element,
      placement = _ref.placement;
  var basePlacement = placement ? getBasePlacement(placement) : null;
  var variation = placement ? getVariation(placement) : null;
  var commonX = reference.x + reference.width / 2 - element.width / 2;
  var commonY = reference.y + reference.height / 2 - element.height / 2;
  var offsets;

  switch (basePlacement) {
    case top:
      offsets = {
        x: commonX,
        y: reference.y - element.height
      };
      break;

    case bottom:
      offsets = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;

    case right:
      offsets = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;

    case left:
      offsets = {
        x: reference.x - element.width,
        y: commonY
      };
      break;

    default:
      offsets = {
        x: reference.x,
        y: reference.y
      };
  }

  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;

  if (mainAxis != null) {
    var len = mainAxis === 'y' ? 'height' : 'width';

    switch (variation) {
      case start$1:
        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);
        break;

      case end:
        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);
        break;
    }
  }

  return offsets;
}

function detectOverflow(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      _options$placement = _options.placement,
      placement = _options$placement === void 0 ? state.placement : _options$placement,
      _options$boundary = _options.boundary,
      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,
      _options$rootBoundary = _options.rootBoundary,
      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,
      _options$elementConte = _options.elementContext,
      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,
      _options$altBoundary = _options.altBoundary,
      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,
      _options$padding = _options.padding,
      padding = _options$padding === void 0 ? 0 : _options$padding;
  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));
  var altContext = elementContext === popper ? reference : popper;
  var referenceElement = state.elements.reference;
  var popperRect = state.rects.popper;
  var element = state.elements[altBoundary ? altContext : elementContext];
  var clippingClientRect = getClippingRect(isElement$1(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary);
  var referenceClientRect = getBoundingClientRect(referenceElement);
  var popperOffsets = computeOffsets({
    reference: referenceClientRect,
    element: popperRect,
    strategy: 'absolute',
    placement: placement
  });
  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));
  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect
  // 0 or negative = within the clipping rect

  var overflowOffsets = {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element

  if (elementContext === popper && offsetData) {
    var offset = offsetData[placement];
    Object.keys(overflowOffsets).forEach(function (key) {
      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
      var axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';
      overflowOffsets[key] += offset[axis] * multiply;
    });
  }

  return overflowOffsets;
}

function computeAutoPlacement(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      placement = _options.placement,
      boundary = _options.boundary,
      rootBoundary = _options.rootBoundary,
      padding = _options.padding,
      flipVariations = _options.flipVariations,
      _options$allowedAutoP = _options.allowedAutoPlacements,
      allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;
  var variation = getVariation(placement);
  var placements$1 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {
    return getVariation(placement) === variation;
  }) : basePlacements;
  var allowedPlacements = placements$1.filter(function (placement) {
    return allowedAutoPlacements.indexOf(placement) >= 0;
  });

  if (allowedPlacements.length === 0) {
    allowedPlacements = placements$1;

    if (process.env.NODE_ENV !== "production") {
      console.error(['Popper: The `allowedAutoPlacements` option did not allow any', 'placements. Ensure the `placement` option matches the variation', 'of the allowed placements.', 'For example, "auto" cannot be used to allow "bottom-start".', 'Use "auto-start" instead.'].join(' '));
    }
  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...


  var overflows = allowedPlacements.reduce(function (acc, placement) {
    acc[placement] = detectOverflow(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding
    })[getBasePlacement(placement)];
    return acc;
  }, {});
  return Object.keys(overflows).sort(function (a, b) {
    return overflows[a] - overflows[b];
  });
}

function getExpandedFallbackPlacements(placement) {
  if (getBasePlacement(placement) === auto) {
    return [];
  }

  var oppositePlacement = getOppositePlacement(placement);
  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
}

function flip(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;

  if (state.modifiersData[name]._skip) {
    return;
  }

  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,
      specifiedFallbackPlacements = options.fallbackPlacements,
      padding = options.padding,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      _options$flipVariatio = options.flipVariations,
      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,
      allowedAutoPlacements = options.allowedAutoPlacements;
  var preferredPlacement = state.options.placement;
  var basePlacement = getBasePlacement(preferredPlacement);
  var isBasePlacement = basePlacement === preferredPlacement;
  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {
    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding,
      flipVariations: flipVariations,
      allowedAutoPlacements: allowedAutoPlacements
    }) : placement);
  }, []);
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var checksMap = new Map();
  var makeFallbackChecks = true;
  var firstFittingPlacement = placements[0];

  for (var i = 0; i < placements.length; i++) {
    var placement = placements[i];

    var _basePlacement = getBasePlacement(placement);

    var isStartVariation = getVariation(placement) === start$1;
    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;
    var len = isVertical ? 'width' : 'height';
    var overflow = detectOverflow(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      altBoundary: altBoundary,
      padding: padding
    });
    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;

    if (referenceRect[len] > popperRect[len]) {
      mainVariationSide = getOppositePlacement(mainVariationSide);
    }

    var altVariationSide = getOppositePlacement(mainVariationSide);
    var checks = [];

    if (checkMainAxis) {
      checks.push(overflow[_basePlacement] <= 0);
    }

    if (checkAltAxis) {
      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
    }

    if (checks.every(function (check) {
      return check;
    })) {
      firstFittingPlacement = placement;
      makeFallbackChecks = false;
      break;
    }

    checksMap.set(placement, checks);
  }

  if (makeFallbackChecks) {
    // `2` may be desired in some cases – research later
    var numberOfChecks = flipVariations ? 3 : 1;

    var _loop = function _loop(_i) {
      var fittingPlacement = placements.find(function (placement) {
        var checks = checksMap.get(placement);

        if (checks) {
          return checks.slice(0, _i).every(function (check) {
            return check;
          });
        }
      });

      if (fittingPlacement) {
        firstFittingPlacement = fittingPlacement;
        return "break";
      }
    };

    for (var _i = numberOfChecks; _i > 0; _i--) {
      var _ret = _loop(_i);

      if (_ret === "break") break;
    }
  }

  if (state.placement !== firstFittingPlacement) {
    state.modifiersData[name]._skip = true;
    state.placement = firstFittingPlacement;
    state.reset = true;
  }
} // eslint-disable-next-line import/no-unused-modules


var flip$1 = {
  name: 'flip',
  enabled: true,
  phase: 'main',
  fn: flip,
  requiresIfExists: ['offset'],
  data: {
    _skip: false
  }
};

function getSideOffsets(overflow, rect, preventedOffsets) {
  if (preventedOffsets === void 0) {
    preventedOffsets = {
      x: 0,
      y: 0
    };
  }

  return {
    top: overflow.top - rect.height - preventedOffsets.y,
    right: overflow.right - rect.width + preventedOffsets.x,
    bottom: overflow.bottom - rect.height + preventedOffsets.y,
    left: overflow.left - rect.width - preventedOffsets.x
  };
}

function isAnySideFullyClipped(overflow) {
  return [top, right, bottom, left].some(function (side) {
    return overflow[side] >= 0;
  });
}

function hide(_ref) {
  var state = _ref.state,
      name = _ref.name;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var preventedOffsets = state.modifiersData.preventOverflow;
  var referenceOverflow = detectOverflow(state, {
    elementContext: 'reference'
  });
  var popperAltOverflow = detectOverflow(state, {
    altBoundary: true
  });
  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
  state.modifiersData[name] = {
    referenceClippingOffsets: referenceClippingOffsets,
    popperEscapeOffsets: popperEscapeOffsets,
    isReferenceHidden: isReferenceHidden,
    hasPopperEscaped: hasPopperEscaped
  };
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-reference-hidden': isReferenceHidden,
    'data-popper-escaped': hasPopperEscaped
  });
} // eslint-disable-next-line import/no-unused-modules


var hide$1 = {
  name: 'hide',
  enabled: true,
  phase: 'main',
  requiresIfExists: ['preventOverflow'],
  fn: hide
};

function distanceAndSkiddingToXY(placement, rects, offset) {
  var basePlacement = getBasePlacement(placement);
  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;

  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {
    placement: placement
  })) : offset,
      skidding = _ref[0],
      distance = _ref[1];

  skidding = skidding || 0;
  distance = (distance || 0) * invertDistance;
  return [left, right].indexOf(basePlacement) >= 0 ? {
    x: distance,
    y: skidding
  } : {
    x: skidding,
    y: distance
  };
}

function offset(_ref2) {
  var state = _ref2.state,
      options = _ref2.options,
      name = _ref2.name;
  var _options$offset = options.offset,
      offset = _options$offset === void 0 ? [0, 0] : _options$offset;
  var data = placements.reduce(function (acc, placement) {
    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);
    return acc;
  }, {});
  var _data$state$placement = data[state.placement],
      x = _data$state$placement.x,
      y = _data$state$placement.y;

  if (state.modifiersData.popperOffsets != null) {
    state.modifiersData.popperOffsets.x += x;
    state.modifiersData.popperOffsets.y += y;
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


var offset$1 = {
  name: 'offset',
  enabled: true,
  phase: 'main',
  requires: ['popperOffsets'],
  fn: offset
};

function popperOffsets(_ref) {
  var state = _ref.state,
      name = _ref.name;
  // Offsets are the actual position the popper needs to have to be
  // properly positioned near its reference element
  // This is the most basic placement, and will be adjusted by
  // the modifiers in the next step
  state.modifiersData[name] = computeOffsets({
    reference: state.rects.reference,
    element: state.rects.popper,
    strategy: 'absolute',
    placement: state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


var popperOffsets$1 = {
  name: 'popperOffsets',
  enabled: true,
  phase: 'read',
  fn: popperOffsets,
  data: {}
};

function getAltAxis(axis) {
  return axis === 'x' ? 'y' : 'x';
}

function preventOverflow(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;
  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      padding = options.padding,
      _options$tether = options.tether,
      tether = _options$tether === void 0 ? true : _options$tether,
      _options$tetherOffset = options.tetherOffset,
      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
  var overflow = detectOverflow(state, {
    boundary: boundary,
    rootBoundary: rootBoundary,
    padding: padding,
    altBoundary: altBoundary
  });
  var basePlacement = getBasePlacement(state.placement);
  var variation = getVariation(state.placement);
  var isBasePlacement = !variation;
  var mainAxis = getMainAxisFromPlacement(basePlacement);
  var altAxis = getAltAxis(mainAxis);
  var popperOffsets = state.modifiersData.popperOffsets;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {
    placement: state.placement
  })) : tetherOffset;
  var data = {
    x: 0,
    y: 0
  };

  if (!popperOffsets) {
    return;
  }

  if (checkMainAxis || checkAltAxis) {
    var mainSide = mainAxis === 'y' ? top : left;
    var altSide = mainAxis === 'y' ? bottom : right;
    var len = mainAxis === 'y' ? 'height' : 'width';
    var offset = popperOffsets[mainAxis];
    var min$1 = popperOffsets[mainAxis] + overflow[mainSide];
    var max$1 = popperOffsets[mainAxis] - overflow[altSide];
    var additive = tether ? -popperRect[len] / 2 : 0;
    var minLen = variation === start$1 ? referenceRect[len] : popperRect[len];
    var maxLen = variation === start$1 ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go
    // outside the reference bounds

    var arrowElement = state.elements.arrow;
    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
      width: 0,
      height: 0
    };
    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();
    var arrowPaddingMin = arrowPaddingObject[mainSide];
    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want
    // to include its full size in the calculation. If the reference is small
    // and near the edge of a boundary, the popper can overflow even if the
    // reference is not overflowing as well (e.g. virtual elements with no
    // width or height)

    var arrowLen = within(0, referenceRect[len], arrowRect[len]);
    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - tetherOffsetValue : minLen - arrowLen - arrowPaddingMin - tetherOffsetValue;
    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + tetherOffsetValue : maxLen + arrowLen + arrowPaddingMax + tetherOffsetValue;
    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);
    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
    var offsetModifierValue = state.modifiersData.offset ? state.modifiersData.offset[state.placement][mainAxis] : 0;
    var tetherMin = popperOffsets[mainAxis] + minOffset - offsetModifierValue - clientOffset;
    var tetherMax = popperOffsets[mainAxis] + maxOffset - offsetModifierValue;

    if (checkMainAxis) {
      var preventedOffset = within(tether ? min(min$1, tetherMin) : min$1, offset, tether ? max(max$1, tetherMax) : max$1);
      popperOffsets[mainAxis] = preventedOffset;
      data[mainAxis] = preventedOffset - offset;
    }

    if (checkAltAxis) {
      var _mainSide = mainAxis === 'x' ? top : left;

      var _altSide = mainAxis === 'x' ? bottom : right;

      var _offset = popperOffsets[altAxis];

      var _min = _offset + overflow[_mainSide];

      var _max = _offset - overflow[_altSide];

      var _preventedOffset = within(tether ? min(_min, tetherMin) : _min, _offset, tether ? max(_max, tetherMax) : _max);

      popperOffsets[altAxis] = _preventedOffset;
      data[altAxis] = _preventedOffset - _offset;
    }
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


var preventOverflow$1 = {
  name: 'preventOverflow',
  enabled: true,
  phase: 'main',
  fn: preventOverflow,
  requiresIfExists: ['offset']
};

function getHTMLElementScroll(element) {
  return {
    scrollLeft: element.scrollLeft,
    scrollTop: element.scrollTop
  };
}

function getNodeScroll(node) {
  if (node === getWindow(node) || !isHTMLElement(node)) {
    return getWindowScroll(node);
  } else {
    return getHTMLElementScroll(node);
  }
}

// Composite means it takes into account transforms as well as layout.

function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
  if (isFixed === void 0) {
    isFixed = false;
  }

  var documentElement = getDocumentElement(offsetParent);
  var rect = getBoundingClientRect(elementOrVirtualElement);
  var isOffsetParentAnElement = isHTMLElement(offsetParent);
  var scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  var offsets = {
    x: 0,
    y: 0
  };

  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078
    isScrollParent(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }

    if (isHTMLElement(offsetParent)) {
      offsets = getBoundingClientRect(offsetParent);
      offsets.x += offsetParent.clientLeft;
      offsets.y += offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }

  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}

function order(modifiers) {
  var map = new Map();
  var visited = new Set();
  var result = [];
  modifiers.forEach(function (modifier) {
    map.set(modifier.name, modifier);
  }); // On visiting object, check for its dependencies and visit them recursively

  function sort(modifier) {
    visited.add(modifier.name);
    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
    requires.forEach(function (dep) {
      if (!visited.has(dep)) {
        var depModifier = map.get(dep);

        if (depModifier) {
          sort(depModifier);
        }
      }
    });
    result.push(modifier);
  }

  modifiers.forEach(function (modifier) {
    if (!visited.has(modifier.name)) {
      // check for visited object
      sort(modifier);
    }
  });
  return result;
}

function orderModifiers(modifiers) {
  // order based on dependencies
  var orderedModifiers = order(modifiers); // order based on phase

  return modifierPhases.reduce(function (acc, phase) {
    return acc.concat(orderedModifiers.filter(function (modifier) {
      return modifier.phase === phase;
    }));
  }, []);
}

function debounce(fn) {
  var pending;
  return function () {
    if (!pending) {
      pending = new Promise(function (resolve) {
        Promise.resolve().then(function () {
          pending = undefined;
          resolve(fn());
        });
      });
    }

    return pending;
  };
}

function format$3(str) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  return [].concat(args).reduce(function (p, c) {
    return p.replace(/%s/, c);
  }, str);
}

var INVALID_MODIFIER_ERROR = 'Popper: modifier "%s" provided an invalid %s property, expected %s but got %s';
var MISSING_DEPENDENCY_ERROR = 'Popper: modifier "%s" requires "%s", but "%s" modifier is not available';
var VALID_PROPERTIES = ['name', 'enabled', 'phase', 'fn', 'effect', 'requires', 'options'];
function validateModifiers(modifiers) {
  modifiers.forEach(function (modifier) {
    Object.keys(modifier).forEach(function (key) {
      switch (key) {
        case 'name':
          if (typeof modifier.name !== 'string') {
            console.error(format$3(INVALID_MODIFIER_ERROR, String(modifier.name), '"name"', '"string"', "\"" + String(modifier.name) + "\""));
          }

          break;

        case 'enabled':
          if (typeof modifier.enabled !== 'boolean') {
            console.error(format$3(INVALID_MODIFIER_ERROR, modifier.name, '"enabled"', '"boolean"', "\"" + String(modifier.enabled) + "\""));
          }

        case 'phase':
          if (modifierPhases.indexOf(modifier.phase) < 0) {
            console.error(format$3(INVALID_MODIFIER_ERROR, modifier.name, '"phase"', "either " + modifierPhases.join(', '), "\"" + String(modifier.phase) + "\""));
          }

          break;

        case 'fn':
          if (typeof modifier.fn !== 'function') {
            console.error(format$3(INVALID_MODIFIER_ERROR, modifier.name, '"fn"', '"function"', "\"" + String(modifier.fn) + "\""));
          }

          break;

        case 'effect':
          if (typeof modifier.effect !== 'function') {
            console.error(format$3(INVALID_MODIFIER_ERROR, modifier.name, '"effect"', '"function"', "\"" + String(modifier.fn) + "\""));
          }

          break;

        case 'requires':
          if (!Array.isArray(modifier.requires)) {
            console.error(format$3(INVALID_MODIFIER_ERROR, modifier.name, '"requires"', '"array"', "\"" + String(modifier.requires) + "\""));
          }

          break;

        case 'requiresIfExists':
          if (!Array.isArray(modifier.requiresIfExists)) {
            console.error(format$3(INVALID_MODIFIER_ERROR, modifier.name, '"requiresIfExists"', '"array"', "\"" + String(modifier.requiresIfExists) + "\""));
          }

          break;

        case 'options':
        case 'data':
          break;

        default:
          console.error("PopperJS: an invalid property has been provided to the \"" + modifier.name + "\" modifier, valid properties are " + VALID_PROPERTIES.map(function (s) {
            return "\"" + s + "\"";
          }).join(', ') + "; but \"" + key + "\" was provided.");
      }

      modifier.requires && modifier.requires.forEach(function (requirement) {
        if (modifiers.find(function (mod) {
          return mod.name === requirement;
        }) == null) {
          console.error(format$3(MISSING_DEPENDENCY_ERROR, String(modifier.name), requirement, requirement));
        }
      });
    });
  });
}

function uniqueBy(arr, fn) {
  var identifiers = new Set();
  return arr.filter(function (item) {
    var identifier = fn(item);

    if (!identifiers.has(identifier)) {
      identifiers.add(identifier);
      return true;
    }
  });
}

function mergeByName(modifiers) {
  var merged = modifiers.reduce(function (merged, current) {
    var existing = merged[current.name];
    merged[current.name] = existing ? Object.assign({}, existing, current, {
      options: Object.assign({}, existing.options, current.options),
      data: Object.assign({}, existing.data, current.data)
    }) : current;
    return merged;
  }, {}); // IE11 does not support Object.values

  return Object.keys(merged).map(function (key) {
    return merged[key];
  });
}

var INVALID_ELEMENT_ERROR = 'Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.';
var INFINITE_LOOP_ERROR = 'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.';
var DEFAULT_OPTIONS = {
  placement: 'bottom',
  modifiers: [],
  strategy: 'absolute'
};

function areValidElements() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return !args.some(function (element) {
    return !(element && typeof element.getBoundingClientRect === 'function');
  });
}

function popperGenerator(generatorOptions) {
  if (generatorOptions === void 0) {
    generatorOptions = {};
  }

  var _generatorOptions = generatorOptions,
      _generatorOptions$def = _generatorOptions.defaultModifiers,
      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,
      _generatorOptions$def2 = _generatorOptions.defaultOptions,
      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
  return function createPopper(reference, popper, options) {
    if (options === void 0) {
      options = defaultOptions;
    }

    var state = {
      placement: 'bottom',
      orderedModifiers: [],
      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
      modifiersData: {},
      elements: {
        reference: reference,
        popper: popper
      },
      attributes: {},
      styles: {}
    };
    var effectCleanupFns = [];
    var isDestroyed = false;
    var instance = {
      state: state,
      setOptions: function setOptions(options) {
        cleanupModifierEffects();
        state.options = Object.assign({}, defaultOptions, state.options, options);
        state.scrollParents = {
          reference: isElement$1(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],
          popper: listScrollParents(popper)
        }; // Orders the modifiers based on their dependencies and `phase`
        // properties

        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers

        state.orderedModifiers = orderedModifiers.filter(function (m) {
          return m.enabled;
        }); // Validate the provided modifiers so that the consumer will get warned
        // if one of the modifiers is invalid for any reason

        if (process.env.NODE_ENV !== "production") {
          var modifiers = uniqueBy([].concat(orderedModifiers, state.options.modifiers), function (_ref) {
            var name = _ref.name;
            return name;
          });
          validateModifiers(modifiers);

          if (getBasePlacement(state.options.placement) === auto) {
            var flipModifier = state.orderedModifiers.find(function (_ref2) {
              var name = _ref2.name;
              return name === 'flip';
            });

            if (!flipModifier) {
              console.error(['Popper: "auto" placements require the "flip" modifier be', 'present and enabled to work.'].join(' '));
            }
          }

          var _getComputedStyle = getComputedStyle$1(popper),
              marginTop = _getComputedStyle.marginTop,
              marginRight = _getComputedStyle.marginRight,
              marginBottom = _getComputedStyle.marginBottom,
              marginLeft = _getComputedStyle.marginLeft; // We no longer take into account `margins` on the popper, and it can
          // cause bugs with positioning, so we'll warn the consumer


          if ([marginTop, marginRight, marginBottom, marginLeft].some(function (margin) {
            return parseFloat(margin);
          })) {
            console.warn(['Popper: CSS "margin" styles cannot be used to apply padding', 'between the popper and its reference element or boundary.', 'To replicate margin, use the `offset` modifier, as well as', 'the `padding` option in the `preventOverflow` and `flip`', 'modifiers.'].join(' '));
          }
        }

        runModifierEffects();
        return instance.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function forceUpdate() {
        if (isDestroyed) {
          return;
        }

        var _state$elements = state.elements,
            reference = _state$elements.reference,
            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements
        // anymore

        if (!areValidElements(reference, popper)) {
          if (process.env.NODE_ENV !== "production") {
            console.error(INVALID_ELEMENT_ERROR);
          }

          return;
        } // Store the reference and popper rects to be read by modifiers


        state.rects = {
          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),
          popper: getLayoutRect(popper)
        }; // Modifiers have the ability to reset the current update cycle. The
        // most common use case for this is the `flip` modifier changing the
        // placement, which then needs to re-run all the modifiers, because the
        // logic was previously ran for the previous placement and is therefore
        // stale/incorrect

        state.reset = false;
        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier
        // is filled with the initial data specified by the modifier. This means
        // it doesn't persist and is fresh on each update.
        // To ensure persistent data, use `${name}#persistent`

        state.orderedModifiers.forEach(function (modifier) {
          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
        });
        var __debug_loops__ = 0;

        for (var index = 0; index < state.orderedModifiers.length; index++) {
          if (process.env.NODE_ENV !== "production") {
            __debug_loops__ += 1;

            if (__debug_loops__ > 100) {
              console.error(INFINITE_LOOP_ERROR);
              break;
            }
          }

          if (state.reset === true) {
            state.reset = false;
            index = -1;
            continue;
          }

          var _state$orderedModifie = state.orderedModifiers[index],
              fn = _state$orderedModifie.fn,
              _state$orderedModifie2 = _state$orderedModifie.options,
              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,
              name = _state$orderedModifie.name;

          if (typeof fn === 'function') {
            state = fn({
              state: state,
              options: _options,
              name: name,
              instance: instance
            }) || state;
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: debounce(function () {
        return new Promise(function (resolve) {
          instance.forceUpdate();
          resolve(state);
        });
      }),
      destroy: function destroy() {
        cleanupModifierEffects();
        isDestroyed = true;
      }
    };

    if (!areValidElements(reference, popper)) {
      if (process.env.NODE_ENV !== "production") {
        console.error(INVALID_ELEMENT_ERROR);
      }

      return instance;
    }

    instance.setOptions(options).then(function (state) {
      if (!isDestroyed && options.onFirstUpdate) {
        options.onFirstUpdate(state);
      }
    }); // Modifiers have the ability to execute arbitrary code before the first
    // update cycle runs. They will be executed in the same order as the update
    // cycle. This is useful when a modifier adds some persistent data that
    // other modifiers need to use, but the modifier is run after the dependent
    // one.

    function runModifierEffects() {
      state.orderedModifiers.forEach(function (_ref3) {
        var name = _ref3.name,
            _ref3$options = _ref3.options,
            options = _ref3$options === void 0 ? {} : _ref3$options,
            effect = _ref3.effect;

        if (typeof effect === 'function') {
          var cleanupFn = effect({
            state: state,
            name: name,
            instance: instance,
            options: options
          });

          var noopFn = function noopFn() {};

          effectCleanupFns.push(cleanupFn || noopFn);
        }
      });
    }

    function cleanupModifierEffects() {
      effectCleanupFns.forEach(function (fn) {
        return fn();
      });
      effectCleanupFns = [];
    }

    return instance;
  };
}

var defaultModifiers = [eventListeners, popperOffsets$1, computeStyles$1, applyStyles$1, offset$1, flip$1, preventOverflow$1, arrow$1, hide$1];
var createPopper = /*#__PURE__*/popperGenerator({
  defaultModifiers: defaultModifiers
}); // eslint-disable-next-line import/no-unused-modules

/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */

var hasElementType = typeof Element !== 'undefined';
var hasMap = typeof Map === 'function';
var hasSet = typeof Set === 'function';
var hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView;

// Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js

function equal(a, b) {
  // START: fast-deep-equal es6/index.js 3.1.1
  if (a === b) return true;

  if (a && b && typeof a == 'object' && typeof b == 'object') {
    if (a.constructor !== b.constructor) return false;

    var length, i, keys;
    if (Array.isArray(a)) {
      length = a.length;
      if (length != b.length) return false;
      for (i = length; i-- !== 0;)
        if (!equal(a[i], b[i])) return false;
      return true;
    }

    // START: Modifications:
    // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code
    //    to co-exist with es5.
    // 2. Replace `for of` with es5 compliant iteration using `for`.
    //    Basically, take:
    //
    //    ```js
    //    for (i of a.entries())
    //      if (!b.has(i[0])) return false;
    //    ```
    //
    //    ... and convert to:
    //
    //    ```js
    //    it = a.entries();
    //    while (!(i = it.next()).done)
    //      if (!b.has(i.value[0])) return false;
    //    ```
    //
    //    **Note**: `i` access switches to `i.value`.
    var it;
    if (hasMap && (a instanceof Map) && (b instanceof Map)) {
      if (a.size !== b.size) return false;
      it = a.entries();
      while (!(i = it.next()).done)
        if (!b.has(i.value[0])) return false;
      it = a.entries();
      while (!(i = it.next()).done)
        if (!equal(i.value[1], b.get(i.value[0]))) return false;
      return true;
    }

    if (hasSet && (a instanceof Set) && (b instanceof Set)) {
      if (a.size !== b.size) return false;
      it = a.entries();
      while (!(i = it.next()).done)
        if (!b.has(i.value[0])) return false;
      return true;
    }
    // END: Modifications

    if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {
      length = a.length;
      if (length != b.length) return false;
      for (i = length; i-- !== 0;)
        if (a[i] !== b[i]) return false;
      return true;
    }

    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;
    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();
    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();

    keys = Object.keys(a);
    length = keys.length;
    if (length !== Object.keys(b).length) return false;

    for (i = length; i-- !== 0;)
      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;
    // END: fast-deep-equal

    // START: react-fast-compare
    // custom handling for DOM elements
    if (hasElementType && a instanceof Element) return false;

    // custom handling for React/Preact
    for (i = length; i-- !== 0;) {
      if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) {
        // React-specific: avoid traversing React elements' _owner
        // Preact-specific: avoid traversing Preact elements' __v and __o
        //    __v = $_original / $_vnode
        //    __o = $_owner
        // These properties contain circular references and are not needed when
        // comparing the actual elements (and not their owners)
        // .$$typeof and ._store on just reasonable markers of elements

        continue;
      }

      // all other properties should be traversed as usual
      if (!equal(a[keys[i]], b[keys[i]])) return false;
    }
    // END: react-fast-compare

    // START: fast-deep-equal
    return true;
  }

  return a !== a && b !== b;
}
// end fast-deep-equal

var reactFastCompare = function isEqual(a, b) {
  try {
    return equal(a, b);
  } catch (error) {
    if (((error.message || '').match(/stack|recursion/i))) {
      // warn on circular references, don't crash
      // browsers give this different errors name and messages:
      // chrome/safari: "RangeError", "Maximum call stack size exceeded"
      // firefox: "InternalError", too much recursion"
      // edge: "Error", "Out of stack space"
      console.warn('react-fast-compare cannot handle circular refs');
      return false;
    }
    // some other error. we should definitely know about these
    throw error;
  }
};

var EMPTY_MODIFIERS = [];
var usePopper = function usePopper(referenceElement, popperElement, options) {
  if (options === void 0) {
    options = {};
  }

  var prevOptions = React__namespace.useRef(null);
  var optionsWithDefaults = {
    onFirstUpdate: options.onFirstUpdate,
    placement: options.placement || 'bottom',
    strategy: options.strategy || 'absolute',
    modifiers: options.modifiers || EMPTY_MODIFIERS
  };

  var _React$useState = React__namespace.useState({
    styles: {
      popper: {
        position: optionsWithDefaults.strategy,
        left: '0',
        top: '0'
      },
      arrow: {
        position: 'absolute'
      }
    },
    attributes: {}
  }),
      state = _React$useState[0],
      setState = _React$useState[1];

  var updateStateModifier = React__namespace.useMemo(function () {
    return {
      name: 'updateState',
      enabled: true,
      phase: 'write',
      fn: function fn(_ref) {
        var state = _ref.state;
        var elements = Object.keys(state.elements);
        setState({
          styles: fromEntries(elements.map(function (element) {
            return [element, state.styles[element] || {}];
          })),
          attributes: fromEntries(elements.map(function (element) {
            return [element, state.attributes[element]];
          }))
        });
      },
      requires: ['computeStyles']
    };
  }, []);
  var popperOptions = React__namespace.useMemo(function () {
    var newOptions = {
      onFirstUpdate: optionsWithDefaults.onFirstUpdate,
      placement: optionsWithDefaults.placement,
      strategy: optionsWithDefaults.strategy,
      modifiers: [].concat(optionsWithDefaults.modifiers, [updateStateModifier, {
        name: 'applyStyles',
        enabled: false
      }])
    };

    if (reactFastCompare(prevOptions.current, newOptions)) {
      return prevOptions.current || newOptions;
    } else {
      prevOptions.current = newOptions;
      return newOptions;
    }
  }, [optionsWithDefaults.onFirstUpdate, optionsWithDefaults.placement, optionsWithDefaults.strategy, optionsWithDefaults.modifiers, updateStateModifier]);
  var popperInstanceRef = React__namespace.useRef();
  useIsomorphicLayoutEffect(function () {
    if (popperInstanceRef.current) {
      popperInstanceRef.current.setOptions(popperOptions);
    }
  }, [popperOptions]);
  useIsomorphicLayoutEffect(function () {
    if (referenceElement == null || popperElement == null) {
      return;
    }

    var createPopper$1 = options.createPopper || createPopper;
    var popperInstance = createPopper$1(referenceElement, popperElement, popperOptions);
    popperInstanceRef.current = popperInstance;
    return function () {
      popperInstance.destroy();
      popperInstanceRef.current = null;
    };
  }, [referenceElement, popperElement, options.createPopper]);
  return {
    state: popperInstanceRef.current ? popperInstanceRef.current.state : null,
    styles: state.styles,
    attributes: state.attributes,
    update: popperInstanceRef.current ? popperInstanceRef.current.update : null,
    forceUpdate: popperInstanceRef.current ? popperInstanceRef.current.forceUpdate : null
  };
};

let updateQueue = makeQueue();
const raf$1 = fn => schedule(fn, updateQueue);
let writeQueue = makeQueue();

raf$1.write = fn => schedule(fn, writeQueue);

let onStartQueue = makeQueue();

raf$1.onStart = fn => schedule(fn, onStartQueue);

let onFrameQueue = makeQueue();

raf$1.onFrame = fn => schedule(fn, onFrameQueue);

let onFinishQueue = makeQueue();

raf$1.onFinish = fn => schedule(fn, onFinishQueue);

let timeouts = [];

raf$1.setTimeout = (handler, ms) => {
  let time = raf$1.now() + ms;

  let cancel = () => {
    let i = timeouts.findIndex(t => t.cancel == cancel);
    if (~i) timeouts.splice(i, 1);
    __raf.count -= ~i ? 1 : 0;
  };

  let timeout = {
    time,
    handler,
    cancel
  };
  timeouts.splice(findTimeout(time), 0, timeout);
  __raf.count += 1;
  start();
  return timeout;
};

let findTimeout = time => ~(~timeouts.findIndex(t => t.time > time) || ~timeouts.length);

raf$1.cancel = fn => {
  updateQueue.delete(fn);
  writeQueue.delete(fn);
};

raf$1.sync = fn => {
  sync = true;
  raf$1.batchedUpdates(fn);
  sync = false;
};

raf$1.throttle = fn => {
  let lastArgs;

  function queuedFn() {
    try {
      fn(...lastArgs);
    } finally {
      lastArgs = null;
    }
  }

  function throttled(...args) {
    lastArgs = args;
    raf$1.onStart(queuedFn);
  }

  throttled.handler = fn;

  throttled.cancel = () => {
    onStartQueue.delete(queuedFn);
    lastArgs = null;
  };

  return throttled;
};

let nativeRaf = typeof window != 'undefined' ? window.requestAnimationFrame : () => {};

raf$1.use = impl => nativeRaf = impl;

raf$1.now = typeof performance != 'undefined' ? () => performance.now() : Date.now;

raf$1.batchedUpdates = fn => fn();

raf$1.catch = console.error;
raf$1.frameLoop = 'always';

raf$1.advance = () => {
  if (raf$1.frameLoop !== 'demand') {
    console.warn('Cannot call the manual advancement of rafz whilst frameLoop is not set as demand');
  } else {
    update();
  }
};

let ts = -1;
let sync = false;

function schedule(fn, queue) {
  if (sync) {
    queue.delete(fn);
    fn(0);
  } else {
    queue.add(fn);
    start();
  }
}

function start() {
  if (ts < 0) {
    ts = 0;

    if (raf$1.frameLoop !== 'demand') {
      nativeRaf(loop);
    }
  }
}

function loop() {
  if (~ts) {
    nativeRaf(loop);
    raf$1.batchedUpdates(update);
  }
}

function update() {
  let prevTs = ts;
  ts = raf$1.now();
  let count = findTimeout(ts);

  if (count) {
    eachSafely(timeouts.splice(0, count), t => t.handler());
    __raf.count -= count;
  }

  onStartQueue.flush();
  updateQueue.flush(prevTs ? Math.min(64, ts - prevTs) : 16.667);
  onFrameQueue.flush();
  writeQueue.flush();
  onFinishQueue.flush();
}

function makeQueue() {
  let next = new Set();
  let current = next;
  return {
    add(fn) {
      __raf.count += current == next && !next.has(fn) ? 1 : 0;
      next.add(fn);
    },

    delete(fn) {
      __raf.count -= current == next && next.has(fn) ? 1 : 0;
      return next.delete(fn);
    },

    flush(arg) {
      if (current.size) {
        next = new Set();
        __raf.count -= current.size;
        eachSafely(current, fn => fn(arg) && next.add(fn));
        __raf.count += next.size;
        current = next;
      }
    }

  };
}

function eachSafely(values, each) {
  values.forEach(value => {
    try {
      each(value);
    } catch (e) {
      raf$1.catch(e);
    }
  });
}

const __raf = {
  count: 0,

  clear() {
    ts = -1;
    timeouts = [];
    onStartQueue = makeQueue();
    updateQueue = makeQueue();
    onFrameQueue = makeQueue();
    writeQueue = makeQueue();
    onFinishQueue = makeQueue();
    __raf.count = 0;
  }

};

function noop$3() {}
const defineHidden = (obj, key, value) => Object.defineProperty(obj, key, {
  value,
  writable: true,
  configurable: true
});
const is = {
  arr: Array.isArray,
  obj: a => !!a && a.constructor.name === 'Object',
  fun: a => typeof a === 'function',
  str: a => typeof a === 'string',
  num: a => typeof a === 'number',
  und: a => a === undefined
};
function isEqual$1(a, b) {
  if (is.arr(a)) {
    if (!is.arr(b) || a.length !== b.length) return false;

    for (let i = 0; i < a.length; i++) {
      if (a[i] !== b[i]) return false;
    }

    return true;
  }

  return a === b;
}
const each = (obj, fn) => obj.forEach(fn);
function eachProp(obj, fn, ctx) {
  for (const key in obj) {
    fn.call(ctx, obj[key], key);
  }
}
const toArray = a => is.und(a) ? [] : is.arr(a) ? a : [a];
function flush(queue, iterator) {
  if (queue.size) {
    const items = Array.from(queue);
    queue.clear();
    each(items, iterator);
  }
}
const flushCalls = (queue, ...args) => flush(queue, fn => fn(...args));

let createStringInterpolator$1;
let to$1;
let colors$1$1 = null;
let skipAnimation = false;
let willAdvance = noop$3;
const assign = globals => {
  if (globals.to) to$1 = globals.to;
  if (globals.now) raf$1.now = globals.now;
  if (globals.colors !== undefined) colors$1$1 = globals.colors;
  if (globals.skipAnimation != null) skipAnimation = globals.skipAnimation;
  if (globals.createStringInterpolator) createStringInterpolator$1 = globals.createStringInterpolator;
  if (globals.requestAnimationFrame) raf$1.use(globals.requestAnimationFrame);
  if (globals.batchedUpdates) raf$1.batchedUpdates = globals.batchedUpdates;
  if (globals.willAdvance) willAdvance = globals.willAdvance;
  if (globals.frameLoop) raf$1.frameLoop = globals.frameLoop;
};

var globals = /*#__PURE__*/Object.freeze({
  __proto__: null,
  get createStringInterpolator () { return createStringInterpolator$1; },
  get to () { return to$1; },
  get colors () { return colors$1$1; },
  get skipAnimation () { return skipAnimation; },
  get willAdvance () { return willAdvance; },
  assign: assign
});

const startQueue = new Set();
let currentFrame = [];
let prevFrame = [];
let priority = 0;
const frameLoop = {
  get idle() {
    return !startQueue.size && !currentFrame.length;
  },

  start(animation) {
    if (priority > animation.priority) {
      startQueue.add(animation);
      raf$1.onStart(flushStartQueue);
    } else {
      startSafely(animation);
      raf$1(advance);
    }
  },

  advance,

  sort(animation) {
    if (priority) {
      raf$1.onFrame(() => frameLoop.sort(animation));
    } else {
      const prevIndex = currentFrame.indexOf(animation);

      if (~prevIndex) {
        currentFrame.splice(prevIndex, 1);
        startUnsafely(animation);
      }
    }
  },

  clear() {
    currentFrame = [];
    startQueue.clear();
  }

};

function flushStartQueue() {
  startQueue.forEach(startSafely);
  startQueue.clear();
  raf$1(advance);
}

function startSafely(animation) {
  if (!currentFrame.includes(animation)) startUnsafely(animation);
}

function startUnsafely(animation) {
  currentFrame.splice(findIndex$1(currentFrame, other => other.priority > animation.priority), 0, animation);
}

function advance(dt) {
  const nextFrame = prevFrame;

  for (let i = 0; i < currentFrame.length; i++) {
    const animation = currentFrame[i];
    priority = animation.priority;

    if (!animation.idle) {
      willAdvance(animation);
      animation.advance(dt);

      if (!animation.idle) {
        nextFrame.push(animation);
      }
    }
  }

  priority = 0;
  prevFrame = currentFrame;
  prevFrame.length = 0;
  currentFrame = nextFrame;
  return currentFrame.length > 0;
}

function findIndex$1(arr, test) {
  const index = arr.findIndex(test);
  return index < 0 ? arr.length : index;
}

const colors$2 = {
  transparent: 0x00000000,
  aliceblue: 0xf0f8ffff,
  antiquewhite: 0xfaebd7ff,
  aqua: 0x00ffffff,
  aquamarine: 0x7fffd4ff,
  azure: 0xf0ffffff,
  beige: 0xf5f5dcff,
  bisque: 0xffe4c4ff,
  black: 0x000000ff,
  blanchedalmond: 0xffebcdff,
  blue: 0x0000ffff,
  blueviolet: 0x8a2be2ff,
  brown: 0xa52a2aff,
  burlywood: 0xdeb887ff,
  burntsienna: 0xea7e5dff,
  cadetblue: 0x5f9ea0ff,
  chartreuse: 0x7fff00ff,
  chocolate: 0xd2691eff,
  coral: 0xff7f50ff,
  cornflowerblue: 0x6495edff,
  cornsilk: 0xfff8dcff,
  crimson: 0xdc143cff,
  cyan: 0x00ffffff,
  darkblue: 0x00008bff,
  darkcyan: 0x008b8bff,
  darkgoldenrod: 0xb8860bff,
  darkgray: 0xa9a9a9ff,
  darkgreen: 0x006400ff,
  darkgrey: 0xa9a9a9ff,
  darkkhaki: 0xbdb76bff,
  darkmagenta: 0x8b008bff,
  darkolivegreen: 0x556b2fff,
  darkorange: 0xff8c00ff,
  darkorchid: 0x9932ccff,
  darkred: 0x8b0000ff,
  darksalmon: 0xe9967aff,
  darkseagreen: 0x8fbc8fff,
  darkslateblue: 0x483d8bff,
  darkslategray: 0x2f4f4fff,
  darkslategrey: 0x2f4f4fff,
  darkturquoise: 0x00ced1ff,
  darkviolet: 0x9400d3ff,
  deeppink: 0xff1493ff,
  deepskyblue: 0x00bfffff,
  dimgray: 0x696969ff,
  dimgrey: 0x696969ff,
  dodgerblue: 0x1e90ffff,
  firebrick: 0xb22222ff,
  floralwhite: 0xfffaf0ff,
  forestgreen: 0x228b22ff,
  fuchsia: 0xff00ffff,
  gainsboro: 0xdcdcdcff,
  ghostwhite: 0xf8f8ffff,
  gold: 0xffd700ff,
  goldenrod: 0xdaa520ff,
  gray: 0x808080ff,
  green: 0x008000ff,
  greenyellow: 0xadff2fff,
  grey: 0x808080ff,
  honeydew: 0xf0fff0ff,
  hotpink: 0xff69b4ff,
  indianred: 0xcd5c5cff,
  indigo: 0x4b0082ff,
  ivory: 0xfffff0ff,
  khaki: 0xf0e68cff,
  lavender: 0xe6e6faff,
  lavenderblush: 0xfff0f5ff,
  lawngreen: 0x7cfc00ff,
  lemonchiffon: 0xfffacdff,
  lightblue: 0xadd8e6ff,
  lightcoral: 0xf08080ff,
  lightcyan: 0xe0ffffff,
  lightgoldenrodyellow: 0xfafad2ff,
  lightgray: 0xd3d3d3ff,
  lightgreen: 0x90ee90ff,
  lightgrey: 0xd3d3d3ff,
  lightpink: 0xffb6c1ff,
  lightsalmon: 0xffa07aff,
  lightseagreen: 0x20b2aaff,
  lightskyblue: 0x87cefaff,
  lightslategray: 0x778899ff,
  lightslategrey: 0x778899ff,
  lightsteelblue: 0xb0c4deff,
  lightyellow: 0xffffe0ff,
  lime: 0x00ff00ff,
  limegreen: 0x32cd32ff,
  linen: 0xfaf0e6ff,
  magenta: 0xff00ffff,
  maroon: 0x800000ff,
  mediumaquamarine: 0x66cdaaff,
  mediumblue: 0x0000cdff,
  mediumorchid: 0xba55d3ff,
  mediumpurple: 0x9370dbff,
  mediumseagreen: 0x3cb371ff,
  mediumslateblue: 0x7b68eeff,
  mediumspringgreen: 0x00fa9aff,
  mediumturquoise: 0x48d1ccff,
  mediumvioletred: 0xc71585ff,
  midnightblue: 0x191970ff,
  mintcream: 0xf5fffaff,
  mistyrose: 0xffe4e1ff,
  moccasin: 0xffe4b5ff,
  navajowhite: 0xffdeadff,
  navy: 0x000080ff,
  oldlace: 0xfdf5e6ff,
  olive: 0x808000ff,
  olivedrab: 0x6b8e23ff,
  orange: 0xffa500ff,
  orangered: 0xff4500ff,
  orchid: 0xda70d6ff,
  palegoldenrod: 0xeee8aaff,
  palegreen: 0x98fb98ff,
  paleturquoise: 0xafeeeeff,
  palevioletred: 0xdb7093ff,
  papayawhip: 0xffefd5ff,
  peachpuff: 0xffdab9ff,
  peru: 0xcd853fff,
  pink: 0xffc0cbff,
  plum: 0xdda0ddff,
  powderblue: 0xb0e0e6ff,
  purple: 0x800080ff,
  rebeccapurple: 0x663399ff,
  red: 0xff0000ff,
  rosybrown: 0xbc8f8fff,
  royalblue: 0x4169e1ff,
  saddlebrown: 0x8b4513ff,
  salmon: 0xfa8072ff,
  sandybrown: 0xf4a460ff,
  seagreen: 0x2e8b57ff,
  seashell: 0xfff5eeff,
  sienna: 0xa0522dff,
  silver: 0xc0c0c0ff,
  skyblue: 0x87ceebff,
  slateblue: 0x6a5acdff,
  slategray: 0x708090ff,
  slategrey: 0x708090ff,
  snow: 0xfffafaff,
  springgreen: 0x00ff7fff,
  steelblue: 0x4682b4ff,
  tan: 0xd2b48cff,
  teal: 0x008080ff,
  thistle: 0xd8bfd8ff,
  tomato: 0xff6347ff,
  turquoise: 0x40e0d0ff,
  violet: 0xee82eeff,
  wheat: 0xf5deb3ff,
  white: 0xffffffff,
  whitesmoke: 0xf5f5f5ff,
  yellow: 0xffff00ff,
  yellowgreen: 0x9acd32ff
};

const NUMBER = '[-+]?\\d*\\.?\\d+';
const PERCENTAGE = NUMBER + '%';

function call(...parts) {
  return '\\(\\s*(' + parts.join(')\\s*,\\s*(') + ')\\s*\\)';
}

const rgb$2 = new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER));
const rgba$1 = new RegExp('rgba' + call(NUMBER, NUMBER, NUMBER, NUMBER));
const hsl$1 = new RegExp('hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE));
const hsla$1 = new RegExp('hsla' + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER));
const hex3 = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/;
const hex4 = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/;
const hex6 = /^#([0-9a-fA-F]{6})$/;
const hex8 = /^#([0-9a-fA-F]{8})$/;

function normalizeColor(color) {
  let match;

  if (typeof color === 'number') {
    return color >>> 0 === color && color >= 0 && color <= 0xffffffff ? color : null;
  }

  if (match = hex6.exec(color)) return parseInt(match[1] + 'ff', 16) >>> 0;

  if (colors$1$1 && colors$1$1[color] !== undefined) {
    return colors$1$1[color];
  }

  if (match = rgb$2.exec(color)) {
    return (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | 0x000000ff) >>> 0;
  }

  if (match = rgba$1.exec(color)) {
    return (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | parse1(match[4])) >>> 0;
  }

  if (match = hex3.exec(color)) {
    return parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + 'ff', 16) >>> 0;
  }

  if (match = hex8.exec(color)) return parseInt(match[1], 16) >>> 0;

  if (match = hex4.exec(color)) {
    return parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + match[4] + match[4], 16) >>> 0;
  }

  if (match = hsl$1.exec(color)) {
    return (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | 0x000000ff) >>> 0;
  }

  if (match = hsla$1.exec(color)) {
    return (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | parse1(match[4])) >>> 0;
  }

  return null;
}

function hue2rgb(p, q, t) {
  if (t < 0) t += 1;
  if (t > 1) t -= 1;
  if (t < 1 / 6) return p + (q - p) * 6 * t;
  if (t < 1 / 2) return q;
  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;
  return p;
}

function hslToRgb(h, s, l) {
  const q = l < 0.5 ? l * (1 + s) : l + s - l * s;
  const p = 2 * l - q;
  const r = hue2rgb(p, q, h + 1 / 3);
  const g = hue2rgb(p, q, h);
  const b = hue2rgb(p, q, h - 1 / 3);
  return Math.round(r * 255) << 24 | Math.round(g * 255) << 16 | Math.round(b * 255) << 8;
}

function parse255(str) {
  const int = parseInt(str, 10);
  if (int < 0) return 0;
  if (int > 255) return 255;
  return int;
}

function parse360(str) {
  const int = parseFloat(str);
  return (int % 360 + 360) % 360 / 360;
}

function parse1(str) {
  const num = parseFloat(str);
  if (num < 0) return 0;
  if (num > 1) return 255;
  return Math.round(num * 255);
}

function parsePercentage(str) {
  const int = parseFloat(str);
  if (int < 0) return 0;
  if (int > 100) return 1;
  return int / 100;
}

function colorToRgba(input) {
  let int32Color = normalizeColor(input);
  if (int32Color === null) return input;
  int32Color = int32Color || 0;
  let r = (int32Color & 0xff000000) >>> 24;
  let g = (int32Color & 0x00ff0000) >>> 16;
  let b = (int32Color & 0x0000ff00) >>> 8;
  let a = (int32Color & 0x000000ff) / 255;
  return `rgba(${r}, ${g}, ${b}, ${a})`;
}

const createInterpolator = (range, output, extrapolate) => {
  if (is.fun(range)) {
    return range;
  }

  if (is.arr(range)) {
    return createInterpolator({
      range,
      output: output,
      extrapolate
    });
  }

  if (is.str(range.output[0])) {
    return createStringInterpolator$1(range);
  }

  const config = range;
  const outputRange = config.output;
  const inputRange = config.range || [0, 1];
  const extrapolateLeft = config.extrapolateLeft || config.extrapolate || 'extend';
  const extrapolateRight = config.extrapolateRight || config.extrapolate || 'extend';

  const easing = config.easing || (t => t);

  return input => {
    const range = findRange(input, inputRange);
    return interpolate$1(input, inputRange[range], inputRange[range + 1], outputRange[range], outputRange[range + 1], easing, extrapolateLeft, extrapolateRight, config.map);
  };
};

function interpolate$1(input, inputMin, inputMax, outputMin, outputMax, easing, extrapolateLeft, extrapolateRight, map) {
  let result = map ? map(input) : input;

  if (result < inputMin) {
    if (extrapolateLeft === 'identity') return result;else if (extrapolateLeft === 'clamp') result = inputMin;
  }

  if (result > inputMax) {
    if (extrapolateRight === 'identity') return result;else if (extrapolateRight === 'clamp') result = inputMax;
  }

  if (outputMin === outputMax) return outputMin;
  if (inputMin === inputMax) return input <= inputMin ? outputMin : outputMax;
  if (inputMin === -Infinity) result = -result;else if (inputMax === Infinity) result = result - inputMin;else result = (result - inputMin) / (inputMax - inputMin);
  result = easing(result);
  if (outputMin === -Infinity) result = -result;else if (outputMax === Infinity) result = result + outputMin;else result = result * (outputMax - outputMin) + outputMin;
  return result;
}

function findRange(input, inputRange) {
  for (var i = 1; i < inputRange.length - 1; ++i) if (inputRange[i] >= input) break;

  return i - 1;
}

function _extends$2() {
  _extends$2 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends$2.apply(this, arguments);
}

const $get = Symbol.for('FluidValue.get');
const $observers = Symbol.for('FluidValue.observers');

const hasFluidValue = arg => Boolean(arg && arg[$get]);

const getFluidValue = arg => arg && arg[$get] ? arg[$get]() : arg;

const getFluidObservers = target => target[$observers] || null;

function callFluidObserver(observer, event) {
  if (observer.eventObserved) {
    observer.eventObserved(event);
  } else {
    observer(event);
  }
}

function callFluidObservers(target, event) {
  let observers = target[$observers];

  if (observers) {
    observers.forEach(observer => {
      callFluidObserver(observer, event);
    });
  }
}

class FluidValue {
  constructor(get) {
    this[$get] = void 0;
    this[$observers] = void 0;

    if (!get && !(get = this.get)) {
      throw Error('Unknown getter');
    }

    setFluidGetter(this, get);
  }

}

const setFluidGetter = (target, get) => setHidden(target, $get, get);

function addFluidObserver(target, observer) {
  if (target[$get]) {
    let observers = target[$observers];

    if (!observers) {
      setHidden(target, $observers, observers = new Set());
    }

    if (!observers.has(observer)) {
      observers.add(observer);

      if (target.observerAdded) {
        target.observerAdded(observers.size, observer);
      }
    }
  }

  return observer;
}

function removeFluidObserver(target, observer) {
  let observers = target[$observers];

  if (observers && observers.has(observer)) {
    const count = observers.size - 1;

    if (count) {
      observers.delete(observer);
    } else {
      target[$observers] = null;
    }

    if (target.observerRemoved) {
      target.observerRemoved(count, observer);
    }
  }
}

const setHidden = (target, key, value) => Object.defineProperty(target, key, {
  value,
  writable: true,
  configurable: true
});

const numberRegex = /[+\-]?(?:0|[1-9]\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
const colorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\((-?\d+%?[,\s]+){2,3}\s*[\d\.]+%?\))/gi;
let namedColorRegex;
const rgbaRegex = /rgba\(([0-9\.-]+), ([0-9\.-]+), ([0-9\.-]+), ([0-9\.-]+)\)/gi;

const rgbaRound = (_, p1, p2, p3, p4) => `rgba(${Math.round(p1)}, ${Math.round(p2)}, ${Math.round(p3)}, ${p4})`;

const createStringInterpolator = config => {
  if (!namedColorRegex) namedColorRegex = colors$1$1 ? new RegExp(`(${Object.keys(colors$1$1).join('|')})(?!\\w)`, 'g') : /^\b$/;
  const output = config.output.map(value => getFluidValue(value).replace(colorRegex, colorToRgba).replace(namedColorRegex, colorToRgba));
  const keyframes = output.map(value => value.match(numberRegex).map(Number));
  const outputRanges = keyframes[0].map((_, i) => keyframes.map(values => {
    if (!(i in values)) {
      throw Error('The arity of each "output" value must be equal');
    }

    return values[i];
  }));
  const interpolators = outputRanges.map(output => createInterpolator(_extends$2({}, config, {
    output
  })));
  return input => {
    let i = 0;
    return output[0].replace(numberRegex, () => String(interpolators[i++](input))).replace(rgbaRegex, rgbaRound);
  };
};

const prefix = 'react-spring: ';

const once = fn => {
  const func = fn;
  let called = false;

  if (typeof func != 'function') {
    throw new TypeError(`${prefix}once requires a function parameter`);
  }

  return (...args) => {
    if (!called) {
      func(...args);
      called = true;
    }
  };
};

const warnInterpolate = once(console.warn);
function deprecateInterpolate() {
  warnInterpolate(`${prefix}The "interpolate" function is deprecated in v9 (use "to" instead)`);
}
const warnDirectCall = once(console.warn);
function deprecateDirectCall() {
  warnDirectCall(`${prefix}Directly calling start instead of using the api object is deprecated in v9 (use ".start" instead), this will be removed in later 0.X.0 versions`);
}

function isAnimatedString(value) {
  return is.str(value) && (value[0] == '#' || /\d/.test(value) || value in (colors$1$1 || {}));
}

const useOnce = effect => React.useEffect(effect, emptyDeps);
const emptyDeps = [];

function useForceUpdate() {
  const update = React.useState()[1];
  const mounted = React.useState(makeMountedRef)[0];
  useOnce(mounted.unmount);
  return () => {
    if (mounted.current) {
      update({});
    }
  };
}

function makeMountedRef() {
  const mounted = {
    current: true,
    unmount: () => () => {
      mounted.current = false;
    }
  };
  return mounted;
}

function useMemoOne(getResult, inputs) {
  const [initial] = React.useState(() => ({
    inputs,
    result: getResult()
  }));
  const committed = React.useRef();
  const prevCache = committed.current;
  let cache = prevCache;

  if (cache) {
    const useCache = Boolean(inputs && cache.inputs && areInputsEqual(inputs, cache.inputs));

    if (!useCache) {
      cache = {
        inputs,
        result: getResult()
      };
    }
  } else {
    cache = initial;
  }

  React.useEffect(() => {
    committed.current = cache;

    if (prevCache == initial) {
      initial.inputs = initial.result = undefined;
    }
  }, [cache]);
  return cache.result;
}

function areInputsEqual(next, prev) {
  if (next.length !== prev.length) {
    return false;
  }

  for (let i = 0; i < next.length; i++) {
    if (next[i] !== prev[i]) {
      return false;
    }
  }

  return true;
}

function usePrev(value) {
  const prevRef = React.useRef();
  React.useEffect(() => {
    prevRef.current = value;
  });
  return prevRef.current;
}

const useLayoutEffect = typeof window !== 'undefined' && window.document && window.document.createElement ? React__namespace.useLayoutEffect : React__namespace.useEffect;

const $node = Symbol.for('Animated:node');
const isAnimated = value => !!value && value[$node] === value;
const getAnimated = owner => owner && owner[$node];
const setAnimated = (owner, node) => defineHidden(owner, $node, node);
const getPayload = owner => owner && owner[$node] && owner[$node].getPayload();
class Animated {
  constructor() {
    this.payload = void 0;
    setAnimated(this, this);
  }

  getPayload() {
    return this.payload || [];
  }

}

class AnimatedValue extends Animated {
  constructor(_value) {
    super();
    this.done = true;
    this.elapsedTime = void 0;
    this.lastPosition = void 0;
    this.lastVelocity = void 0;
    this.v0 = void 0;
    this.durationProgress = 0;
    this._value = _value;

    if (is.num(this._value)) {
      this.lastPosition = this._value;
    }
  }

  static create(value) {
    return new AnimatedValue(value);
  }

  getPayload() {
    return [this];
  }

  getValue() {
    return this._value;
  }

  setValue(value, step) {
    if (is.num(value)) {
      this.lastPosition = value;

      if (step) {
        value = Math.round(value / step) * step;

        if (this.done) {
          this.lastPosition = value;
        }
      }
    }

    if (this._value === value) {
      return false;
    }

    this._value = value;
    return true;
  }

  reset() {
    const {
      done
    } = this;
    this.done = false;

    if (is.num(this._value)) {
      this.elapsedTime = 0;
      this.durationProgress = 0;
      this.lastPosition = this._value;
      if (done) this.lastVelocity = null;
      this.v0 = null;
    }
  }

}

class AnimatedString extends AnimatedValue {
  constructor(value) {
    super(0);
    this._string = null;
    this._toString = void 0;
    this._toString = createInterpolator({
      output: [value, value]
    });
  }

  static create(value) {
    return new AnimatedString(value);
  }

  getValue() {
    let value = this._string;
    return value == null ? this._string = this._toString(this._value) : value;
  }

  setValue(value) {
    if (is.str(value)) {
      if (value == this._string) {
        return false;
      }

      this._string = value;
      this._value = 1;
    } else if (super.setValue(value)) {
      this._string = null;
    } else {
      return false;
    }

    return true;
  }

  reset(goal) {
    if (goal) {
      this._toString = createInterpolator({
        output: [this.getValue(), goal]
      });
    }

    this._value = 0;
    super.reset();
  }

}

const TreeContext = {
  dependencies: null
};

class AnimatedObject extends Animated {
  constructor(source) {
    super();
    this.source = source;
    this.setValue(source);
  }

  getValue(animated) {
    const values = {};
    eachProp(this.source, (source, key) => {
      if (isAnimated(source)) {
        values[key] = source.getValue(animated);
      } else if (hasFluidValue(source)) {
        values[key] = getFluidValue(source);
      } else if (!animated) {
        values[key] = source;
      }
    });
    return values;
  }

  setValue(source) {
    this.source = source;
    this.payload = this._makePayload(source);
  }

  reset() {
    if (this.payload) {
      each(this.payload, node => node.reset());
    }
  }

  _makePayload(source) {
    if (source) {
      const payload = new Set();
      eachProp(source, this._addToPayload, payload);
      return Array.from(payload);
    }
  }

  _addToPayload(source) {
    if (TreeContext.dependencies && hasFluidValue(source)) {
      TreeContext.dependencies.add(source);
    }

    const payload = getPayload(source);

    if (payload) {
      each(payload, node => this.add(node));
    }
  }

}

class AnimatedArray extends AnimatedObject {
  constructor(source) {
    super(source);
  }

  static create(source) {
    return new AnimatedArray(source);
  }

  getValue() {
    return this.source.map(node => node.getValue());
  }

  setValue(source) {
    const payload = this.getPayload();

    if (source.length == payload.length) {
      return payload.map((node, i) => node.setValue(source[i])).some(Boolean);
    }

    super.setValue(source.map(makeAnimated));
    return true;
  }

}

function makeAnimated(value) {
  const nodeType = isAnimatedString(value) ? AnimatedString : AnimatedValue;
  return nodeType.create(value);
}

function getAnimatedType(value) {
  const parentNode = getAnimated(value);
  return parentNode ? parentNode.constructor : is.arr(value) ? AnimatedArray : isAnimatedString(value) ? AnimatedString : AnimatedValue;
}

function _extends$1() {
  _extends$1 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends$1.apply(this, arguments);
}

const withAnimated = (Component, host) => {
  const hasInstance = !is.fun(Component) || Component.prototype && Component.prototype.isReactComponent;
  return React.forwardRef((givenProps, givenRef) => {
    const instanceRef = React.useRef(null);
    const ref = hasInstance && React.useCallback(value => {
      instanceRef.current = updateRef(givenRef, value);
    }, [givenRef]);
    const [props, deps] = getAnimatedState(givenProps, host);
    const forceUpdate = useForceUpdate();

    const callback = () => {
      const instance = instanceRef.current;

      if (hasInstance && !instance) {
        return;
      }

      const didUpdate = instance ? host.applyAnimatedValues(instance, props.getValue(true)) : false;

      if (didUpdate === false) {
        forceUpdate();
      }
    };

    const observer = new PropsObserver(callback, deps);
    const observerRef = React.useRef();
    useLayoutEffect(() => {
      const lastObserver = observerRef.current;
      observerRef.current = observer;
      each(deps, dep => addFluidObserver(dep, observer));

      if (lastObserver) {
        each(lastObserver.deps, dep => removeFluidObserver(dep, lastObserver));
        raf$1.cancel(lastObserver.update);
      }
    });
    React.useEffect(callback, []);
    useOnce(() => () => {
      const observer = observerRef.current;
      each(observer.deps, dep => removeFluidObserver(dep, observer));
    });
    const usedProps = host.getComponentProps(props.getValue());
    return React__namespace.createElement(Component, _extends$1({}, usedProps, {
      ref: ref
    }));
  });
};

class PropsObserver {
  constructor(update, deps) {
    this.update = update;
    this.deps = deps;
  }

  eventObserved(event) {
    if (event.type == 'change') {
      raf$1.write(this.update);
    }
  }

}

function getAnimatedState(props, host) {
  const dependencies = new Set();
  TreeContext.dependencies = dependencies;
  if (props.style) props = _extends$1({}, props, {
    style: host.createAnimatedStyle(props.style)
  });
  props = new AnimatedObject(props);
  TreeContext.dependencies = null;
  return [props, dependencies];
}

function updateRef(ref, value) {
  if (ref) {
    if (is.fun(ref)) ref(value);else ref.current = value;
  }

  return value;
}

const cacheKey = Symbol.for('AnimatedComponent');
const createHost = (components, {
  applyAnimatedValues: _applyAnimatedValues = () => false,
  createAnimatedStyle: _createAnimatedStyle = style => new AnimatedObject(style),
  getComponentProps: _getComponentProps = props => props
} = {}) => {
  const hostConfig = {
    applyAnimatedValues: _applyAnimatedValues,
    createAnimatedStyle: _createAnimatedStyle,
    getComponentProps: _getComponentProps
  };

  const animated = Component => {
    const displayName = getDisplayName(Component) || 'Anonymous';

    if (is.str(Component)) {
      Component = animated[Component] || (animated[Component] = withAnimated(Component, hostConfig));
    } else {
      Component = Component[cacheKey] || (Component[cacheKey] = withAnimated(Component, hostConfig));
    }

    Component.displayName = `Animated(${displayName})`;
    return Component;
  };

  eachProp(components, (Component, key) => {
    if (is.arr(components)) {
      key = getDisplayName(Component);
    }

    animated[key] = animated(Component);
  });
  return {
    animated
  };
};

const getDisplayName = arg => is.str(arg) ? arg : arg && is.str(arg.displayName) ? arg.displayName : is.fun(arg) && arg.name || null;

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function callProp(value, ...args) {
  return is.fun(value) ? value(...args) : value;
}
const matchProp = (value, key) => value === true || !!(key && value && (is.fun(value) ? value(key) : toArray(value).includes(key)));
const resolveProp = (prop, key) => is.obj(prop) ? key && prop[key] : prop;
const getDefaultProp = (props, key) => props.default === true ? props[key] : props.default ? props.default[key] : undefined;

const noopTransform = value => value;

const getDefaultProps = (props, transform = noopTransform) => {
  let keys = DEFAULT_PROPS;

  if (props.default && props.default !== true) {
    props = props.default;
    keys = Object.keys(props);
  }

  const defaults = {};

  for (const key of keys) {
    const value = transform(props[key], key);

    if (!is.und(value)) {
      defaults[key] = value;
    }
  }

  return defaults;
};
const DEFAULT_PROPS = ['config', 'onProps', 'onStart', 'onChange', 'onPause', 'onResume', 'onRest'];
const RESERVED_PROPS = {
  config: 1,
  from: 1,
  to: 1,
  ref: 1,
  loop: 1,
  reset: 1,
  pause: 1,
  cancel: 1,
  reverse: 1,
  immediate: 1,
  default: 1,
  delay: 1,
  onProps: 1,
  onStart: 1,
  onChange: 1,
  onPause: 1,
  onResume: 1,
  onRest: 1,
  onResolve: 1,
  items: 1,
  trail: 1,
  sort: 1,
  expires: 1,
  initial: 1,
  enter: 1,
  update: 1,
  leave: 1,
  children: 1,
  onDestroyed: 1,
  keys: 1,
  callId: 1,
  parentId: 1
};

function getForwardProps(props) {
  const forward = {};
  let count = 0;
  eachProp(props, (value, prop) => {
    if (!RESERVED_PROPS[prop]) {
      forward[prop] = value;
      count++;
    }
  });

  if (count) {
    return forward;
  }
}

function inferTo(props) {
  const to = getForwardProps(props);

  if (to) {
    const out = {
      to
    };
    eachProp(props, (val, key) => key in to || (out[key] = val));
    return out;
  }

  return _extends({}, props);
}
function computeGoal(value) {
  value = getFluidValue(value);
  return is.arr(value) ? value.map(computeGoal) : isAnimatedString(value) ? globals.createStringInterpolator({
    range: [0, 1],
    output: [value, value]
  })(1) : value;
}
function hasProps(props) {
  for (const _ in props) return true;

  return false;
}
function isAsyncTo(to) {
  return is.fun(to) || is.arr(to) && is.obj(to[0]);
}
function detachRefs(ctrl, ref) {
  var _ctrl$ref;

  (_ctrl$ref = ctrl.ref) == null ? void 0 : _ctrl$ref.delete(ctrl);
  ref == null ? void 0 : ref.delete(ctrl);
}
function replaceRef(ctrl, ref) {
  if (ref && ctrl.ref !== ref) {
    var _ctrl$ref2;

    (_ctrl$ref2 = ctrl.ref) == null ? void 0 : _ctrl$ref2.delete(ctrl);
    ref.add(ctrl);
    ctrl.ref = ref;
  }
}

const config = {
  default: {
    tension: 170,
    friction: 26
  },
  gentle: {
    tension: 120,
    friction: 14
  },
  wobbly: {
    tension: 180,
    friction: 12
  },
  stiff: {
    tension: 210,
    friction: 20
  },
  slow: {
    tension: 280,
    friction: 60
  },
  molasses: {
    tension: 280,
    friction: 120
  }
};

const linear$2 = t => t;

const defaults = _extends({}, config.default, {
  mass: 1,
  damping: 1,
  easing: linear$2,
  clamp: false
});

class AnimationConfig {
  constructor() {
    this.tension = void 0;
    this.friction = void 0;
    this.frequency = void 0;
    this.damping = void 0;
    this.mass = void 0;
    this.velocity = 0;
    this.restVelocity = void 0;
    this.precision = void 0;
    this.progress = void 0;
    this.duration = void 0;
    this.easing = void 0;
    this.clamp = void 0;
    this.bounce = void 0;
    this.decay = void 0;
    this.round = void 0;
    Object.assign(this, defaults);
  }

}
function mergeConfig(config, newConfig, defaultConfig) {
  if (defaultConfig) {
    defaultConfig = _extends({}, defaultConfig);
    sanitizeConfig(defaultConfig, newConfig);
    newConfig = _extends({}, defaultConfig, newConfig);
  }

  sanitizeConfig(config, newConfig);
  Object.assign(config, newConfig);

  for (const key in defaults) {
    if (config[key] == null) {
      config[key] = defaults[key];
    }
  }

  let {
    mass,
    frequency,
    damping
  } = config;

  if (!is.und(frequency)) {
    if (frequency < 0.01) frequency = 0.01;
    if (damping < 0) damping = 0;
    config.tension = Math.pow(2 * Math.PI / frequency, 2) * mass;
    config.friction = 4 * Math.PI * damping * mass / frequency;
  }

  return config;
}

function sanitizeConfig(config, props) {
  if (!is.und(props.decay)) {
    config.duration = undefined;
  } else {
    const isTensionConfig = !is.und(props.tension) || !is.und(props.friction);

    if (isTensionConfig || !is.und(props.frequency) || !is.und(props.damping) || !is.und(props.mass)) {
      config.duration = undefined;
      config.decay = undefined;
    }

    if (isTensionConfig) {
      config.frequency = undefined;
    }
  }
}

const emptyArray = [];
class Animation {
  constructor() {
    this.changed = false;
    this.values = emptyArray;
    this.toValues = null;
    this.fromValues = emptyArray;
    this.to = void 0;
    this.from = void 0;
    this.config = new AnimationConfig();
    this.immediate = false;
  }

}

function scheduleProps(callId, {
  key,
  props,
  defaultProps,
  state,
  actions
}) {
  return new Promise((resolve, reject) => {
    var _props$cancel;

    let delay;
    let timeout;
    let cancel = matchProp((_props$cancel = props.cancel) != null ? _props$cancel : defaultProps == null ? void 0 : defaultProps.cancel, key);

    if (cancel) {
      onStart();
    } else {
      if (!is.und(props.pause)) {
        state.paused = matchProp(props.pause, key);
      }

      let pause = defaultProps == null ? void 0 : defaultProps.pause;

      if (pause !== true) {
        pause = state.paused || matchProp(pause, key);
      }

      delay = callProp(props.delay || 0, key);

      if (pause) {
        state.resumeQueue.add(onResume);
        actions.pause();
      } else {
        actions.resume();
        onResume();
      }
    }

    function onPause() {
      state.resumeQueue.add(onResume);
      state.timeouts.delete(timeout);
      timeout.cancel();
      delay = timeout.time - raf$1.now();
    }

    function onResume() {
      if (delay > 0) {
        timeout = raf$1.setTimeout(onStart, delay);
        state.pauseQueue.add(onPause);
        state.timeouts.add(timeout);
      } else {
        onStart();
      }
    }

    function onStart() {
      state.pauseQueue.delete(onPause);
      state.timeouts.delete(timeout);

      if (callId <= (state.cancelId || 0)) {
        cancel = true;
      }

      try {
        actions.start(_extends({}, props, {
          callId,
          cancel
        }), resolve);
      } catch (err) {
        reject(err);
      }
    }
  });
}

const getCombinedResult = (target, results) => results.length == 1 ? results[0] : results.some(result => result.cancelled) ? getCancelledResult(target.get()) : results.every(result => result.noop) ? getNoopResult(target.get()) : getFinishedResult(target.get(), results.every(result => result.finished));
const getNoopResult = value => ({
  value,
  noop: true,
  finished: true,
  cancelled: false
});
const getFinishedResult = (value, finished, cancelled = false) => ({
  value,
  finished,
  cancelled
});
const getCancelledResult = value => ({
  value,
  cancelled: true,
  finished: false
});

function runAsync(to, props, state, target) {
  const {
    callId,
    parentId,
    onRest
  } = props;
  const {
    asyncTo: prevTo,
    promise: prevPromise
  } = state;

  if (!parentId && to === prevTo && !props.reset) {
    return prevPromise;
  }

  return state.promise = (async () => {
    state.asyncId = callId;
    state.asyncTo = to;
    const defaultProps = getDefaultProps(props, (value, key) => key === 'onRest' ? undefined : value);
    let preventBail;
    let bail;
    const bailPromise = new Promise((resolve, reject) => (preventBail = resolve, bail = reject));

    const bailIfEnded = bailSignal => {
      const bailResult = callId <= (state.cancelId || 0) && getCancelledResult(target) || callId !== state.asyncId && getFinishedResult(target, false);

      if (bailResult) {
        bailSignal.result = bailResult;
        bail(bailSignal);
        throw bailSignal;
      }
    };

    const animate = (arg1, arg2) => {
      const bailSignal = new BailSignal();
      const skipAnimationSignal = new SkipAniamtionSignal();
      return (async () => {
        if (globals.skipAnimation) {
          stopAsync(state);
          skipAnimationSignal.result = getFinishedResult(target, false);
          bail(skipAnimationSignal);
          throw skipAnimationSignal;
        }

        bailIfEnded(bailSignal);
        const props = is.obj(arg1) ? _extends({}, arg1) : _extends({}, arg2, {
          to: arg1
        });
        props.parentId = callId;
        eachProp(defaultProps, (value, key) => {
          if (is.und(props[key])) {
            props[key] = value;
          }
        });
        const result = await target.start(props);
        bailIfEnded(bailSignal);

        if (state.paused) {
          await new Promise(resume => {
            state.resumeQueue.add(resume);
          });
        }

        return result;
      })();
    };

    let result;

    if (globals.skipAnimation) {
      stopAsync(state);
      return getFinishedResult(target, false);
    }

    try {
      let animating;

      if (is.arr(to)) {
        animating = (async queue => {
          for (const props of queue) {
            await animate(props);
          }
        })(to);
      } else {
          animating = Promise.resolve(to(animate, target.stop.bind(target)));
        }

      await Promise.all([animating.then(preventBail), bailPromise]);
      result = getFinishedResult(target.get(), true, false);
    } catch (err) {
      if (err instanceof BailSignal) {
        result = err.result;
      } else if (err instanceof SkipAniamtionSignal) {
        result = err.result;
      } else {
        throw err;
      }
    } finally {
      if (callId == state.asyncId) {
        state.asyncId = parentId;
        state.asyncTo = parentId ? prevTo : undefined;
        state.promise = parentId ? prevPromise : undefined;
      }
    }

    if (is.fun(onRest)) {
      raf$1.batchedUpdates(() => {
        onRest(result, target, target.item);
      });
    }

    return result;
  })();
}
function stopAsync(state, cancelId) {
  flush(state.timeouts, t => t.cancel());
  state.pauseQueue.clear();
  state.resumeQueue.clear();
  state.asyncId = state.asyncTo = state.promise = undefined;
  if (cancelId) state.cancelId = cancelId;
}
class BailSignal extends Error {
  constructor() {
    super('An async animation has been interrupted. You see this error because you ' + 'forgot to use `await` or `.catch(...)` on its returned promise.');
    this.result = void 0;
  }

}
class SkipAniamtionSignal extends Error {
  constructor() {
    super('SkipAnimationSignal');
    this.result = void 0;
  }

}

const isFrameValue = value => value instanceof FrameValue;
let nextId$1 = 1;
class FrameValue extends FluidValue {
  constructor(...args) {
    super(...args);
    this.id = nextId$1++;
    this.key = void 0;
    this._priority = 0;
  }

  get priority() {
    return this._priority;
  }

  set priority(priority) {
    if (this._priority != priority) {
      this._priority = priority;

      this._onPriorityChange(priority);
    }
  }

  get() {
    const node = getAnimated(this);
    return node && node.getValue();
  }

  to(...args) {
    return globals.to(this, args);
  }

  interpolate(...args) {
    deprecateInterpolate();
    return globals.to(this, args);
  }

  toJSON() {
    return this.get();
  }

  observerAdded(count) {
    if (count == 1) this._attach();
  }

  observerRemoved(count) {
    if (count == 0) this._detach();
  }

  _attach() {}

  _detach() {}

  _onChange(value, idle = false) {
    callFluidObservers(this, {
      type: 'change',
      parent: this,
      value,
      idle
    });
  }

  _onPriorityChange(priority) {
    if (!this.idle) {
      frameLoop.sort(this);
    }

    callFluidObservers(this, {
      type: 'priority',
      parent: this,
      priority
    });
  }

}

const $P = Symbol.for('SpringPhase');
const HAS_ANIMATED = 1;
const IS_ANIMATING = 2;
const IS_PAUSED = 4;
const hasAnimated = target => (target[$P] & HAS_ANIMATED) > 0;
const isAnimating = target => (target[$P] & IS_ANIMATING) > 0;
const isPaused = target => (target[$P] & IS_PAUSED) > 0;
const setActiveBit = (target, active) => active ? target[$P] |= IS_ANIMATING | HAS_ANIMATED : target[$P] &= ~IS_ANIMATING;
const setPausedBit = (target, paused) => paused ? target[$P] |= IS_PAUSED : target[$P] &= ~IS_PAUSED;

class SpringValue extends FrameValue {
  constructor(arg1, arg2) {
    super();
    this.key = void 0;
    this.animation = new Animation();
    this.queue = void 0;
    this.defaultProps = {};
    this._state = {
      paused: false,
      pauseQueue: new Set(),
      resumeQueue: new Set(),
      timeouts: new Set()
    };
    this._pendingCalls = new Set();
    this._lastCallId = 0;
    this._lastToId = 0;
    this._memoizedDuration = 0;

    if (!is.und(arg1) || !is.und(arg2)) {
      const props = is.obj(arg1) ? _extends({}, arg1) : _extends({}, arg2, {
        from: arg1
      });

      if (is.und(props.default)) {
        props.default = true;
      }

      this.start(props);
    }
  }

  get idle() {
    return !(isAnimating(this) || this._state.asyncTo) || isPaused(this);
  }

  get goal() {
    return getFluidValue(this.animation.to);
  }

  get velocity() {
    const node = getAnimated(this);
    return node instanceof AnimatedValue ? node.lastVelocity || 0 : node.getPayload().map(node => node.lastVelocity || 0);
  }

  get hasAnimated() {
    return hasAnimated(this);
  }

  get isAnimating() {
    return isAnimating(this);
  }

  get isPaused() {
    return isPaused(this);
  }

  advance(dt) {
    let idle = true;
    let changed = false;
    const anim = this.animation;
    let {
      config,
      toValues
    } = anim;
    const payload = getPayload(anim.to);

    if (!payload && hasFluidValue(anim.to)) {
      toValues = toArray(getFluidValue(anim.to));
    }

    anim.values.forEach((node, i) => {
      if (node.done) return;
      const to = node.constructor == AnimatedString ? 1 : payload ? payload[i].lastPosition : toValues[i];
      let finished = anim.immediate;
      let position = to;

      if (!finished) {
        position = node.lastPosition;

        if (config.tension <= 0) {
          node.done = true;
          return;
        }

        let elapsed = node.elapsedTime += dt;
        const from = anim.fromValues[i];
        const v0 = node.v0 != null ? node.v0 : node.v0 = is.arr(config.velocity) ? config.velocity[i] : config.velocity;
        let velocity;

        if (!is.und(config.duration)) {
          let p = 1;

          if (config.duration > 0) {
            if (this._memoizedDuration !== config.duration) {
              this._memoizedDuration = config.duration;

              if (node.durationProgress > 0) {
                node.elapsedTime = config.duration * node.durationProgress;
                elapsed = node.elapsedTime += dt;
              }
            }

            p = (config.progress || 0) + elapsed / this._memoizedDuration;
            p = p > 1 ? 1 : p < 0 ? 0 : p;
            node.durationProgress = p;
          }

          position = from + config.easing(p) * (to - from);
          velocity = (position - node.lastPosition) / dt;
          finished = p == 1;
        } else if (config.decay) {
            const decay = config.decay === true ? 0.998 : config.decay;
            const e = Math.exp(-(1 - decay) * elapsed);
            position = from + v0 / (1 - decay) * (1 - e);
            finished = Math.abs(node.lastPosition - position) < 0.1;
            velocity = v0 * e;
          } else {
              velocity = node.lastVelocity == null ? v0 : node.lastVelocity;
              const precision = config.precision || (from == to ? 0.005 : Math.min(1, Math.abs(to - from) * 0.001));
              const restVelocity = config.restVelocity || precision / 10;
              const bounceFactor = config.clamp ? 0 : config.bounce;
              const canBounce = !is.und(bounceFactor);
              const isGrowing = from == to ? node.v0 > 0 : from < to;
              let isMoving;
              let isBouncing = false;
              const step = 1;
              const numSteps = Math.ceil(dt / step);

              for (let n = 0; n < numSteps; ++n) {
                isMoving = Math.abs(velocity) > restVelocity;

                if (!isMoving) {
                  finished = Math.abs(to - position) <= precision;

                  if (finished) {
                    break;
                  }
                }

                if (canBounce) {
                  isBouncing = position == to || position > to == isGrowing;

                  if (isBouncing) {
                    velocity = -velocity * bounceFactor;
                    position = to;
                  }
                }

                const springForce = -config.tension * 0.000001 * (position - to);
                const dampingForce = -config.friction * 0.001 * velocity;
                const acceleration = (springForce + dampingForce) / config.mass;
                velocity = velocity + acceleration * step;
                position = position + velocity * step;
              }
            }

        node.lastVelocity = velocity;

        if (Number.isNaN(position)) {
          console.warn(`Got NaN while animating:`, this);
          finished = true;
        }
      }

      if (payload && !payload[i].done) {
        finished = false;
      }

      if (finished) {
        node.done = true;
      } else {
        idle = false;
      }

      if (node.setValue(position, config.round)) {
        changed = true;
      }
    });
    const node = getAnimated(this);
    const currVal = node.getValue();

    if (idle) {
      const finalVal = getFluidValue(anim.to);

      if ((currVal !== finalVal || changed) && !config.decay) {
        node.setValue(finalVal);

        this._onChange(finalVal);
      } else if (changed && config.decay) {
        this._onChange(currVal);
      }

      this._stop();
    } else if (changed) {
      this._onChange(currVal);
    }
  }

  set(value) {
    raf$1.batchedUpdates(() => {
      this._stop();

      this._focus(value);

      this._set(value);
    });
    return this;
  }

  pause() {
    this._update({
      pause: true
    });
  }

  resume() {
    this._update({
      pause: false
    });
  }

  finish() {
    if (isAnimating(this)) {
      const {
        to,
        config
      } = this.animation;
      raf$1.batchedUpdates(() => {
        this._onStart();

        if (!config.decay) {
          this._set(to, false);
        }

        this._stop();
      });
    }

    return this;
  }

  update(props) {
    const queue = this.queue || (this.queue = []);
    queue.push(props);
    return this;
  }

  start(to, arg2) {
    let queue;

    if (!is.und(to)) {
      queue = [is.obj(to) ? to : _extends({}, arg2, {
        to
      })];
    } else {
      queue = this.queue || [];
      this.queue = [];
    }

    return Promise.all(queue.map(props => this._update(props))).then(results => getCombinedResult(this, results));
  }

  stop(cancel) {
    const {
      to
    } = this.animation;

    this._focus(this.get());

    stopAsync(this._state, cancel && this._lastCallId);
    raf$1.batchedUpdates(() => this._stop(to, cancel));
    return this;
  }

  reset() {
    this._update({
      reset: true
    });
  }

  eventObserved(event) {
    if (event.type == 'change') {
      this._start();
    } else if (event.type == 'priority') {
      this.priority = event.priority + 1;
    }
  }

  _prepareNode(props) {
    const key = this.key || '';
    let {
      to,
      from
    } = props;
    to = is.obj(to) ? to[key] : to;

    if (to == null || isAsyncTo(to)) {
      to = undefined;
    }

    from = is.obj(from) ? from[key] : from;

    if (from == null) {
      from = undefined;
    }

    const range = {
      to,
      from
    };

    if (!hasAnimated(this)) {
      if (props.reverse) [to, from] = [from, to];
      from = getFluidValue(from);

      if (!is.und(from)) {
        this._set(from);
      } else if (!getAnimated(this)) {
          this._set(to);
        }
    }

    return range;
  }

  _update(_ref, isLoop) {
    let props = _extends({}, _ref);

    const {
      key,
      defaultProps
    } = this;
    if (props.default) Object.assign(defaultProps, getDefaultProps(props, (value, prop) => /^on/.test(prop) ? resolveProp(value, key) : value));
    mergeActiveFn(this, props, 'onProps');
    sendEvent(this, 'onProps', props, this);

    const range = this._prepareNode(props);

    if (Object.isFrozen(this)) {
      throw Error('Cannot animate a `SpringValue` object that is frozen. ' + 'Did you forget to pass your component to `animated(...)` before animating its props?');
    }

    const state = this._state;
    return scheduleProps(++this._lastCallId, {
      key,
      props,
      defaultProps,
      state,
      actions: {
        pause: () => {
          if (!isPaused(this)) {
            setPausedBit(this, true);
            flushCalls(state.pauseQueue);
            sendEvent(this, 'onPause', getFinishedResult(this, checkFinished(this, this.animation.to)), this);
          }
        },
        resume: () => {
          if (isPaused(this)) {
            setPausedBit(this, false);

            if (isAnimating(this)) {
              this._resume();
            }

            flushCalls(state.resumeQueue);
            sendEvent(this, 'onResume', getFinishedResult(this, checkFinished(this, this.animation.to)), this);
          }
        },
        start: this._merge.bind(this, range)
      }
    }).then(result => {
      if (props.loop && result.finished && !(isLoop && result.noop)) {
        const nextProps = createLoopUpdate(props);

        if (nextProps) {
          return this._update(nextProps, true);
        }
      }

      return result;
    });
  }

  _merge(range, props, resolve) {
    if (props.cancel) {
      this.stop(true);
      return resolve(getCancelledResult(this));
    }

    const hasToProp = !is.und(range.to);
    const hasFromProp = !is.und(range.from);

    if (hasToProp || hasFromProp) {
      if (props.callId > this._lastToId) {
        this._lastToId = props.callId;
      } else {
        return resolve(getCancelledResult(this));
      }
    }

    const {
      key,
      defaultProps,
      animation: anim
    } = this;
    const {
      to: prevTo,
      from: prevFrom
    } = anim;
    let {
      to = prevTo,
      from = prevFrom
    } = range;

    if (hasFromProp && !hasToProp && (!props.default || is.und(to))) {
      to = from;
    }

    if (props.reverse) [to, from] = [from, to];
    const hasFromChanged = !isEqual$1(from, prevFrom);

    if (hasFromChanged) {
      anim.from = from;
    }

    from = getFluidValue(from);
    const hasToChanged = !isEqual$1(to, prevTo);

    if (hasToChanged) {
      this._focus(to);
    }

    const hasAsyncTo = isAsyncTo(props.to);
    const {
      config
    } = anim;
    const {
      decay,
      velocity
    } = config;

    if (hasToProp || hasFromProp) {
      config.velocity = 0;
    }

    if (props.config && !hasAsyncTo) {
      mergeConfig(config, callProp(props.config, key), props.config !== defaultProps.config ? callProp(defaultProps.config, key) : void 0);
    }

    let node = getAnimated(this);

    if (!node || is.und(to)) {
      return resolve(getFinishedResult(this, true));
    }

    const reset = is.und(props.reset) ? hasFromProp && !props.default : !is.und(from) && matchProp(props.reset, key);
    const value = reset ? from : this.get();
    const goal = computeGoal(to);
    const isAnimatable = is.num(goal) || is.arr(goal) || isAnimatedString(goal);
    const immediate = !hasAsyncTo && (!isAnimatable || matchProp(defaultProps.immediate || props.immediate, key));

    if (hasToChanged) {
      const nodeType = getAnimatedType(to);

      if (nodeType !== node.constructor) {
        if (immediate) {
          node = this._set(goal);
        } else throw Error(`Cannot animate between ${node.constructor.name} and ${nodeType.name}, as the "to" prop suggests`);
      }
    }

    const goalType = node.constructor;
    let started = hasFluidValue(to);
    let finished = false;

    if (!started) {
      const hasValueChanged = reset || !hasAnimated(this) && hasFromChanged;

      if (hasToChanged || hasValueChanged) {
        finished = isEqual$1(computeGoal(value), goal);
        started = !finished;
      }

      if (!isEqual$1(anim.immediate, immediate) && !immediate || !isEqual$1(config.decay, decay) || !isEqual$1(config.velocity, velocity)) {
        started = true;
      }
    }

    if (finished && isAnimating(this)) {
      if (anim.changed && !reset) {
        started = true;
      } else if (!started) {
          this._stop(prevTo);
        }
    }

    if (!hasAsyncTo) {
      if (started || hasFluidValue(prevTo)) {
        anim.values = node.getPayload();
        anim.toValues = hasFluidValue(to) ? null : goalType == AnimatedString ? [1] : toArray(goal);
      }

      if (anim.immediate != immediate) {
        anim.immediate = immediate;

        if (!immediate && !reset) {
          this._set(prevTo);
        }
      }

      if (started) {
        const {
          onRest
        } = anim;
        each(ACTIVE_EVENTS, type => mergeActiveFn(this, props, type));
        const result = getFinishedResult(this, checkFinished(this, prevTo));
        flushCalls(this._pendingCalls, result);

        this._pendingCalls.add(resolve);

        if (anim.changed) raf$1.batchedUpdates(() => {
          anim.changed = !reset;
          onRest == null ? void 0 : onRest(result, this);

          if (reset) {
            callProp(defaultProps.onRest, result);
          } else {
              anim.onStart == null ? void 0 : anim.onStart(result, this);
            }
        });
      }
    }

    if (reset) {
      this._set(value);
    }

    if (hasAsyncTo) {
      resolve(runAsync(props.to, props, this._state, this));
    } else if (started) {
        this._start();
      } else if (isAnimating(this) && !hasToChanged) {
          this._pendingCalls.add(resolve);
        } else {
            resolve(getNoopResult(value));
          }
  }

  _focus(value) {
    const anim = this.animation;

    if (value !== anim.to) {
      if (getFluidObservers(this)) {
        this._detach();
      }

      anim.to = value;

      if (getFluidObservers(this)) {
        this._attach();
      }
    }
  }

  _attach() {
    let priority = 0;
    const {
      to
    } = this.animation;

    if (hasFluidValue(to)) {
      addFluidObserver(to, this);

      if (isFrameValue(to)) {
        priority = to.priority + 1;
      }
    }

    this.priority = priority;
  }

  _detach() {
    const {
      to
    } = this.animation;

    if (hasFluidValue(to)) {
      removeFluidObserver(to, this);
    }
  }

  _set(arg, idle = true) {
    const value = getFluidValue(arg);

    if (!is.und(value)) {
      const oldNode = getAnimated(this);

      if (!oldNode || !isEqual$1(value, oldNode.getValue())) {
        const nodeType = getAnimatedType(value);

        if (!oldNode || oldNode.constructor != nodeType) {
          setAnimated(this, nodeType.create(value));
        } else {
          oldNode.setValue(value);
        }

        if (oldNode) {
          raf$1.batchedUpdates(() => {
            this._onChange(value, idle);
          });
        }
      }
    }

    return getAnimated(this);
  }

  _onStart() {
    const anim = this.animation;

    if (!anim.changed) {
      anim.changed = true;
      sendEvent(this, 'onStart', getFinishedResult(this, checkFinished(this, anim.to)), this);
    }
  }

  _onChange(value, idle) {
    if (!idle) {
      this._onStart();

      callProp(this.animation.onChange, value, this);
    }

    callProp(this.defaultProps.onChange, value, this);

    super._onChange(value, idle);
  }

  _start() {
    const anim = this.animation;
    getAnimated(this).reset(getFluidValue(anim.to));

    if (!anim.immediate) {
      anim.fromValues = anim.values.map(node => node.lastPosition);
    }

    if (!isAnimating(this)) {
      setActiveBit(this, true);

      if (!isPaused(this)) {
        this._resume();
      }
    }
  }

  _resume() {
    if (globals.skipAnimation) {
      this.finish();
    } else {
      frameLoop.start(this);
    }
  }

  _stop(goal, cancel) {
    if (isAnimating(this)) {
      setActiveBit(this, false);
      const anim = this.animation;
      each(anim.values, node => {
        node.done = true;
      });

      if (anim.toValues) {
        anim.onChange = anim.onPause = anim.onResume = undefined;
      }

      callFluidObservers(this, {
        type: 'idle',
        parent: this
      });
      const result = cancel ? getCancelledResult(this.get()) : getFinishedResult(this.get(), checkFinished(this, goal != null ? goal : anim.to));
      flushCalls(this._pendingCalls, result);

      if (anim.changed) {
        anim.changed = false;
        sendEvent(this, 'onRest', result, this);
      }
    }
  }

}

function checkFinished(target, to) {
  const goal = computeGoal(to);
  const value = computeGoal(target.get());
  return isEqual$1(value, goal);
}

function createLoopUpdate(props, loop = props.loop, to = props.to) {
  let loopRet = callProp(loop);

  if (loopRet) {
    const overrides = loopRet !== true && inferTo(loopRet);
    const reverse = (overrides || props).reverse;
    const reset = !overrides || overrides.reset;
    return createUpdate(_extends({}, props, {
      loop,
      default: false,
      pause: undefined,
      to: !reverse || isAsyncTo(to) ? to : undefined,
      from: reset ? props.from : undefined,
      reset
    }, overrides));
  }
}
function createUpdate(props) {
  const {
    to,
    from
  } = props = inferTo(props);
  const keys = new Set();
  if (is.obj(to)) findDefined(to, keys);
  if (is.obj(from)) findDefined(from, keys);
  props.keys = keys.size ? Array.from(keys) : null;
  return props;
}
function declareUpdate(props) {
  const update = createUpdate(props);

  if (is.und(update.default)) {
    update.default = getDefaultProps(update);
  }

  return update;
}

function findDefined(values, keys) {
  eachProp(values, (value, key) => value != null && keys.add(key));
}

const ACTIVE_EVENTS = ['onStart', 'onRest', 'onChange', 'onPause', 'onResume'];

function mergeActiveFn(target, props, type) {
  target.animation[type] = props[type] !== getDefaultProp(props, type) ? resolveProp(props[type], target.key) : undefined;
}

function sendEvent(target, type, ...args) {
  var _target$animation$typ, _target$animation, _target$defaultProps$, _target$defaultProps;

  (_target$animation$typ = (_target$animation = target.animation)[type]) == null ? void 0 : _target$animation$typ.call(_target$animation, ...args);
  (_target$defaultProps$ = (_target$defaultProps = target.defaultProps)[type]) == null ? void 0 : _target$defaultProps$.call(_target$defaultProps, ...args);
}

const BATCHED_EVENTS = ['onStart', 'onChange', 'onRest'];
let nextId = 1;
class Controller {
  constructor(props, flush) {
    this.id = nextId++;
    this.springs = {};
    this.queue = [];
    this.ref = void 0;
    this._flush = void 0;
    this._initialProps = void 0;
    this._lastAsyncId = 0;
    this._active = new Set();
    this._changed = new Set();
    this._started = false;
    this._item = void 0;
    this._state = {
      paused: false,
      pauseQueue: new Set(),
      resumeQueue: new Set(),
      timeouts: new Set()
    };
    this._events = {
      onStart: new Map(),
      onChange: new Map(),
      onRest: new Map()
    };
    this._onFrame = this._onFrame.bind(this);

    if (flush) {
      this._flush = flush;
    }

    if (props) {
      this.start(_extends({
        default: true
      }, props));
    }
  }

  get idle() {
    return !this._state.asyncTo && Object.values(this.springs).every(spring => spring.idle);
  }

  get item() {
    return this._item;
  }

  set item(item) {
    this._item = item;
  }

  get() {
    const values = {};
    this.each((spring, key) => values[key] = spring.get());
    return values;
  }

  set(values) {
    for (const key in values) {
      const value = values[key];

      if (!is.und(value)) {
        this.springs[key].set(value);
      }
    }
  }

  update(props) {
    if (props) {
      this.queue.push(createUpdate(props));
    }

    return this;
  }

  start(props) {
    let {
      queue
    } = this;

    if (props) {
      queue = toArray(props).map(createUpdate);
    } else {
      this.queue = [];
    }

    if (this._flush) {
      return this._flush(this, queue);
    }

    prepareKeys(this, queue);
    return flushUpdateQueue(this, queue);
  }

  stop(arg, keys) {
    if (arg !== !!arg) {
      keys = arg;
    }

    if (keys) {
      const springs = this.springs;
      each(toArray(keys), key => springs[key].stop(!!arg));
    } else {
      stopAsync(this._state, this._lastAsyncId);
      this.each(spring => spring.stop(!!arg));
    }

    return this;
  }

  pause(keys) {
    if (is.und(keys)) {
      this.start({
        pause: true
      });
    } else {
      const springs = this.springs;
      each(toArray(keys), key => springs[key].pause());
    }

    return this;
  }

  resume(keys) {
    if (is.und(keys)) {
      this.start({
        pause: false
      });
    } else {
      const springs = this.springs;
      each(toArray(keys), key => springs[key].resume());
    }

    return this;
  }

  each(iterator) {
    eachProp(this.springs, iterator);
  }

  _onFrame() {
    const {
      onStart,
      onChange,
      onRest
    } = this._events;
    const active = this._active.size > 0;
    const changed = this._changed.size > 0;

    if (active && !this._started || changed && !this._started) {
      this._started = true;
      flush(onStart, ([onStart, result]) => {
        result.value = this.get();
        onStart(result, this, this._item);
      });
    }

    const idle = !active && this._started;
    const values = changed || idle && onRest.size ? this.get() : null;

    if (changed && onChange.size) {
      flush(onChange, ([onChange, result]) => {
        result.value = values;
        onChange(result, this, this._item);
      });
    }

    if (idle) {
      this._started = false;
      flush(onRest, ([onRest, result]) => {
        result.value = values;
        onRest(result, this, this._item);
      });
    }
  }

  eventObserved(event) {
    if (event.type == 'change') {
      this._changed.add(event.parent);

      if (!event.idle) {
        this._active.add(event.parent);
      }
    } else if (event.type == 'idle') {
      this._active.delete(event.parent);
    } else return;

    raf$1.onFrame(this._onFrame);
  }

}
function flushUpdateQueue(ctrl, queue) {
  return Promise.all(queue.map(props => flushUpdate(ctrl, props))).then(results => getCombinedResult(ctrl, results));
}
async function flushUpdate(ctrl, props, isLoop) {
  const {
    keys,
    to,
    from,
    loop,
    onRest,
    onResolve
  } = props;
  const defaults = is.obj(props.default) && props.default;

  if (loop) {
    props.loop = false;
  }

  if (to === false) props.to = null;
  if (from === false) props.from = null;
  const asyncTo = is.arr(to) || is.fun(to) ? to : undefined;

  if (asyncTo) {
    props.to = undefined;
    props.onRest = undefined;

    if (defaults) {
      defaults.onRest = undefined;
    }
  } else {
      each(BATCHED_EVENTS, key => {
        const handler = props[key];

        if (is.fun(handler)) {
          const queue = ctrl['_events'][key];

          props[key] = ({
            finished,
            cancelled
          }) => {
            const result = queue.get(handler);

            if (result) {
              if (!finished) result.finished = false;
              if (cancelled) result.cancelled = true;
            } else {
              queue.set(handler, {
                value: null,
                finished: finished || false,
                cancelled: cancelled || false
              });
            }
          };

          if (defaults) {
            defaults[key] = props[key];
          }
        }
      });
    }

  const state = ctrl['_state'];

  if (props.pause === !state.paused) {
    state.paused = props.pause;
    flushCalls(props.pause ? state.pauseQueue : state.resumeQueue);
  } else if (state.paused) {
      props.pause = true;
    }

  const promises = (keys || Object.keys(ctrl.springs)).map(key => ctrl.springs[key].start(props));
  const cancel = props.cancel === true || getDefaultProp(props, 'cancel') === true;

  if (asyncTo || cancel && state.asyncId) {
    promises.push(scheduleProps(++ctrl['_lastAsyncId'], {
      props,
      state,
      actions: {
        pause: noop$3,
        resume: noop$3,

        start(props, resolve) {
          if (cancel) {
            stopAsync(state, ctrl['_lastAsyncId']);
            resolve(getCancelledResult(ctrl));
          } else {
            props.onRest = onRest;
            resolve(runAsync(asyncTo, props, state, ctrl));
          }
        }

      }
    }));
  }

  if (state.paused) {
    await new Promise(resume => {
      state.resumeQueue.add(resume);
    });
  }

  const result = getCombinedResult(ctrl, await Promise.all(promises));

  if (loop && result.finished && !(isLoop && result.noop)) {
    const nextProps = createLoopUpdate(props, loop, to);

    if (nextProps) {
      prepareKeys(ctrl, [nextProps]);
      return flushUpdate(ctrl, nextProps, true);
    }
  }

  if (onResolve) {
    raf$1.batchedUpdates(() => onResolve(result, ctrl, ctrl.item));
  }

  return result;
}
function getSprings(ctrl, props) {
  const springs = _extends({}, ctrl.springs);

  if (props) {
    each(toArray(props), props => {
      if (is.und(props.keys)) {
        props = createUpdate(props);
      }

      if (!is.obj(props.to)) {
        props = _extends({}, props, {
          to: undefined
        });
      }

      prepareSprings(springs, props, key => {
        return createSpring(key);
      });
    });
  }

  setSprings(ctrl, springs);
  return springs;
}
function setSprings(ctrl, springs) {
  eachProp(springs, (spring, key) => {
    if (!ctrl.springs[key]) {
      ctrl.springs[key] = spring;
      addFluidObserver(spring, ctrl);
    }
  });
}

function createSpring(key, observer) {
  const spring = new SpringValue();
  spring.key = key;

  if (observer) {
    addFluidObserver(spring, observer);
  }

  return spring;
}

function prepareSprings(springs, props, create) {
  if (props.keys) {
    each(props.keys, key => {
      const spring = springs[key] || (springs[key] = create(key));
      spring['_prepareNode'](props);
    });
  }
}

function prepareKeys(ctrl, queue) {
  each(queue, props => {
    prepareSprings(ctrl.springs, props, key => {
      return createSpring(key, ctrl);
    });
  });
}

function _objectWithoutPropertiesLoose$2(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

const _excluded$3 = ["children"];
const SpringContext = _ref => {
  let {
    children
  } = _ref,
      props = _objectWithoutPropertiesLoose$2(_ref, _excluded$3);

  const inherited = React.useContext(ctx);
  const pause = props.pause || !!inherited.pause,
        immediate = props.immediate || !!inherited.immediate;
  props = useMemoOne(() => ({
    pause,
    immediate
  }), [pause, immediate]);
  const {
    Provider
  } = ctx;
  return React__namespace.createElement(Provider, {
    value: props
  }, children);
};
const ctx = makeContext(SpringContext, {});
SpringContext.Provider = ctx.Provider;
SpringContext.Consumer = ctx.Consumer;

function makeContext(target, init) {
  Object.assign(target, React__namespace.createContext(init));
  target.Provider._context = target;
  target.Consumer._context = target;
  return target;
}

const SpringRef = () => {
  const current = [];

  const SpringRef = function SpringRef(props) {
    deprecateDirectCall();
    const results = [];
    each(current, (ctrl, i) => {
      if (is.und(props)) {
        results.push(ctrl.start());
      } else {
        const update = _getProps(props, ctrl, i);

        if (update) {
          results.push(ctrl.start(update));
        }
      }
    });
    return results;
  };

  SpringRef.current = current;

  SpringRef.add = function (ctrl) {
    if (!current.includes(ctrl)) {
      current.push(ctrl);
    }
  };

  SpringRef.delete = function (ctrl) {
    const i = current.indexOf(ctrl);
    if (~i) current.splice(i, 1);
  };

  SpringRef.pause = function () {
    each(current, ctrl => ctrl.pause(...arguments));
    return this;
  };

  SpringRef.resume = function () {
    each(current, ctrl => ctrl.resume(...arguments));
    return this;
  };

  SpringRef.set = function (values) {
    each(current, ctrl => ctrl.set(values));
  };

  SpringRef.start = function (props) {
    const results = [];
    each(current, (ctrl, i) => {
      if (is.und(props)) {
        results.push(ctrl.start());
      } else {
        const update = this._getProps(props, ctrl, i);

        if (update) {
          results.push(ctrl.start(update));
        }
      }
    });
    return results;
  };

  SpringRef.stop = function () {
    each(current, ctrl => ctrl.stop(...arguments));
    return this;
  };

  SpringRef.update = function (props) {
    each(current, (ctrl, i) => ctrl.update(this._getProps(props, ctrl, i)));
    return this;
  };

  const _getProps = function _getProps(arg, ctrl, index) {
    return is.fun(arg) ? arg(index, ctrl) : arg;
  };

  SpringRef._getProps = _getProps;
  return SpringRef;
};

function useSprings(length, props, deps) {
  const propsFn = is.fun(props) && props;
  if (propsFn && !deps) deps = [];
  const ref = React.useMemo(() => propsFn || arguments.length == 3 ? SpringRef() : void 0, []);
  const layoutId = React.useRef(0);
  const forceUpdate = useForceUpdate();
  const state = React.useMemo(() => ({
    ctrls: [],
    queue: [],

    flush(ctrl, updates) {
      const springs = getSprings(ctrl, updates);
      const canFlushSync = layoutId.current > 0 && !state.queue.length && !Object.keys(springs).some(key => !ctrl.springs[key]);
      return canFlushSync ? flushUpdateQueue(ctrl, updates) : new Promise(resolve => {
        setSprings(ctrl, springs);
        state.queue.push(() => {
          resolve(flushUpdateQueue(ctrl, updates));
        });
        forceUpdate();
      });
    }

  }), []);
  const ctrls = React.useRef([...state.ctrls]);
  const updates = [];
  const prevLength = usePrev(length) || 0;
  const oldCtrls = ctrls.current.slice(length, prevLength);
  React.useMemo(() => {
    ctrls.current.length = length;
    declareUpdates(prevLength, length);
  }, [length]);
  React.useMemo(() => {
    declareUpdates(0, Math.min(prevLength, length));
  }, deps);

  function declareUpdates(startIndex, endIndex) {
    for (let i = startIndex; i < endIndex; i++) {
      const ctrl = ctrls.current[i] || (ctrls.current[i] = new Controller(null, state.flush));
      const update = propsFn ? propsFn(i, ctrl) : props[i];

      if (update) {
        updates[i] = declareUpdate(update);
      }
    }
  }

  const springs = ctrls.current.map((ctrl, i) => getSprings(ctrl, updates[i]));
  const context = React.useContext(SpringContext);
  const prevContext = usePrev(context);
  const hasContext = context !== prevContext && hasProps(context);
  useLayoutEffect(() => {
    layoutId.current++;
    state.ctrls = ctrls.current;
    const {
      queue
    } = state;

    if (queue.length) {
      state.queue = [];
      each(queue, cb => cb());
    }

    each(oldCtrls, ctrl => {
      detachRefs(ctrl, ref);
      ctrl.stop(true);
    });
    each(ctrls.current, (ctrl, i) => {
      ref == null ? void 0 : ref.add(ctrl);

      if (hasContext) {
        ctrl.start({
          default: context
        });
      }

      const update = updates[i];

      if (update) {
        replaceRef(ctrl, update.ref);

        if (ctrl.ref) {
          ctrl.queue.push(update);
        } else {
          ctrl.start(update);
        }
      }
    });
  });
  useOnce(() => () => {
    each(state.ctrls, ctrl => ctrl.stop(true));
  });
  const values = springs.map(x => _extends({}, x));
  return ref ? [values, ref] : values;
}

function useSpring(props, deps) {
  const isFn = is.fun(props);
  const [[values], ref] = useSprings(1, isFn ? props : [props], isFn ? deps || [] : deps);
  return isFn || arguments.length == 2 ? [values, ref] : values;
}

let TransitionPhase;

(function (TransitionPhase) {
  TransitionPhase["MOUNT"] = "mount";
  TransitionPhase["ENTER"] = "enter";
  TransitionPhase["UPDATE"] = "update";
  TransitionPhase["LEAVE"] = "leave";
})(TransitionPhase || (TransitionPhase = {}));

function useTransition(data, props, deps) {
  const propsFn = is.fun(props) && props;
  const {
    reset,
    sort,
    trail = 0,
    expires = true,
    onDestroyed,
    ref: propsRef,
    config: propsConfig
  } = propsFn ? propsFn() : props;
  const ref = React.useMemo(() => propsFn || arguments.length == 3 ? SpringRef() : void 0, []);
  const items = toArray(data);
  const transitions = [];
  const usedTransitions = React.useRef(null);
  const prevTransitions = reset ? null : usedTransitions.current;
  useLayoutEffect(() => {
    usedTransitions.current = transitions;
  });
  useOnce(() => () => each(usedTransitions.current, t => {
    if (t.expired) {
      clearTimeout(t.expirationId);
    }

    detachRefs(t.ctrl, ref);
    t.ctrl.stop(true);
  }));
  const keys = getKeys(items, propsFn ? propsFn() : props, prevTransitions);
  const expired = reset && usedTransitions.current || [];
  useLayoutEffect(() => each(expired, ({
    ctrl,
    item,
    key
  }) => {
    detachRefs(ctrl, ref);
    callProp(onDestroyed, item, key);
  }));
  const reused = [];
  if (prevTransitions) each(prevTransitions, (t, i) => {
    if (t.expired) {
      clearTimeout(t.expirationId);
      expired.push(t);
    } else {
      i = reused[i] = keys.indexOf(t.key);
      if (~i) transitions[i] = t;
    }
  });
  each(items, (item, i) => {
    if (!transitions[i]) {
      transitions[i] = {
        key: keys[i],
        item,
        phase: TransitionPhase.MOUNT,
        ctrl: new Controller()
      };
      transitions[i].ctrl.item = item;
    }
  });

  if (reused.length) {
    let i = -1;
    const {
      leave
    } = propsFn ? propsFn() : props;
    each(reused, (keyIndex, prevIndex) => {
      const t = prevTransitions[prevIndex];

      if (~keyIndex) {
        i = transitions.indexOf(t);
        transitions[i] = _extends({}, t, {
          item: items[keyIndex]
        });
      } else if (leave) {
        transitions.splice(++i, 0, t);
      }
    });
  }

  if (is.fun(sort)) {
    transitions.sort((a, b) => sort(a.item, b.item));
  }

  let delay = -trail;
  const forceUpdate = useForceUpdate();
  const defaultProps = getDefaultProps(props);
  const changes = new Map();
  each(transitions, (t, i) => {
    const key = t.key;
    const prevPhase = t.phase;
    const p = propsFn ? propsFn() : props;
    let to;
    let phase;
    let propsDelay = callProp(p.delay || 0, key);

    if (prevPhase == TransitionPhase.MOUNT) {
      to = p.enter;
      phase = TransitionPhase.ENTER;
    } else {
      const isLeave = keys.indexOf(key) < 0;

      if (prevPhase != TransitionPhase.LEAVE) {
        if (isLeave) {
          to = p.leave;
          phase = TransitionPhase.LEAVE;
        } else if (to = p.update) {
          phase = TransitionPhase.UPDATE;
        } else return;
      } else if (!isLeave) {
        to = p.enter;
        phase = TransitionPhase.ENTER;
      } else return;
    }

    to = callProp(to, t.item, i);
    to = is.obj(to) ? inferTo(to) : {
      to
    };

    if (!to.config) {
      const config = propsConfig || defaultProps.config;
      to.config = callProp(config, t.item, i, phase);
    }

    delay += trail;

    const payload = _extends({}, defaultProps, {
      delay: propsDelay + delay,
      ref: propsRef,
      reset: false
    }, to);

    if (phase == TransitionPhase.ENTER && is.und(payload.from)) {
      const _p = propsFn ? propsFn() : props;

      const from = is.und(_p.initial) || prevTransitions ? _p.from : _p.initial;
      payload.from = callProp(from, t.item, i);
    }

    const {
      onResolve
    } = payload;

    payload.onResolve = result => {
      callProp(onResolve, result);
      const transitions = usedTransitions.current;
      const t = transitions.find(t => t.key === key);
      if (!t) return;

      if (result.cancelled && t.phase != TransitionPhase.UPDATE) {
        return;
      }

      if (t.ctrl.idle) {
        const idle = transitions.every(t => t.ctrl.idle);

        if (t.phase == TransitionPhase.LEAVE) {
          const expiry = callProp(expires, t.item);

          if (expiry !== false) {
            const expiryMs = expiry === true ? 0 : expiry;
            t.expired = true;

            if (!idle && expiryMs > 0) {
              if (expiryMs <= 0x7fffffff) t.expirationId = setTimeout(forceUpdate, expiryMs);
              return;
            }
          }
        }

        if (idle && transitions.some(t => t.expired)) {
          forceUpdate();
        }
      }
    };

    const springs = getSprings(t.ctrl, payload);
    changes.set(t, {
      phase,
      springs,
      payload
    });
  });
  const context = React.useContext(SpringContext);
  const prevContext = usePrev(context);
  const hasContext = context !== prevContext && hasProps(context);
  useLayoutEffect(() => {
    if (hasContext) each(transitions, t => {
      t.ctrl.start({
        default: context
      });
    });
  }, [context]);
  useLayoutEffect(() => {
    each(changes, ({
      phase,
      payload
    }, t) => {
      const {
        ctrl
      } = t;
      t.phase = phase;
      ref == null ? void 0 : ref.add(ctrl);

      if (hasContext && phase == TransitionPhase.ENTER) {
        ctrl.start({
          default: context
        });
      }

      if (payload) {
        replaceRef(ctrl, payload.ref);

        if (ctrl.ref) {
          ctrl.update(payload);
        } else {
          ctrl.start(payload);
        }
      }
    });
  }, reset ? void 0 : deps);

  const renderTransitions = render => React__namespace.createElement(React__namespace.Fragment, null, transitions.map((t, i) => {
    const {
      springs
    } = changes.get(t) || t.ctrl;
    const elem = render(_extends({}, springs), t.item, t, i);
    return elem && elem.type ? React__namespace.createElement(elem.type, _extends({}, elem.props, {
      key: is.str(t.key) || is.num(t.key) ? t.key : t.ctrl.id,
      ref: elem.ref
    })) : elem;
  }));

  return ref ? [renderTransitions, ref] : renderTransitions;
}
let nextKey = 1;

function getKeys(items, {
  key,
  keys = key
}, prevTransitions) {
  if (keys === null) {
    const reused = new Set();
    return items.map(item => {
      const t = prevTransitions && prevTransitions.find(t => t.item === item && t.phase !== TransitionPhase.LEAVE && !reused.has(t));

      if (t) {
        reused.add(t);
        return t.key;
      }

      return nextKey++;
    });
  }

  return is.und(keys) ? items : is.fun(keys) ? items.map(keys) : toArray(keys);
}

class Interpolation extends FrameValue {
  constructor(source, args) {
    super();
    this.key = void 0;
    this.idle = true;
    this.calc = void 0;
    this._active = new Set();
    this.source = source;
    this.calc = createInterpolator(...args);

    const value = this._get();

    const nodeType = getAnimatedType(value);
    setAnimated(this, nodeType.create(value));
  }

  advance(_dt) {
    const value = this._get();

    const oldValue = this.get();

    if (!isEqual$1(value, oldValue)) {
      getAnimated(this).setValue(value);

      this._onChange(value, this.idle);
    }

    if (!this.idle && checkIdle(this._active)) {
      becomeIdle(this);
    }
  }

  _get() {
    const inputs = is.arr(this.source) ? this.source.map(getFluidValue) : toArray(getFluidValue(this.source));
    return this.calc(...inputs);
  }

  _start() {
    if (this.idle && !checkIdle(this._active)) {
      this.idle = false;
      each(getPayload(this), node => {
        node.done = false;
      });

      if (globals.skipAnimation) {
        raf$1.batchedUpdates(() => this.advance());
        becomeIdle(this);
      } else {
        frameLoop.start(this);
      }
    }
  }

  _attach() {
    let priority = 1;
    each(toArray(this.source), source => {
      if (hasFluidValue(source)) {
        addFluidObserver(source, this);
      }

      if (isFrameValue(source)) {
        if (!source.idle) {
          this._active.add(source);
        }

        priority = Math.max(priority, source.priority + 1);
      }
    });
    this.priority = priority;

    this._start();
  }

  _detach() {
    each(toArray(this.source), source => {
      if (hasFluidValue(source)) {
        removeFluidObserver(source, this);
      }
    });

    this._active.clear();

    becomeIdle(this);
  }

  eventObserved(event) {
    if (event.type == 'change') {
      if (event.idle) {
        this.advance();
      } else {
        this._active.add(event.parent);

        this._start();
      }
    } else if (event.type == 'idle') {
        this._active.delete(event.parent);
      } else if (event.type == 'priority') {
          this.priority = toArray(this.source).reduce((highest, parent) => Math.max(highest, (isFrameValue(parent) ? parent.priority : 0) + 1), 0);
        }
  }

}

function isIdle(source) {
  return source.idle !== false;
}

function checkIdle(active) {
  return !active.size || Array.from(active).every(isIdle);
}

function becomeIdle(self) {
  if (!self.idle) {
    self.idle = true;
    each(getPayload(self), node => {
      node.done = true;
    });
    callFluidObservers(self, {
      type: 'idle',
      parent: self
    });
  }
}

const to = (source, ...args) => new Interpolation(source, args);

globals.assign({
  createStringInterpolator,
  to: (source, args) => new Interpolation(source, args)
});

function _objectWithoutPropertiesLoose$1(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

const _excluded$2 = ["style", "children", "scrollTop", "scrollLeft"];
const isCustomPropRE = /^--/;

function dangerousStyleValue(name, value) {
  if (value == null || typeof value === 'boolean' || value === '') return '';
  if (typeof value === 'number' && value !== 0 && !isCustomPropRE.test(name) && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) return value + 'px';
  return ('' + value).trim();
}

const attributeCache = {};
function applyAnimatedValues(instance, props) {
  if (!instance.nodeType || !instance.setAttribute) {
    return false;
  }

  const isFilterElement = instance.nodeName === 'filter' || instance.parentNode && instance.parentNode.nodeName === 'filter';

  const _ref = props,
        {
    style,
    children,
    scrollTop,
    scrollLeft
  } = _ref,
        attributes = _objectWithoutPropertiesLoose$1(_ref, _excluded$2);

  const values = Object.values(attributes);
  const names = Object.keys(attributes).map(name => isFilterElement || instance.hasAttribute(name) ? name : attributeCache[name] || (attributeCache[name] = name.replace(/([A-Z])/g, n => '-' + n.toLowerCase())));

  if (children !== void 0) {
    instance.textContent = children;
  }

  for (let name in style) {
    if (style.hasOwnProperty(name)) {
      const value = dangerousStyleValue(name, style[name]);

      if (isCustomPropRE.test(name)) {
        instance.style.setProperty(name, value);
      } else {
        instance.style[name] = value;
      }
    }
  }

  names.forEach((name, i) => {
    instance.setAttribute(name, values[i]);
  });

  if (scrollTop !== void 0) {
    instance.scrollTop = scrollTop;
  }

  if (scrollLeft !== void 0) {
    instance.scrollLeft = scrollLeft;
  }
}
let isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};

const prefixKey = (prefix, key) => prefix + key.charAt(0).toUpperCase() + key.substring(1);

const prefixes$2 = ['Webkit', 'Ms', 'Moz', 'O'];
isUnitlessNumber = Object.keys(isUnitlessNumber).reduce((acc, prop) => {
  prefixes$2.forEach(prefix => acc[prefixKey(prefix, prop)] = acc[prop]);
  return acc;
}, isUnitlessNumber);

const _excluded$1 = ["x", "y", "z"];
const domTransforms = /^(matrix|translate|scale|rotate|skew)/;
const pxTransforms = /^(translate)/;
const degTransforms = /^(rotate|skew)/;

const addUnit = (value, unit) => is.num(value) && value !== 0 ? value + unit : value;

const isValueIdentity = (value, id) => is.arr(value) ? value.every(v => isValueIdentity(v, id)) : is.num(value) ? value === id : parseFloat(value) === id;

class AnimatedStyle extends AnimatedObject {
  constructor(_ref) {
    let {
      x,
      y,
      z
    } = _ref,
        style = _objectWithoutPropertiesLoose$1(_ref, _excluded$1);

    const inputs = [];
    const transforms = [];

    if (x || y || z) {
      inputs.push([x || 0, y || 0, z || 0]);
      transforms.push(xyz => [`translate3d(${xyz.map(v => addUnit(v, 'px')).join(',')})`, isValueIdentity(xyz, 0)]);
    }

    eachProp(style, (value, key) => {
      if (key === 'transform') {
        inputs.push([value || '']);
        transforms.push(transform => [transform, transform === '']);
      } else if (domTransforms.test(key)) {
        delete style[key];
        if (is.und(value)) return;
        const unit = pxTransforms.test(key) ? 'px' : degTransforms.test(key) ? 'deg' : '';
        inputs.push(toArray(value));
        transforms.push(key === 'rotate3d' ? ([x, y, z, deg]) => [`rotate3d(${x},${y},${z},${addUnit(deg, unit)})`, isValueIdentity(deg, 0)] : input => [`${key}(${input.map(v => addUnit(v, unit)).join(',')})`, isValueIdentity(input, key.startsWith('scale') ? 1 : 0)]);
      }
    });

    if (inputs.length) {
      style.transform = new FluidTransform(inputs, transforms);
    }

    super(style);
  }

}

class FluidTransform extends FluidValue {
  constructor(inputs, transforms) {
    super();
    this._value = null;
    this.inputs = inputs;
    this.transforms = transforms;
  }

  get() {
    return this._value || (this._value = this._get());
  }

  _get() {
    let transform = '';
    let identity = true;
    each(this.inputs, (input, i) => {
      const arg1 = getFluidValue(input[0]);
      const [t, id] = this.transforms[i](is.arr(arg1) ? arg1 : input.map(getFluidValue));
      transform += ' ' + t;
      identity = identity && id;
    });
    return identity ? 'none' : transform;
  }

  observerAdded(count) {
    if (count == 1) each(this.inputs, input => each(input, value => hasFluidValue(value) && addFluidObserver(value, this)));
  }

  observerRemoved(count) {
    if (count == 0) each(this.inputs, input => each(input, value => hasFluidValue(value) && removeFluidObserver(value, this)));
  }

  eventObserved(event) {
    if (event.type == 'change') {
      this._value = null;
    }

    callFluidObservers(this, event);
  }

}

const primitives = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr', 'circle', 'clipPath', 'defs', 'ellipse', 'foreignObject', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];

const _excluded = ["scrollTop", "scrollLeft"];
globals.assign({
  batchedUpdates: react_dom_1.unstable_batchedUpdates,
  createStringInterpolator,
  colors: colors$2
});
const host = createHost(primitives, {
  applyAnimatedValues,
  createAnimatedStyle: style => new AnimatedStyle(style),
  getComponentProps: _ref => {
    let props = _objectWithoutPropertiesLoose$1(_ref, _excluded);

    return props;
  }
});
const animated = host.animated;

var useSSR = createCommonjsModule(function (module, exports) {
var __assign = (commonjsGlobal && commonjsGlobal.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var Device;
(function (Device) {
    Device["Browser"] = "browser";
    Device["Server"] = "server";
    Device["Native"] = "native";
})(Device = exports.Device || (exports.Device = {}));
var Browser = Device.Browser, Server = Device.Server, Native = Device.Native;
var canUseDOM = !!(typeof window !== 'undefined' &&
    window.document &&
    window.document.createElement);
var canUseNative = typeof navigator != 'undefined' && navigator.product == 'ReactNative';
var device = canUseNative ? Native : canUseDOM ? Browser : Server;
var SSRObject = {
    isBrowser: device === Browser,
    isServer: device === Server,
    isNative: device === Native,
    device: device,
    canUseWorkers: typeof Worker !== 'undefined',
    canUseEventListeners: device === Browser && !!window.addEventListener,
    canUseViewport: device === Browser && !!window.screen,
};
// TODO: instead of this, do a polyfill for `Object.assign` https://www.npmjs.com/package/es6-object-assign
var assign = function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return args.reduce(function (acc, obj) { return (__assign(__assign({}, acc), obj)); }, {});
};
var values = function (obj) { return Object.keys(obj).map(function (key) { return obj[key]; }); };
var toArrayObject = function () { return assign((values(SSRObject), SSRObject)); };
var useSSRObject = toArrayObject();
exports.weAreServer = function () {
    SSRObject.isServer = true;
    useSSRObject = toArrayObject();
};
exports.useSSR = function () { return useSSRObject; };
exports.default = exports.useSSR;
});

var usePortal_1 = createCommonjsModule(function (module, exports) {
var __assign = (commonjsGlobal && commonjsGlobal.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (commonjsGlobal && commonjsGlobal.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });


var use_ssr_1 = __importDefault(useSSR);
exports.errorMessage1 = 'You must either add a `ref` to the element you are interacting with or pass an `event` to openPortal(e) or togglePortal(e).';
function usePortal(_a) {
    if (_a === void 0) { _a = {}; }
    var _b = _a.closeOnOutsideClick, closeOnOutsideClick = _b === void 0 ? true : _b, _c = _a.closeOnEsc, closeOnEsc = _c === void 0 ? true : _c, bindTo = _a.bindTo, // attach the portal to this node in the DOM
    _d = _a.isOpen, // attach the portal to this node in the DOM
    defaultIsOpen = _d === void 0 ? false : _d, onOpen = _a.onOpen, onClose = _a.onClose, onPortalClick = _a.onPortalClick, eventHandlers = __rest(_a, ["closeOnOutsideClick", "closeOnEsc", "bindTo", "isOpen", "onOpen", "onClose", "onPortalClick"]);
    var _e = use_ssr_1.default(), isServer = _e.isServer, isBrowser = _e.isBrowser;
    var _f = React__default['default'].useState(defaultIsOpen), isOpen = _f[0], makeOpen = _f[1];
    // we use this ref because `isOpen` is stale for handleOutsideMouseClick
    var open = React__default['default'].useRef(isOpen);
    var setOpen = React__default['default'].useCallback(function (v) {
        // workaround to not have stale `isOpen` in the handleOutsideMouseClick
        open.current = v;
        makeOpen(v);
    }, []);
    var targetEl = React__default['default'].useRef(); // this is the element you are clicking/hovering/whatever, to trigger opening the portal
    var portal = React__default['default'].useRef(isBrowser ? document.createElement('div') : null);
    React__default['default'].useEffect(function () {
        if (isBrowser && !portal.current)
            portal.current = document.createElement('div');
    }, [isBrowser, portal]);
    var elToMountTo = React__default['default'].useMemo(function () {
        if (isServer)
            return;
        return (bindTo && react_dom_1__default['default'].findDOMNode(bindTo)) || document.body;
    }, [isServer, bindTo]);
    var createCustomEvent = function (e) {
        if (!e)
            return { portal: portal, targetEl: targetEl, event: e };
        var event = e || {};
        if (event.persist)
            event.persist();
        event.portal = portal;
        event.targetEl = targetEl;
        event.event = e;
        var currentTarget = e.currentTarget;
        if (!targetEl.current && currentTarget && currentTarget !== document)
            targetEl.current = event.currentTarget;
        return event;
    };
    // this should handle all eventHandlers like onClick, onMouseOver, etc. passed into the config
    var customEventHandlers = Object
        .entries(eventHandlers)
        .reduce(function (acc, _a) {
        var handlerName = _a[0], eventHandler = _a[1];
        acc[handlerName] = function (event) {
            if (isServer)
                return;
            eventHandler(createCustomEvent(event));
        };
        return acc;
    }, {});
    var openPortal = React__default['default'].useCallback(function (e) {
        if (isServer)
            return;
        var customEvent = createCustomEvent(e);
        // for some reason, when we don't have the event argument, there
        // is a weird race condition. Would like to see if we can remove
        // setTimeout, but for now this works
        if (targetEl.current == null) {
            setTimeout(function () { return setOpen(true); }, 0);
            throw Error(exports.errorMessage1);
        }
        if (onOpen)
            onOpen(customEvent);
        setOpen(true);
    }, [isServer, portal, setOpen, targetEl, onOpen]);
    var closePortal = React__default['default'].useCallback(function (e) {
        if (isServer)
            return;
        var customEvent = createCustomEvent(e);
        if (onClose && open.current)
            onClose(customEvent);
        if (open.current)
            setOpen(false);
    }, [isServer, onClose, setOpen]);
    var togglePortal = React__default['default'].useCallback(function (e) {
        return open.current ? closePortal(e) : openPortal(e);
    }, [closePortal, openPortal]);
    var handleKeydown = React__default['default'].useCallback(function (e) {
        return (e.key === 'Escape' && closeOnEsc) ? closePortal(e) : undefined;
    }, [closeOnEsc, closePortal]);
    var handleOutsideMouseClick = React__default['default'].useCallback(function (e) {
        var containsTarget = function (target) { return target.current.contains(e.target); };
        if (containsTarget(portal) || e.button !== 0 || !open.current || containsTarget(targetEl))
            return;
        if (closeOnOutsideClick)
            closePortal(e);
    }, [isServer, closePortal, closeOnOutsideClick, portal]);
    var handleMouseDown = React__default['default'].useCallback(function (e) {
        if (isServer || !(portal.current instanceof HTMLElement))
            return;
        var customEvent = createCustomEvent(e);
        if (portal.current.contains(customEvent.target) && onPortalClick)
            onPortalClick(customEvent);
        handleOutsideMouseClick(e);
    }, [handleOutsideMouseClick]);
    // used to remove the event listeners on unmount
    var eventListeners = React__default['default'].useRef({});
    React__default['default'].useEffect(function () {
        if (isServer)
            return;
        if (!(elToMountTo instanceof HTMLElement) || !(portal.current instanceof HTMLElement))
            return;
        // TODO: eventually will need to figure out a better solution for this.
        // Surely we can find a way to map onScroll/onWheel -> scroll/wheel better,
        // but for all other event handlers. For now this works.
        var eventHandlerMap = {
            onScroll: 'scroll',
            onWheel: 'wheel',
        };
        var node = portal.current;
        elToMountTo.appendChild(portal.current);
        // handles all special case handlers. Currently only onScroll and onWheel
        Object.entries(eventHandlerMap).forEach(function (_a) {
            var handlerName = _a[0] /* onScroll */, eventListenerName = _a[1] /* scroll */;
            if (!eventHandlers[handlerName])
                return;
            eventListeners.current[handlerName] = function (e) { return eventHandlers[handlerName](createCustomEvent(e)); };
            document.addEventListener(eventListenerName, eventListeners.current[handlerName]);
        });
        document.addEventListener('keydown', handleKeydown);
        document.addEventListener('mousedown', handleMouseDown);
        return function () {
            // handles all special case handlers. Currently only onScroll and onWheel
            Object.entries(eventHandlerMap).forEach(function (_a) {
                var handlerName = _a[0], eventListenerName = _a[1];
                if (!eventHandlers[handlerName])
                    return;
                document.removeEventListener(eventListenerName, eventListeners.current[handlerName]);
                delete eventListeners.current[handlerName];
            });
            document.removeEventListener('keydown', handleKeydown);
            document.removeEventListener('mousedown', handleMouseDown);
            elToMountTo.removeChild(node);
        };
    }, [isServer, handleOutsideMouseClick, handleKeydown, elToMountTo, portal]);
    var Portal = React__default['default'].useCallback(function (_a) {
        var children = _a.children;
        if (portal.current != null)
            return react_dom_1__default['default'].createPortal(children, portal.current);
        return null;
    }, [portal]);
    return Object.assign([openPortal, closePortal, open.current, Portal, togglePortal, targetEl, portal], __assign(__assign({ isOpen: open.current, openPortal: openPortal, ref: targetEl, closePortal: closePortal,
        togglePortal: togglePortal,
        Portal: Portal, portalRef: portal }, customEventHandlers), { bind: __assign({ ref: targetEl }, customEventHandlers) }));
}
exports.default = usePortal;

});

var usePortal = /*@__PURE__*/getDefaultExportFromCjs(usePortal_1);

const preserveCamelCase = (string, locale) => {
	let isLastCharLower = false;
	let isLastCharUpper = false;
	let isLastLastCharUpper = false;

	for (let i = 0; i < string.length; i++) {
		const character = string[i];

		if (isLastCharLower && /[\p{Lu}]/u.test(character)) {
			string = string.slice(0, i) + '-' + string.slice(i);
			isLastCharLower = false;
			isLastLastCharUpper = isLastCharUpper;
			isLastCharUpper = true;
			i++;
		} else if (isLastCharUpper && isLastLastCharUpper && /[\p{Ll}]/u.test(character)) {
			string = string.slice(0, i - 1) + '-' + string.slice(i - 1);
			isLastLastCharUpper = isLastCharUpper;
			isLastCharUpper = false;
			isLastCharLower = true;
		} else {
			isLastCharLower = character.toLocaleLowerCase(locale) === character && character.toLocaleUpperCase(locale) !== character;
			isLastLastCharUpper = isLastCharUpper;
			isLastCharUpper = character.toLocaleUpperCase(locale) === character && character.toLocaleLowerCase(locale) !== character;
		}
	}

	return string;
};

const preserveConsecutiveUppercase = input => {
	return input.replace(/^[\p{Lu}](?![\p{Lu}])/gu, m1 => m1.toLowerCase());
};

const postProcess = (input, options) => {
	return input.replace(/[_.\- ]+([\p{Alpha}\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase(options.locale))
		.replace(/\d+([\p{Alpha}\p{N}_]|$)/gu, m => m.toLocaleUpperCase(options.locale));
};

const camelCase = (input, options) => {
	if (!(typeof input === 'string' || Array.isArray(input))) {
		throw new TypeError('Expected the input to be `string | string[]`');
	}

	options = {
		pascalCase: false,
		preserveConsecutiveUppercase: false,
		...options
	};

	if (Array.isArray(input)) {
		input = input.map(x => x.trim())
			.filter(x => x.length)
			.join('-');
	} else {
		input = input.trim();
	}

	if (input.length === 0) {
		return '';
	}

	if (input.length === 1) {
		return options.pascalCase ? input.toLocaleUpperCase(options.locale) : input.toLocaleLowerCase(options.locale);
	}

	const hasUpperCase = input !== input.toLocaleLowerCase(options.locale);

	if (hasUpperCase) {
		input = preserveCamelCase(input, options.locale);
	}

	input = input.replace(/^[_.\- ]+/, '');

	if (options.preserveConsecutiveUppercase) {
		input = preserveConsecutiveUppercase(input);
	} else {
		input = input.toLocaleLowerCase();
	}

	if (options.pascalCase) {
		input = input.charAt(0).toLocaleUpperCase(options.locale) + input.slice(1);
	}

	return postProcess(input, options);
};

var camelcase = camelCase;
// TODO: Remove this for the next major release
var _default = camelCase;
camelcase.default = _default;

var styles$I = {"popover":"Popover_popover___3vunT","popper":"Popover_popper___3STcd","fixed":"Popover_fixed___2-htC","scroll":"Popover_scroll___2Pfg8","large":"Popover_large___3OyJl","full":"Popover_full___1UOYG","open":"Popover_open___Q7-I2","overlay":"Popover_overlay___3Ph5T","top":"Popover_top___3mX02","topStart":"Popover_topStart___dHPlg","topEnd":"Popover_topEnd___2yrYU","bottom":"Popover_bottom___1Iksq","bottomStart":"Popover_bottomStart___2q_hk","bottomEnd":"Popover_bottomEnd___3BZ1D","right":"Popover_right___1APkY","rightStart":"Popover_rightStart___2WWEx","rightEnd":"Popover_rightEnd___1a9_f","left":"Popover_left___1v23F","leftStart":"Popover_leftStart___1VyAQ","leftEnd":"Popover_leftEnd___36XOu"};

var Popover = React__namespace.forwardRef(function Popover(props, ref) {
    var _a;
    var onClose = props.onClose, popperOptions = props.popperOptions, anchorElement = props.anchorElement, isOpen = props.isOpen, className = props.className, popoverClassName = props.popoverClassName, fullWidth = props.fullWidth, _b = props.size, size = _b === void 0 ? "fixed" : _b, disableOverlay = props.disableOverlay, disableScale = props.disableScale, children = props.children, otherProps = __rest(props, ["onClose", "popperOptions", "anchorElement", "isOpen", "className", "popoverClassName", "fullWidth", "size", "disableOverlay", "disableScale", "children"]);
    var Portal = usePortal().Portal;
    var tooltipRef = React__namespace.useRef(null);
    var _c = React__namespace.useState(null), popoverRef = _c[0], setPopoverRef = _c[1];
    var springValues = {
        opacity: isOpen ? 1 : 0,
    };
    if (!disableScale) {
        springValues.transform = isOpen ? "scale(1)" : "scale(0.95)";
    }
    var springProps = useSpring(springValues);
    var modifiers = React__namespace.useMemo(function () {
        var _a;
        return __spreadArray(__spreadArray([], ((_a = popperOptions === null || popperOptions === void 0 ? void 0 : popperOptions.modifiers) !== null && _a !== void 0 ? _a : [
            {
                name: "offset",
                options: {
                    offset: [8, 8],
                },
            },
        ])), [
            fullWidth || size === "full"
                ? {
                    name: "sameWidth",
                    enabled: true,
                    phase: "beforeWrite",
                    requires: ["computeStyles"],
                    fn: function (_a) {
                        var state = _a.state;
                        state.styles.popper.minWidth = state.rects.reference.width + "px";
                    },
                    effect: function (_a) {
                        var state = _a.state;
                        state.elements.popper.style.minWidth = state.elements.reference.offsetWidth + "px";
                    },
                }
                : {},
        ]).filter(Boolean);
    }, [size, fullWidth, popperOptions === null || popperOptions === void 0 ? void 0 : popperOptions.modifiers]);
    var options = __assign(__assign({}, popperOptions), { modifiers: modifiers });
    var _d = usePopper(anchorElement, popoverRef, options), popperStyles = _d.styles, popperAttrs = _d.attributes;
    var handleKeyDown = React__namespace.useCallback(function (event) {
        if (event.key === "Escape") {
            onClose();
        }
    }, [onClose]);
    var handleClickOverlay = function (event) {
        event.preventDefault();
        event.stopPropagation();
        onClose();
    };
    var handleMouseUp = React__namespace.useCallback(function (event) {
        var current = tooltipRef.current;
        if (event.target instanceof Element && current && current.contains(event.target)) {
            event.stopPropagation();
            return;
        }
        onClose();
    }, [onClose]);
    React__namespace.useEffect(function () {
        if (isOpen) {
            window.addEventListener("keydown", handleKeyDown, true);
            if (disableOverlay) {
                window.addEventListener("mouseup", handleMouseUp, true);
            }
            return function () {
                window.removeEventListener("keydown", handleKeyDown, true);
                if (disableOverlay) {
                    window.removeEventListener("mouseup", handleMouseUp, true);
                }
            };
        }
    }, [isOpen, disableOverlay, handleKeyDown, handleMouseUp]);
    var placementClassName = camelcase((popperOptions === null || popperOptions === void 0 ? void 0 : popperOptions.placement) ? popperOptions.placement : "");
    var resolvedSize = fullWidth ? "full" : size;
    return (React__namespace.createElement(Portal, { ref: ref },
        isOpen && !disableOverlay && React__namespace.createElement("div", { role: "dialog", onClick: handleClickOverlay, className: styles$I.overlay }),
        React__namespace.createElement("div", __assign({ "data-testid": "popover", className: classnames(styles$I.popper, (_a = {}, _a[styles$I.open] = isOpen, _a), styles$I[resolvedSize], className), ref: setPopoverRef, style: popperStyles.popper }, popperAttrs.popper),
            React__namespace.createElement(animated.div, __assign({ ref: tooltipRef, role: "tooltip", "aria-label": "popover", "aria-hidden": isOpen ? undefined : "true", className: classnames(styles$I.popover, styles$I[placementClassName], popoverClassName), style: springProps }, otherProps), children))));
});

var SearchIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M23.694 20.834l-6.74-6.74a8.904 8.904 0 001.429-4.903A9.153 9.153 0 009.191 0 9.153 9.153 0 000 9.191a9.153 9.153 0 009.191 9.192c1.839 0 3.473-.51 4.903-1.43l6.74 6.74a.987.987 0 001.43 0l1.43-1.43a.987.987 0 000-1.429zM9.19 15.319c-3.37 0-6.127-2.757-6.127-6.128 0-3.37 2.757-6.127 6.127-6.127 3.37 0 6.128 2.757 6.128 6.127 0 3.37-2.757 6.128-6.128 6.128z", fill: fillColor, fillRule: "evenodd" })));
};

var styles$H = {"container":"SelectInput_container___1lmGe","selectInputPopover":"SelectInput_selectInputPopover___Ec3Lw","selectInputPopper":"SelectInput_selectInputPopper___1JczB","button":"SelectInput_button___1_EAo","labelText":"SelectInput_labelText___qgEZL","skeletonLabel":"SelectInput_skeletonLabel___22seD","skeletonButton":"SelectInput_skeletonButton___1AOff","icon":"SelectInput_icon___21o1A","buttonLabel":"SelectInput_buttonLabel___3TWLr","menu":"SelectInput_menu___3dsN0","small":"SelectInput_small___u2c-R","item":"SelectInput_item___1O1T3","iconItem":"SelectInput_iconItem___2XDxg","itemContent":"SelectInput_itemContent___1bXFY","itemLabel":"SelectInput_itemLabel___2T1CT","highlight":"SelectInput_highlight___2QcDx","selected":"SelectInput_selected___2215-","toggleButton":"SelectInput_toggleButton___14oKV","iconLeft":"SelectInput_iconLeft___X7GYs"};

var styles$G = {"container":"IconButton_container___2MPuJ","skeleton":"IconButton_skeleton___5VGf8","border":"IconButton_border___X2-cm"};

var IconButton = React__namespace.forwardRef(function IconButton(props, ref) {
    var _a;
    var onClick = props.onClick, className = props.className, children = props.children, hasBorder = props.hasBorder, isSkeleton = props.isSkeleton, disabled = props.disabled, label = props.label, otherProps = __rest(props, ["onClick", "className", "children", "hasBorder", "isSkeleton", "disabled", "label"]);
    var isDisabled = disabled || isSkeleton;
    return (React__namespace.createElement("button", __assign({ ref: ref, onClick: onClick, disabled: isDisabled, className: classnames(styles$G.container, className, (_a = {},
            _a[styles$G.border] = hasBorder,
            _a[skeletonStyles.skeleton] = isSkeleton,
            _a[styles$G.skeleton] = isSkeleton,
            _a)), "aria-busy": isSkeleton, "aria-label": label }, otherProps), children));
});

var useContentScrolls = function (ref) {
    var _a = React__default['default'].useState(false), contentScrolls = _a[0], setContentScrolls = _a[1];
    var contentRef = React__default['default'].useRef(null);
    var thisRef = ref || contentRef;
    React__default['default'].useEffect(function () {
        if (thisRef.current) {
            var scrollHeight = thisRef.current.scrollHeight;
            var clientHeight = thisRef.current.clientHeight;
            var scrolls = scrollHeight > clientHeight;
            setContentScrolls(scrolls);
        }
    }, [setContentScrolls, thisRef]);
    return { contentScrolls: contentScrolls, contentRef: thisRef };
};

var Autosuggest = React__namespace.forwardRef(function Autosuggest(props, ref) {
    var className = props.className, items = props.items, handleSelectedItemChange = props.handleSelectedItemChange, _a = props.popoverSize, popoverSize = _a === void 0 ? "full" : _a, _b = props.placeholder, placeholder = _b === void 0 ? "Start typing..." : _b, isSkeleton = props.isSkeleton, renderIcon = props.renderIcon, _c = props.popperOptions, popperOptions = _c === void 0 ? {
        modifiers: [
            {
                name: "offset",
                options: {
                    offset: [0, 2],
                },
            },
        ],
    } : _c, otherProps = __rest(props, ["className", "items", "handleSelectedItemChange", "popoverSize", "placeholder", "isSkeleton", "renderIcon", "popperOptions"]);
    var _d = React__namespace.useState(items), inputItems = _d[0], setInputItems = _d[1];
    var _e = React__namespace.useState(null), referenceElement = _e[0], setReferenceElement = _e[1];
    var _f = useCombobox({
        items: inputItems,
        itemToString: function (item) { return (item ? item.label : ""); },
        onSelectedItemChange: function (_a) {
            var selected = _a.selectedItem;
            handleSelectedItemChange && handleSelectedItemChange(selected);
            if (selected) {
                closeMenu();
            }
        },
        onInputValueChange: function (_a) {
            var inputValue = _a.inputValue;
            if (!inputValue) {
                setInputItems(items);
                selectItem(null);
                return;
            }
            if (selectedItem && selectedItem.label !== inputValue) {
                selectItem(null);
                setInputValue(inputValue);
            }
            setInputItems(items.filter(function (el) { return el.label.toLowerCase().startsWith(inputValue.toLowerCase()); }));
        },
    }), isOpen = _f.isOpen, openMenu = _f.openMenu, closeMenu = _f.closeMenu, highlightedIndex = _f.highlightedIndex, getInputProps = _f.getInputProps, getMenuProps = _f.getMenuProps, getComboboxProps = _f.getComboboxProps, getItemProps = _f.getItemProps, getToggleButtonProps = _f.getToggleButtonProps, selectedItem = _f.selectedItem, selectItem = _f.selectItem, setInputValue = _f.setInputValue;
    var contentScrolls = useContentScrolls(getMenuProps().ref).contentScrolls;
    return (React__namespace.createElement("div", __assign({ "aria-busy": isSkeleton, ref: ref, className: classnames(styles$H.container, className) }, otherProps),
        React__namespace.createElement("div", __assign({}, getComboboxProps({ ref: setReferenceElement })),
            React__namespace.createElement(TextInput, __assign({ isSkeleton: isSkeleton, placeholder: placeholder }, getInputProps({
                onFocus: openMenu,
            }), { iconLeftClassName: styles$H.iconLeft, iconLeft: React__namespace.createElement(IconButton, __assign({ isSkeleton: isSkeleton, className: styles$H.toggleButton, type: "button", label: "Icon button" }, getToggleButtonProps()),
                    React__namespace.createElement(SearchIcon, null)) }))),
        React__namespace.createElement(Popover, { className: styles$H.selectInputPopper, popoverClassName: styles$H.selectInputPopover, isOpen: isOpen, anchorElement: referenceElement || undefined, onClose: closeMenu, popperOptions: __assign({ placement: "bottom" }, popperOptions), size: popoverSize === "fixed" && contentScrolls ? "large" : popoverSize, disableScale: true },
            React__namespace.createElement("ul", __assign({ className: styles$H.menu }, getMenuProps()), inputItems.map(function (item, index) {
                var _a, _b;
                return (React__namespace.createElement("li", __assign({ className: classnames(styles$H.item, styles$H.iconItem, (_a = {},
                        _a[styles$H.highlight] = highlightedIndex === index,
                        _a), (_b = {},
                        _b[styles$H.selected] = (selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.value) === item.value,
                        _b)), key: "" + item.id }, getItemProps({ item: item, index: index })),
                    React__namespace.createElement("div", { className: classnames(styles$H.itemContent) },
                        renderIcon && renderIcon(item),
                        React__namespace.createElement("span", { className: styles$H.itemLabel }, item.label))));
            })))));
});

var styles$F = {"link":"TextLink_link___1Yv2R","linkText":"TextLink_linkText___AtFfq","skeleton":"TextLink_skeleton___LcDZP"};

var TextLink = React__namespace.forwardRef(function TextLink(_a, ref) {
    var _b;
    var color = _a.color, children = _a.children, className = _a.className, isSkeleton = _a.isSkeleton, otherProps = __rest(_a, ["color", "children", "className", "isSkeleton"]);
    return (React__namespace.createElement("a", __assign({ "aria-busy": isSkeleton, className: classnames(styles$F.link, (_b = {}, _b[skeletonStyles.skeleton] = isSkeleton, _b[styles$F.skeleton] = isSkeleton, _b), className), style: { color: color }, ref: ref }, otherProps),
        React__namespace.createElement("span", { className: styles$F.linkText }, children)));
});
var textLinkStyles = styles$F.link;

var styles$E = {"circleIcon":"CircleIcon_circleIcon___u__dZ"};

var CircleIcon = React__namespace.forwardRef(function CircleIcon(_a, ref) {
    var icon = _a.icon, backgroundColor = _a.backgroundColor, color = _a.color, className = _a.className, otherProps = __rest(_a, ["icon", "backgroundColor", "color", "className"]);
    var IconComponent = icon;
    return (React__namespace.createElement("div", { className: classnames(styles$E.circleIcon, className), style: { backgroundColor: backgroundColor }, ref: ref },
        React__namespace.createElement(IconComponent, __assign({ fillColor: color ? color : "white" }, otherProps))));
});

var styles$D = {"container":"FloatingElement_container___nQH3q"};

exports.RelativePosition = void 0;
(function (RelativePosition) {
    RelativePosition["TopLeft"] = "TopLeft";
    RelativePosition["TopRight"] = "TopRight";
    RelativePosition["BottomLeft"] = "BottomLeft";
    RelativePosition["BottomRight"] = "BottomRight";
})(exports.RelativePosition || (exports.RelativePosition = {}));
var getScreenRectFromBoundingRect = function (rect) {
    return {
        left: rect.left + window.scrollX,
        right: rect.right + window.scrollX,
        top: rect.top + window.scrollY,
        bottom: rect.bottom + window.scrollY,
    };
};
var calculateRootPosition = function (parentPosition, cornerPosition) {
    switch (cornerPosition) {
        case exports.RelativePosition.TopLeft:
            return { x: parentPosition.left, y: parentPosition.top };
        case exports.RelativePosition.TopRight:
            return { x: parentPosition.right, y: parentPosition.top };
        case exports.RelativePosition.BottomLeft:
            return { x: parentPosition.left, y: parentPosition.bottom };
        case exports.RelativePosition.BottomRight:
            return { x: parentPosition.right, y: parentPosition.bottom };
    }
};
var FloatingElement = function (_a) {
    var parent = _a.parent, relativeTo = _a.relativeTo, _b = _a.offset, offset = _b === void 0 ? { x: 0, y: 0 } : _b, children = _a.children;
    var Portal = usePortal().Portal;
    var _c = React.useState({ x: 0, y: 0 }), rootPosition = _c[0], setRootPosition = _c[1];
    React.useLayoutEffect(function () {
        function handleResize() {
            if (!parent)
                return;
            var parentRect = getScreenRectFromBoundingRect(parent.getBoundingClientRect());
            var position = calculateRootPosition(parentRect, relativeTo);
            setRootPosition(position);
        }
        window.addEventListener("resize", handleResize);
        handleResize();
    }, [parent, relativeTo]);
    return (React__default['default'].createElement(Portal, null,
        React__default['default'].createElement("span", { role: "tooltip", className: styles$D.container, style: {
                left: rootPosition.x + "px",
                top: rootPosition.y + "px",
                marginLeft: offset.x + "px",
                marginTop: offset.y + "px",
            } }, children)));
};

var styles$C = {"color-blue":"#482DEB","color-blue-hsl":"249, 83%, 55%","color-red":"#EE3355","color-red-hsl":"349, 85%, 57%","color-orange":"#ffaa33","color-orange-hsl":"35, 100%, 60%","color-green":"#2AA24F","color-green-hsl":"139, 59%, 40%","color-light-blue":"#4499EE","color-light-blue-hsl":"210, 83%, 60%","color-grey-blue":"#556680","color-grey-blue-hsl":"216, 20%, 42%","color-primary-navy":"hsl(228.3, 83.6%, 21.6%)","color-primary-navy-light":"hsl(228, 67%, 35%)","color-primary-teal":"color-primary-blue","color-primary-magenta":"hsl(321.9, 86.7%, 47.1%)","color-primary-violet":"hsl(268.6, 85.5%, 70.2%)","color-grey-black":"#1A1B23","color-grey-black-hsl":"233, 15%, 12%","color-grey-slate":"#6f749a","color-grey-slate-hsl":"233, 17.6%, 52%","color-grey-slate-40":"hsla(233, 17.6%, 52%, 40%)","color-grey-light":"hsl(232.5, 100%, 98.4%)","color-grey-white":"hsl(0, 0%, 100%)","color-grey-white-80":"hsla(0, 0%, 100%, 80%)","color-ui-action":"#482DEB","color-ui-action-mid":"#2F1BA6","color-ui-action-dark":"#15095D","color-ui-action-80":"hsla(249, 83%, 55%, 80%)","color-ui-action-60":"hsla(249, 83%, 55%, 60%)","color-ui-action-40":"hsla(249, 83%, 55%, 40%)","color-ui-action-20":"hsla(249, 83%, 55%, 20%)","color-ui-action-10":"hsla(249, 83%, 55%, 10%)","color-ui-action-5":"hsla(249, 83%, 55%, 5%)","color-ui-warning":"#ffaa33","color-ui-warning-mid":"#CC6633","color-ui-warning-dark":"#704100","color-ui-warning-80":"hsla(35, 100%, 60%, 80%)","color-ui-warning-60":"hsla(35, 100%, 60%, 60%)","color-ui-warning-40":"hsla(35, 100%, 60%, 40%)","color-ui-warning-20":"hsla(35, 100%, 60%, 20%)","color-ui-warning-10":"hsla(35, 100%, 60%, 10%)","color-ui-negative":"#EE3355","color-ui-negative-mid":"#A91E36","color-ui-negative-dark":"#6D0E1E","color-ui-negative-80":"hsla(349, 85%, 57%, 80%)","color-ui-negative-60":"hsla(349, 85%, 57%, 60%)","color-ui-negative-40":"hsla(349, 85%, 57%, 40%)","color-ui-negative-20":"hsla(349, 85%, 57%, 20%)","color-ui-negative-10":"hsla(349, 85%, 57%, 10%)","color-ui-positive":"#2AA24F","color-ui-positive-mid":"#26732E","color-ui-positive-dark":"#204A12","color-ui-positive-80":"hsla(139, 59%, 40%, 80%)","color-ui-positive-60":"hsla(139, 59%, 40%, 60%)","color-ui-positive-40":"hsla(139, 59%, 40%, 40%)","color-ui-positive-20":"hsla(139, 59%, 40%, 20%)","color-ui-positive-10":"hsla(139, 59%, 40%, 10%)","color-ui-neutral":"#4499EE","color-ui-neutral-mid":"#1A6FB6","color-ui-neutral-dark":"#02457E","color-ui-neutral-80":"hsla(210, 83%, 60%, 80%)","color-ui-neutral-60":"hsla(210, 83%, 60%, 60%)","color-ui-neutral-40":"hsla(210, 83%, 60%, 40%)","color-ui-neutral-20":"hsla(210, 83%, 60%, 20%)","color-ui-neutral-10":"hsla(210, 83%, 60%, 10%)","color-ui-interface":"#556680","color-ui-interface-80":"hsla(216, 20%, 42%, 80%)","color-ui-interface-60":"hsla(216, 20%, 42%, 60%)","color-ui-interface-40":"hsla(216, 20%, 42%, 40%)","color-ui-interface-20":"hsla(216, 20%, 42%, 20%)","color-ui-interface-10":"hsla(216, 20%, 42%, 10%)","color-ui-blue":"hsl(222.4, 60.4%, 61.4%)","color-ui-steel-blue":"hsl(220, 67%, 61%)","color-ui-inactive":"hsl(212.3,26%,80.4%)","container":"Toast_container___2XF1k","toastWrapper":"Toast_toastWrapper___qc1gR","toast":"Toast_toast___3sBs_","small":"Toast_small___1XTRa","medium":"Toast_medium___1hg5n","large":"Toast_large___2zmOa","info":"Toast_info___2hEV4","success":"Toast_success___Fcmyy","warning":"Toast_warning___2lF7_","error":"Toast_error___1zpEG","action":"Toast_action___3K6fx","content":"Toast_content___dKyix","body":"Toast_body___3CKH1","title":"Toast_title___1KKgJ","subText":"Toast_subText___2uAlY","infoIcon":"Toast_infoIcon___gwkf3","ctasContainer":"Toast_ctasContainer___3eXHb","cta":"Toast_cta___2tDW4","primary":"Toast_primary___nU__c","icon":"Toast_icon___c1u-e","enter":"Toast_enter___2yF_G","slideInFromRight":"Toast_slideInFromRight___1nZFX"};

var CloseIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M23.82 20.442a.583.583 0 010 .844l-2.534 2.533a.583.583 0 01-.844 0L12 15.377l-8.442 8.442a.583.583 0 01-.844 0L.18 21.286a.583.583 0 010-.844L8.623 12 .181 3.558a.583.583 0 010-.844L2.714.18a.583.583 0 01.844 0L12 8.623 20.442.181a.583.583 0 01.844 0l2.533 2.533a.583.583 0 010 .844L15.377 12l8.442 8.442z", fill: fillColor, fillRule: "nonzero" })));
};

var AnnouncementIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M6.1 16.1l3 .9-.9 5.1c-.1.5-.5.8-1 .8H5c-.6 0-1-.4-1-1v-6h1.2c.3.1.6.1.9.2zM5.2 7H2C.9 7 0 7.9 0 9v3c0 1.1.9 2 2 2h3.2c.5 0 1 .1 1.5.2L19 18V3L6.7 6.8c-.5.1-1 .2-1.5.2zM23 1h-1c-.6 0-1 .4-1 1v17c0 .6.4 1 1 1h1c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1z", fill: fillColor, fillRule: "evenodd" })));
};

var AlertIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("g", { fill: "none", fillRule: "evenodd", transform: "matrix(1, 0, 0, 1, -12, -12)" },
            React__namespace.createElement("g", { transform: "translate(9.6 9.6)" },
                React__namespace.createElement("path", { fill: fillColor, fillRule: "nonzero", d: "M 16.8 10.8 L 16.8 7.2 C 16.8 6.48 16.32 6 15.6 6 L 13.2 6 C 12.48 6 12 6.48 12 7.2 L 12 10.8 L 13.080000000000002 16.32 C 13.200000000000001 16.560000000000002 13.440000000000001 16.8 13.680000000000001 16.8 L 15.120000000000001 16.8 C 15.360000000000001 16.8 15.72 16.56 15.72 16.32 L 16.8 10.8 Z" }),
                React__namespace.createElement("path", { fill: fillColor, fillRule: "nonzero", d: "M 16.8 21.6 L 16.8 19.200000000000003 C 16.8 18.480000000000004 16.32 18.000000000000004 15.600000000000001 18.000000000000004 L 13.200000000000001 18.000000000000004 C 12.480000000000002 18.000000000000004 12.000000000000002 18.480000000000004 12.000000000000002 19.200000000000003 L 12.000000000000002 21.6 C 12.000000000000002 22.32 12.48 22.8 13.200000000000001 22.8 L 15.600000000000001 22.8 C 16.32 22.8 16.8 22.32 16.8 21.6 Z" })))));
};

var ArrowThinRightIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, _c = _a.isFlip, isFlip = _c === void 0 ? false : _c, props = __rest(_a, ["fillColor", "isFlip"]);
    return (React__namespace.createElement("svg", __assign({ width: "1rem", height: "1rem", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("g", { id: "Icons-/-Arrows-/-arrow-thin-right", stroke: "none", strokeWidth: "1", fill: "none", fillRule: "evenodd", transform: "translate(" + (isFlip ? 24 : 0) + ", 0) scale(" + (isFlip ? -1 : 1) + ", 1)" },
            React__namespace.createElement("g", { transform: "translate(0.000000, 4.000000)" },
                React__namespace.createElement("path", { d: "M22.4,8.64166667 L14.8363636,16.0083333 C14.6424242,16.1972222 14.3515152,16.1972222 14.1575758,16.0083333 L12.1212121,14.025 C11.9272727,13.8361111 11.9272727,13.5527778 12.1212121,13.3638889 L15.6121212,9.96388889 L0.96969697,9.96388889 C0.387878788,9.96388889 2.75604455e-13,9.58611111 2.75604455e-13,9.01944444 L2.75604455e-13,7.13055556 C2.75604455e-13,6.56388889 0.387878788,6.18611111 0.96969697,6.18611111 L15.7090909,6.18611111 L12.2181818,2.78611111 C12.0242424,2.59722222 12.0242424,2.31388889 12.2181818,2.125 L14.2545455,0.141666667 C14.4484848,-0.0472222222 14.7393939,-0.0472222222 14.9333333,0.141666667 L22.4969697,7.50833333 C22.7878788,7.69722222 22.7878788,8.26388889 22.4,8.64166667 Z", fill: fillColor, fillRule: "nonzero" })))));
};

function ArrowDownIcon(_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: 8, height: 8, viewBox: "0 0 8 5" }, props),
        React__namespace.createElement("path", { fill: fillColor, d: "M7.911.59L4.356 4.43c-.178.185-.534.185-.711 0L.089.59C-.133.333.089 0 .445 0h7.11c.356 0 .578.37.356.59z" })));
}

function BankIcon(_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: 20, height: 20, viewBox: "0 0 20 20" }, props),
        React__namespace.createElement("g", { transform: "translate(-362 -370) translate(352 360)" },
            React__namespace.createElement("path", { fill: fillColor, d: "M18.48 16.38v2.4c0 .24-.16.4-.4.4H1.28c-.24 0-.4-.16-.4-.4v-2.4c0-.24.16-.4.4-.4h1.2v-7.2h3.2v7.2h2.4v-7.2h3.2v7.2h2.4v-7.2h3.2v7.2h1.2c.24 0 .4.16.4.4zm.48-11.76L9.84.06c-.16-.08-.32-.08-.48 0L.32 4.62C.16 4.7 0 4.86 0 5.1v1.52c0 .32.24.56.56.56h18.16c.32 0 .56-.24.56-.56V5.1c0-.16-.08-.4-.32-.48z", transform: "translate(10 10)" }))));
}

var BellIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M22 17.195v.855c0 .57-.4.95-1 .95H3c-.6 0-1-.38-1-.95v-.855c0-.665.3-1.235.9-1.615l.3-.19c1.1-.665 1.8-1.9 1.8-3.135V8.55c0-3.04 2.1-5.51 5-6.365V.95c0-.57.4-.95 1-.95h2c.6 0 1 .38 1 .95v1.235c2.9.855 5 3.61 5 6.65v3.42c0 1.235.7 2.47 1.8 3.135l.3.19c.6.38.9.95.9 1.615zM9 22c0 1.1 1.35 2 3 2s3-.9 3-2v-1H9v1z", fill: fillColor, fillRule: "evenodd" })));
};

var BinIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1rem", height: "1rem", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M21,7 L21,22.1111111 C21,23.1005291 20.1836735,23.9186193 19.1557067,23.9942891 L19,24 L5,24 C3.95238095,24 3.0861678,23.2290249 3.00604686,22.2581675 L3,22.1111111 L3,7 L21,7 Z M16,9 C15.4428571,9 15.0581633,9.34489796 15.0060496,9.87456268 L15,10 L15,20 C15,20.6 15.4,21 16,21 C16.5571429,21 16.9418367,20.655102 16.9939504,20.1254373 L17,20 L17,10 C17,9.4 16.6,9 16,9 Z M12,9 C11.4428571,9 11.0581633,9.34489796 11.0060496,9.87456268 L11,10 L11,20 C11,20.6 11.4,21 12,21 C12.5571429,21 12.9418367,20.655102 12.9939504,20.1254373 L13,20 L13,10 C13,9.4 12.6,9 12,9 Z M8,9 C7.44285714,9 7.05816327,9.34489796 7.00604956,9.87456268 L7,10 L7,20 C7,20.6 7.4,21 8,21 C8.55714286,21 8.94183673,20.655102 8.99395044,20.1254373 L9,20 L9,10 C9,9.4 8.6,9 8,9 Z M13.8,0 C14.34,0 14.7,0.4 14.7,1 L14.7,2 L20.1,2 C20.64,2 21,2.4 21,3 L21,5 L3,5 L3,3 C3,2.4 3.36,2 3.9,2 L9.3,2 L9.3,1 C9.3,0.4 9.66,0 10.2,0 L13.8,0 Z", fill: fillColor, fillRule: "evenodd" })));
};

var BookOpenTextIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1rem", height: "1rem", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M21.23 1.846h-5.538A4.678 4.678 0 0012 3.692a4.678 4.678 0 00-3.692-1.846H2.769C1.2 1.846 0 3.046 0 4.616v13.846c0 1.569 1.2 2.769 2.77 2.769h5.538a1.2 1.2 0 011.107.738 1.824 1.824 0 001.662 1.108h1.846c.739 0 1.385-.462 1.662-1.108.184-.461.553-.738 1.107-.738h5.539c1.569 0 2.769-1.2 2.769-2.77V4.616c0-1.569-1.2-2.769-2.77-2.769zM11.078 19.385h-.185a2.689 2.689 0 00-2.584-1.847H2.769c-.554 0-.923-.369-.923-.923v-12c0-.553.37-.923.923-.923h5.539c1.569 0 2.769 1.2 2.769 2.77v12.923zm11.077-2.77c0 .554-.37.923-.923.923h-5.539c-1.2 0-2.215.739-2.584 1.847h-.185V6.462c0-1.57 1.2-2.77 2.77-2.77h5.538c.554 0 .923.37.923.923v12zM9.23 13.385v.923c0 .277-.167.461-.417.461H4.647c-.25 0-.416-.184-.416-.461v-.923c0-.277.166-.462.416-.462h4.167c.25 0 .417.185.417.462zm0-3.693v.923c0 .277-.185.462-.462.462H4.154c-.277 0-.462-.185-.462-.462v-.923c0-.277.185-.461.462-.461h4.615c.277 0 .462.184.462.461zM9.23 6v.923c0 .277-.185.462-.462.462H4.154c-.277 0-.462-.185-.462-.462V6c0-.277.185-.462.462-.462h4.615c.277 0 .462.185.462.462zm11.077 0v.923c0 .277-.185.462-.462.462h-4.615c-.277 0-.462-.185-.462-.462V6c0-.277.185-.462.462-.462h4.615c.277 0 .462.185.462.462zm-.539 7.385v.923c0 .277-.25.461-.625.461h-3.75c-.375 0-.625-.184-.625-.461v-.923c0-.277.25-.462.625-.462h3.75c.375 0 .625.185.625.462zm.539-3.693v.923c0 .277-.185.462-.462.462h-4.615c-.277 0-.462-.185-.462-.462v-.923c0-.277.185-.461.462-.461h4.615c.277 0 .462.184.462.461z", fill: fillColor, fillRule: "evenodd" })));
};

function CalendarIcon(_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (
    // <svg  width={20} height={20} viewBox="0 0 20 20" {...props}>
    //   <g transform="translate(-362 -370) translate(352 360)">
    //     <path
    //       fill={fillColor}
    //       d="M18.48 16.38v2.4c0 .24-.16.4-.4.4H1.28c-.24 0-.4-.16-.4-.4v-2.4c0-.24.16-.4.4-.4h1.2v-7.2h3.2v7.2h2.4v-7.2h3.2v7.2h2.4v-7.2h3.2v7.2h1.2c.24 0 .4.16.4.4zm.48-11.76L9.84.06c-.16-.08-.32-.08-.48 0L.32 4.62C.16 4.7 0 4.86 0 5.1v1.52c0 .32.24.56.56.56h18.16c.32 0 .56-.24.56-.56V5.1c0-.16-.08-.4-.32-.48z"
    //       transform="translate(10 10)"
    //     />
    //   </g>
    // </svg>
    React__namespace.createElement("svg", __assign({ width: "16", height: "16", viewBox: "0 0 16 16" }, props, { xmlns: "http://www.w3.org/2000/svg" }),
        React__namespace.createElement("path", { fill: fillColor, d: "M7.27273 9.39131V10.087C7.27273 10.2957 7.12727 10.4348 6.90909 10.4348H6.18182C5.96364 10.4348 5.81818 10.2957 5.81818 10.087V9.39131C5.81818 9.18261 5.96364 9.04348 6.18182 9.04348H6.90909C7.12727 9.04348 7.27273 9.18261 7.27273 9.39131ZM6.90909 11.8261H6.18182C5.96364 11.8261 5.81818 11.9652 5.81818 12.1739V12.8696C5.81818 13.0783 5.96364 13.2174 6.18182 13.2174H6.90909C7.12727 13.2174 7.27273 13.0783 7.27273 12.8696V12.1739C7.27273 11.9652 7.12727 11.8261 6.90909 11.8261ZM6.90909 6.26087H6.18182C5.96364 6.26087 5.81818 6.4 5.81818 6.6087V7.30435C5.81818 7.51304 5.96364 7.65217 6.18182 7.65217H6.90909C7.12727 7.65217 7.27273 7.51304 7.27273 7.30435V6.6087C7.27273 6.4 7.12727 6.26087 6.90909 6.26087ZM9.81818 11.8261H9.09091C8.87273 11.8261 8.72727 11.9652 8.72727 12.1739V12.8696C8.72727 13.0783 8.87273 13.2174 9.09091 13.2174H9.81818C10.0364 13.2174 10.1818 13.0783 10.1818 12.8696V12.1739C10.1818 11.9652 10.0364 11.8261 9.81818 11.8261ZM4 9.04348H3.27273C3.05455 9.04348 2.90909 9.18261 2.90909 9.39131V10.087C2.90909 10.2957 3.05455 10.4348 3.27273 10.4348H4C4.21818 10.4348 4.36364 10.2957 4.36364 10.087V9.39131C4.36364 9.18261 4.21818 9.04348 4 9.04348ZM4 11.8261H3.27273C3.05455 11.8261 2.90909 11.9652 2.90909 12.1739V12.8696C2.90909 13.0783 3.05455 13.2174 3.27273 13.2174H4C4.21818 13.2174 4.36364 13.0783 4.36364 12.8696V12.1739C4.36364 11.9652 4.21818 11.8261 4 11.8261ZM12.7273 6.26087H12C11.7818 6.26087 11.6364 6.4 11.6364 6.6087V7.30435C11.6364 7.51304 11.7818 7.65217 12 7.65217H12.7273C12.9455 7.65217 13.0909 7.51304 13.0909 7.30435V6.6087C13.0909 6.4 12.9455 6.26087 12.7273 6.26087ZM12.7273 9.04348H12C11.7818 9.04348 11.6364 9.18261 11.6364 9.39131V10.087C11.6364 10.2957 11.7818 10.4348 12 10.4348H12.7273C12.9455 10.4348 13.0909 10.2957 13.0909 10.087V9.39131C13.0909 9.18261 12.9455 9.04348 12.7273 9.04348ZM9.81818 9.04348H9.09091C8.87273 9.04348 8.72727 9.18261 8.72727 9.39131V10.087C8.72727 10.2957 8.87273 10.4348 9.09091 10.4348H9.81818C10.0364 10.4348 10.1818 10.2957 10.1818 10.087V9.39131C10.1818 9.18261 10.0364 9.04348 9.81818 9.04348ZM9.81818 6.26087H9.09091C8.87273 6.26087 8.72727 6.4 8.72727 6.6087V7.30435C8.72727 7.51304 8.87273 7.65217 9.09091 7.65217H9.81818C10.0364 7.65217 10.1818 7.51304 10.1818 7.30435V6.6087C10.1818 6.4 10.0364 6.26087 9.81818 6.26087ZM16 1.3913V14.6087C16 15.3739 15.3455 16 14.5455 16H1.45455C0.654545 16 0 15.3739 0 14.6087V1.3913C0 0.626087 0.654545 0 1.45455 0V1.04348C1.45455 1.25217 1.6 1.3913 1.81818 1.3913H2.54545C2.76364 1.3913 2.90909 1.25217 2.90909 1.04348V0.347826C2.90909 0.13913 3.05455 0 3.27273 0H4C4.21818 0 4.36364 0.13913 4.36364 0.347826V1.04348C4.36364 1.25217 4.50909 1.3913 4.72727 1.3913H5.45455C5.67273 1.3913 5.81818 1.25217 5.81818 1.04348V0.347826C5.81818 0.13913 5.96364 0 6.18182 0H6.90909C7.12727 0 7.27273 0.13913 7.27273 0.347826V1.04348C7.27273 1.25217 7.41818 1.3913 7.63636 1.3913H8.36364C8.58182 1.3913 8.72727 1.25217 8.72727 1.04348V0.347826C8.72727 0.13913 8.87273 0 9.09091 0H9.81818C10.0364 0 10.1818 0.13913 10.1818 0.347826V1.04348C10.1818 1.25217 10.3273 1.3913 10.5455 1.3913H11.2727C11.4909 1.3913 11.6364 1.25217 11.6364 1.04348V0.347826C11.6364 0.13913 11.7818 0 12 0H12.7273C12.9455 0 13.0909 0.13913 13.0909 0.347826V1.04348C13.0909 1.25217 13.2364 1.3913 13.4545 1.3913H14.1818C14.4 1.3913 14.5455 1.25217 14.5455 1.04348V0C15.3455 0 16 0.626087 16 1.3913ZM14.5455 14.6087V4.86957H1.45455V14.6087H14.5455Z" })));
}

function CartIcon(_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: 20, height: 20, viewBox: "0 0 20 20" }, props),
        React__namespace.createElement("g", { transform: "translate(-10, -10)" },
            React__namespace.createElement("path", { fill: fillColor, d: "M17.9809072,27.9922839 C17.9809072,28.6307565 17.4222437,29.18942 16.7837712,29.18942 C16.1452986,29.18942 15.5866351,28.6307565 15.5866351,27.9922839 C15.5866351,27.3538113 16.1452986,26.7951478 16.7837712,26.7951478 C17.4222437,26.7951478 17.9809072,27.3538113 17.9809072,27.9922839 Z M24.7646784,26.7951478 C24.1262058,26.7951478 23.5675423,27.3538113 23.5675423,27.9922839 C23.5675423,28.6307565 24.1262058,29.18942 24.7646784,29.18942 C25.403151,29.18942 25.9618145,28.6307565 25.9618145,27.9922839 C25.9618145,27.3538113 25.403151,26.7951478 24.7646784,26.7951478 Z M29.9522681,13.8660781 L28.3560866,21.0488946 C28.1964685,21.6075581 27.7176141,22.0066035 27.1589506,22.0066035 L17.0231984,22.0066035 L17.3424347,23.6027849 L25.9618145,23.6027849 C26.4406689,23.6027849 26.7599052,23.9220212 26.7599052,24.4008756 L26.7599052,25.1989664 C26.7599052,25.6778208 26.4406689,25.9970571 25.9618145,25.9970571 L16.3847258,25.9970571 C15.8260623,25.9970571 15.3472078,25.5980117 15.1875897,25.0393482 L12.6336994,13.2276055 L10.7980907,13.2276055 C10.3192363,13.2276055 10,12.9083692 10,12.4295148 L10,11.6314241 C10,11.1525696 10.3192363,10.8333333 10.7980907,10.8333333 L13.5914083,10.8333333 C14.1500718,10.8333333 14.6289262,11.2323787 14.7885443,11.7910422 L14.9481625,12.4295148 L28.8349411,12.4295148 C29.2339864,12.4295148 29.5532227,12.5891329 29.7926499,12.9083692 C30.0320772,13.2276055 30.0320772,13.5468418 29.9522681,13.8660781 Z M27.2387596,14.823787 L15.4270169,14.823787 L16.4645349,19.6123313 L26.2012417,19.6123313 L27.2387596,14.823787 Z", id: "Icons-/-cart" }))));
}

var CheckIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M23.181 4.914l-14.2 16c-.4.4-1.1.5-1.5 0l-7.2-7.6c-.3-.4-.4-.9-.1-1.3l1-1.2c.3-.4.8-.5 1.2-.3l5.3 2.6 12.8-10.9c.4-.3 1-.3 1.4.1l1.2 1.2c.4.4.4 1 .1 1.4z", fill: fillColor, fillRule: "evenodd" })));
};

function ChevronDownIcon(_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, _c = _a.isFlip, isFlip = _c === void 0 ? false : _c, props = __rest(_a, ["fillColor", "isFlip"]);
    return (React__namespace.createElement("svg", __assign({ width: 8, height: 6, viewBox: "0 0 8 6" }, props),
        React__namespace.createElement("path", { fill: fillColor, d: "M7.946 1.376L4.253 5.22c-.144.151-.362.151-.506 0L.054 1.376c-.072-.076-.072-.189 0-.264L1.068.057c.072-.076.18-.076.253 0L4 2.846 6.679.056c.072-.075.18-.075.253 0l1.014 1.056c.072.075.072.188 0 .264z", transform: "rotate(" + (isFlip ? 180 : 0) + ", 4, 3)" })));
}

var ChevronLeftIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M18.852 19.367c.197.199.197.497 0 .696l-2.77 2.788c-.199.199-.495.199-.693 0L5.297 12.697a.966.966 0 010-1.394L15.389 1.15c.198-.199.494-.199.692 0l2.77 2.788c.198.199.198.497 0 .696L11.53 12l7.322 7.367z", fill: fillColor, fillRule: "evenodd" })));
};

var ChevronRightIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M18.703 12.697L8.611 22.85c-.198.199-.494.199-.692 0l-2.77-2.788a.483.483 0 010-.696L12.47 12 5.148 4.633a.483.483 0 010-.696l2.77-2.788c.199-.199.495-.199.693 0l10.092 10.154a.966.966 0 010 1.394z", fill: fillColor, fillRule: "evenodd" })));
};

var CircleAlertIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("g", { fill: "none", fillRule: "evenodd" },
            React__namespace.createElement("path", { d: "M12 0C5.4 0 0 5.4 0 12s5.4 12 12 12 12-5.4 12-12S18.6 0 12 0zm2 18c0 .6-.4 1-1 1h-2c-.6 0-1-.4-1-1v-2c0-.6.4-1 1-1h2c.6 0 1 .4 1 1v2zm0-9l-.9 4.6c0 .2-.3.4-.5.4h-1.2c-.2 0-.4-.2-.5-.4L10 9V6c0-.6.4-1 1-1h2c.6 0 1 .4 1 1v3z", fill: fillColor, fillRule: "nonzero" }))));
};

function CircleCheckIcon(_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__default['default'].createElement("svg", __assign({ xmlns: "http://www.w3.org/2000/svg", width: 20, height: 20, viewBox: "0 0 20 20" }, props),
        React__default['default'].createElement("g", { fill: "none", fillRule: "evenodd" },
            React__default['default'].createElement("g", { fill: fillColor, fillRule: "nonzero" },
                React__default['default'].createElement("path", { d: "M10 0C4.5 0 0 4.5 0 10s4.5 10 10 10 10-4.5 10-10S15.5 0 10 0zm5.5 7l-6.083 7.167c-.334.416-.917.416-1.25 0l-3.25-3.584c-.167-.166-.167-.416 0-.583l.916-1c.167-.167.334-.167.5-.083L8.5 10.333l5.5-4.75c.167-.166.417-.166.583 0l.834.834c.166.166.166.416.083.583z", transform: "translate(-1157 -374) translate(1157 374)" })))));
}

var CircleEmptyInfoIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M14.9 5.6l-.3 2c0 .2-.2.4-.5.4h-2.5c-.3 0-.5-.3-.5-.6l.3-2c0-.2.2-.4.5-.4h2.5c.3 0 .6.3.5.6zM24 12c0 6.6-5.4 12-12 12S0 18.6 0 12 5.4 0 12 0s12 5.4 12 12zm-3 0c0-5-4-9-9-9s-9 4-9 9 4 9 9 9 9-4 9-9zm-8-3H9.9c-.2 0-.4.2-.5.4l-.2 1c-.1.3.2.6.5.6h.8l-1.8 6.1c-.3 1.1.3 1.9 1.4 1.9h3.6c.2 0 .4-.2.5-.4l.2-1c.1-.3-.2-.6-.5-.6h-1.3l1.8-6.1c.3-1-.3-1.9-1.4-1.9z", fill: fillColor, fillRule: "nonzero" })));
};

var CircleEmptyQuestionIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M12 0C5.4 0 0 5.4 0 12s5.4 12 12 12 12-5.4 12-12S18.6 0 12 0zm0 21c-5 0-9-4-9-9s4-9 9-9 9 4 9 9-4 9-9 9zm2-5v2c0 .6-.4 1-1 1h-2c-.6 0-1-.4-1-1v-2c0-.6.4-1 1-1h2c.6 0 1 .4 1 1zm2.8-7v.1c0 1.4-.9 2.1-2 2.8-1 .7-1.3 1.3-1.5 1.7-.1.2-.3.3-.5.3h-2.1c-.3 0-.5-.3-.5-.6.1-.5.2-1.1.7-1.6.8-.9 2-1.7 2.3-1.9.3-.2.5-.5.5-.8 0-.6-.4-1-1-1h-1.5c-.6 0-1 .4-1 1s-.4 1-1 1h-1c-.6 0-1-.4-1-1 0-2.2 1.8-4 4-4h1.5c2.3 0 4.1 1.2 4.1 4z", fill: fillColor, fillRule: "evenodd" })));
};

var CircleQuestionIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M12 0C5.4 0 0 5.4 0 12s5.4 12 12 12 12-5.4 12-12S18.6 0 12 0zm2 18c0 .6-.4 1-1 1h-2c-.6 0-1-.4-1-1v-2c0-.6.4-1 1-1h2c.6 0 1 .4 1 1v2zm2.8-8.9c0 1.593-.9 2.1-2 2.8-1 .7-1.3 1.3-1.5 1.7-.1.2-.3.3-.5.3h-2.1c-.3 0-.5-.3-.5-.6.1-.5.2-1.1.7-1.6.8-.9 2-1.7 2.3-1.9.3-.2.5-.5.5-.8v-.1c0-.6-.4-1-1-1h-1.5c-.6 0-1 .4-1 1s-.4 1-1 1h-1c-.6 0-1-.4-1-1 0-2.2 1.8-4 4-4h1.5c2.3 0 4.042 1.734 4.1 4.2z", fill: fillColor, fillRule: "evenodd" })));
};

var CloudDownloadIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M24 13.09c0 1.56-.606 3.12-1.646 4.332-1.127 1.3-2.86 1.733-3.986 1.733h-.866v-2.599h.866c.607 0 1.56-.26 2.08-.866.606-.694 1.04-1.647 1.04-2.6a4.29 4.29 0 00-4.333-4.332c-.173 0-.866.087-1.3.173-.173 0-.433-.086-.433-.26l-.173-.52c-.693-1.992-2.34-3.465-4.419-3.638-3.119-.347-5.718 2.166-5.718 5.198 0 .347.087.78.173 1.213l.173.78c.087.26-.086.433-.26.52l-.78.26c-1.126.346-1.819 1.3-1.819 2.512 0 .347.087.694.347 1.04.26.347.953.693 1.56.693h1.992v2.6H4.505c-1.473 0-2.945-.694-3.639-1.733-.52-.78-.866-1.647-.866-2.6 0-1.906 1.04-3.639 2.6-4.505v-.693A7.765 7.765 0 0110.396 2c2.946 0 5.719 1.733 7.018 4.332C20.881 6.16 24 9.278 24 13.09zm-8.838 4.332H13.17v-4.765c0-.26-.174-.433-.434-.433h-1.732c-.26 0-.434.173-.434.433v4.765H8.578c-.347 0-.52.434-.347.694l3.292 4.505c.174.26.52.26.694 0l3.292-4.505c.173-.26 0-.694-.347-.694z", fill: fillColor, fillRule: "evenodd" })));
};

var ClusterIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M24 21.012C24 22.705 22.7 24 21 24s-3-1.295-3-2.988c0-.497.1-.896.3-1.294l-4-3.984c-.4.2-.8.3-1.3.3s-1-.1-1.4-.4l-4.8 4.183c.1.399.2.698.2 1.096C7 22.606 5.7 23.9 4 23.9s-3-1.294-3-2.987 1.3-2.988 3-2.988c.5 0 1 .1 1.4.399l4.8-4.283c-.1-.298-.2-.697-.2-1.095v-.1l-4.8-1.892c-.5.598-1.3.996-2.2.996-1.7 0-3-1.294-3-2.987s1.3-2.988 3-2.988S6 7.27 6 8.963v.1l4.8 1.891c.1-.199.3-.298.5-.398l-1.4-4.58C8.3 5.875 7 4.58 7 2.987 7 1.295 8.3 0 10 0s3 1.295 3 2.988c0 .995-.5 1.892-1.2 2.39l1.4 4.58c.4 0 .8.1 1.1.3l4-3.984c-.2-.398-.3-.797-.3-1.295 0-1.693 1.3-2.987 3-2.987s3 1.294 3 2.987-1.3 2.988-3 2.988c-.5 0-.9-.1-1.3-.299l-4 3.983c.2.399.3.797.3 1.295 0 .498-.1.896-.3 1.295l4 3.983c.4-.2.8-.299 1.3-.299 1.7.1 3 1.395 3 3.087z", fill: fillColor, fillRule: "evenodd" })));
};

var CopyIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M13 15c0-.4-.1-.7-.3-1h6.8c.3 0 .5.2.5.5v1c0 .3-.2.5-.5.5H13v-1zm6.5 3H13v2h6.5c.3 0 .5-.2.5-.5v-1c0-.3-.2-.5-.5-.5zm.5-6.5v-1c0-.3-.2-.5-.5-.5h-8c-.3 0-.5.2-.5.5v1c0 .3.2.5.5.5h8c.3 0 .5-.2.5-.5zM22 4h-2V3c0-.6-.4-1-1-1h-1c0-1.1-.9-2-2-2h-1c-1.1 0-2 .9-2 2h-1c-.6 0-1 .4-1 1v1H9c-1.1 0-2 .9-2 2v3c.5 0 1 .2 1.4.6l.6.6V6h2v1c0 .6.4 1 1 1h7c.6 0 1-.4 1-1V6h2v16h-9v1c0 .4-.1.7-.2 1H22c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zM7 14.5c0 .3.2.5.5.5H11l-4-4v3.5zM5 16v-5H1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h9c.6 0 1-.4 1-1v-6H6c-.6 0-1-.4-1-1z", fill: fillColor, fillRule: "evenodd" })));
};

function DoorIcon(_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__default['default'].createElement("svg", __assign({ xmlns: "http://www.w3.org/2000/svg", width: "15", height: "16", viewBox: "0 0 15 16" }, props),
        React__default['default'].createElement("path", { fill: fillColor, d: "M13.396 8.561L6.382 8c-.42 0-.701.28-.771.631V23.36c0 .35.35.701.771.631l7.014-.561c.35 0 .631-.35.631-.701V9.262c0-.35-.28-.63-.631-.7zm-5.681 8.487c-.42 0-.701-.281-.701-.702 0-.42.28-.701.7-.701.422 0 .702.28.702.701 0 .421-.28.702-.701.702zM1.403 8.63h2.805v1.403H1.403v11.923h2.805v1.403H1.403C.63 23.36 0 22.729 0 21.957V10.034C0 9.262.631 8.63 1.403 8.63z", transform: "translate(-1447 -264) translate(1447 256)" })));
}

function ExchangeIcon(_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M23.5683 5.14289L17.3321 0.214483C16.6605 -0.321213 15.797 0.214483 15.797 1.0716V3H11V9H15.797V10.9284C15.797 11.7855 16.6605 12.3212 17.3321 11.7855L23.5683 6.85711C24.1439 6.42856 24.1439 5.57144 23.5683 5.14289ZM3 4.2V7.8C3 8.52 3.4 9 4 9H5V3H4C3.4 3 3 3.48 3 4.2ZM7 3H9V9H7V3ZM21 19.8V16.2C21 15.48 20.6 15 20 15H19V21H20C20.6 21 21 20.52 21 19.8ZM15 21H17V15H15V21ZM6.6679 23.7855L0.431734 18.8571C-0.143911 18.4286 -0.143911 17.5714 0.431734 17.1429L6.6679 12.2145C7.33948 11.6788 8.20295 12.2145 8.20295 13.0716L8.20295 15H13V21H8.20295V22.9284C8.20295 23.7855 7.33948 24.3212 6.6679 23.7855Z", fill: fillColor })));
}

var FilterIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "24", height: "24", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { fill: fillColor, fillRule: "evenodd", clipRule: "evenodd", d: "M23 1.02468V2.66418C23 2.86911 22.9 3.17652 22.7 3.38145L15 12.2962V18.9566C15 19.264 14.9 19.5714 14.6 19.7764L9.8 23.8751C9.5 24.1825 9 23.8751 9 23.4652V12.2962L1.3 3.38145C1.1 3.17652 1 2.97158 1 2.66418V1.02468C1 0.409873 1.4 0 2 0H22C22.6 0 23 0.409873 23 1.02468Z" })));
};

var styles$B = {"flag":"FlagIcon_flag___ifYBR","skeleton":"FlagIcon_skeleton___BPRxq"};

var img$45 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/abkhazia%3c/title%3e %3cg id='flags/abkhazia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-abkhazia' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(1.632500%2c 0.000000)' fill='%236DA544'%3e %3cpath d='M270.32875%2c45.715 C241.470625%2c17.44 201.959375%2c0 158.3675%2c0 C144.454375%2c0 103.74625%2c17.44 74.889375%2c45.715 L270.32875%2c45.715 Z' id='Path'%3e%3c/path%3e %3cpath d='M158.3675%2c137.143125 L316.735%2c137.143125 C314.42625%2c121.0025 309.711875%2c105.64 302.96125%2c91.42875 L151.41125%2c91.42875 L158.3675%2c137.143125 Z' id='Path'%3e%3c/path%3e %3cpath d='M13.774375%2c228.571875 L302.960625%2c228.571875 C309.711875%2c214.36125 314.42625%2c198.9975 316.735%2c182.856875 L2.10942375e-14%2c182.856875 C2.309375%2c198.998125 7.0225%2c214.361875 13.774375%2c228.571875 Z' id='Path'%3e%3c/path%3e %3cpath d='M46.40625%2c274.285 C75.264375%2c302.56 114.775625%2c320 158.3675%2c320 C201.959375%2c320 241.470625%2c302.56 270.32875%2c274.285 L46.40625%2c274.285 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M160%2c0 C79.39625%2c0 12.725%2c59.606875 1.6325%2c137.143125 L160%2c137.143125 L160%2c0 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cg id='Group' transform='translate(34.782500%2c 45.217500)' fill='%23F0F0F0'%3e %3cpolygon id='Path' points='45.2175 77.449375 38.26125 63.536875 38.26125 35.710625 55.6525 21.7975 73.04375 35.710625 73.04375 56.58 80 49.62375 80 63.536875 66.086875 77.449375'%3e%3c/polygon%3e %3cpolygon id='Path' points='7.801875 34.7825 9.64375 40.45125 15.60375 40.45125 10.781875 43.955625 12.624375 49.62375 7.801875 46.12 2.979375 49.62375 4.821875 43.955625 0 40.45125 5.96 40.45125'%3e%3c/polygon%3e %3cpolygon id='Path' points='21.715 20.869375 23.556875 26.538125 29.5175 26.538125 24.695 30.0425 26.536875 35.710625 21.715 32.2075 16.893125 35.710625 18.735625 30.0425 13.913125 26.538125 19.8725 26.538125'%3e%3c/polygon%3e %3cpolygon id='Path' points='35.628125 6.95625 37.47 12.625 43.429375 12.625 38.608125 16.129375 40.449375 21.7975 35.628125 18.294375 30.805625 21.7975 32.6475 16.129375 27.82625 12.625 33.785625 12.625'%3e%3c/polygon%3e %3cpolygon id='Path' points='103.5025 34.7825 101.660625 40.45125 95.70125 40.45125 100.5225 43.955625 98.680625 49.62375 103.5025 46.12 108.325 49.62375 106.483125 43.955625 111.304375 40.45125 105.345 40.45125'%3e%3c/polygon%3e %3cpolygon id='Path' points='89.589375 20.869375 87.7475 26.538125 81.788125 26.538125 86.609375 30.0425 84.7675 35.710625 89.589375 32.2075 94.411875 35.710625 92.569375 30.0425 97.39125 26.538125 91.431875 26.538125'%3e%3c/polygon%3e %3cpolygon id='Path' points='75.676875 6.95625 73.834375 12.625 67.875 12.625 72.69625 16.129375 70.854375 21.7975 75.676875 18.294375 80.49875 21.7975 78.656875 16.129375 83.478125 12.625 77.51875 12.625'%3e%3c/polygon%3e %3cpolygon id='Path' points='55.6525 -8.8817842e-15 53.81 5.66875 47.850625 5.66875 52.671875 9.1725 50.83 14.840625 55.6525 11.3375 60.474375 14.840625 58.6325 9.1725 63.45375 5.66875 57.494375 5.66875'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$44 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/afghanistan%3c/title%3e %3cg id='flags/afghanistan' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-afghanistan' fill-rule='nonzero'%3e %3cpath d='M229.565%2c15.87625 C208.53%2c5.705 184.93125%2c0 160%2c0 C135.06875%2c0 111.47%2c5.705 90.435%2c15.87625 L76.521875%2c160 L90.435%2c304.12375 C111.47%2c314.295 135.06875%2c320 160%2c320 C184.93125%2c320 208.53%2c314.295 229.565%2c304.12375 L243.478125%2c160 L229.565%2c15.87625 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M90.435%2c15.881875 C36.91625%2c41.76125 0%2c96.566875 0%2c160 C0%2c223.433125 36.91625%2c278.23875 90.435%2c304.118125 L90.435%2c15.881875 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M229.565%2c15.881875 L229.565%2c304.118125 C283.08375%2c278.23875 320%2c223.433125 320%2c160 C320%2c96.566875 283.08375%2c41.76125 229.565%2c15.881875 Z' id='Path' fill='%23496E2D'%3e%3c/path%3e %3cg id='Group' transform='translate(104.348125%2c 104.348125)' fill='%23FFDA44'%3e %3cpath d='M55.651875%2c0 C24.915625%2c0 0%2c24.91625 0%2c55.651875 C0%2c86.3875 24.91625%2c111.30375 55.651875%2c111.30375 C86.3875%2c111.30375 111.30375%2c86.3875 111.30375%2c55.651875 C111.30375%2c24.91625 86.388125%2c0 55.651875%2c0 Z M55.651875%2c90.434375 C36.441875%2c90.434375 20.869375%2c74.86125 20.869375%2c55.651875 C20.869375%2c36.4425 36.4425%2c20.869375 55.651875%2c20.869375 C74.86125%2c20.869375 90.434375%2c36.4425 90.434375%2c55.651875 C90.434375%2c74.86125 74.861875%2c90.434375 55.651875%2c90.434375 Z' id='Shape'%3e%3c/path%3e %3cpath d='M55.651875%2c34.7825 C47.9675%2c34.7825 41.73875%2c41.01125 41.73875%2c48.695625 L41.73875%2c69.565 L69.565%2c69.565 L69.565%2c48.695625 C69.565%2c41.01125 63.33625%2c34.7825 55.651875%2c34.7825 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$43 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/aland-islands%3c/title%3e %3cg id='flags/aland-islands' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-aland-islands' fill-rule='nonzero'%3e %3cpath d='M314.488125%2c201.739375 C318.075%2c188.430625 320%2c174.441875 320%2c160 C320%2c145.558125 318.075%2c131.569375 314.488125%2c118.260625 L146.086875%2c0.60875 C114.82375%2c3.3025 86.134375%2c14.98375 62.60875%2c33.059375 L5.511875%2c118.260625 C1.925%2c131.569375 0%2c145.558125 0%2c160 C0%2c174.3575 1.901875%2c188.269375 5.44875%2c201.508125 L62.608125%2c286.940625 C86.13375%2c305.01625 114.823125%2c316.698125 146.08625%2c319.39125 L314.488125%2c201.739375 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cg id='Group' transform='translate(5.511875%2c 0.000000)' fill='%230052B4'%3e %3cpath d='M7.77156117e-15%2c201.739375 C9.2575%2c236.08875 29.660625%2c265.86 57.096875%2c286.940625 L57.096875%2c201.739375 L7.77156117e-15%2c201.739375 Z' id='Path'%3e%3c/path%3e %3cpath d='M140.575%2c319.39125 C145.16125%2c319.78625 149.799375%2c320 154.488125%2c320 C228.4125%2c320 290.61625%2c269.861875 308.97625%2c201.739375 L140.575%2c201.739375 L140.575%2c319.39125 Z' id='Path'%3e%3c/path%3e %3cpath d='M308.97625%2c118.260625 C290.61625%2c50.138125 228.4125%2c0 154.488125%2c0 C149.799375%2c0 145.16125%2c0.21375 140.575%2c0.60875 L140.575%2c118.260625 L308.97625%2c118.260625 Z' id='Path'%3e%3c/path%3e %3cpath d='M57.096875%2c33.059375 C29.660625%2c54.140625 9.2575%2c83.91125 8.8817842e-15%2c118.260625 L57.096875%2c118.260625 L57.096875%2c33.059375 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M318.645625%2c139.130625 L125.218125%2c139.130625 L125.2175%2c139.130625 L125.2175%2c3.803125 C110.43125%2c7.081875 96.413125%2c12.39625 83.478125%2c19.454375 L83.478125%2c139.13 L83.478125%2c139.13 L1.354375%2c139.13 C0.46375%2c145.961875 0%2c152.926875 0%2c160 C0%2c167.073125 0.46375%2c174.038125 1.354375%2c180.869375 L83.4775%2c180.869375 L83.478125%2c180.869375 L83.478125%2c300.545 C96.413125%2c307.6025 110.43125%2c312.918125 125.2175%2c316.19625 L125.2175%2c180.87125 L125.2175%2c180.87 L318.645625%2c180.87 C319.535%2c174.038125 320%2c167.073125 320%2c160 C320%2c152.926875 319.535%2c145.961875 318.645625%2c139.130625 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$42 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/albania%3c/title%3e %3cg id='flags/albania' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-albania' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23D80027' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M250.435%2c118.755625 L192.48125%2c118.755625 C196.05875%2c115.009375 198.260625%2c109.9375 198.260625%2c104.348125 C198.260625%2c92.8225 188.916875%2c83.47875 177.39125%2c83.47875 C170.13%2c83.47875 163.738125%2c87.18875 160%2c92.814375 C156.261875%2c87.18875 149.869375%2c83.47875 142.60875%2c83.47875 C131.083125%2c83.47875 121.739375%2c92.8225 121.739375%2c104.348125 C121.739375%2c109.9375 123.94125%2c115.01 127.51875%2c118.755625 L69.565625%2c118.755625 C69.565625%2c134.12375 82.95125%2c146.58125 98.318125%2c146.58125 L97.390625%2c146.58125 C97.390625%2c161.95 109.84875%2c174.408125 125.2175%2c174.408125 C125.2175%2c179.385625 126.529375%2c184.051875 128.819375%2c188.091875 L105.738125%2c211.17375 L123.446875%2c228.88125 L148.566875%2c203.761875 C149.550625%2c204.1225 150.56875%2c204.411875 151.62%2c204.60875 L136.440625%2c238.880625 L160%2c264.348125 L183.559375%2c238.879375 L168.38%2c204.6075 C169.431875%2c204.410625 170.449375%2c204.121875 171.433125%2c203.760625 L196.553125%2c228.88 L214.261875%2c211.171875 L191.18%2c188.09 C193.470625%2c184.050625 194.7825%2c179.38375 194.7825%2c174.40625 C210.150625%2c174.40625 222.60875%2c161.94875 222.60875%2c146.579375 L221.681875%2c146.579375 C237.04875%2c146.580625 250.435%2c134.12375 250.435%2c118.755625 Z' id='Path' fill='black'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$41 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/algeria%3c/title%3e %3cg id='flags/algeria' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-algeria' transform='translate(0.000000%2c 0.000000)' fill-rule='nonzero'%3e %3cpath d='M160%2c0 C248.365%2c0 320%2c71.635 320%2c160 C320%2c248.365 248.365%2c320 160%2c320 C160%2c313.04375 139.130625%2c160 139.130625%2c160 L160%2c0 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cpath d='M160%2c320 C71.635%2c320 0%2c248.365 0%2c160 C0%2c71.635 71.635%2c0 160%2c0' id='Path' fill='%23496E2D'%3e%3c/path%3e %3cg id='Group' transform='translate(100.230000%2c 104.347500)' fill='%23D80027'%3e %3cpolygon id='Path' points='94.146875 24.9625 81.019375 43.053125 59.75875 36.158125 72.9075 54.233125 59.78125 72.32375 81.03375 65.404375 94.1825 83.47875 94.16875 61.128125 115.421875 54.208125 94.161875 47.314375'%3e%3c/polygon%3e %3cpath d='M73.043125%2c100.87 C48.070625%2c100.87 27.825625%2c80.625 27.825625%2c55.6525 C27.825625%2c30.68 48.070625%2c10.435 73.043125%2c10.435 C80.829375%2c10.435 88.15625%2c12.40375 94.5525%2c15.87 C84.5175%2c6.056875 70.795%2c-1.77635684e-14 55.651875%2c-1.77635684e-14 C24.915625%2c-1.77635684e-14 0%2c24.91625 0%2c55.651875 C0%2c86.3875 24.91625%2c111.30375 55.651875%2c111.30375 C70.795625%2c111.30375 84.518125%2c105.246875 94.5525%2c95.43375 C88.15625%2c98.90125 80.829375%2c100.87 73.043125%2c100.87 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$40 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/andorra%3c/title%3e %3cg id='flags/andorra' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-andorra' fill-rule='nonzero'%3e %3cpath d='M90.435%2c304.12375 C111.47%2c314.295 135.068125%2c320 160%2c320 C184.931875%2c320 208.53%2c314.295 229.565%2c304.12375 L243.478125%2c160 L229.565%2c15.87625 C208.53%2c5.705 184.931875%2c0 160%2c0 C135.068125%2c0 111.47%2c5.705 90.435%2c15.87625 L76.521875%2c160 L90.435%2c304.12375 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M229.565%2c304.118125 C283.084375%2c278.239375 320%2c223.433125 320%2c160 C320%2c96.566875 283.084375%2c41.760625 229.565%2c15.881875 L229.565%2c304.118125 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M90.435%2c304.118125 L90.435%2c15.881875 C36.915625%2c41.760625 0%2c96.56625 0%2c160 C0%2c223.43375 36.915625%2c278.239375 90.435%2c304.118125 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cg id='Group' transform='translate(118.260625%2c 118.260625)' fill='%23D80027'%3e %3cpath d='M41.739375%2c97.39125 C41.739375%2c71.859375 41.739375%2c41.739375 41.739375%2c41.739375 L83.47875%2c41.739375 L83.47875%2c62.60875 C83.47875%2c66.234375 76.5225%2c79.519375 59.351875%2c90.435 C52.84875%2c94.57 46.116875%2c95.9 41.739375%2c97.39125 Z' id='Path'%3e%3c/path%3e %3crect id='Rectangle' x='1.77635684e-14' y='1.77635684e-14' width='41.739375' height='41.739375'%3e%3c/rect%3e %3c/g%3e %3cpath d='M180.869375%2c104.348125 C180.869375%2c96.66375 174.64%2c90.435 166.95625%2c90.435 C164.41875%2c90.435 162.0475%2c91.125 160%2c92.31125 C157.951875%2c91.125 155.58125%2c90.435 153.04375%2c90.435 C145.36%2c90.435 139.130625%2c96.66375 139.130625%2c104.348125 L104.348125%2c104.348125 L104.348125%2c173.9125 C104.348125%2c199.81 124.914375%2c214.786875 141.0425%2c222.550625 C139.835625%2c224.611875 139.130625%2c227.00375 139.130625%2c229.565625 C139.130625%2c237.25 145.36%2c243.47875 153.04375%2c243.47875 C155.58125%2c243.47875 157.9525%2c242.78875 160%2c241.6025 C162.048125%2c242.78875 164.41875%2c243.47875 166.95625%2c243.47875 C174.64%2c243.47875 180.869375%2c237.25 180.869375%2c229.565625 C180.869375%2c227.00375 180.164375%2c224.611875 178.956875%2c222.550625 C195.085%2c214.786875 215.651875%2c199.810625 215.651875%2c173.9125 L215.651875%2c104.348125 L180.869375%2c104.348125 Z M194.7825%2c173.9125 C194.7825%2c177.538125 194.7825%2c188.57 177.6125%2c199.48625 C171.10875%2c203.62125 164.3775%2c206.3025 160%2c207.793125 C155.6225%2c206.3025 148.89125%2c203.62125 142.3875%2c199.48625 C125.2175%2c188.57 125.2175%2c177.538125 125.2175%2c173.9125 L125.2175%2c125.2175 L194.7825%2c125.2175 L194.7825%2c173.9125 Z' id='Shape' fill='%23FF9811'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3$ = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/angola%3c/title%3e %3cg id='flags/angola' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-angola' fill-rule='nonzero'%3e %3cpath d='M0%2c160 C0%2c71.635 71.635%2c0 160%2c0 C248.365%2c0 320%2c71.635 320%2c160 C313.04375%2c160 160%2c180.869375 160%2c180.869375 L0%2c160 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M320%2c160 C320%2c248.365 248.365%2c320 160%2c320 C71.635%2c320 0%2c248.365 0%2c160' id='Path' fill='black'%3e%3c/path%3e %3cg id='Group' transform='translate(93.250000%2c 80.026753)' fill='%23FFDA44'%3e %3cpolygon id='Path' points='44.81125 47.2307473 58.375 57.0744973 53.20625 73.0169973 66.76 63.1569973 80.325 73.0007473 75.13625 57.0632473 88.68875 47.2044973 71.929375 47.2144973 66.74 31.2776223 61.570625 47.2201223'%3e%3c/polygon%3e %3cpath d='M106.75%2c10.6913723 C94.141875%2c3.41199727 80.35625%2c-0.0236277256 66.75%2c0 L66.75%2c20.8651223 C76.806875%2c20.8469973 86.995625%2c23.3844973 96.315%2c28.7657473 C124.55125%2c45.0682473 134.260625%2c81.3032473 117.9575%2c109.539497 C101.655625%2c137.775747 65.42125%2c147.485122 37.184375%2c131.182622 C28.958125%2c126.433247 22.3175%2c119.984497 17.4225%2c112.542622 L-3.55271368e-14%2c124.045122 C6.623125%2c134.113247 15.620625%2c142.830122 26.75%2c149.255122 C64.9525%2c171.311372 113.975625%2c158.175747 136.03125%2c119.973247 C158.0875%2c81.7707473 144.9525%2c32.7476223 106.75%2c10.6913723 Z' id='Path'%3e%3c/path%3e %3cpath d='M20.61875%2c66.0601223 C15.0875%2c76.1719973 18.80125%2c88.8538723 28.9125%2c94.3851223 L96.693125%2c131.422622 C92.08375%2c139.848247 94.531875%2c150.103872 102.9575%2c154.713247 L121.266875%2c164.728872 C129.6925%2c169.338872 140.261875%2c166.243872 144.87125%2c157.817622 L154.886875%2c139.508872 L20.61875%2c66.0601223 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3_ = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/anguilla%3c/title%3e %3cg id='flags/anguilla' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-anguilla'%3e %3cpath d='M320%2c160.156098 C320%2c248.434888 248.365%2c320 160%2c320 C71.635%2c320 0%2c248.434888 0%2c160.156098 C0%2c160.194185 160%2c0.329678049 160%2c0.312195122 C248.365%2c0.312195122 320%2c71.8773073 320%2c160.156098 Z' id='Path' fill='%230052B4' fill-rule='nonzero'%3e%3c/path%3e %3cg id='Group' fill='%23F0F0F0' fill-rule='nonzero'%3e %3cpath d='M160%2c0.312195122 C159.99%2c0.312195122 159.9825%2c0.312195122 159.973125%2c0.312195122 L160%2c0.312195122 L160%2c0.312195122 Z' id='Path'%3e%3c/path%3e %3cpath d='M159.571875%2c160.156098 L160%2c160.156098 C160%2c160.012488 160%2c159.872624 160%2c159.72839 C159.8575%2c159.871376 159.715%2c160.013737 159.571875%2c160.156098 Z' id='Path'%3e%3c/path%3e %3cpath d='M160.000625%2c83.708878 C160.000625%2c55.5832195 160.000625%2c37.1543415 160.000625%2c0.312195122 L159.973125%2c0.312195122 C71.619375%2c0.327180488 0%2c71.8854244 0%2c160.156098 L83.478125%2c160.156098 L83.478125%2c113.195083 L130.485%2c160.156098 L159.5725%2c160.156098 C159.715%2c160.013737 159.8575%2c159.871376 160.000625%2c159.72839 C160.000625%2c148.959532 160.000625%2c139.35079 160.000625%2c130.671141 L112.9925%2c83.708878 L160.000625%2c83.708878 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(20.869375%2c 21.161210)' fill='%23D80027' fill-rule='nonzero'%3e %3cpath d='M60.0775%2c4.43655952e-15 C35.053125%2c14.2354732 14.24875%2c35.0189268 4.4408921e-15%2c60.0188878 L4.4408921e-15%2c138.994888 L41.739375%2c138.994888 L41.739375%2c41.6999024 L41.739375%2c41.6986537 L139.130625%2c41.6986537 C139.130625%2c28.547122 139.130625%2c16.0181073 139.130625%2c4.43655952e-15 L60.0775%2c4.43655952e-15 Z' id='Path'%3e%3c/path%3e %3cpath d='M139.130625%2c119.338459 L82.28375%2c62.5482927 L62.60875%2c62.5482927 L62.60875%2c62.5495415 L139.129375%2c138.994888 L139.130625%2c138.994888 C139.130625%2c138.994888 139.130625%2c125.441249 139.130625%2c119.338459 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(0.000000%2c 0.312195)'%3e%3c/g%3e %3cpath d='M270.586875%2c183.554498 C275.1875%2c177.230673 278.260625%2c169.508215 278.260625%2c160.156098 L278.260625%2c90.6589659 C272.446875%2c95.0222049 265.221875%2c97.6084293 257.39125%2c97.6084293 C246.0125%2c97.6084293 235.910625%2c92.1493854 229.565%2c83.7101268 C223.21875%2c92.1493854 213.116875%2c97.6084293 201.73875%2c97.6084293 C193.9075%2c97.6084293 186.6825%2c95.0215805 180.869375%2c90.6602146 L180.869375%2c160.156098 C180.869375%2c169.508215 183.9425%2c177.230673 188.543125%2c183.554498 L270.586875%2c183.554498 Z' id='Path' fill='%23F3F3F3' fill-rule='nonzero'%3e%3c/path%3e %3cg id='Group' transform='translate(198.260625%2c 103.074966)' fill='%23FF9811' fill-rule='nonzero'%3e %3cpath d='M57.855%2c44.1880976 C60.07%2c38.7896195 61.7925%2c30.8992 61.7925%2c26.9724098 C61.7925%2c20.6629463 53.55875%2c15.5485659 53.55875%2c15.5485659 C53.55875%2c15.5485659 45.325%2c20.6629463 45.325%2c26.9724098 C45.325%2c30.8998244 47.048125%2c38.7902439 49.261875%2c44.1880976 L44.50875%2c54.9095024 C47.3025%2c56.0446439 50.35625%2c56.675278 53.559375%2c56.675278 C56.7625%2c56.675278 59.815625%2c56.0440195 62.61%2c54.9095024 L57.855%2c44.1880976 Z' id='Path'%3e%3c/path%3e %3cpath d='M25.673125%2c9.47262439 C19.888125%2c10.2556098 12.18625%2c12.7125854 8.7825%2c14.6756683 C3.313125%2c17.8307122 2.995625%2c27.5106341 2.995625%2c27.5106341 C2.995625%2c27.5106341 11.546875%2c32.0768 17.015625%2c28.9223805 C20.420625%2c26.9586732 26.398125%2c21.5239805 29.96875%2c16.9084878 L41.64125%2c15.6597073 C41.228125%2c12.6763707 40.245625%2c9.71863415 38.64625%2c6.94821463 C37.04375%2c4.17779512 34.971875%2c1.85006829 32.590625%2c0 L25.673125%2c9.47262439 Z' id='Path'%3e%3c/path%3e %3cpath d='M11.671875%2c54.6747317 C15.2425%2c59.2877268 21.221875%2c64.7217951 24.626875%2c66.6861268 C30.09625%2c69.8405463 38.646875%2c65.2756293 38.646875%2c65.2756293 C38.646875%2c65.2756293 38.328125%2c55.5944585 32.86%2c52.4394146 C29.454375%2c50.4757073 21.75375%2c48.0212293 15.9675%2c47.2394927 L9.050625%2c37.7656195 C6.67%2c39.6150634 4.5975%2c41.944039 2.995625%2c44.711961 C1.395%2c47.4836293 0.415%2c50.4401171 0%2c53.4253268 L11.671875%2c54.6747317 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M186.8225%2c181.006985 C199.815%2c201.833522 229.565625%2c208.804839 229.565625%2c208.804839 C229.565625%2c208.804839 259.315625%2c201.833522 272.30875%2c181.006985 L186.8225%2c181.006985 Z' id='Path' fill='%23338AF3' fill-rule='nonzero'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3Z = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/antigua-and-barbuda%3c/title%3e %3cg id='flags/antigua-and-barbuda' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-antigua-and-barbuda' fill-rule='nonzero'%3e %3cpath d='M0%2c160 C0%2c170.959375 1.105%2c181.660625 3.204375%2c192 L160%2c201.739375 L316.79625%2c192 C318.89625%2c181.660625 320%2c170.959375 320%2c160 C320%2c149.040625 318.895%2c138.339375 316.79625%2c128 L160%2c118.260625 L3.204375%2c128 C1.105%2c138.339375 0%2c149.040625 0%2c160 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M316.79625%2c192 L3.204375%2c192 C18.02875%2c265.03125 82.594375%2c320 160%2c320 C237.405625%2c320 301.97125%2c265.03125 316.79625%2c192 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cpath d='M3.204375%2c128 L316.796875%2c128 C301.97125%2c54.96875 237.406875%2c0 160%2c0 C82.593125%2c0 18.02875%2c54.96875 3.204375%2c128 Z' id='Path' fill='black'%3e%3c/path%3e %3cpolygon id='Path' fill='%23FFDA44' points='229.565 128 90.435 128 118.86 114.62875 103.723125 87.100625 134.58875 93.00375 138.50125 61.823125 160 84.756875 181.5 61.823125 185.41 93.00375 216.276875 87.100625 201.14125 114.63'%3e%3c/polygon%3e %3cg id='Group' transform='translate(0.000000%2c 63.994375)' fill='%23A2001D'%3e %3cpath d='M0%2c96.005625 C0%2c184.370625 71.635%2c256.005625 160%2c256.005625 L31.9975%2c-8.8817842e-15 C11.9075%2c26.743125 0%2c59.9825 0%2c96.005625 Z' id='Path'%3e%3c/path%3e %3cpath d='M160%2c256.005625 C248.365%2c256.005625 320%2c184.370625 320%2c96.005625 C320%2c59.9825 308.0925%2c26.743125 288.0025%2c-1.77635684e-14 L160%2c256.005625 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3Y = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/argentina%3c/title%3e %3cg id='flags/argentina' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-argentina' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(15.876250%2c 0.000000)' fill='%23338AF3'%3e %3cpath d='M144.12375%2c0 C80.69%2c0 25.88%2c36.915625 8.8817842e-15%2c90.435 L288.246875%2c90.435 C262.3675%2c36.915625 207.556875%2c0 144.12375%2c0 Z' id='Path'%3e%3c/path%3e %3cpath d='M144.12375%2c320 C207.556875%2c320 262.3675%2c283.084375 288.2475%2c229.565 L8.8817842e-15%2c229.565 C25.88%2c283.084375 80.69%2c320 144.12375%2c320 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpolygon id='Path' fill='%23FFDA44' points='207.821875 160 188.28125 169.191875 198.686875 188.11625 177.468125 184.056875 174.779375 205.491875 160 189.726875 145.22 205.491875 142.531875 184.056875 121.313125 188.115625 131.718125 169.19125 112.178125 160 131.71875 150.808125 121.313125 131.884375 142.53125 135.943125 145.220625 114.508125 160 130.273125 174.78 114.508125 177.468125 135.943125 198.6875 131.884375 188.281875 150.80875'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3X = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/armenia%3c/title%3e %3cg id='flags/armenia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-armenia' fill-rule='nonzero'%3e %3cpath d='M320%2c160 C320%2c140.42875 316.48%2c121.680625 310.048125%2c104.348125 L160%2c97.39125 L9.951875%2c104.3475 C3.520625%2c121.680625 0%2c140.42875 0%2c160 C0%2c179.57125 3.520625%2c198.319375 9.951875%2c215.651875 L160%2c222.60875 L310.048125%2c215.6525 C316.48%2c198.319375 320%2c179.57125 320%2c160 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M160%2c320 C228.794375%2c320 287.44125%2c276.58 310.048125%2c215.651875 L9.951875%2c215.651875 C32.55875%2c276.58 91.205625%2c320 160%2c320 Z' id='Path' fill='%23FF9811'%3e%3c/path%3e %3cpath d='M9.951875%2c104.348125 L310.04875%2c104.348125 C287.44125%2c43.42 228.794375%2c0 160%2c0 C91.205625%2c0 32.55875%2c43.42 9.951875%2c104.348125 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3W = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/aruba%3c/title%3e %3cg id='flags/aruba' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-aruba' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23FFDA44' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' fill='%23338AF3'%3e %3cpath d='M160%2c320 C208.494375%2c320 251.94625%2c298.4225 281.288125%2c264.348125 L38.711875%2c264.348125 C68.05375%2c298.4225 111.505625%2c320 160%2c320 Z' id='Path'%3e%3c/path%3e %3cpath d='M320%2c160 C320%2c71.635 248.365%2c0 160%2c0 C71.635%2c0 0%2c71.635 0%2c160 C0%2c174.441875 1.925%2c188.430625 5.511875%2c201.739375 L314.48875%2c201.739375 C318.075%2c188.430625 320%2c174.441875 320%2c160 Z' id='Path'%3e%3c/path%3e %3cpath d='M12.718125%2c222.60875 C15.8025%2c229.85625 19.408125%2c236.82625 23.48375%2c243.478125 L296.51625%2c243.478125 C300.591875%2c236.825625 304.1975%2c229.855625 307.283125%2c222.60875 L12.718125%2c222.60875 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpolygon id='Path' fill='%23F0F0F0' points='73.323125 100.914375 42.063125 87.118125 73.323125 73.321875 87.11875 42.0625 100.914375 73.321875 132.17375 87.118125 100.914375 100.914375 87.11875 132.17375'%3e%3c/polygon%3e %3cpolygon id='Path' fill='%23D80027' points='87.11875 59.291875 95.638125 78.5975 114.944375 87.118125 95.638125 95.638125 87.11875 114.94375 78.598125 95.638125 59.2925 87.118125 78.598125 78.5975'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3V = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/australia%3c/title%3e %3cg id='flags/australia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-australia' fill-rule='nonzero'%3e %3cpath d='M320%2c160.155942 C320%2c248.434818 248.365%2c320 160%2c320 C71.635%2c320 0%2c248.434818 0%2c160.155942 C0%2c160.193405 160%2c0.329990566 160%2c0.311883231 C248.365%2c0.311883231 320%2c71.8770652 320%2c160.155942 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cg id='Group' fill='%23F0F0F0'%3e %3cpath d='M160%2c0.311883231 C159.99125%2c0.311883231 159.981875%2c0.312507622 159.973125%2c0.312507622 L160%2c0.311883231 L160%2c0.311883231 Z' id='Path'%3e%3c/path%3e %3cpath d='M159.571875%2c160.155942 L160%2c160.155942 C160%2c160.011083 160%2c159.872468 160%2c159.728234 C159.8575%2c159.871219 159.715%2c160.013581 159.571875%2c160.155942 Z' id='Path'%3e%3c/path%3e %3cpath d='M160.000625%2c83.7092719 C160.000625%2c55.5835859 160.000625%2c37.1534411 160.000625%2c0.312507622 L159.973125%2c0.312507622 C71.62%2c0.326868612 0%2c71.8851823 0%2c160.155942 L83.478125%2c160.155942 L83.478125%2c113.194257 L130.485625%2c160.155942 L159.5725%2c160.155942 C159.715625%2c160.013581 159.858125%2c159.871219 160.000625%2c159.728234 C160.000625%2c148.959365 160.000625%2c139.350614 160.000625%2c130.671581 L112.9925%2c83.7092719 L160.000625%2c83.7092719 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(20.869375%2c 21.160918)' fill='%23D80027'%3e %3cpath d='M60.0775%2c1.77462554e-14 C35.053125%2c14.2354871 14.249375%2c35.018961 4.4408921e-15%2c60.0189464 L4.4408921e-15%2c138.995023 L41.739375%2c138.995023 L41.739375%2c41.6993187 L41.739375%2c41.6986943 L139.130625%2c41.6986943 C139.130625%2c28.5471498 139.130625%2c16.0181229 139.130625%2c1.77462554e-14 L60.0775%2c1.77462554e-14 Z' id='Path'%3e%3c/path%3e %3cpath d='M139.130625%2c119.338575 L82.285%2c62.5487006 L62.609375%2c62.5487006 C62.609375%2c62.5487006 62.609375%2c62.5487006 62.609375%2c62.5487006 L139.130625%2c138.995023 L139.130625%2c138.995023 C139.130625%2c138.995023 139.130625%2c125.44262 139.130625%2c119.338575 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(60.820000%2c 69.809083)' fill='%23F0F0F0'%3e %3cpolygon id='Path' points='35.676875 118.145988 44.458125 136.489343 64.2875 131.910685 55.4075 150.206586 71.35375 162.839886 51.499375 167.310524 51.555 187.643188 35.676875 174.922473 19.799375 187.643188 19.855 167.310524 -8.8817842e-15 162.839886 15.946875 150.206586 7.065625 131.910685 26.89625 136.489343'%3e%3c/polygon%3e %3cpolygon id='Path' points='178.7325 152.894588 183.123125 162.066265 193.038125 159.776624 188.5975 168.924575 196.57125 175.241537 186.64375 177.476856 186.67125 187.643188 178.7325 181.282518 170.79375 187.643188 170.82125 177.476856 160.894375 175.241537 168.8675 168.924575 164.4275 159.776624 174.341875 162.066265'%3e%3c/polygon%3e %3cpolygon id='Path' points='137.888125 55.5982591 142.278125 64.7705608 152.193125 62.4802951 147.753125 71.6282455 155.72625 77.9452078 145.799375 80.180527 145.82625 90.3468589 137.888125 83.9861893 129.949375 90.3468589 129.97625 80.180527 120.049375 77.9452078 128.0225 71.6282455 123.5825 62.4802951 133.4975 64.7705608'%3e%3c/polygon%3e %3cpolygon id='Path' points='178.7325 1.77462554e-14 183.123125 9.17230163 193.038125 6.88266037 188.598125 16.0306108 196.570625 22.3469486 186.64375 24.5828923 186.67125 34.7492241 178.7325 28.3885545 170.79375 34.7492241 170.82125 24.5828923 160.894375 22.3469486 168.866875 16.0306108 164.4275 6.88266037 174.341875 9.17230163'%3e%3c/polygon%3e %3cpolygon id='Path' points='214.41 41.6986943 218.8 50.870996 228.715 48.5807303 224.275 57.7286807 232.248125 64.045643 222.320625 66.2815866 222.348125 76.4472941 214.41 70.0872489 206.47125 76.4472941 206.498125 66.2815866 196.57125 64.045643 204.544375 57.7286807 200.104375 48.5807303 210.01875 50.870996'%3e%3c/polygon%3e %3cpolygon id='Path' points='188.89875 90.3468589 192.351875 100.96525 203.528125 100.96525 194.48625 107.528222 197.940625 118.145988 188.89875 111.583641 179.8575 118.145988 183.310625 107.528222 174.269375 100.96525 185.445 100.96525'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3U = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/austria%3c/title%3e %3cg id='flags/austria' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-austria' fill-rule='nonzero'%3e %3cpath d='M310.048125%2c215.651875 C316.48%2c198.319375 320%2c179.57125 320%2c160 C320%2c140.42875 316.48%2c121.681875 310.048125%2c104.348125 L160%2c90.435 L9.951875%2c104.348125 C3.520625%2c121.681875 0%2c140.42875 0%2c160 C0%2c179.57125 3.520625%2c198.319375 9.951875%2c215.651875 L160%2c229.565 L310.048125%2c215.651875 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cg id='Group' transform='translate(9.951250%2c 0.000000)' fill='%23D80027'%3e %3cpath d='M150.04875%2c320 C218.8425%2c320 277.49%2c276.58 300.09625%2c215.651875 L2.22044605e-15%2c215.651875 C22.6075%2c276.58 81.25375%2c320 150.04875%2c320 Z' id='Path'%3e%3c/path%3e %3cpath d='M150.04875%2c0 C81.25375%2c0 22.6075%2c43.42 2.22044605e-15%2c104.348125 L300.096875%2c104.348125 C277.49%2c43.42 218.8425%2c0 150.04875%2c0 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3T = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/azerbaijan%3c/title%3e %3cg id='flags/azerbaijan' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-azerbaijan' fill-rule='nonzero'%3e %3cpath d='M320%2c160 C320%2c140.42875 316.48%2c121.680625 310.048125%2c104.348125 L160%2c97.39125 L9.951875%2c104.3475 C3.520625%2c121.680625 0%2c140.42875 0%2c160 C0%2c179.57125 3.520625%2c198.319375 9.951875%2c215.651875 L160%2c222.60875 L310.048125%2c215.6525 C316.48%2c198.319375 320%2c179.57125 320%2c160 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M160%2c320 C228.794375%2c320 287.44125%2c276.58 310.048125%2c215.651875 L9.951875%2c215.651875 C32.55875%2c276.58 91.205625%2c320 160%2c320 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M9.951875%2c104.348125 L310.04875%2c104.348125 C287.44125%2c43.42 228.794375%2c0 160%2c0 C91.205625%2c0 32.55875%2c43.42 9.951875%2c104.348125 Z' id='Path' fill='%23338AF3'%3e%3c/path%3e %3cg id='Group' transform='translate(90.435000%2c 104.347500)' fill='%23F0F0F0'%3e %3cpath d='M73.043125%2c100.87 C48.070625%2c100.87 27.825625%2c80.625 27.825625%2c55.6525 C27.825625%2c30.68 48.070625%2c10.435 73.043125%2c10.435 C80.829375%2c10.435 88.15625%2c12.40375 94.5525%2c15.87 C84.5175%2c6.056875 70.795%2c-1.77635684e-14 55.651875%2c-1.77635684e-14 C24.915625%2c-1.77635684e-14 0%2c24.91625 0%2c55.651875 C0%2c86.3875 24.91625%2c111.30375 55.651875%2c111.30375 C70.795625%2c111.30375 84.518125%2c105.246875 94.5525%2c95.43375 C88.15625%2c98.90125 80.829375%2c100.87 73.043125%2c100.87 Z' id='Path'%3e%3c/path%3e %3cpolygon id='Path' points='107.825625 24.348125 113.815 41.1925 129.96125 33.51625 122.285625 49.6625 139.13 55.6525 122.285625 61.6425 129.96125 77.78875 113.815 70.1125 107.825625 86.956875 101.836875 70.1125 85.69 77.78875 93.36625 61.6425 76.52125 55.6525 93.36625 49.6625 85.69 33.51625 101.836875 41.1925'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3S = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/azores-islands%3c/title%3e %3cg id='flags/azores-islands' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-azores-islands' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M0%2c160 C0%2c220.646875 33.74375%2c273.409375 83.478125%2c300.545625 L83.478125%2c19.454375 C33.74375%2c46.590625 0%2c99.353125 0%2c160 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M0%2c160 C0%2c233.924375 50.138125%2c296.128125 118.260625%2c314.488125 L118.260625%2c5.511875 C50.138125%2c23.871875 0%2c86.075625 0%2c160 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M57.39125%2c55.651875 L57.39125%2c81.73875 C57.39125%2c94.705625 67.9025%2c105.216875 80.869375%2c105.216875 C93.83625%2c105.216875 104.3475%2c94.705625 104.3475%2c81.73875 L104.3475%2c55.651875 L57.39125%2c55.651875 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M80.869375%2c91.304375 C75.595%2c91.304375 71.304375%2c87.01375 71.304375%2c81.739375 L71.304375%2c69.565625 L90.435%2c69.565625 L90.435%2c81.739375 C90.435%2c87.01375 86.14375%2c91.304375 80.869375%2c91.304375 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cg id='Group' transform='translate(56.114375%2c 117.292500)' fill='%23FFDA44'%3e %3cpath d='M117.79875%2c49.66375 L76.059375%2c49.66375 C76.059375%2c41.98 69.83%2c35.750625 62.14625%2c35.750625 C54.4625%2c35.750625 48.233125%2c41.98 48.233125%2c49.66375 L6.49375%2c49.66375 C6.49375%2c57.348125 13.186875%2c63.576875 20.87%2c63.576875 L20.406875%2c63.576875 C20.406875%2c71.26125 26.635%2c77.49 34.32%2c77.49 C34.32%2c85.174375 40.548125%2c91.403125 48.233125%2c91.403125 L76.059375%2c91.403125 C83.743125%2c91.403125 89.9725%2c85.174375 89.9725%2c77.49 C97.65625%2c77.49 103.885625%2c71.26125 103.885625%2c63.576875 L103.4225%2c63.576875 C111.105625%2c63.576875 117.79875%2c57.348125 117.79875%2c49.66375 Z' id='Path'%3e%3c/path%3e %3cpolygon id='Path' points='123.51625 27.399375 119.86375 33.2475 124.294375 38.5275 117.604375 36.861875 113.95125 42.7075 113.469375 35.829375 106.779375 34.16125 113.17375 31.57875 112.6925 24.700625 117.124375 29.983125'%3e%3c/polygon%3e %3cpolygon id='Path' points='102.201875 9.515 100.77 16.259375 106.740625 19.70625 99.883125 20.43 98.45 27.1725 95.645 20.87375 88.788125 21.59375 93.9125 16.98 91.10875 10.6825 97.07875 14.129375'%3e%3c/polygon%3e %3cpolygon id='Path' points='76.058125 0 77.0175 6.828125 83.806875 8.025 77.610625 11.0475 78.57 17.875625 73.78125 12.915625 67.58375 15.938125 70.820625 9.85 66.03125 4.89125 72.821875 6.0875'%3e%3c/polygon%3e %3cpolygon id='Path' points='48.235 0 51.4725 6.0875 58.261875 4.890625 53.4725 9.85125 56.709375 15.93875 50.513125 12.915625 45.723125 17.874375 46.683125 11.0475 40.48625 8.025625 47.275625 6.828125'%3e%3c/polygon%3e %3cpolygon id='Path' points='22.090625 9.515 27.214375 14.129375 33.184375 10.6825 30.381875 16.9825 35.50375 21.594375 28.648125 20.87375 25.8425 27.1725 24.41125 20.42875 17.55375 19.70875 23.52375 16.26'%3e%3c/polygon%3e %3cpolygon id='Path' points='0.776875 27.399375 7.17125 29.983125 11.600625 24.70125 11.121875 31.580625 17.51375 34.16375 10.823125 35.83 10.340625 42.7075 6.69 36.861875 -8.8817842e-15 38.52875 4.431875 33.2475'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3R = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/bahamas%3c/title%3e %3cg id='flags/bahamas' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-bahamas' fill-rule='nonzero'%3e %3cellipse id='Oval' fill='%23FFDA44' cx='160.000156' cy='160' rx='159.999844' ry='160'%3e%3c/ellipse%3e %3cg id='Group' transform='translate(46.868392%2c 0.000000)' fill='%23338AF3'%3e %3cpath d='M50.5230757%2c104.348125 L263.179118%2c104.348125 C240.57289%2c43.42 181.925447%2c0 113.131765%2c0 C68.9480577%2c0 28.9524717%2c17.911875 -1.7763551e-14%2c46.868125 L50.5230757%2c104.348125 Z' id='Path'%3e%3c/path%3e %3cpath d='M50.5230757%2c215.651875 L263.179118%2c215.651875 C240.57289%2c276.58 181.925447%2c320 113.131765%2c320 C68.9480577%2c320 28.9524717%2c302.088125 -1.7763551e-14%2c273.131875 L50.5230757%2c215.651875 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M46.8627667%2c46.8625 C-15.6209222%2c109.34625 -15.6209222%2c210.653125 46.8627667%2c273.1375 C72.6833665%2c247.316875 97.5164673%2c222.48375 160.000156%2c160 L46.8627667%2c46.8625 Z' id='Path' fill='black'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3Q = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/bahrain%3c/title%3e %3cg id='flags/bahrain' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-bahrain' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M160%2c0 C127.89%2c0 97.995%2c9.465625 72.9375%2c25.74875 L114.086875%2c53.329375 L62.60875%2c79.995625 L114.086875%2c106.661875 L62.60875%2c133.328125 L114.086875%2c159.99125 L62.60875%2c186.656875 L114.086875%2c213.3225 L62.60875%2c239.99125 L114.086875%2c266.6575 L72.9325%2c294.246875 C97.99125%2c310.533125 127.888125%2c320 160%2c320 C248.365%2c320 320%2c248.365 320%2c160 C320%2c71.635 248.365%2c0 160%2c0 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3P = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/balearic-islands%3c/title%3e %3cg id='flags/balearic-islands' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-balearic-islands' fill-rule='nonzero'%3e %3cpath d='M160.000312%2c0 C248.36514%2c0 320%2c71.635 320%2c160 C320%2c248.365 248.36514%2c320 160.000312%2c320 C71.6354851%2c320 0.000624998779%2c248.365 0.000624998779%2c160' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cg id='Group' transform='translate(0.988748%2c 35.555625)' fill='%23D80027'%3e %3cpath d='M155.533446%2c35.555625 L292.06068%2c35.555625 C283.070697%2c22.12625 272.100094%2c10.13875 259.568868%2c2.22044605e-14 L155.533446%2c2.22044605e-14 L155.533446%2c35.555625 Z' id='Path'%3e%3c/path%3e %3cpath d='M155.533446%2c106.666875 L318.023754%2c106.666875 C316.660007%2c94.338125 313.896887%2c82.43375 309.89502%2c71.111875 L155.533446%2c71.111875 L155.533446%2c106.666875 Z' id='Path'%3e%3c/path%3e %3cpath d='M8.12873412%2c177.778125 L309.89377%2c177.778125 C313.895637%2c166.45625 316.659382%2c154.550625 318.023129%2c142.221875 L4.0245506e-15%2c142.221875 C1.36249734%2c154.55125 4.12624194%2c166.456875 8.12873412%2c177.778125 Z' id='Path'%3e%3c/path%3e %3cpath d='M58.4536358%2c248.88875 L259.568243%2c248.88875 C272.098844%2c238.750625 283.070072%2c226.761875 292.060055%2c213.333125 L25.9630743%2c213.333125 C34.9530567%2c226.761875 45.9230353%2c238.75 58.4536358%2c248.88875 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M160.000312%2c1.77635684e-14 C71.6348601%2c1.77635684e-14 0%2c71.635 0%2c160.00125 C36.5161787%2c160.00125 71.6348601%2c160.00125 160.000312%2c160.00125 L160.000312%2c1.77635684e-14 Z' id='Path' fill='%234A1F63'%3e%3c/path%3e %3cpolygon id='Path' fill='%23F0F0F0' points='132.174117 83.478125 132.174117 97.39125 125.21788 97.39125 125.21788 83.478125 111.304783 83.478125 111.304783 97.39125 104.348546 97.39125 104.348546 69.565 76.5223505 69.565 76.5223505 97.39125 69.5654891 97.39125 69.5654891 83.478125 55.6530163 83.478125 55.6530163 97.39125 48.6961549 97.39125 48.6961549 83.478125 34.7824321 83.478125 34.7824321 125.216875 146.087215 125.216875 146.087215 83.478125'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3O = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/bangladesh%3c/title%3e %3cg id='flags/bangladesh' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-bangladesh' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23496E2D' cx='160' cy='160' r='160'%3e%3c/circle%3e %3ccircle id='Oval' fill='%23D80027' cx='125.2175' cy='160' r='69.565'%3e%3c/circle%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3N = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/barbados%3c/title%3e %3cg id='flags/barbados' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-barbados' fill-rule='nonzero'%3e %3cpath d='M229.565%2c15.87625 C208.53%2c5.705 184.93125%2c0 160%2c0 C135.06875%2c0 111.47%2c5.705 90.435%2c15.87625 L76.521875%2c160 L90.435%2c304.12375 C111.47%2c314.295 135.06875%2c320 160%2c320 C184.93125%2c320 208.53%2c314.295 229.565%2c304.12375 L243.478125%2c160 L229.565%2c15.87625 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cg id='Group' transform='translate(0.000000%2c 15.881875)' fill='%230052B4'%3e %3cpath d='M90.435%2c0 C36.91625%2c25.87875 0%2c80.684375 0%2c144.118125 C0%2c207.551875 36.91625%2c262.3575 90.435%2c288.23625 L90.435%2c0 Z' id='Path'%3e%3c/path%3e %3cpath d='M229.565%2c0 L229.565%2c288.23625 C283.08375%2c262.3575 320%2c207.55125 320%2c144.118125 C320%2c80.685 283.08375%2c25.87875 229.565%2c0 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M208.695625%2c97.39125 L218.02875%2c102.0575 L208.695625%2c97.39125 L199.361875%2c92.725 C198.799375%2c93.850625 186.6125%2c118.64625 184.621875%2c156.521875 L170.435%2c156.521875 L170.435%2c97.39125 L160%2c83.478125 L149.565%2c97.39125 L149.565%2c156.521875 L135.378125%2c156.521875 C133.386875%2c118.64625 121.200625%2c93.850625 120.6375%2c92.725 L101.97125%2c102.058125 C102.1%2c102.314375 114.783125%2c128.13 114.783125%2c166.956875 L114.783125%2c177.391875 L149.565625%2c177.391875 L149.565625%2c236.5225 L170.435%2c236.5225 L170.435%2c177.391875 L205.2175%2c177.391875 L205.2175%2c166.95625 C205.2175%2c146.8825 208.690625%2c130.33 211.605%2c119.97875 C214.781875%2c108.69125 218.00875%2c102.099375 218.040625%2c102.03375 L208.695625%2c97.39125 Z' id='Path' fill='black'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3M = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/basque-country%3c/title%3e %3cg id='flags/basque-country' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-basque-country' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(1.355000%2c 1.354375)' fill='%23D80027'%3e %3cpath d='M1.38777878e-14%2c179.515 C3.7225%2c208.085625 14.98625%2c234.2825 31.721875%2c256.055 L116.905625%2c179.515 L1.38777878e-14%2c179.515 Z' id='Path'%3e%3c/path%3e %3cpath d='M137.775625%2c317.29125 L137.775625%2c200.385 L61.235625%2c285.569375 C83.00875%2c302.305 109.205%2c313.569375 137.775625%2c317.29125 Z' id='Path'%3e%3c/path%3e %3cpath d='M137.775625%2c1.66533454e-14 C109.205%2c3.7225 83.00875%2c14.98625 61.235625%2c31.721875 L137.775625%2c116.906875 L137.775625%2c1.66533454e-14 Z' id='Path'%3e%3c/path%3e %3cpath d='M1.38777878e-14%2c137.77625 L116.905625%2c137.77625 L31.72125%2c61.23625 C14.985625%2c83.00875 3.721875%2c109.205625 1.38777878e-14%2c137.77625 Z' id='Path'%3e%3c/path%3e %3cpath d='M179.514375%2c1.66533454e-14 L179.514375%2c116.90625 L256.055625%2c31.721875 C234.2825%2c14.9875 208.085625%2c3.721875 179.514375%2c1.66533454e-14 Z' id='Path'%3e%3c/path%3e %3cpath d='M317.290625%2c137.77625 C313.568125%2c109.205625 302.304375%2c83.00875 285.56875%2c61.235625 L200.384375%2c137.77625 L317.290625%2c137.77625 Z' id='Path'%3e%3c/path%3e %3cpath d='M200.384375%2c179.515 L285.569375%2c256.055625 C302.304375%2c234.2825 313.56875%2c208.085625 317.29125%2c179.515 L200.384375%2c179.515 L200.384375%2c179.515 Z' id='Path'%3e%3c/path%3e %3cpath d='M179.514375%2c317.29125 C208.085%2c313.56875 234.2825%2c302.305 256.055%2c285.56875 L179.514375%2c200.385 L179.514375%2c317.29125 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M286.93625%2c257.4225 L189.515%2c160.000625 L189.514375%2c160 L286.93625%2c62.5775 C282.735%2c57.1175 278.13875%2c51.865 273.1375%2c46.8625 C268.13625%2c41.86125 262.883125%2c37.264375 257.4225%2c33.06375 L160.000625%2c130.485625 L160%2c130.485625 L62.578125%2c33.06375 C57.118125%2c37.265 51.865%2c41.860625 46.8625%2c46.8625 C41.86125%2c51.865 37.264375%2c57.1175 33.06375%2c62.578125 L130.485625%2c159.999375 L130.48625%2c160 L33.06375%2c257.4225 C37.265625%2c262.881875 41.861875%2c268.135 46.863125%2c273.1375 C51.865%2c278.13875 57.118125%2c282.735625 62.57875%2c286.93625 L160%2c189.514375 L160%2c189.514375 L257.4225%2c286.93625 C262.881875%2c282.735 268.135%2c278.13875 273.1375%2c273.1375 C278.139375%2c268.135 282.735%2c262.881875 286.93625%2c257.4225 Z' id='Path' fill='%23496E2D'%3e%3c/path%3e %3cpath d='M180.869375%2c318.645625 L180.869375%2c180.87125 L180.869375%2c180.87 L318.645625%2c180.87 C319.53625%2c174.038125 320%2c167.073125 320%2c160 C320%2c152.9275 319.535625%2c145.9625 318.645625%2c139.13125 L180.870625%2c139.13125 L180.87%2c139.130625 L180.87%2c1.355 C174.03875%2c0.465625 167.074375%2c0 160%2c0 C152.926875%2c0 145.961875%2c0.465625 139.130625%2c1.355 L139.13125%2c139.129375 L139.13125%2c139.130625 L1.355%2c139.130625 C0.465%2c145.961875 0%2c152.926875 0%2c160 C0%2c167.074375 0.465%2c174.038125 1.355%2c180.869375 L139.13%2c180.869375 L139.13%2c180.869375 L139.130625%2c318.645625 C145.9625%2c319.535 152.925625%2c320 160%2c320 C167.074375%2c320 174.03875%2c319.535 180.869375%2c318.645625 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3L = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/belarus%3c/title%3e %3cg id='flags/belarus' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-belarus' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23FCFCFC' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(13.913125%2c 22.265000)' fill='%23A2001D'%3e %3cpolygon id='Path' points='52.17375 126.140625 34.7825 94.58875 52.17375 63.531875 69.565 94.58875'%3e%3c/polygon%3e %3cpolygon id='Path' points='17.39125 126.140625 -6.66133815e-15 94.58875 17.39125 63.531875 34.7825 94.58875'%3e%3c/polygon%3e %3cpolygon id='Path' points='52.17375 211.938125 34.7825 180.38625 52.17375 149.329375 69.565 180.38625'%3e%3c/polygon%3e %3cpolygon id='Path' points='17.39125 211.938125 -6.66133815e-15 180.38625 17.39125 149.329375 34.7825 180.38625'%3e%3c/polygon%3e %3cpath d='M69.565%2c8.7925 L64.64125%2c4.4408921e-15 C55.81%2c5.2325 47.526875%2c11.290625 39.895%2c18.068125 L52.17375%2c40.34375 L69.565%2c8.7925 Z' id='Path'%3e%3c/path%3e %3cpath d='M52.17375%2c235.12625 L39.765%2c257.28625 C47.39%2c264.0725 55.6675%2c270.14 64.495%2c275.383125 L69.565625%2c266.18375 L52.17375%2c235.12625 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M97.39125%2c201.739375 L97.39125%2c307.27875 C116.621875%2c315.464375 137.78%2c320 160%2c320 C228.794375%2c320 287.44125%2c276.58 310.048125%2c215.651875 L97.39125%2c201.739375 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M310.048125%2c215.6525 C316.48%2c198.31875 320%2c179.57125 320%2c160 C320%2c71.635 248.365%2c0 160%2c0 C137.781875%2c0 116.621875%2c4.533125 97.39125%2c12.7175 L97.39125%2c215.6525 L310.048125%2c215.6525 L310.048125%2c215.6525 Z' id='Path' fill='%23A2001D'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3K = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/belgium%3c/title%3e %3cg id='flags/belgium' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-belgium' fill-rule='nonzero'%3e %3cpath d='M215.651875%2c9.951875 C198.31875%2c3.520625 179.57125%2c0 160%2c0 C140.42875%2c0 121.68125%2c3.520625 104.348125%2c9.951875 L90.435%2c160 L104.348125%2c310.048125 C121.68125%2c316.48 140.42875%2c320 160%2c320 C179.57125%2c320 198.31875%2c316.48 215.651875%2c310.048125 L229.565%2c160 L215.651875%2c9.951875 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M320%2c160 C320%2c91.20625 276.58%2c32.55875 215.651875%2c9.9525 L215.651875%2c310.049375 C276.58%2c287.44125 320%2c228.795 320%2c160 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M0%2c160 C0%2c228.795 43.42%2c287.44125 104.348125%2c310.04875 L104.348125%2c9.9525 C43.42%2c32.55875 0%2c91.20625 0%2c160 Z' id='Path' fill='black'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3J = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/belize%3c/title%3e %3cg id='flags/belize' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-belize' fill-rule='nonzero'%3e %3cpath d='M320%2c160 C320%2c105.086875 292.331875%2c56.64125 250.179375%2c27.82625 L160%2c20.869375 L69.820625%2c27.825625 C27.66875%2c56.64125 0%2c105.0875 0%2c160 C0%2c214.914375 27.66875%2c263.35875 69.820625%2c292.17375 L160%2c299.130625 L250.179375%2c292.174375 C292.331875%2c263.35875 320%2c214.914375 320%2c160 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cg id='Group' transform='translate(69.820625%2c 0.000000)' fill='%23A2001D'%3e %3cpath d='M180.35875%2c27.82625 C154.680625%2c10.2725 123.631875%2c0 90.179375%2c0 C56.7275%2c0 25.678125%2c10.2725 1.77635684e-14%2c27.82625 L180.35875%2c27.82625 Z' id='Path'%3e%3c/path%3e %3cpath d='M1.77635684e-14%2c292.17375 C25.6775%2c309.7275 56.7275%2c320 90.179375%2c320 C123.631875%2c320 154.680625%2c309.7275 180.35875%2c292.17375 L1.77635684e-14%2c292.17375 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='76.521875'%3e%3c/circle%3e %3ccircle id='Oval' fill='%236DA544' cx='160' cy='160' r='62.60875'%3e%3c/circle%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='41.739375'%3e%3c/circle%3e %3cpolygon id='Path' fill='%230052B4' points='160 149.565 137.39125 160 137.39125 177.39125 160 191.304375 182.60875 177.39125 182.60875 160'%3e%3c/polygon%3e %3crect id='Rectangle' fill='%23FFDA44' x='137.39125' y='139.130625' width='45.2175' height='20.869375'%3e%3c/rect%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3I = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/benin%3c/title%3e %3cg id='flags/benin' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-benin' fill-rule='nonzero'%3e %3cpath d='M104.348125%2c146.086875 L118.26125%2c314.488125 C131.569375%2c318.075 145.558125%2c320 160%2c320 C248.365%2c320 320%2c248.365 320%2c160 L104.348125%2c146.086875 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M104.348125%2c160 L118.260625%2c5.511875 C131.569375%2c1.925 145.558125%2c0 160%2c0 C248.365%2c0 320%2c71.635 320%2c160 L104.348125%2c160 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M0%2c160 C0%2c233.924375 50.138125%2c296.128125 118.260625%2c314.488125 L118.260625%2c5.511875 C50.138125%2c23.871875 0%2c86.075625 0%2c160 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3H = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/bermuda%3c/title%3e %3cg id='flags/bermuda' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-bermuda' fill-rule='nonzero'%3e %3cpath d='M320%2c160.156098 C320%2c248.434888 248.365%2c320 160%2c320 C71.635%2c320 0%2c248.434888 0%2c160.156098 C0%2c160.194185 160%2c0.329678049 160%2c0.312195122 C248.365%2c0.312195122 320%2c71.8773073 320%2c160.156098 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cg id='Group' transform='translate(76.521875%2c 76.759415)' fill='%230052B4'%3e %3cpolygon id='Path' points='83.478125 1.77462381e-14 83.478125 53.9117268 27.82625 1.77462381e-14'%3e%3c/polygon%3e %3cpolygon id='Path' points='6.95625 83.3966829 53.963125 83.3966829 6.95625 20.8490146 0 69.4971317'%3e%3c/polygon%3e %3c/g%3e %3cg id='Group' fill='%23F0F0F0'%3e %3cpath d='M160%2c0.312195122 C159.99%2c0.312195122 159.9825%2c0.312195122 159.973125%2c0.312195122 L160%2c0.312195122 L160%2c0.312195122 Z' id='Path'%3e%3c/path%3e %3cpath d='M159.571875%2c160.156098 L160%2c160.156098 C160%2c160.012488 160%2c159.872624 160%2c159.72839 C159.8575%2c159.871376 159.715%2c160.013737 159.571875%2c160.156098 Z' id='Path'%3e%3c/path%3e %3cpath d='M160.000625%2c83.708878 C160.000625%2c55.5832195 160.000625%2c37.1543415 160.000625%2c0.312195122 L159.973125%2c0.312195122 C71.619375%2c0.327180488 0%2c71.8854244 0%2c160.156098 L83.478125%2c160.156098 L83.478125%2c113.195083 L130.485%2c160.156098 L159.5725%2c160.156098 C159.715%2c160.013737 159.8575%2c159.871376 160.000625%2c159.72839 C160.000625%2c148.959532 160.000625%2c139.35079 160.000625%2c130.671141 L112.9925%2c83.708878 L160.000625%2c83.708878 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(20.869375%2c 21.161210)' fill='%23D80027'%3e %3cpath d='M60.0775%2c4.43655952e-15 C35.053125%2c14.2354732 14.24875%2c35.0189268 4.4408921e-15%2c60.0188878 L4.4408921e-15%2c145.944351 L41.739375%2c145.944351 L41.739375%2c41.6999024 L41.739375%2c41.6986537 L146.086875%2c41.6986537 C146.086875%2c28.547122 146.086875%2c16.0181073 146.086875%2c4.43655952e-15 L60.0775%2c4.43655952e-15 Z' id='Path'%3e%3c/path%3e %3cpath d='M145.49125%2c125.691629 L82.28375%2c62.5476683 L62.60875%2c62.5476683 L62.60875%2c62.5489171 L145.489375%2c145.348683 L145.49125%2c145.348683 C145.49125%2c145.348683 145.49125%2c131.795668 145.49125%2c125.691629 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M180.869375%2c83.708878 L180.869375%2c160.155473 C180.869375%2c197.394107 278.260625%2c197.394107 278.260625%2c160.155473 L278.260625%2c83.708878 L180.869375%2c83.708878 Z' id='Path' fill='%23F3F3F3'%3e%3c/path%3e %3cpath d='M180.869375%2c160.156098 L180.869375%2c160.155473 C180.869375%2c197.394107 229.565%2c208.804215 229.565%2c208.804215 C229.565%2c208.804215 278.260625%2c197.394107 278.260625%2c160.155473 L278.260625%2c160.156098 L180.869375%2c160.156098 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpolygon id='Path' fill='%23A2001D' points='229.565 129.57721 206.95625 139.307083 206.95625 160.156098 229.565 174.055649 252.17375 160.156098 252.17375 139.307083'%3e%3c/polygon%3e %3crect id='Rectangle' fill='%23338AF3' x='206.95625' y='118.457444' width='45.2175' height='20.8490146'%3e%3c/rect%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3G = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/bhutan-1%3c/title%3e %3cg id='flags/bhutan-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-bhutan-1' fill-rule='nonzero'%3e %3cpath d='M46.8626866%2c273.137222 C-15.6208955%2c210.653518 -15.6208955%2c109.347342 46.8626866%2c46.8630126 C109.346269%2c-15.6213167 210.652872%2c-15.6206917 273.137079%2c46.8630126 C273.137079%2c46.8848875 315.616965%2c190.648532 253.132758%2c253.133486 C190.649801%2c315.617816 46.9064365%2c273.180972 46.8626866%2c273.137222 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M46.8626866%2c273.137222 C109.346269%2c335.620926 210.652872%2c335.620926 273.137079%2c273.137222 C335.621286%2c210.653518 335.620661%2c109.347342 273.137079%2c46.8630126 L46.8626866%2c273.137222 Z' id='Path' fill='%23FF9811'%3e%3c/path%3e %3cpath d='M250.50964%2c90.4342306 L250.50964%2c62.608001 L197.174783%2c62.608001 L193.099794%2c66.682373 C178.606708%2c81.1754874 181.044826%2c98.082975 182.824822%2c110.427966 C184.475442%2c121.879833 184.673567%2c126.266704 180.414828%2c130.526076 C176.156089%2c134.784198 171.767976%2c134.586698 160.317382%2c132.934825 C147.972415%2c131.155451 131.065586%2c128.717328 116.572499%2c143.209817 C102.080038%2c157.702306 104.519407%2c174.608544 106.300652%2c186.95291 C107.952523%2c198.403527 108.151272%2c202.790398 103.893783%2c207.04727 C99.6356699%2c211.304142 95.2475567%2c211.106017 83.7994625%2c209.454143 C79.3357244%2c208.809769 74.7201118%2c208.144769 69.7926251%2c208.089769 L69.4870009%2c235.914749 C72.5707426%2c235.949124 76.0951081%2c236.456624 79.8263481%2c236.995373 C84.2438363%2c237.633498 89.2438228%2c238.354747 94.5100587%2c238.354747 C99.967544%2c238.354747 105.708779%2c237.576623 111.378763%2c235.1285 L111.378763%2c257.391608 L153.118026%2c257.391608 L153.118026%2c236.522249 L132.248707%2c236.522249 L132.248707%2c222.609134 L146.161795%2c222.609134 L146.161795%2c201.739774 L135.041825%2c201.739774 C135.569323%2c194.988529 134.641826%2c188.523534 133.841828%2c182.981038 C132.189957%2c171.530421 131.991208%2c167.143549 136.248697%2c162.887303 C140.507435%2c158.628556 144.893673%2c158.826056 156.346143%2c160.477304 C165.341743%2c161.774178 176.759213%2c163.412927 187.901058%2c158.602931 L187.901058%2c180.869789 L229.640321%2c180.869789 L229.640321%2c160.00043 L208.771002%2c160.00043 L208.771002%2c146.087315 L222.684089%2c146.087315 L222.684089%2c125.217955 L211.564744%2c125.217955 C212.092868%2c118.466085 211.165995%2c112.001715 210.365998%2c106.457344 C209.212876%2c98.4567248 208.767877%2c93.9042281 210.057873%2c90.4348556 L250.50964%2c90.4348556 L250.50964%2c90.4342306 L250.50964%2c90.4342306 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3F = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/bhutan%3c/title%3e %3cg id='flags/bhutan' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-bhutan' fill-rule='nonzero'%3e %3cpath d='M273.137187%2c273.137313 C210.653437%2c335.620896 109.347187%2c335.620896 46.8628125%2c273.137313 C-15.6209375%2c210.653731 -15.6209375%2c109.347128 46.8628125%2c46.862921 C46.8853125%2c46.862921 190.649062%2c4.3836601 253.133438%2c66.8672423 C315.617813%2c129.350824 273.180313%2c273.093563 273.137187%2c273.137313 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M273.137187%2c273.137313 C335.620938%2c210.653731 335.620938%2c109.347128 273.137187%2c46.862921 C210.653437%2c-15.6212862 109.347187%2c-15.6206612 46.8628125%2c46.862921 L273.137187%2c273.137313 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M201.822812%2c201.83813 C195.250312%2c204.419373 187.613437%2c204.145624 180.987812%2c200.427509 C169.281562%2c193.857526 165.102812%2c178.986316 171.674687%2c167.278223 L169.679687%2c166.159476 C189.724062%2c161.326364 204.553437%2c143.132662 204.293437%2c121.66272 C204.132187%2c108.314631 198.167812%2c96.3727881 188.838437%2c88.20156 L174.230312%2c103.16777 C179.752812%2c107.569008 183.333437%2c114.32024 183.425312%2c121.915844 C183.587812%2c135.340808 172.799062%2c146.395154 159.374687%2c146.557028 L159.402812%2c148.842647 C145.194687%2c133.901437 122.024687%2c130.155822 103.561562%2c141.115793 C92.0828125%2c147.930775 84.7240625%2c159.065745 82.3109375%2c171.231337 L102.575937%2c176.400073 C103.626562%2c169.416342 107.682187%2c162.940109 114.214062%2c159.061995 C125.758437%2c152.208888 140.725937%2c156.026378 147.579062%2c167.570097 L149.546562%2c166.403225 C143.710312%2c186.176922 152.050937%2c208.116238 170.775312%2c218.62621 C182.416562%2c225.159942 195.739062%2c225.965565 207.481562%2c221.972451 L201.822812%2c201.83813 Z' id='Shape' fill='%23FF9811'%3e%3c/path%3e %3cpolygon id='Shape' fill='%23FFEACF' points='219.241562 108.363381 207.932812 148.720147 174.001562 142.454539 152.160312 97.4327852 93.1559375 118.370854 88.5028125 105.258389 73.0653125 103.356519 84.6971875 136.137056 125.302812 125.752084 136.842187 158.270122 108.772187 199.695636 156.407812 240.324276 147.378437 250.909873 153.450312 265.23171 176.024062 238.766781 146.727812 208.793736 169.119687 182.541932 219.030937 186.138172 230.399063 124.569587 244.080938 127.096456 253.449062 114.677739'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3E = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/bolivia%3c/title%3e %3cg id='flags/bolivia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-bolivia' fill-rule='nonzero'%3e %3cpath d='M320%2c160 C320%2c140.42875 316.48%2c121.680625 310.048125%2c104.348125 L160%2c97.39125 L9.951875%2c104.3475 C3.52%2c121.680625 0%2c140.42875 0%2c160 C0%2c179.57125 3.52%2c198.319375 9.951875%2c215.651875 L160%2c222.60875 L310.048125%2c215.6525 C316.48%2c198.319375 320%2c179.57125 320%2c160 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M160%2c320 C228.794375%2c320 287.44125%2c276.58 310.048125%2c215.651875 L9.951875%2c215.651875 C32.55875%2c276.58 91.205625%2c320 160%2c320 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M9.951875%2c104.348125 L310.04875%2c104.348125 C287.44125%2c43.42 228.794375%2c0 160%2c0 C91.205625%2c0 32.55875%2c43.42 9.951875%2c104.348125 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3D = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/bonaire%3c/title%3e %3cg id='flags/bonaire' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-bonaire' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M46.8625%2c46.8625 C12.571875%2c81.153125 -2.895%2c127.136875 0.450625%2c171.978125 L171.9775%2c0.45125 C127.13625%2c-2.895 81.153125%2c12.571875 46.8625%2c46.8625 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M57.13125%2c282.544375 C119.994375%2c335.433125 213.96875%2c332.305 273.1375%2c273.136875 C332.30625%2c213.96875 335.434375%2c119.99375 282.545%2c57.13125 L57.13125%2c282.544375 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M159.429375%2c153.555625 L173.2175%2c146.086875 L159.429375%2c138.618125 C156.21%2c117.705 139.68625%2c101.180625 118.773125%2c97.961875 L111.30375%2c84.173125 L103.835%2c97.96125 C82.9225%2c101.18 66.39875%2c117.704375 63.17875%2c138.6175 L49.39%2c146.086875 L63.178125%2c153.555625 C66.3975%2c174.46875 82.92125%2c190.993125 103.834375%2c194.211875 L111.30375%2c208.000625 L118.7725%2c194.2125 C139.68625%2c190.993125 156.21%2c174.46875 159.429375%2c153.555625 Z M111.304375%2c173.913125 C95.93625%2c173.913125 83.478125%2c161.455625 83.478125%2c146.086875 C83.478125%2c130.718125 95.935625%2c118.260625 111.304375%2c118.260625 C126.673125%2c118.260625 139.130625%2c130.718125 139.130625%2c146.086875 C139.130625%2c161.455625 126.6725%2c173.913125 111.304375%2c173.913125 Z' id='Shape' fill='black'%3e%3c/path%3e %3cpolygon id='Path' fill='%23D80027' points='111.304375 125.2175 117.32875 135.651875 129.378125 135.651875 123.353125 146.086875 129.378125 156.521875 117.32875 156.521875 111.304375 166.95625 105.28 156.521875 93.23125 156.521875 99.255625 146.086875 93.23125 135.651875 105.28 135.651875'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3C = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/bosnia-and-herzegovina%3c/title%3e %3cg id='flags/bosnia-and-herzegovina' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-bosnia-and-herzegovina' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M160%2c0 C103.26875%2c0 53.4375%2c29.526875 25.0275%2c74.049375 L242.001875%2c297.405625 C288.71625%2c269.466875 320%2c218.389375 320%2c160 C320%2c71.635 248.365%2c0 160%2c0 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cg id='Group' transform='translate(0.000000%2c 52.232500)' fill='%230052B4'%3e %3cpath d='M320%2c107.7675 C320%2c66.25375 304.18875%2c28.43625 278.260625%2c3.55271368e-14 L278.260625%2c215.535625 C304.18875%2c187.09875 320%2c149.28125 320%2c107.7675 Z' id='Path'%3e%3c/path%3e %3cpath d='M199.868125%2c248.938125 L216.6275%2c248.9275 L221.7975%2c232.984375 L226.98625%2c248.92125 L235.3925%2c248.91625 C240.546875%2c246.156875 245.5325%2c243.124375 250.33%2c239.835625 L27.930625%2c17.436875 C24.265625%2c22.784375 20.923125%2c28.368125 17.9175%2c34.155625 L19.89375%2c40.225625 L36.653125%2c40.215 L23.100625%2c50.074375 L28.289375%2c66.01125 L14.724375%2c56.16875 L6.63375%2c62.05375 C2.320625%2c76.53875 0%2c91.881875 0%2c107.7675 C0%2c196.1325 71.635%2c267.7675 160%2c267.7675 C178.6825%2c267.7675 196.614375%2c264.56 213.28125%2c258.6725 L199.868125%2c248.938125 Z M35.686875%2c100.81125 L40.855625%2c84.86875 L27.291875%2c75.025 L44.05125%2c75.014375 L49.220625%2c59.07125 L54.409375%2c75.008125 L71.16875%2c74.9975 L57.615625%2c84.856875 L62.804375%2c100.79375 L49.239375%2c90.95125 L35.686875%2c100.81125 Z M70.2025%2c135.59375 L75.37125%2c119.65125 L61.8075%2c109.8075 L78.566875%2c109.796875 L83.73625%2c93.85375 L88.925%2c109.790625 L105.684375%2c109.78 L92.131875%2c119.639375 L97.320625%2c135.57625 L83.755625%2c125.73375 L70.2025%2c135.59375 Z M104.7175%2c170.37625 L109.88625%2c154.43375 L96.3225%2c144.59 L113.081875%2c144.579375 L118.25125%2c128.63625 L123.44%2c144.573125 L140.199375%2c144.5625 L126.646875%2c154.421875 L131.835625%2c170.35875 L118.270625%2c160.515 L104.7175%2c170.37625 Z M152.785625%2c195.299375 L139.2325%2c205.15875 L144.40125%2c189.21625 L130.8375%2c179.3725 L147.596875%2c179.361875 L152.766875%2c163.41875 L157.955625%2c179.355625 L174.715%2c179.345 L161.1625%2c189.204375 L166.35125%2c205.14125 L152.785625%2c195.299375 Z M173.748125%2c239.94125 L178.916875%2c223.99875 L165.353125%2c214.155 L182.1125%2c214.144375 L187.281875%2c198.20125 L192.470625%2c214.138125 L209.23%2c214.1275 L195.6775%2c223.986875 L200.86625%2c239.92375 L187.30125%2c230.08 L173.748125%2c239.94125 Z' id='Shape'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3B = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/botswana%3c/title%3e %3cg id='flags/botswana' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-botswana' fill-rule='nonzero'%3e %3cpath d='M7.555625%2c111.30356 C2.654375%2c126.659245 0.000624889653%2c143.017434 0.000624889653%2c159.999375 C0.000624889653%2c176.980066 2.654375%2c193.33888 7.55625%2c208.69519 L160.000625%2c215.652717 L312.444375%2c208.69519 C317.345%2c193.33888 320%2c176.979441 320%2c160 C320%2c143.018684 317.345625%2c126.659245 312.444375%2c111.30356 L160%2c104.347283 L7.555625%2c111.30356 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cpath d='M320%2c160 C320%2c150.508088 319.16875%2c141.210552 317.583125%2c132.173016 L2.4175%2c132.173016 C0.83125%2c141.210552 0%2c150.506838 0%2c159.999375 C0%2c169.491912 0.831875%2c178.788198 2.4175%2c187.825734 L317.583125%2c187.825734 C319.168125%2c178.787573 320%2c169.491287 320%2c160 Z' id='Path' fill='black'%3e%3c/path%3e %3cg id='Group' transform='translate(7.555625%2c 0.000000)' fill='%23338AF3'%3e %3cpath d='M152.445%2c320 C223.83%2c320 284.28625%2c273.247942 304.88875%2c208.694565 L0.000625%2c208.694565 C20.60375%2c273.247317 81.060625%2c319.99875 152.445%2c320 Z' id='Path'%3e%3c/path%3e %3cpath d='M152.445%2c1.47793596e-14 C81.060625%2c1.47793596e-14 20.604375%2c46.7520576 0%2c111.304185 L304.8875%2c111.304185 C284.285625%2c46.7520576 223.82875%2c-0.00125000488 152.445%2c1.47793596e-14 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3A = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/brazil%3c/title%3e %3cg id='flags/brazil' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-brazil' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%236DA544' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpolygon id='Path' fill='%23FFDA44' points='160 62.60875 292.17375 160 160 257.39125 27.82625 160'%3e%3c/polygon%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='55.651875'%3e%3c/circle%3e %3cg id='Group' transform='translate(104.365625%2c 104.348125)' fill='%230052B4'%3e %3cpath d='M27.808125%2c52.17375 C18.130625%2c52.17375 8.79125%2c53.645625 0%2c56.376875 C0.389375%2c86.776875 25.141875%2c111.304375 55.634375%2c111.304375 C74.489375%2c111.304375 91.141875%2c101.91875 101.20875%2c87.574375 C83.985625%2c66.01375 57.485%2c52.17375 27.808125%2c52.17375 Z' id='Path'%3e%3c/path%3e %3cpath d='M110.255%2c66.314375 C110.925%2c62.861875 111.286875%2c59.3 111.286875%2c55.651875 C111.286875%2c24.915625 86.370625%2c1.77635684e-14 55.635%2c1.77635684e-14 C32.70125%2c1.77635684e-14 13.01375%2c13.875625 4.49375%2c33.686875 C12.025%2c32.12625 19.8225%2c31.304375 27.809375%2c31.304375 C60.1325%2c31.30375 89.37375%2c44.74 110.255%2c66.314375 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3z = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/british-columbia%3c/title%3e %3cg id='flags/british-columbia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-british-columbia' fill-rule='nonzero'%3e %3cpath d='M0.28854121%2c160 C0.28854121%2c71.635 71.7943559%2c0 160%2c0 C248.205644%2c0 319.711459%2c71.635 319.711459%2c160 L0.28854121%2c160 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cg id='Group' transform='translate(0.288541%2c 121.740000)' fill='%230052B4'%3e %3cpolygon id='Path' points='118.047356 29.513125 109.316255 38.26 118.047356 38.26'%3e%3c/polygon%3e %3cpolygon id='Path' points='201.375562 29.51375 201.375562 38.26 210.106039 38.26'%3e%3c/polygon%3e %3cpath d='M4.60792514%2c0 C1.60397719%2c12.26 0%2c25.071875 0%2c38.26 L50.3945801%2c38.26 L88.5855827%2c0 L4.60792514%2c0 Z' id='Path'%3e%3c/path%3e %3cpath d='M230.836087%2c0 L269.02709%2c38.26 L319.422918%2c38.26 C319.422918%2c25.071875 317.818317%2c12.26 314.814992%2c0 L230.836087%2c0 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(80.143647%2c 121.740000)' fill='%23D80027'%3e %3cpolygon id='Path' points='141.160599 0 121.520456 0 121.520456 0 159.711459 38.26 179.352225 38.26'%3e%3c/polygon%3e %3cpolygon id='Path' points='38.1922503 19.674375 38.1922503 0 38.1910026 0 -1.77315339e-14 38.26 19.6407662 38.26'%3e%3c/polygon%3e %3c/g%3e %3cg id='Group' transform='translate(56.372218%2c 24.463750)' fill='%230052B4'%3e %3cpath d='M18.7324073%2c4.4408921e-15 C12.1493006%2c4.1475 5.88998392%2c8.76125 8.86576694e-15%2c13.796875 L32.5037774%2c13.796875 L18.7324073%2c4.4408921e-15 Z' id='Path'%3e%3c/path%3e %3cpath d='M207.255564%2c13.796875 C201.36558%2c8.760625 195.106887%2c4.146875 188.524404%2c0 L174.753034%2c13.796875 L207.255564%2c13.796875 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(11.555062%2c 0.000000)' fill='%23D80027'%3e %3cpath d='M169.276678%2c100.869375 L296.889877%2c100.869375 C290.852035%2c85.67 282.553278%2c71.62125 272.413472%2c59.13 L169.277302%2c59.13 L169.276678%2c59.13 L169.276678%2c1.354375 C162.457747%2c0.465 155.505308%2c0 148.444938%2c0 C141.383321%2c0 134.432129%2c0.465 127.613199%2c1.354375 L127.613199%2c59.129375 L127.613199%2c59.13 L24.4764049%2c59.13 C14.3365989%2c71.62125 6.03784179%2c85.67 2.21644174e-14%2c100.869375 L127.611951%2c100.869375 L127.612575%2c100.869375 L127.612575%2c160 L169.276678%2c160 L169.276678%2c100.87 L169.276678%2c100.869375 Z' id='Path'%3e%3c/path%3e %3cpath d='M106.780835%2c38.260625 L106.780835%2c38.26 L82.7037091%2c14.139375 C78.2523761%2c16.15625 73.913964%2c18.378125 69.6922162%2c20.78 L87.141317%2c38.260625 L106.780835%2c38.260625 Z' id='Path'%3e%3c/path%3e %3cpath d='M190.109041%2c38.260625 L190.109041%2c38.260625 L214.186791%2c14.14 C209.606941%2c12.065625 204.911049%2c10.205625 200.113467%2c8.5625 L190.109041%2c18.585625 L190.109041%2c38.260625 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M319.711459%2c160 C319.711459%2c248.365 248.205644%2c320 160%2c320 C71.7943559%2c320 0.28854121%2c248.365 0.28854121%2c160 C7.23224643%2c160 319.711459%2c160 319.711459%2c160 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cg id='Group' transform='translate(0.496291%2c 168.215000)' fill='%230052B4'%3e %3cpath d='M292.594512%2c12.19125 C279.285432%2c12.19125 279.285432%2c0 265.975727%2c0 C252.666647%2c0 252.666647%2c12.19125 239.358191%2c12.19125 C226.049734%2c12.19125 226.04911%2c0 212.740654%2c0 C199.431574%2c0 199.431574%2c12.19125 186.12187%2c12.19125 C172.812166%2c12.19125 172.811542%2c0 159.501214%2c0 C146.192133%2c0 146.192133%2c12.19125 132.883677%2c12.19125 C119.576468%2c12.19125 119.576468%2c0 106.267388%2c0 C92.95706%2c0 92.95706%2c12.19125 79.646732%2c12.19125 C66.336404%2c12.19125 66.336404%2c0 53.0260759%2c0 C39.7188673%2c0 39.7188673%2c12.19125 26.409787%2c12.19125 C13.1724521%2c12.19125 13.0957157%2c0.134375 -1.32986504e-14%2c0.005625 C0.368708876%2c7.324375 1.24088317%2c14.509375 2.55975045%2c21.535625 C13.168085%2c23.0975 14.0970317%2c33.524375 26.4104109%2c33.524375 C39.7194912%2c33.524375 39.7194912%2c21.334375 53.0266998%2c21.334375 C66.3370278%2c21.334375 66.3370278%2c33.524375 79.6473559%2c33.524375 C92.9576839%2c33.524375 92.9576839%2c21.334375 106.268012%2c21.334375 C119.577092%2c21.334375 119.577092%2c33.524375 132.884301%2c33.524375 C146.193381%2c33.524375 146.193381%2c21.334375 159.501838%2c21.334375 C172.812166%2c21.334375 172.812166%2c33.524375 186.122494%2c33.524375 C199.432822%2c33.524375 199.432822%2c21.334375 212.741278%2c21.334375 C226.050358%2c21.334375 226.050358%2c33.524375 239.358815%2c33.524375 C252.667271%2c33.524375 252.667895%2c21.334375 265.976351%2c21.334375 C279.286679%2c21.334375 279.286679%2c33.524375 292.595136%2c33.524375 C304.909763%2c33.524375 305.838709%2c23.098125 316.447668%2c21.53625 C317.767159%2c14.509375 318.638085%2c7.325 319.008666%2c0.00625 C305.910455%2c0.135625 305.832471%2c12.19125 292.594512%2c12.19125 Z' id='Path'%3e%3c/path%3e %3cpath d='M265.975727%2c41.739375 C252.666647%2c41.739375 252.666647%2c53.930625 239.358191%2c53.930625 C226.049734%2c53.930625 226.04911%2c41.739375 212.740654%2c41.739375 C199.431574%2c41.739375 199.431574%2c53.930625 186.12187%2c53.930625 C172.811542%2c53.930625 172.811542%2c41.739375 159.501214%2c41.739375 C146.192133%2c41.739375 146.192133%2c53.930625 132.883677%2c53.930625 C119.576468%2c53.930625 119.576468%2c41.739375 106.267388%2c41.739375 C92.95706%2c41.739375 92.95706%2c53.930625 79.646732%2c53.930625 C66.336404%2c53.930625 66.336404%2c41.739375 53.0260759%2c41.739375 C39.7188673%2c41.739375 39.7188673%2c53.930625 26.409787%2c53.930625 C16.9000926%2c53.930625 14.1837501%2c47.708125 8.55329727%2c44.153125 C12.3015256%2c55.0025 17.177716%2c65.323125 23.0502315%2c74.970625 C24.0715114%2c75.159375 25.1832529%2c75.26375 26.409787%2c75.26375 C39.7188673%2c75.26375 39.7188673%2c63.07375 53.0260759%2c63.07375 C66.336404%2c63.07375 66.336404%2c75.26375 79.646732%2c75.26375 C92.95706%2c75.26375 92.95706%2c63.07375 106.267388%2c63.07375 C119.576468%2c63.07375 119.576468%2c75.26375 132.883677%2c75.26375 C146.192757%2c75.26375 146.192757%2c63.07375 159.501214%2c63.07375 C172.811542%2c63.07375 172.811542%2c75.26375 186.12187%2c75.26375 C199.432198%2c75.26375 199.432198%2c63.07375 212.740654%2c63.07375 C226.049734%2c63.07375 226.049734%2c75.26375 239.358191%2c75.26375 C252.666647%2c75.26375 252.667271%2c63.07375 265.975727%2c63.07375 C279.286055%2c63.07375 279.286055%2c75.26375 292.594512%2c75.26375 C293.82167%2c75.26375 294.934035%2c75.159375 295.955315%2c74.97 C301.827831%2c65.323125 306.704021%2c55.0025 310.453497%2c44.15375 C304.82242%2c47.706875 302.106078%2c53.930625 292.594512%2c53.930625 C279.286055%2c53.930625 279.286055%2c41.739375 265.975727%2c41.739375 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(0.000000%2c 154.972500)' fill='%23F0F0F0'%3e %3cpath d='M319.625364%2c0.000625 C319.63909%2c0.445 319.654686%2c0.889375 319.664668%2c1.335625 C319.654686%2c0.89 319.638466%2c0.445 319.625364%2c0.000625 Z' id='Path'%3e%3c/path%3e %3cpath d='M0.335331676%2c1.335 C0.345937515%2c0.889375 0.360910464%2c0.445 0.374635668%2c0 C0.361534337%2c0.445 0.345313642%2c0.89 0.335331676%2c1.335 Z' id='Path'%3e%3c/path%3e %3cpath d='M0.28854121%2c5.0275 C0.28854121%2c3.793125 0.307257396%2c2.56375 0.335331676%2c1.335 C0.306633523%2c2.56375 0.28854121%2c3.793125 0.28854121%2c5.0275 Z' id='Path'%3e%3c/path%3e %3cpath d='M0.28854121%2c5.0275 C0.28854121%2c7.941875 0.370892431%2c10.8375 0.526236779%2c13.713125 C13.5920066%2c13.86 13.678725%2c25.896875 26.9067018%2c25.896875 C40.215782%2c25.896875 40.215782%2c13.706875 53.5229907%2c13.706875 C66.8333187%2c13.706875 66.8333187%2c25.896875 80.1436467%2c25.896875 C93.4539748%2c25.896875 93.4539748%2c13.706875 106.764303%2c13.706875 C120.073383%2c13.706875 120.073383%2c25.896875 133.380592%2c25.896875 C146.689672%2c25.896875 146.689672%2c13.706875 159.998128%2c13.706875 C173.308456%2c13.706875 173.308456%2c25.896875 186.618784%2c25.896875 C199.929112%2c25.896875 199.929112%2c13.706875 213.237569%2c13.706875 C226.546649%2c13.706875 226.546649%2c25.896875 239.855106%2c25.896875 C253.163562%2c25.896875 253.164186%2c13.706875 266.472642%2c13.706875 C279.78297%2c13.706875 279.78297%2c25.896875 293.091427%2c25.896875 C306.320651%2c25.896875 306.407369%2c13.86 319.475635%2c13.713125 C319.629108%2c10.836875 319.711459%2c7.941875 319.711459%2c5.0275 L0.28854121%2c5.0275 Z' id='Path'%3e%3c/path%3e %3cpath d='M319.664668%2c1.335 C319.692743%2c2.5625 319.711459%2c3.7925 319.711459%2c5.0275 C319.711459%2c3.793125 319.693366%2c2.56375 319.664668%2c1.335 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M266.472018%2c251.693125 C253.162938%2c251.693125 253.162938%2c263.884375 239.854482%2c263.884375 C226.546025%2c263.884375 226.545401%2c251.693125 213.236945%2c251.693125 C199.927865%2c251.693125 199.927865%2c263.884375 186.618161%2c263.884375 C173.307833%2c263.884375 173.307833%2c251.693125 159.997505%2c251.693125 C146.688424%2c251.693125 146.688424%2c263.884375 133.379968%2c263.884375 C120.072759%2c263.884375 120.072759%2c251.693125 106.763679%2c251.693125 C93.4533509%2c251.693125 93.4533509%2c263.884375 80.1430229%2c263.884375 C66.8326948%2c263.884375 66.8326948%2c251.693125 53.5223668%2c251.693125 C44.3302237%2c251.693125 41.4859872%2c257.508125 36.2205001%2c261.10625 C50.1883901%2c278.2475 67.6381147%2c292.425 87.4803919%2c302.57625 L160%2c298.91625 L232.518984%2c302.575625 C252.360638%2c292.42375 269.810362%2c278.248125 283.778252%2c261.106875 C278.51027%2c257.509375 275.666033%2c251.693125 266.472018%2c251.693125 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M248.579344%2c255.50875 L199.995243%2c264.818125 L193.840113%2c215.651875 L160%2c251.811875 L126.161135%2c215.651875 L120.003509%2c264.8175 L71.4219038%2c255.508125 L95.2469854%2c298.915625 L87.4660428%2c302.581875 C109.23172%2c313.718125 133.882809%2c320 160%2c320 C186.117191%2c320 210.76828%2c313.718125 232.533957%2c302.583125 L224.756134%2c298.9175 L248.579344%2c255.50875 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3y = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/british-indian-ocean-territory%3c/title%3e %3cg id='flags/british-indian-ocean-territory' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-british-indian-ocean-territory' fill-rule='nonzero'%3e %3cellipse id='Oval' fill='%23F0F0F0' cx='160' cy='160.156098' rx='160' ry='159.843902'%3e%3c/ellipse%3e %3cg id='Group' transform='translate(0.208125%2c 0.000000)' fill='%230052B4'%3e %3cpath d='M293.123125%2c179.285541 C279.79%2c179.285541 279.79%2c167.106185 266.45625%2c167.106185 C253.123125%2c167.106185 253.123125%2c179.285541 239.790625%2c179.285541 C226.458125%2c179.285541 226.4575%2c167.106185 213.125%2c167.106185 C199.791875%2c167.106185 199.791875%2c179.285541 186.458125%2c179.285541 C173.124375%2c179.285541 173.12375%2c167.106185 159.789375%2c167.106185 C146.45625%2c167.106185 146.45625%2c179.285541 133.12375%2c179.285541 C119.7925%2c179.285541 119.7925%2c167.106185 106.459375%2c167.106185 C93.125%2c167.106185 93.125%2c179.285541 79.790625%2c179.285541 C66.45625%2c179.285541 66.45625%2c167.106185 53.121875%2c167.106185 C39.790625%2c167.106185 39.790625%2c179.285541 26.4575%2c179.285541 C13.19625%2c179.285541 13.119375%2c167.240429 -1.33226763e-14%2c167.111805 C0.369375%2c174.42279 1.243125%2c181.601405 2.564375%2c188.621424 C13.191875%2c190.180527 14.1225%2c200.597229 26.45875%2c200.597229 C39.791875%2c200.597229 39.791875%2c188.419122 53.123125%2c188.419122 C66.4575%2c188.419122 66.4575%2c200.597229 79.791875%2c200.597229 C93.12625%2c200.597229 93.12625%2c188.419122 106.460625%2c188.419122 C119.79375%2c188.419122 119.79375%2c200.597229 133.125%2c200.597229 C146.458125%2c200.597229 146.458125%2c188.419122 159.790625%2c188.419122 C173.125%2c188.419122 173.125%2c200.597229 186.459375%2c200.597229 C199.79375%2c200.597229 199.79375%2c188.419122 213.12625%2c188.419122 C226.459375%2c188.419122 226.459375%2c200.597229 239.791875%2c200.597229 C253.125%2c200.597229 253.125%2c188.419122 266.4575%2c188.419122 C279.791875%2c188.419122 279.791875%2c200.597229 293.124375%2c200.597229 C305.46125%2c200.597229 306.391875%2c190.181151 317.02%2c188.621424 C318.341875%2c181.60078 319.214375%2c174.423415 319.585625%2c167.111805 C306.463125%2c167.241054 306.385%2c179.285541 293.123125%2c179.285541 Z' id='Path'%3e%3c/path%3e %3cpath d='M266.45625%2c208.804215 C253.123125%2c208.804215 253.123125%2c220.983571 239.790625%2c220.983571 C226.458125%2c220.983571 226.4575%2c208.804215 213.125%2c208.804215 C199.791875%2c208.804215 199.791875%2c220.983571 186.458125%2c220.983571 C173.12375%2c220.983571 173.12375%2c208.804215 159.789375%2c208.804215 C146.45625%2c208.804215 146.45625%2c220.983571 133.12375%2c220.983571 C119.7925%2c220.983571 119.7925%2c208.804215 106.459375%2c208.804215 C93.125%2c208.804215 93.125%2c220.983571 79.790625%2c220.983571 C66.45625%2c220.983571 66.45625%2c208.804215 53.121875%2c208.804215 C39.790625%2c208.804215 39.790625%2c220.983571 26.4575%2c220.983571 C16.635625%2c220.983571 14.0425%2c214.378771 8.028125%2c210.899668 C11.670625%2c221.775922 16.455%2c232.127688 22.233125%2c241.820722 C23.484375%2c242.122302 24.875625%2c242.295883 26.456875%2c242.295883 C39.79%2c242.295883 39.79%2c230.117776 53.12125%2c230.117776 C66.455625%2c230.117776 66.455625%2c242.295883 79.79%2c242.295883 C93.124375%2c242.295883 93.124375%2c230.117776 106.45875%2c230.117776 C119.791875%2c230.117776 119.791875%2c242.295883 133.123125%2c242.295883 C146.45625%2c242.295883 146.45625%2c230.117776 159.78875%2c230.117776 C173.123125%2c230.117776 173.123125%2c242.295883 186.4575%2c242.295883 C199.791875%2c242.295883 199.791875%2c230.117776 213.124375%2c230.117776 C226.4575%2c230.117776 226.4575%2c242.295883 239.79%2c242.295883 C253.1225%2c242.295883 253.123125%2c230.117776 266.455625%2c230.117776 C279.79%2c230.117776 279.79%2c242.295883 293.1225%2c242.295883 C294.705%2c242.295883 296.0975%2c242.122302 297.349375%2c241.820098 C303.128125%2c232.127688 307.911875%2c221.775922 311.55375%2c210.900293 C305.539375%2c214.379395 302.945625%2c220.984195 293.1225%2c220.984195 C279.790625%2c220.983571 279.790625%2c208.804215 266.45625%2c208.804215 Z' id='Path'%3e%3c/path%3e %3cpath d='M316.069375%2c125.777795 C306.323125%2c127.798946 305.080625%2c137.586888 293.123125%2c137.586888 C279.79%2c137.586888 279.79%2c125.407532 266.45625%2c125.407532 C253.123125%2c125.407532 253.123125%2c137.586888 239.790625%2c137.586888 C226.458125%2c137.586888 226.4575%2c125.407532 213.125%2c125.407532 C199.791875%2c125.407532 199.791875%2c137.586888 186.458125%2c137.586888 C173.124375%2c137.586888 173.12375%2c125.407532 159.789375%2c125.407532 C152.585%2c125.407532 149.2725%2c128.96281 145.646875%2c132.232117 L145.646875%2c153.544429 C149.2725%2c150.275746 152.584375%2c146.721093 159.789375%2c146.721093 C173.12375%2c146.721093 173.12375%2c158.8992 186.458125%2c158.8992 C199.7925%2c158.8992 199.7925%2c146.721093 213.125%2c146.721093 C226.458125%2c146.721093 226.458125%2c158.8992 239.790625%2c158.8992 C253.123125%2c158.8992 253.12375%2c146.721093 266.45625%2c146.721093 C279.790625%2c146.721093 279.790625%2c158.8992 293.123125%2c158.8992 C305.46%2c158.8992 306.390625%2c148.483122 317.01875%2c146.923395 C317.7%2c146.923395 318.46125%2c146.916527 319.240625%2c146.907161 C318.65%2c139.718556 317.58125%2c132.665444 316.069375%2c125.777795 Z' id='Path'%3e%3c/path%3e %3cpath d='M304.381875%2c91.6442537 C301.61875%2c93.9626146 298.425%2c95.8882341 293.12375%2c95.8882341 C279.790625%2c95.8882341 279.790625%2c83.708878 266.456875%2c83.708878 C253.12375%2c83.708878 253.12375%2c95.8882341 239.79125%2c95.8882341 C226.45875%2c95.8882341 226.458125%2c83.708878 213.125625%2c83.708878 C199.7925%2c83.708878 199.7925%2c95.8882341 186.45875%2c95.8882341 C173.125%2c95.8882341 173.124375%2c83.708878 159.79%2c83.708878 C152.585625%2c83.708878 149.273125%2c87.2641561 145.6475%2c90.5334634 L145.6475%2c111.845776 C149.273125%2c108.577093 152.585%2c105.022439 159.79%2c105.022439 C173.124375%2c105.022439 173.124375%2c117.200546 186.45875%2c117.200546 C199.791875%2c117.200546 199.791875%2c105.022439 213.125%2c105.022439 C226.458125%2c105.022439 226.458125%2c117.200546 239.790625%2c117.200546 C253.123125%2c117.200546 253.123125%2c105.022439 266.45625%2c105.022439 C279.790625%2c105.022439 279.790625%2c117.200546 293.123125%2c117.200546 C302.58375%2c117.200546 305.339375%2c111.0784 310.901875%2c107.518127 C309.00625%2c102.087805 306.829375%2c96.7898537 304.381875%2c91.6442537 Z' id='Path'%3e%3c/path%3e %3cpath d='M267.595%2c42.0433171 C267.225%2c42.0233366 266.848125%2c42.0108488 266.45625%2c42.0108488 C253.123125%2c42.0108488 253.123125%2c54.1902049 239.790625%2c54.1902049 C226.4575%2c54.1902049 226.4575%2c42.0108488 213.125%2c42.0108488 C199.791875%2c42.0108488 199.791875%2c54.1902049 186.4575%2c54.1902049 C173.123125%2c54.1902049 173.123125%2c42.0108488 159.78875%2c42.0108488 C152.584375%2c42.0108488 149.271875%2c45.5661268 145.64625%2c48.8354341 L145.64625%2c70.1477463 C149.271875%2c66.8790634 152.58375%2c63.3244098 159.78875%2c63.3244098 C173.123125%2c63.3244098 173.123125%2c75.5025171 186.4575%2c75.5025171 C199.791875%2c75.5025171 199.791875%2c63.3244098 213.124375%2c63.3244098 C226.4575%2c63.3244098 226.4575%2c75.5025171 239.79%2c75.5025171 C253.1225%2c75.5025171 253.123125%2c63.3244098 266.455625%2c63.3244098 C279.79%2c63.3244098 279.79%2c75.5025171 293.1225%2c75.5025171 C293.94375%2c75.5025171 294.710625%2c75.4538146 295.436875%2c75.3670244 C287.6925%2c63.0265756 278.315%2c51.8144 267.595%2c42.0433171 Z' id='Path'%3e%3c/path%3e %3cpolygon id='Path' points='159.789375 0.312195122 159.786875 0.312195122 159.79 0.312195122'%3e%3c/polygon%3e %3cpath d='M200.686875%2c5.59079024 C197.026875%2c8.88007805 193.719375%2c12.4928 186.4575%2c12.4928 C173.123125%2c12.4928 173.123125%2c0.314692683 159.789375%2c0.313443902 L159.786875%2c0.313443902 C152.891875%2c0.314068293 149.563125%2c3.5715122 146.110625%2c6.71781463 L146.110625%2c28.0307512 C149.5625%2c24.8844488 152.8925%2c21.6263805 159.789375%2c21.6263805 C173.12375%2c21.6263805 173.12375%2c33.8044878 186.458125%2c33.8044878 C199.791875%2c33.8044878 199.791875%2c21.6263805 213.125%2c21.6263805 C226.458125%2c21.6263805 226.458125%2c33.8044878 239.790625%2c33.8044878 C245.385%2c33.8044878 248.63%2c31.6590829 251.5%2c29.1702634 C236.29%2c18.5212878 219.14125%2c10.4504195 200.686875%2c5.59079024 Z' id='Path'%3e%3c/path%3e %3cpath d='M186.4575%2c304.380254 C173.123125%2c304.380254 173.123125%2c292.200898 159.78875%2c292.200898 C146.455625%2c292.200898 146.455625%2c304.380254 133.123125%2c304.380254 C119.791875%2c304.380254 119.791875%2c292.200898 106.45875%2c292.200898 C96.245625%2c292.200898 93.85%2c299.340176 87.3%2c302.685659 C105.3625%2c311.872937 125.404375%2c317.729093 146.616875%2c319.45678 C149.8975%2c316.462205 153.23%2c313.513834 159.78875%2c313.513834 C166.349375%2c313.513834 169.681875%2c316.462205 172.963125%2c319.457405 C194.17625%2c317.730341 214.219375%2c311.873561 232.2825%2c302.686283 C225.73125%2c299.341424 223.33625%2c292.200273 213.124375%2c292.200273 C199.791875%2c292.200898 199.791875%2c304.380254 186.4575%2c304.380254 Z' id='Path'%3e%3c/path%3e %3cpath d='M239.790625%2c262.682224 C226.4575%2c262.682224 226.4575%2c250.502868 213.125%2c250.502868 C199.791875%2c250.502868 199.791875%2c262.682224 186.458125%2c262.682224 C173.12375%2c262.682224 173.12375%2c250.502868 159.789375%2c250.502868 C146.45625%2c250.502868 146.45625%2c262.682224 133.12375%2c262.682224 C119.7925%2c262.682224 119.7925%2c250.502868 106.459375%2c250.502868 C93.125%2c250.502868 93.125%2c262.682224 79.790625%2c262.682224 C66.45625%2c262.682224 66.45625%2c250.502868 53.121875%2c250.502868 C43.53375%2c250.502868 40.84125%2c256.802966 35.125625%2c260.340137 C38.708125%2c264.784546 42.516875%2c269.039141 46.5475%2c273.072702 C48.353125%2c272.302205 50.471875%2c271.815805 53.12125%2c271.815805 C66.455625%2c271.815805 66.455625%2c283.993912 79.79%2c283.993912 C93.124375%2c283.993912 93.124375%2c271.815805 106.45875%2c271.815805 C119.791875%2c271.815805 119.791875%2c283.993912 133.123125%2c283.993912 C146.45625%2c283.993912 146.45625%2c271.815805 159.78875%2c271.815805 C173.123125%2c271.815805 173.123125%2c283.993912 186.4575%2c283.993912 C199.791875%2c283.993912 199.791875%2c271.815805 213.124375%2c271.815805 C226.456875%2c271.815805 226.4575%2c283.993912 239.79%2c283.993912 C253.1225%2c283.993912 253.123125%2c271.815805 266.455625%2c271.815805 C269.108125%2c271.815805 271.226875%2c272.302205 273.03375%2c273.073951 C277.065%2c269.039766 280.87375%2c264.785171 284.45625%2c260.340761 C278.74%2c256.804215 276.0475%2c250.503493 266.45625%2c250.503493 C253.123125%2c250.502868 253.123125%2c262.682224 239.790625%2c262.682224 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(159.473437%2c 0.000000)' fill='%23F0F0F0'%3e %3cpath d='M0.637774413%2c0.312195122 C0.625662377%2c0.312195122 0.61657835%2c0.312195122 0.605223316%2c0.312195122 L0.637774413%2c0.312195122 L0.637774413%2c0.312195122 Z' id='Path'%3e%3c/path%3e %3cpath d='M0.119227858%2c160.156098 L0.637774413%2c160.156098 C0.637774413%2c160.012488 0.637774413%2c159.872624 0.637774413%2c159.72839 C0.465177896%2c159.871376 0.292581378%2c160.013737 0.119227858%2c160.156098 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpolygon id='Path' fill='%23496E2D' points='180.869375 160.156098 180.869375 160.156098 180.869375 160.155473'%3e%3c/polygon%3e %3cg id='Group' transform='translate(76.521875%2c 76.759415)' fill='%230052B4'%3e %3cpolygon id='Path' points='83.478125 6.94946341 83.478125 53.9117268 27.82625 1.77462381e-14'%3e%3c/polygon%3e %3cpolygon id='Path' points='6.956875 83.3966829 53.963125 83.3966829 6.95625 20.8490146 0 69.4971317'%3e%3c/polygon%3e %3c/g%3e %3cpath d='M160.000625%2c83.708878 C160.000625%2c55.5832195 160.000625%2c37.1543415 160.000625%2c0.312195122 L159.973125%2c0.312195122 C71.62%2c0.327180488 0%2c71.8854244 0%2c160.156098 L83.47875%2c160.156098 L83.47875%2c113.195083 L130.485%2c160.156098 L159.5725%2c160.156098 C159.715%2c160.013737 159.8575%2c159.871376 160.000625%2c159.72839 C160.000625%2c148.959532 160.000625%2c139.35079 160.000625%2c130.671141 L112.9925%2c83.708878 L160.000625%2c83.708878 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cg id='Group' transform='translate(20.869375%2c 21.161210)' fill='%23D80027'%3e %3cpath d='M60.0775%2c4.43655952e-15 C35.053125%2c14.2354732 14.249375%2c35.0189268 4.4408921e-15%2c60.0188878 L4.4408921e-15%2c138.994888 L41.739375%2c138.994888 L41.739375%2c41.6999024 L41.739375%2c41.6986537 L139.130625%2c41.6986537 C139.130625%2c28.547122 139.130625%2c16.0181073 139.130625%2c4.43655952e-15 L60.0775%2c4.43655952e-15 Z' id='Path'%3e%3c/path%3e %3cpath d='M139.130625%2c119.338459 L82.28375%2c62.5482927 L62.60875%2c62.5482927 L62.60875%2c62.5495415 L139.129375%2c138.994888 L139.130625%2c138.994888 C139.130625%2c138.994888 139.130625%2c125.441249 139.130625%2c119.338459 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpolygon id='Path' fill='%236DA544' points='208.695625 83.708878 271.304375 83.708878 240 114.982712'%3e%3c/polygon%3e %3cg id='Group' transform='translate(233.043750%2c 108.033249)' fill='%23A2001D'%3e %3crect id='Rectangle' x='0' y='-1.77462381e-14' width='13.913125' height='38.2232976'%3e%3c/rect%3e %3crect id='Rectangle' x='0' y='100.770966' width='13.913125' height='38.2232976'%3e%3c/rect%3e %3c/g%3e %3cpath d='M281.739375%2c187.9552 C281.739375%2c176.44082 272.395625%2c167.106185 260.87%2c167.106185 C255.52375%2c167.106185 250.65%2c169.116722 246.956875%2c172.419122 L246.956875%2c160.156098 L253.913125%2c160.156098 L253.913125%2c146.256546 L246.956875%2c146.256546 L246.956875%2c139.307083 L233.04375%2c139.307083 L233.04375%2c146.256546 L226.0875%2c146.256546 L226.0875%2c160.156098 L233.04375%2c160.156098 L233.04375%2c172.419122 C229.350625%2c169.116722 224.476875%2c167.106185 219.130625%2c167.106185 C207.605%2c167.106185 198.26125%2c176.44082 198.26125%2c187.9552 C198.26125%2c194.128546 200.949375%2c199.673132 205.2175%2c203.491278 L205.2175%2c215.754302 L274.7825%2c215.754302 L274.7825%2c203.491278 C279.05125%2c199.673132 281.739375%2c194.128546 281.739375%2c187.9552 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M260.869375%2c181.005112 C258.675%2c181.005112 257.13875%2c181.967922 256.235625%2c182.774634 L246.95625%2c191.073405 L233.04375%2c191.073405 L223.764375%2c182.774634 C222.86125%2c181.967922 221.325%2c181.005112 219.130625%2c181.005112 C215.295%2c181.005112 212.174375%2c184.122693 212.174375%2c187.954576 C212.174375%2c190.653815 213.63125%2c192.359024 214.499375%2c193.13639 L219.13125%2c197.279844 L219.13125%2c201.854127 L260.870625%2c201.854127 L260.870625%2c197.279844 L265.5025%2c193.13639 C266.370625%2c192.359649 267.8275%2c190.653815 267.8275%2c187.954576 C267.82625%2c184.122693 264.705625%2c181.005112 260.869375%2c181.005112 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3x = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/british-virgin-islands%3c/title%3e %3cg id='flags/british-virgin-islands' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-british-virgin-islands' fill-rule='nonzero'%3e %3cpath d='M320%2c160.156098 C320%2c248.434888 248.365%2c320 160%2c320 C71.635%2c320 0%2c248.434888 0%2c160.156098 C0%2c160.194185 160%2c0.329678049 160%2c0.312195122 C248.365%2c0.312195122 320%2c71.8773073 320%2c160.156098 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cg id='Group' fill='%23F0F0F0'%3e %3cpath d='M160%2c0.312195122 C159.99%2c0.312195122 159.9825%2c0.312195122 159.973125%2c0.312195122 L160%2c0.312195122 L160%2c0.312195122 Z' id='Path'%3e%3c/path%3e %3cpath d='M159.571875%2c160.156098 L160%2c160.156098 C160%2c160.012488 160%2c159.872624 160%2c159.72839 C159.8575%2c159.871376 159.715%2c160.013737 159.571875%2c160.156098 Z' id='Path'%3e%3c/path%3e %3cpath d='M160.000625%2c83.708878 C160.000625%2c55.5832195 160.000625%2c37.1543415 160.000625%2c0.312195122 L159.973125%2c0.312195122 C71.619375%2c0.327180488 0%2c71.8854244 0%2c160.156098 L83.478125%2c160.156098 L83.478125%2c113.195083 L130.485%2c160.156098 L159.5725%2c160.156098 C159.715%2c160.013737 159.8575%2c159.871376 160.000625%2c159.72839 C160.000625%2c148.959532 160.000625%2c139.35079 160.000625%2c130.671141 L112.9925%2c83.708878 L160.000625%2c83.708878 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M80.946875%2c21.1612098 C55.9225%2c35.3966829 35.118125%2c56.1801366 20.869375%2c81.1800976 L20.869375%2c160.156098 L62.60875%2c160.156098 L62.60875%2c62.8611122 L62.60875%2c62.8598634 L160%2c62.8598634 C160%2c49.7083317 160%2c37.1793171 160%2c21.1612098 L80.946875%2c21.1612098 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M229.565%2c160.156098 L186.319375%2c203.359532 C194.424375%2c218.976156 210.741875%2c229.653229 229.565%2c229.653229 C248.388125%2c229.653229 264.705625%2c218.976156 272.810625%2c203.359532 L229.565%2c160.156098 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M160%2c140.499668 L103.153125%2c83.7095024 L83.478125%2c83.7095024 L83.478125%2c83.7107512 L159.99875%2c160.156098 L160%2c160.156098 C160%2c160.156098 160%2c146.602459 160%2c140.499668 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M180.869375%2c83.708878 L180.869375%2c160.155473 L180.869375%2c160.156098 L180.869375%2c160.156098 C180.869375%2c197.394107 229.565%2c208.804215 229.565%2c208.804215 C229.565%2c208.804215 278.260625%2c197.394107 278.260625%2c160.156098 L278.260625%2c160.156098 L278.260625%2c160.155473 L278.260625%2c83.708878 L180.869375%2c83.708878 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cg id='Group' transform='translate(180.556875%2c 159.843590)' fill='%23496E2D'%3e %3cpath d='M97.70375%2c0.5005 L97.70375%2c0.4995 L97.70375%2c0.5005 Z' id='Path'%3e%3c/path%3e %3cpolygon id='Path' points='0.3125 0.5005 0.3125 0.5005 0.3125 0.4995'%3e%3c/polygon%3e %3c/g%3e %3crect id='Rectangle' fill='%23F0F0F0' x='219.130625' y='118.457444' width='20.869375' height='55.5975805'%3e%3c/rect%3e %3cellipse id='Oval' fill='%23A2001D' cx='229.565' cy='118.457444' rx='10.435' ry='10.4248195'%3e%3c/ellipse%3e %3cg id='Group' transform='translate(194.782500%2c 97.608429)' fill='%23FFDA44'%3e %3crect id='Rectangle' x='0' y='-1.77462381e-14' width='13.913125' height='13.8995512'%3e%3c/rect%3e %3crect id='Rectangle' x='0' y='31.2738341' width='13.913125' height='13.8995512'%3e%3c/rect%3e %3crect id='Rectangle' x='0' y='62.5476683' width='13.913125' height='13.8995512'%3e%3c/rect%3e %3crect id='Rectangle' x='55.6525' y='-1.77462381e-14' width='13.913125' height='13.8995512'%3e%3c/rect%3e %3crect id='Rectangle' x='55.6525' y='31.2738341' width='13.913125' height='13.8995512'%3e%3c/rect%3e %3crect id='Rectangle' x='55.6525' y='62.5476683' width='13.913125' height='13.8995512'%3e%3c/rect%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3w = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/brunei%3c/title%3e %3cg id='flags/brunei' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-brunei' transform='translate(0.000000%2c 0.000000)' fill-rule='nonzero'%3e %3cellipse id='Oval' fill='%23F0F0F0' cx='160.001319' cy='160.000918' rx='159.984622' ry='159.976572'%3e%3c/ellipse%3e %3cpath d='M21.4494872%2c80.0116949 C14.2283433%2c92.5169643 8.90171048%2c105.590996 5.35458057%2c118.908158 L272.910058%2c273.374611 C282.670134%2c263.643777 291.330756%2c252.492911 298.550025%2c239.988267 L21.4494872%2c80.0116949 Z' id='Path' fill='black'%3e%3c/path%3e %3cg id='Group' fill='%23FFDA44'%3e %3cpath d='M239.992692%2c21.4560581 C175.978092%2c-15.5003632 97.0474198%2c-3.18322281 47.0894547%2c46.6253505 L314.644932%2c201.090554 C332.804362%2c132.925335 304.006042%2c58.4131045 239.992692%2c21.4560581 Z' id='Path'%3e%3c/path%3e %3cpath d='M80.0080703%2c298.543904 C144.02142%2c335.500325 222.953968%2c323.183185 272.910683%2c273.375236 L5.35458057%2c118.908158 C-12.8035993%2c187.075252 15.9934701%2c261.587482 80.0080703%2c298.543904 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(97.398695%2c 90.445670)' fill='%23D80027'%3e %3cpath d='M107.814623%2c52.1654991 C107.814623%2c77.1341621 87.5719181%2c97.3764733 62.6013736%2c97.3764733 C37.6308292%2c97.3764733 17.3881245%2c77.1347871 17.3881245%2c52.1654991 C17.3881245%2c44.3803313 19.356391%2c37.0545484 22.8228901%2c30.6587856 C13.01156%2c40.6921268 6.95424974%2c54.4124225 6.95424974%2c69.5539987 C6.95424974%2c100.285286 31.8679151%2c125.198323 62.6013736%2c125.198323 C93.3348322%2c125.198323 118.248498%2c100.285911 118.248498%2c69.5539987 C118.248498%2c54.4124225 112.191812%2c40.6921268 102.379857%2c30.6587856 C105.846356%2c37.0557985 107.814623%2c44.3803313 107.814623%2c52.1654991 Z' id='Path'%3e%3c/path%3e %3crect id='Rectangle' x='52.1687489' y='-1.77639512e-14' width='20.8677496' height='104.332873'%3e%3c/rect%3e %3cpath d='M97.380748%2c20.8660746 L27.8226244%2c20.8660746 C27.8226244%2c25.6680531 32.00605%2c29.560637 36.8076451%2c29.560637 L36.5176242%2c29.560637 C36.5176242%2c34.3626154 40.411029%2c38.2551993 45.2126241%2c38.2551993 C45.2126241%2c43.0571778 49.1060288%2c46.9497617 53.9076239%2c46.9497617 L71.2969985%2c46.9497617 C76.0992186%2c46.9497617 79.9919984%2c43.0571778 79.9919984%2c38.2551993 C84.7942185%2c38.2551993 88.6869982%2c34.3626154 88.6869982%2c29.560637 L88.3976024%2c29.560637 C93.1979474%2c29.560012 97.380748%2c25.6686781 97.380748%2c20.8660746 Z' id='Path'%3e%3c/path%3e %3crect id='Rectangle' x='13.9116247' y='111.288023' width='97.381998' height='20.8666996'%3e%3c/rect%3e %3crect id='Rectangle' x='83.4697483' y='118.243798' width='41.7348741' height='20.8666996'%3e%3c/rect%3e %3crect id='Rectangle' x='-1.7764845e-14' y='118.243798' width='41.7348741' height='20.8666996'%3e%3c/rect%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3v = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/bulgaria%3c/title%3e %3cg id='flags/bulgaria' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-bulgaria' fill-rule='nonzero'%3e %3cpath d='M320%2c160 C320%2c140.42875 316.48%2c121.680625 310.048125%2c104.348125 L160%2c97.39125 L9.951875%2c104.3475 C3.520625%2c121.680625 0%2c140.42875 0%2c160 C0%2c179.57125 3.520625%2c198.319375 9.951875%2c215.651875 L160%2c222.60875 L310.048125%2c215.6525 C316.48%2c198.319375 320%2c179.57125 320%2c160 Z' id='Path' fill='%23496E2D'%3e%3c/path%3e %3cpath d='M160%2c320 C228.794375%2c320 287.44125%2c276.58 310.048125%2c215.651875 L9.951875%2c215.651875 C32.55875%2c276.58 91.205625%2c320 160%2c320 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M9.951875%2c104.348125 L310.04875%2c104.348125 C287.44125%2c43.42 228.794375%2c0 160%2c0 C91.205625%2c0 32.55875%2c43.42 9.951875%2c104.348125 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3u = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/burkina-faso%3c/title%3e %3cg id='flags/burkina-faso' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-burkina-faso' fill-rule='nonzero'%3e %3cpath d='M0%2c160 C0%2c71.635 71.635%2c0 160%2c0 C248.365%2c0 320%2c71.635 320%2c160 C313.04375%2c160 160%2c180.869375 160%2c180.869375 L0%2c160 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M320%2c160 C320%2c248.365 248.365%2c320 160%2c320 C71.635%2c320 0%2c248.365 0%2c160' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpolygon id='Path' fill='%23FFDA44' points='159.999375 104.348125 172.085 141.546875 211.201875 141.546875 179.556875 164.538125 191.643125 201.739375 159.999375 178.74875 128.355 201.739375 140.443125 164.538125 108.7975 141.546875 147.9125 141.546875'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3t = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/burundi%3c/title%3e %3cg id='flags/burundi' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-burundi' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(62.577500%2c 0.004609)' fill='%23D80027'%3e %3cpath d='M194.845%2c33.0591406 C137.5625%2c-11.0196094 57.2825%2c-11.0196094 0%2c33.0585156 L97.4225%2c130.481016 L194.845%2c33.0591406 Z' id='Path'%3e%3c/path%3e %3cpath d='M97.42125%2c189.509141 L1.77635684e-14%2c286.931641 C57.2825%2c331.010391 137.5625%2c331.010391 194.845%2c286.931641 L97.4225%2c189.509141 L97.42125%2c189.509141 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(0.004687%2c 62.577500)' fill='%236DA544'%3e %3cpath d='M130.480938%2c97.4225 L33.0590625%2c1.77635684e-14 C-11.0196875%2c57.2825 -11.0196875%2c137.5625 33.0590625%2c194.845 L130.480938%2c97.4225 L130.480938%2c97.4225 Z' id='Path'%3e%3c/path%3e %3cpath d='M189.510312%2c97.4225 L286.931562%2c194.845 C331.010312%2c137.5625 331.010312%2c57.2825 286.931562%2c0 L189.510312%2c97.4225 L189.510312%2c97.4225 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='69.565'%3e%3c/circle%3e %3cg id='Group' transform='translate(111.304375%2c 111.304375)' fill='%23D80027'%3e %3cpolygon id='Path' points='48.695625 0 54.72 10.435 66.769375 10.435 60.744375 20.869375 66.769375 31.304375 54.72 31.304375 48.695625 41.739375 42.67125 31.304375 30.6225 31.304375 36.646875 20.869375 30.6225 10.435 42.67125 10.435'%3e%3c/polygon%3e %3cpolygon id='Path' points='18.07375 48.695625 24.098125 59.130625 36.146875 59.130625 30.1225 69.565 36.146875 80 24.098125 80 18.07375 90.435 12.04875 80 0 80 6.024375 69.565 0 59.130625 12.04875 59.130625'%3e%3c/polygon%3e %3cpolygon id='Path' points='79.318125 48.695625 85.3425 59.130625 97.39125 59.130625 91.366875 69.565 97.39125 80 85.3425 80 79.318125 90.435 73.293125 80 61.244375 80 67.26875 69.565 61.244375 59.130625 73.293125 59.130625'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3s = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/cambodia%3c/title%3e %3cg id='flags/cambodia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-cambodia' fill-rule='nonzero'%3e %3cpath d='M0%2c160 C0%2c187.71875 7.051875%2c213.79 19.454375%2c236.521875 L160%2c250.435 L300.545625%2c236.521875 C312.948125%2c213.79 320%2c187.71875 320%2c160 C320%2c132.28125 312.948125%2c106.21 300.545625%2c83.478125 L160%2c69.565 L19.454375%2c83.478125 C7.051875%2c106.21 0%2c132.28125 0%2c160 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cg id='Group' transform='translate(19.454375%2c 0.000000)' fill='%230052B4'%3e %3cpath d='M-6.66133815e-15%2c83.478125 L281.090625%2c83.478125 C253.954375%2c33.743125 201.1925%2c0 140.545625%2c0 C79.89875%2c0 27.136875%2c33.743125 -6.66133815e-15%2c83.478125 Z' id='Path'%3e%3c/path%3e %3cpath d='M140.545625%2c320 C201.1925%2c320 253.954375%2c286.256875 281.09125%2c236.521875 L-6.66133815e-15%2c236.521875 C27.136875%2c286.256875 79.89875%2c320 140.545625%2c320 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpolygon id='Path' fill='%23F0F0F0' points='215.651875 191.304375 215.651875 170.435 201.739375 170.435 201.739375 142.60875 187.82625 128.695625 173.913125 142.60875 173.913125 114.7825 160 100.869375 146.086875 114.7825 146.086875 142.60875 132.17375 128.695625 118.260625 142.60875 118.260625 170.435 104.348125 170.435 104.348125 191.304375 90.435 191.304375 90.435 212.17375 229.565 212.17375 229.565 191.304375'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3r = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/cameroon%3c/title%3e %3cg id='flags/cameroon' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-cameroon' fill-rule='nonzero'%3e %3cpath d='M229.565%2c15.87625 C208.53%2c5.705 184.93125%2c0 160%2c0 C135.06875%2c0 111.47%2c5.705 90.435%2c15.87625 L76.521875%2c160 L90.435%2c304.12375 C111.47%2c314.295 135.06875%2c320 160%2c320 C184.93125%2c320 208.53%2c314.295 229.565%2c304.12375 L243.478125%2c160 L229.565%2c15.87625 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpolygon id='Path' fill='%23FFDA44' points='159.99875 104.348125 173.81125 146.86 218.51625 146.86 182.35125 173.1375 196.164375 215.651875 159.99875 189.37625 123.833125 215.651875 137.64875 173.1375 101.48375 146.86 146.185625 146.86'%3e%3c/polygon%3e %3cpath d='M90.435%2c15.881875 C36.91625%2c41.760625 0%2c96.56625 0%2c160 C0%2c223.43375 36.91625%2c278.239375 90.435%2c304.118125 L90.435%2c15.881875 Z' id='Path' fill='%23496E2D'%3e%3c/path%3e %3cpath d='M229.565%2c15.881875 L229.565%2c304.118125 C283.08375%2c278.239375 320%2c223.433125 320%2c160 C320%2c96.566875 283.08375%2c41.760625 229.565%2c15.881875 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3q = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/canada%3c/title%3e %3cg id='flags/canada' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-canada' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(0.000000%2c 15.876250)' fill='%23D80027'%3e %3cpath d='M320%2c144.12375 C320%2c80.69 283.084375%2c25.88 229.565%2c0 L229.565%2c288.246875 C283.084375%2c262.3675 320%2c207.5575 320%2c144.12375 Z' id='Path'%3e%3c/path%3e %3cpath d='M0%2c144.12375 C0%2c207.5575 36.915625%2c262.3675 90.435%2c288.2475 L90.435%2c8.8817842e-15 C36.915625%2c25.88 0%2c80.69 0%2c144.12375 Z' id='Path'%3e%3c/path%3e %3cpolygon id='Path' points='187.82625 164.993125 215.651875 151.08 201.739375 144.12375 201.739375 130.210625 173.913125 144.12375 187.82625 116.2975 173.913125 116.2975 160 95.428125 146.086875 116.2975 132.17375 116.2975 146.086875 144.12375 118.260625 130.210625 118.260625 144.12375 104.348125 151.08 132.17375 164.993125 125.2175 178.90625 153.04375 178.90625 153.04375 199.775625 166.95625 199.775625 166.95625 178.90625 194.7825 178.90625'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3p = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/canary-islands%3c/title%3e %3cg id='flags/canary-islands' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-canary-islands' fill-rule='nonzero'%3e %3cpath d='M160%2c0 C140.42875%2c0 121.680625%2c3.520625 104.348125%2c9.951875 L97.39125%2c160 L104.3475%2c310.048125 C121.680625%2c316.48 140.42875%2c320 160%2c320 C179.57125%2c320 198.319375%2c316.48 215.651875%2c310.048125 L222.60875%2c160 L215.6525%2c9.951875 C198.319375%2c3.520625 179.57125%2c0 160%2c0 Z' id='Path' fill='%23338AF3'%3e%3c/path%3e %3cpath d='M320%2c160 C320%2c91.205625 276.58%2c32.55875 215.651875%2c9.951875 L215.651875%2c310.04875 C276.58%2c287.44125 320%2c228.794375 320%2c160 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M104.348125%2c310.048125 L104.348125%2c9.951875 C43.42%2c32.55875 0%2c91.205625 0%2c160 C0%2c228.794375 43.42%2c287.44125 104.348125%2c310.048125 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3o = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/cape-verde%3c/title%3e %3cg id='flags/cape-verde' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-cape-verde' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' fill='%230052B4'%3e %3cpath d='M160%2c320 C208.494375%2c320 251.94625%2c298.4225 281.288125%2c264.348125 L38.711875%2c264.348125 C68.05375%2c298.4225 111.505625%2c320 160%2c320 Z' id='Path'%3e%3c/path%3e %3cpath d='M320%2c160 C320%2c71.635 248.365%2c0 160%2c0 C71.635%2c0 0%2c71.635 0%2c160 C0%2c174.441875 1.925%2c188.430625 5.511875%2c201.739375 L314.48875%2c201.739375 C318.075%2c188.430625 320%2c174.441875 320%2c160 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M12.7175%2c222.60875 C15.801875%2c229.85625 19.4075%2c236.82625 23.484375%2c243.478125 L296.516875%2c243.478125 C300.5925%2c236.825625 304.198125%2c229.855625 307.28375%2c222.60875 L12.7175%2c222.60875 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cg id='Group' transform='translate(54.825000%2c 170.435000)' fill='%23FFDA44'%3e %3cpolygon id='Path' points='59.54375 0 62.13375 7.97125 70.515625 7.97125 63.735 12.898125 66.325 20.869375 59.54375 15.9425 52.7625 20.869375 55.353125 12.898125 48.5725 7.97125 56.954375 7.97125'%3e%3c/polygon%3e %3cpolygon id='Path' points='59.54375 104.3475 62.13375 112.319375 70.515625 112.319375 63.735 117.245625 66.325 125.216875 59.54375 120.290625 52.7625 125.216875 55.353125 117.245625 48.5725 112.319375 56.954375 112.319375'%3e%3c/polygon%3e %3cpolygon id='Path' points='10.97125 69.058125 13.56125 77.02875 21.943125 77.02875 15.1625 81.955 17.7525 89.9275 10.97125 85.000625 4.19 89.9275 6.78125 81.955 8.8817842e-15 77.02875 8.38125 77.02875'%3e%3c/polygon%3e %3cpolygon id='Path' points='29.524375 10.434375 32.114375 18.40625 40.495625 18.40625 33.715625 23.3325 36.305625 31.304375 29.524375 26.3775 22.743125 31.304375 25.334375 23.3325 18.5525 18.40625 26.934375 18.40625'%3e%3c/polygon%3e %3cpolygon id='Path' points='8.8817842e-15 43.261875 8.38 43.2625 10.970625 35.289375 13.56125 43.261875 21.943125 43.26125 15.161875 48.188125 17.7525 56.16 10.970625 51.233125 4.19 56.158125 6.78 48.1875'%3e%3c/polygon%3e %3cpolygon id='Path' points='22.74375 113.259375 25.33375 105.289375 18.551875 100.363125 26.93375 100.363125 29.524375 92.39125 32.115 100.3625 40.49625 100.3625 33.715 105.28875 36.305 113.26125 29.52375 108.33375'%3e%3c/polygon%3e %3cpolygon id='Path' points='108.098125 69.058125 105.50875 77.02875 97.126875 77.02875 103.906875 81.955 101.316875 89.9275 108.098125 85.000625 114.879375 89.9275 112.28875 81.955 119.07 77.02875 110.688125 77.02875'%3e%3c/polygon%3e %3cpolygon id='Path' points='89.545 10.434375 86.955625 18.40625 78.57375 18.40625 85.35375 23.3325 82.76375 31.304375 89.545 26.3775 96.32625 31.304375 93.735625 23.3325 100.516875 18.40625 92.135 18.40625'%3e%3c/polygon%3e %3cpolygon id='Path' points='119.07 43.261875 110.689375 43.2625 108.09875 35.289375 105.50875 43.261875 97.126875 43.26125 103.9075 48.188125 101.316875 56.16 108.09875 51.233125 114.879375 56.158125 112.289375 48.1875'%3e%3c/polygon%3e %3cpolygon id='Path' points='96.325625 113.259375 93.73625 105.289375 100.5175 100.363125 92.135625 100.363125 89.545 92.39125 86.955 100.3625 78.573125 100.3625 85.354375 105.28875 82.764375 113.26125 89.545625 108.33375'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3n = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/cayman-islands%3c/title%3e %3cg id='flags/cayman-islands' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-cayman-islands' fill-rule='nonzero'%3e %3cpath d='M320%2c160.156098 C320%2c248.434888 248.365%2c320 160%2c320 C71.635%2c320 0%2c248.434888 0%2c160.156098 C0%2c160.194185 160%2c0.329678049 160%2c0.312195122 C248.365%2c0.312195122 320%2c71.8773073 320%2c160.156098 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cg id='Group' fill='%23F0F0F0'%3e %3cpath d='M160%2c0.312195122 C159.99%2c0.312195122 159.9825%2c0.312195122 159.973125%2c0.312195122 L160%2c0.312195122 L160%2c0.312195122 Z' id='Path'%3e%3c/path%3e %3cpath d='M159.571875%2c160.156098 L160%2c160.156098 C160%2c160.012488 160%2c159.872624 160%2c159.72839 C159.8575%2c159.871376 159.715%2c160.013737 159.571875%2c160.156098 Z' id='Path'%3e%3c/path%3e %3cpath d='M160.000625%2c83.708878 C160.000625%2c55.5832195 160.000625%2c37.1543415 160.000625%2c0.312195122 L159.973125%2c0.312195122 C71.619375%2c0.327180488 0%2c71.8854244 0%2c160.156098 L83.478125%2c160.156098 L83.478125%2c113.195083 L130.485%2c160.156098 L159.5725%2c160.156098 C159.715%2c160.013737 159.8575%2c159.871376 160.000625%2c159.72839 C160.000625%2c148.959532 160.000625%2c139.35079 160.000625%2c130.671141 L112.9925%2c83.708878 L160.000625%2c83.708878 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cellipse id='Oval' fill='%236DA544' cx='229.565' cy='90.6589659' rx='27.82625' ry='27.7991024'%3e%3c/ellipse%3e %3cg id='Group' transform='translate(20.869375%2c 21.161210)' fill='%23D80027'%3e %3cpath d='M60.0775%2c4.43655952e-15 C35.053125%2c14.2354732 14.24875%2c35.0189268 4.4408921e-15%2c60.0188878 L4.4408921e-15%2c138.994888 L41.739375%2c138.994888 L41.739375%2c41.6999024 L41.739375%2c41.6986537 L139.130625%2c41.6986537 C139.130625%2c28.547122 139.130625%2c16.0181073 139.130625%2c4.43655952e-15 L60.0775%2c4.43655952e-15 Z' id='Path'%3e%3c/path%3e %3cpath d='M139.130625%2c119.338459 L82.28375%2c62.5482927 L62.60875%2c62.5482927 L62.60875%2c62.5495415 L139.129375%2c138.994888 L139.130625%2c138.994888 C139.130625%2c138.994888 139.130625%2c125.441249 139.130625%2c119.338459 Z' id='Path'%3e%3c/path%3e %3crect id='Rectangle' x='160' y='62.5476683' width='97.39125' height='41.6986537'%3e%3c/rect%3e %3c/g%3e %3cg id='Group' transform='translate(180.556875%2c 159.843590)' fill='%23496E2D'%3e %3cpath d='M97.70375%2c0.5005 L97.70375%2c0.4995 L97.70375%2c0.5005 Z' id='Path'%3e%3c/path%3e %3cpolygon id='Path' points='0.3125 0.5005 0.3125 0.5005 0.3125 0.4995'%3e%3c/polygon%3e %3c/g%3e %3cpath d='M180.869375%2c187.9552 L180.869375%2c215.754302 L195.509375%2c215.754302 C204.2875%2c224.34841 216.303125%2c229.653854 229.565%2c229.653854 C242.826875%2c229.653854 254.8425%2c224.34841 263.620625%2c215.754302 L264.3475%2c215.754302 L278.260625%2c215.754302 L278.260625%2c187.9552 L180.869375%2c187.9552 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M180.869375%2c118.457444 L180.869375%2c160.156098 C180.869375%2c197.394107 229.565%2c208.804215 229.565%2c208.804215 C229.565%2c208.804215 278.260625%2c197.394107 278.260625%2c160.156098 L278.260625%2c118.457444 L180.869375%2c118.457444 Z' id='Path' fill='%23338AF3'%3e%3c/path%3e %3cg id='Group' transform='translate(180.870000%2c 101.778107)' fill='%23F3F3F3'%3e %3cpath d='M48.6925%2c38.9525854 C36.519375%2c38.9525854 36.519375%2c50.0723512 24.34625%2c50.0723512 C12.173125%2c50.0723512 12.173125%2c38.9525854 0%2c38.9525854 L0%2c58.4117073 C12.173125%2c58.4117073 12.173125%2c69.5314732 24.34625%2c69.5314732 C36.519375%2c69.5314732 36.519375%2c58.4117073 48.6925%2c58.4117073 C60.866875%2c58.4117073 60.866875%2c69.5314732 73.041875%2c69.5314732 C85.216875%2c69.5314732 85.21625%2c58.4117073 97.39125%2c58.4117073 L97.39125%2c38.9525854 C85.216875%2c38.9525854 85.216875%2c50.0723512 73.041875%2c50.0723512 C60.866875%2c50.0723512 60.866875%2c38.9525854 48.6925%2c38.9525854 Z' id='Path'%3e%3c/path%3e %3cpath d='M48.6925%2c-1.77462381e-14 C36.519375%2c-1.77462381e-14 36.519375%2c11.1197659 24.34625%2c11.1197659 C12.173125%2c11.1197659 12.173125%2c-1.77462381e-14 0%2c-1.77462381e-14 L0%2c19.459122 C12.173125%2c19.459122 12.173125%2c30.5788878 24.34625%2c30.5788878 C36.519375%2c30.5788878 36.519375%2c19.459122 48.6925%2c19.459122 C60.866875%2c19.459122 60.866875%2c30.5788878 73.041875%2c30.5788878 C85.216875%2c30.5788878 85.21625%2c19.459122 97.39125%2c19.459122 L97.39125%2c-1.77462381e-14 C85.216875%2c-1.77462381e-14 85.216875%2c11.1197659 73.041875%2c11.1197659 C60.866875%2c11.1197659 60.866875%2c-1.77462381e-14 48.6925%2c-1.77462381e-14 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3m = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/central-african-republic%3c/title%3e %3cg id='flags/central-african-republic' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-central-african-republic' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(19.454375%2c 5.503125)' fill='%230052B4'%3e %3cpath d='M281.09125%2c77.975 C260.41625%2c40.081875 224.864375%2c11.47625 182.285%2c-8.8817842e-15 L175.32875%2c77.975 L281.09125%2c77.975 Z' id='Path'%3e%3c/path%3e %3cpath d='M-6.66133815e-15%2c77.975 L105.7625%2c77.975 L98.80625%2c-8.8817842e-15 C56.226875%2c11.47625 20.675625%2c40.0825 -6.66133815e-15%2c77.975 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(0.000000%2c 160.000000)' fill='%236DA544'%3e %3cpath d='M194.7825%2c0 L194.7825%2c76.521875 L300.545%2c76.521875 C312.948125%2c53.79 320%2c27.71875 320%2c0 L194.7825%2c0 Z' id='Path'%3e%3c/path%3e %3cpath d='M125.2175%2c0 L0%2c0 C0%2c27.71875 7.051875%2c53.79 19.454375%2c76.521875 L125.2175%2c76.521875 L125.2175%2c0 L125.2175%2c0 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(19.454375%2c 236.521875)' fill='%23FFDA44'%3e %3cpath d='M1.11022302e-14%2c0 C20.675625%2c37.893125 56.226875%2c66.49875 98.80625%2c77.975 L105.7625%2c9.781875 L1.11022302e-14%2c0 Z' id='Path'%3e%3c/path%3e %3cpath d='M182.285%2c77.975 C224.864375%2c66.49875 260.41625%2c37.893125 281.09125%2c0 L175.32875%2c9.780625 L182.285%2c77.975 Z' id='Path'%3e%3c/path%3e %3cpolygon id='Path' points='175.328125 9.780625 281.09125 0 175.328125 0'%3e%3c/polygon%3e %3cpolygon id='Path' points='105.763125 0 1.11022302e-14 0 105.763125 9.780625'%3e%3c/polygon%3e %3c/g%3e %3cpath d='M160%2c0 C145.558125%2c0 131.569375%2c1.925 118.260625%2c5.511875 L118.260625%2c314.48875 C131.569375%2c318.075 145.558125%2c320 160%2c320 C174.441875%2c320 188.430625%2c318.075 201.739375%2c314.488125 L201.739375%2c5.511875 C188.430625%2c1.925 174.441875%2c0 160%2c0 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpolygon id='Path' fill='%23FFDA44' points='86.06125 34.7825 90.3775 48.068125 104.348125 48.068125 93.046875 56.279375 97.36375 69.565 86.06125 61.354375 74.759375 69.565 79.0775 56.279375 67.77625 48.068125 81.745625 48.068125'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3l = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/ceuta%3c/title%3e %3cg id='flags/ceuta' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-ceuta' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M160%2c0 C115.816875%2c0 75.816875%2c17.90875 46.8625%2c46.8625 L160%2c160 L160%2c0 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M0%2c160 C0%2c204.183125 17.90875%2c244.183125 46.8625%2c273.1375 L160%2c160 L0%2c160 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M160%2c320 C204.183125%2c320 244.183125%2c302.09125 273.1375%2c273.1375 L160%2c160 L160%2c320 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M320%2c160 C320%2c115.816875 302.09125%2c75.816875 273.1375%2c46.8625 L160%2c160 L320%2c160 Z' id='Path' fill='black'%3e%3c/path%3e %3cpolygon id='Path' fill='%23FFDA44' points='104.348125 111.304375 160 118.2625 215.651875 111.304375 215.651875 77.913125 193.39125 89.04375 160 55.651875 126.60875 89.04375 104.348125 77.913125'%3e%3c/polygon%3e %3cpath d='M160%2c243.478125 C129.313125%2c243.478125 104.348125%2c218.5125 104.348125%2c187.82625 L104.348125%2c132.176875 L125.2175%2c111.305625 L194.7825%2c111.305625 L215.651875%2c132.176875 L215.651875%2c187.82625 C215.651875%2c218.5125 190.686875%2c243.478125 160%2c243.478125 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M160%2c222.60875 C140.820625%2c222.60875 125.2175%2c207.005 125.2175%2c187.82625 L125.2175%2c132.175 L194.7825%2c132.175 L194.7825%2c187.825625 C194.7825%2c207.005 179.179375%2c222.60875 160%2c222.60875 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cg id='Group' transform='translate(104.348125%2c 111.304375)' fill='%23FFDA44'%3e %3crect id='Rectangle' x='0' y='-1.77635684e-14' width='20.869375' height='20.869375'%3e%3c/rect%3e %3crect id='Rectangle' x='90.434375' y='-1.77635684e-14' width='20.869375' height='20.869375'%3e%3c/rect%3e %3crect id='Rectangle' x='90.434375' y='45.2175' width='20.869375' height='20.869375'%3e%3c/rect%3e %3crect id='Rectangle' x='0' y='45.2175' width='20.869375' height='20.869375'%3e%3c/rect%3e %3cpath d='M55.651875%2c111.304375 C52.016875%2c111.304375 48.5125%2c110.741875 45.216875%2c109.703125 L45.216875%2c131.17875 C48.599375%2c131.82375 52.084375%2c132.174375 55.651875%2c132.174375 C59.219375%2c132.174375 62.704375%2c131.82375 66.086875%2c131.17875 L66.086875%2c109.703125 C62.79125%2c110.74125 59.286875%2c111.304375 55.651875%2c111.304375 Z' id='Path'%3e%3c/path%3e %3cpath d='M21.334375%2c82.168125 L4.679375%2c98.823125 C7.566875%2c105.3975 11.686875%2c111.309375 16.750625%2c116.265625 L31.500625%2c101.515625 C26.236875%2c96.43 22.57%2c89.705 21.334375%2c82.168125 Z' id='Path'%3e%3c/path%3e %3cpath d='M106.624375%2c98.824375 L89.969375%2c82.169375 C88.733125%2c89.705625 85.066875%2c96.43 79.80375%2c101.5175 L94.55375%2c116.2675 C99.61625%2c111.310625 103.736875%2c105.39875 106.624375%2c98.824375 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(132.173750%2c 143.768750)' fill='%230052B4'%3e %3cpath d='M20.87%2c0 L20.87%2c11.59375 C20.87%2c15.435 23.984375%2c18.55 27.82625%2c18.55 C31.668125%2c18.55 34.7825%2c15.435 34.7825%2c11.59375 L34.7825%2c0 L20.87%2c0 L20.87%2c0 Z' id='Path'%3e%3c/path%3e %3cpath d='M20.87%2c46.376875 L20.87%2c57.970625 C20.87%2c61.811875 23.984375%2c64.926875 27.82625%2c64.926875 C31.668125%2c64.926875 34.7825%2c61.811875 34.7825%2c57.970625 L34.7825%2c46.376875 L20.87%2c46.376875 L20.87%2c46.376875 Z' id='Path'%3e%3c/path%3e %3cpath d='M41.739375%2c23.1875 L41.739375%2c34.7825 C41.739375%2c38.62375 44.85375%2c41.73875 48.695625%2c41.73875 C52.5375%2c41.73875 55.651875%2c38.62375 55.651875%2c34.7825 L55.651875%2c23.1875 L41.739375%2c23.1875 Z' id='Path'%3e%3c/path%3e %3cpath d='M20.87%2c23.1875 L20.87%2c34.7825 C20.87%2c38.62375 23.984375%2c41.73875 27.82625%2c41.73875 C31.668125%2c41.73875 34.7825%2c38.62375 34.7825%2c34.7825 L34.7825%2c23.1875 L20.87%2c23.1875 Z' id='Path'%3e%3c/path%3e %3cpath d='M0%2c23.1875 L0%2c34.7825 C0%2c38.62375 3.114375%2c41.73875 6.95625%2c41.73875 C10.798125%2c41.73875 13.9125%2c38.62375 13.9125%2c34.7825 L13.9125%2c23.1875 L0%2c23.1875 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3k = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/chad%3c/title%3e %3cg id='flags/chad' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-chad' fill-rule='nonzero'%3e %3cpath d='M160%2c0 C140.42875%2c0 121.680625%2c3.520625 104.348125%2c9.951875 L97.39125%2c160 L104.3475%2c310.048125 C121.680625%2c316.48 140.42875%2c320 160%2c320 C179.57125%2c320 198.319375%2c316.48 215.651875%2c310.048125 L222.60875%2c160 L215.6525%2c9.951875 C198.319375%2c3.520625 179.57125%2c0 160%2c0 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M320%2c160 C320%2c91.205625 276.58%2c32.55875 215.651875%2c9.951875 L215.651875%2c310.04875 C276.58%2c287.44125 320%2c228.794375 320%2c160 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M104.348125%2c310.048125 L104.348125%2c9.951875 C43.42%2c32.55875 0%2c91.205625 0%2c160 C0%2c228.794375 43.42%2c287.44125 104.348125%2c310.048125 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3j = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/chile%3c/title%3e %3cg id='flags/chile' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-chile' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M320%2c160 C320%2c248.365 248.365%2c320 160%2c320 C71.635%2c320 0%2c248.365 0%2c160 C0%2c71.635 160%2c160 160%2c160 C160%2c160 281.100625%2c160 320%2c160 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M0%2c160 C0%2c71.635 71.635%2c0 160%2c0 C160%2c60.846875 160%2c160 160%2c160 C160%2c160 55.651875%2c160 0%2c160 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpolygon id='Path' fill='%23F0F0F0' points='95.243125 55.651875 105.60375 87.538125 139.130625 87.538125 112.006875 107.244375 122.366875 139.130625 95.243125 119.42375 68.119375 139.130625 78.479375 107.244375 51.355625 87.538125 84.8825 87.538125'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3i = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/china%3c/title%3e %3cg id='flags/china' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-china' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23D80027' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(29.062500%2c 71.812500)' fill='%23FFDA44'%3e %3cpolygon id='Path' points='58.5 25.5625 72.3125 68.0625 117 68.0625 80.875 94.375 94.6875 136.875 58.5 110.625 22.3125 136.875 36.1875 94.375 0 68.0625 44.6875 68.0625'%3e%3c/polygon%3e %3cpolygon id='Path' points='160.625 176 150.0625 163 134.4375 169.0625 143.5 155 132.9375 141.9375 149.125 146.25 158.25 132.1875 159.125 148.9375 175.375 153.25 159.6875 159.25'%3e%3c/polygon%3e %3cpolygon id='Path' points='181.625 137.875 186.625 121.875 172.9375 112.1875 189.6875 111.9375 194.625 95.9375 200.0625 111.8125 216.8125 111.625 203.375 121.625 208.75 137.5 195.0625 127.8125'%3e%3c/polygon%3e %3cpolygon id='Path' points='209.9375 45.625 202.5625 60.6875 214.5625 72.375 198 70 190.625 85 187.75 68.5 171.125 66.125 186 58.3125 183.125 41.75 195.125 53.4375'%3e%3c/polygon%3e %3cpolygon id='Path' points='161.0625 1.77635684e-14 159.8125 16.6875 175.375 23 159.0625 27 157.875 43.75 149.0625 29.5 132.75 33.5 143.5625 20.6875 134.6875 6.5 150.25 12.8125'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3h = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/christmas-island%3c/title%3e %3cg id='flags/christmas-island' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-christmas-island' fill-rule='nonzero'%3e %3cpath d='M273.13658%2c273.137188 C210.653165%2c335.620938 109.346835%2c335.620938 46.8627952%2c273.137188 C-15.6212442%2c210.653437 -15.6206192%2c109.346563 46.8627952%2c46.8621875 C51.7815188%2c51.7803125 174.756483%2c145.242188 174.756483%2c145.242188 L273.13658%2c273.137188 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M46.8634202%2c46.8628125 C109.346835%2c-15.6209375 210.653165%2c-15.6209375 273.137205%2c46.8628125 C335.621244%2c109.346562 335.620619%2c210.653437 273.137205%2c273.137812' id='Path' fill='%236DA544'%3e%3c/path%3e %3cellipse id='Oval' fill='%23FFDA44' cx='159.999688' cy='159.999687' rx='41.7391508' ry='41.739375'%3e%3c/ellipse%3e %3cg id='Group' transform='translate(13.019852%2c 90.434687)' fill='%23F0F0F0'%3e %3cpolygon id='Path' points='46.5584999 139.130625 50.9491013 148.31125 60.8634231 146.019375 56.4234469 155.17625 64.3971541 161.499375 54.4697074 163.73625 54.4972073 173.913125 46.5584999 167.54625 38.6197926 173.913125 38.6472924 163.73625 28.7198457 161.499375 36.6935529 155.17625 32.2529518 146.019375 42.1678985 148.31125'%3e%3c/polygon%3e %3cpolygon id='Path' points='17.8380292 62.60875 22.2286306 71.789375 32.1429524 69.496875 27.7036012 78.654375 35.6760584 84.9775 25.7492367 87.214375 25.7767366 97.39125 17.8380292 91.025 9.89994683 97.39125 9.92682168 87.214375 -2.22043412e-15 84.9775 7.97308218 78.654375 3.53310602 69.496875 13.4474278 71.789375'%3e%3c/polygon%3e %3cpolygon id='Path' points='46.5584999 1.77635684e-14 50.9491013 9.180625 60.8634231 6.888125 56.4240719 16.045625 64.3971541 22.36875 54.4697074 24.605625 54.4972073 34.7825 46.5584999 28.41625 38.6197926 34.7825 38.6472924 24.605625 28.7204707 22.36875 36.6929279 16.045625 32.2529518 6.888125 42.1678985 9.180625'%3e%3c/polygon%3e %3cpolygon id='Path' points='82.2351833 48.695625 86.6257847 57.87625 96.5407315 55.58375 92.1001303 64.741875 100.073212 71.064375 90.1463908 73.301875 90.1732657 83.478125 82.2351833 77.111875 74.2964759 83.478125 74.3239758 73.301875 64.3971541 71.064375 72.3696113 64.741875 67.9302601 55.58375 77.8445819 57.87625'%3e%3c/polygon%3e %3cpolygon id='Path' points='56.7246953 90.435 60.1784268 101.06375 71.3533668 101.06375 62.3121653 107.6325 65.7658968 118.260625 56.7246953 111.6925 47.6834939 118.260625 51.1372253 107.6325 42.0960239 101.06375 53.2709639 101.06375'%3e%3c/polygon%3e %3c/g%3e %3cpath d='M159.999688%2c187.825938 L173.912738%2c187.825938 C173.912738%2c187.825938 179.941455%2c177.160313 173.912738%2c166.956563 L187.825788%2c153.043438 L180.869575%2c139.130313 L173.913363%2c139.130313 C173.913363%2c139.130313 170.435256%2c149.565313 156.522206%2c149.565313 C142.609156%2c149.565313 139.13105%2c139.130313 139.13105%2c139.130313 L132.174837%2c139.130313 L139.13105%2c153.043438 L132.174837%2c166.956563 L139.13105%2c173.912813 C139.13105%2c173.912813 146.087262%2c159.999688 160.000312%2c166.956563 C159.999688%2c166.956563 165.912781%2c175.652188 159.999688%2c187.825938 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M263.844755%2c87.6390625 C264.172878%2c85.9296875 264.347252%2c84.1665625 264.347252%2c82.3615625 C264.347252%2c69.9865625 256.267295%2c59.5046875 245.097355%2c55.8884375 C248.510462%2c62.8259375 250.434202%2c70.6284375 250.434202%2c78.8834375 C250.434202%2c81.6671875 250.210453%2c84.3984375 249.78983%2c87.0640625 C248.108589%2c84.3559375 245.949226%2c81.8815625 243.311115%2c79.7821875 C233.373043%2c71.8746875 219.792491%2c71.6653125 209.75192%2c78.3246875 C217.503754%2c80.0171875 224.998713%2c83.4578125 231.628053%2c88.7321875 C236.818025%2c92.8621875 241.011752%2c98.4484375 244.222985%2c103.840938 L201.738838%2c117.144063 C243.477989%2c124.100313 278.260302%2c96.2746875 278.260302%2c96.2746875 C274.405948%2c88.5671875 268.42098%2c87.2671875 263.844755%2c87.6390625 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3g = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/cocos-island%3c/title%3e %3cg id='flags/cocos-island' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-cocos-island' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%236DA544' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(48.696250%2c 48.695625)' fill='%23FFDA44'%3e %3cpolygon id='Path' points='196.91875 180.869375 201.309375 190.05 211.224375 187.75875 206.784375 196.915625 214.7575 203.238125 204.83 205.475625 204.858125 215.6525 196.91875 209.285625 188.98 215.6525 189.0075 205.475625 179.080625 203.238125 187.05375 196.915625 182.61375 187.75875 192.528125 190.05'%3e%3c/polygon%3e %3cpolygon id='Path' points='156.07375 83.478125 160.465 92.65875 170.38 90.366875 165.939375 99.524375 173.9125 105.846875 163.985625 108.084375 164.013125 118.260625 156.07375 111.894375 148.135 118.260625 148.161875 108.084375 138.235625 105.846875 146.20875 99.524375 141.768125 90.366875 151.68375 92.65875'%3e%3c/polygon%3e %3cpolygon id='Path' points='196.91875 27.82625 201.309375 37.006875 211.224375 34.714375 206.785 43.871875 214.7575 50.195 204.83 52.431875 204.856875 62.60875 196.91875 56.241875 188.98 62.60875 189.0075 52.431875 179.08125 50.195 187.05375 43.871875 182.61375 34.714375 192.528125 37.006875'%3e%3c/polygon%3e %3cpolygon id='Path' points='232.595625 69.565 236.98625 78.745625 246.901875 76.45375 242.46125 85.61125 250.434375 91.93375 240.5075 94.17125 240.535 104.348125 232.595625 97.98125 224.656875 104.348125 224.68375 94.17125 214.7575 91.93375 222.730625 85.61125 218.29 76.45375 228.205 78.745625'%3e%3c/polygon%3e %3cpolygon id='Path' points='207.084375 118.260625 210.53875 128.89 221.714375 128.89 212.6725 135.45875 216.126875 146.086875 207.084375 139.51875 198.04375 146.086875 201.496875 135.45875 192.455625 128.89 203.63125 128.89'%3e%3c/polygon%3e %3cpath d='M128.695%2c156.521875 C103.721875%2c156.521875 83.476875%2c136.276875 83.476875%2c111.304375 C83.476875%2c86.331875 103.72125%2c66.086875 128.695%2c66.086875 C136.48125%2c66.086875 143.808125%2c68.05625 150.204375%2c71.521875 C140.17%2c61.708125 126.448125%2c55.651875 111.3025%2c55.651875 C80.5675%2c55.651875 55.65125%2c80.568125 55.65125%2c111.30375 C55.65125%2c142.039375 80.5675%2c166.955625 111.3025%2c166.955625 C126.4475%2c166.955625 140.17%2c160.899375 150.204375%2c151.085625 C143.808125%2c154.5525 136.48125%2c156.521875 128.695%2c156.521875 Z' id='Path'%3e%3c/path%3e %3cpath d='M51.92%2c13.913125 C47.1075%2c5.598125 38.123125%2c0 27.825625%2c0 C17.528125%2c0 8.54375%2c5.598125 3.73125%2c13.913125 L51.92%2c13.913125 Z' id='Path'%3e%3c/path%3e %3cpath d='M52.0125%2c14.07375 L27.825625%2c38.260625 L3.63875%2c14.07375 C1.326875%2c18.130625 0%2c22.8225 0%2c27.82625 C0%2c43.194375 12.458125%2c55.6525 27.82625%2c55.6525 C43.194375%2c55.6525 55.6525%2c43.195 55.6525%2c27.82625 C55.651875%2c22.8225 54.324375%2c18.130625 52.0125%2c14.07375 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M69.565%2c80 L69.565%2c103.47125 C71.788125%2c104.043125 74.119375%2c104.3475 76.52125%2c104.3475 C78.923125%2c104.3475 81.254375%2c104.0425 83.4775%2c103.47125 L83.4775%2c80 L69.565%2c80 Z' id='Path' fill='%23A2001D'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3f = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/colombia%3c/title%3e %3cg id='flags/colombia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-colombia' fill-rule='nonzero'%3e %3cpath d='M0%2c160 C0%2c71.635 71.635%2c0 160%2c0 C248.365%2c0 320%2c71.635 320%2c160 L160%2c173.913125 L0%2c160 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M21.41%2c240 C49.075625%2c287.8225 100.778125%2c320 160%2c320 C219.221875%2c320 270.924375%2c287.8225 298.59%2c240 L160%2c229.565 L21.41%2c240 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M298.59%2c240 C312.20375%2c216.46625 320%2c189.144375 320%2c160 L0%2c160 C0%2c189.144375 7.79625%2c216.46625 21.41%2c240 L298.59%2c240 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3e = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/comoros%3c/title%3e %3cg id='flags/comoros' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-comoros' fill-rule='nonzero'%3e %3cellipse id='Oval' fill='%23F0F0F0' cx='160.000156' cy='160' rx='159.999844' ry='160'%3e%3c/ellipse%3e %3cpath d='M319.994375%2c159.536875 L146.550794%2c159.536875 C112.115203%2c193.973125 91.2914733%2c220.55875 70.0289941%2c241.82125 L160.463906%2c249.97125 L300.797519%2c236.058125 C313.044382%2c213.43625 320%2c187.530625 320%2c160 C320%2c159.845 319.994375%2c159.691875 319.994375%2c159.536875 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M70.0296191%2c83.015 L300.286894%2c83.015 C273.075671%2c33.535 220.456972%2c0 160.000156%2c0 C115.934574%2c0 76.0371132%2c17.819375 47.1027665%2c46.64 L70.0296191%2c83.015 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M76.9858623%2c236.058125 C62.6021264%2c250.441875 57.0433818%2c262.493125 46.636517%2c272.899375 C75.6083637%2c301.99125 115.69895%2c320 160.000156%2c320 C220.835097%2c320 273.737545%2c286.046875 300.798144%2c236.058125 L76.9858623%2c236.058125 L76.9858623%2c236.058125 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M46.8627667%2c46.399375 C-15.6209222%2c108.883125 -15.6209222%2c210.19 46.8627667%2c272.674375 C72.6833665%2c246.85375 97.5164673%2c222.020625 160.000156%2c159.536875 L46.8627667%2c46.399375 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cg id='Group' transform='translate(21.333417%2c 110.841250)' fill='%23F0F0F0'%3e %3cpath d='M20.8699796%2c48.695625 C20.8699796%2c25.384375 37.2530886%2c5.91 59.1305673%2c1.1325 C55.7680705%2c0.398125 52.2793239%2c1.77635684e-14 48.6955774%2c1.77635684e-14 C21.8012287%2c1.77635684e-14 -8.88177552e-15%2c21.80125 -8.88177552e-15%2c48.695625 C-8.88177552e-15%2c75.59 21.8012287%2c97.39125 48.6955774%2c97.39125 C52.2786989%2c97.39125 55.7674455%2c96.993125 59.1305673%2c96.25875 C37.2530886%2c91.480625 20.8699796%2c72.006875 20.8699796%2c48.695625 Z' id='Path'%3e%3c/path%3e %3cpolygon id='Path' points='58.5936928 6.95625 61.1843152 14.9275 69.5655571 14.9275 62.7843137 19.854375 65.3749362 27.825625 58.5936928 22.899375 51.8124494 27.825625 54.4030719 19.854375 47.6218285 14.9275 56.0030703 14.9275'%3e%3c/polygon%3e %3cpolygon id='Path' points='58.5936928 27.825625 61.1843152 35.7975 69.5655571 35.7975 62.7843137 40.72375 65.3749362 48.695625 58.5936928 43.76875 51.8124494 48.695625 54.4030719 40.72375 47.6218285 35.7975 56.0030703 35.7975'%3e%3c/polygon%3e %3cpolygon id='Path' points='58.5936928 48.695625 61.1843152 56.666875 69.5655571 56.666875 62.7843137 61.59375 65.3749362 69.565 58.5936928 64.638125 51.8124494 69.565 54.4030719 61.59375 47.6218285 56.666875 56.0030703 56.666875'%3e%3c/polygon%3e %3cpolygon id='Path' points='58.5936928 69.565 61.1843152 77.53625 69.5655571 77.53625 62.7843137 82.463125 65.3749362 90.434375 58.5936928 85.508125 51.8124494 90.434375 54.4030719 82.463125 47.6218285 77.53625 56.0030703 77.53625'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3d = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/cook-islands%3c/title%3e %3cg id='flags/cook-islands' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-cook-islands'%3e %3cpath d='M320%2c160.156098 C320%2c248.434888 248.365%2c320 160%2c320 C71.635%2c320 0%2c248.434888 0%2c160.156098 C0%2c160.194185 160%2c0.329678049 160%2c0.312195122 C248.365%2c0.312195122 320%2c71.8773073 320%2c160.156098 Z' id='Path' fill='%230052B4' fill-rule='nonzero'%3e%3c/path%3e %3cg id='Group' fill='%23F0F0F0' fill-rule='nonzero'%3e %3cpath d='M160%2c0.312195122 C159.99%2c0.312195122 159.9825%2c0.312195122 159.973125%2c0.312195122 L160%2c0.312195122 L160%2c0.312195122 Z' id='Path'%3e%3c/path%3e %3cpath d='M159.571875%2c160.156098 L160%2c160.156098 C160%2c160.012488 160%2c159.872624 160%2c159.72839 C159.8575%2c159.871376 159.715%2c160.013737 159.571875%2c160.156098 Z' id='Path'%3e%3c/path%3e %3cpath d='M160.000625%2c83.708878 C160.000625%2c55.5832195 160.000625%2c37.1543415 160.000625%2c0.312195122 L159.973125%2c0.312195122 C71.619375%2c0.327180488 0%2c71.8854244 0%2c160.156098 L83.478125%2c160.156098 L83.478125%2c113.195083 L130.485%2c160.156098 L159.5725%2c160.156098 C159.715%2c160.013737 159.8575%2c159.871376 160.000625%2c159.72839 C160.000625%2c148.959532 160.000625%2c139.35079 160.000625%2c130.671141 L112.9925%2c83.708878 L160.000625%2c83.708878 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(20.869375%2c 21.161210)' fill='%23D80027' fill-rule='nonzero'%3e %3cpath d='M60.0775%2c4.43655952e-15 C35.053125%2c14.2354732 14.24875%2c35.0189268 4.4408921e-15%2c60.0188878 L4.4408921e-15%2c138.994888 L41.739375%2c138.994888 L41.739375%2c41.6999024 L41.739375%2c41.6986537 L139.130625%2c41.6986537 C139.130625%2c28.547122 139.130625%2c16.0181073 139.130625%2c4.43655952e-15 L60.0775%2c4.43655952e-15 Z' id='Path'%3e%3c/path%3e %3cpath d='M139.130625%2c119.338459 L82.28375%2c62.5482927 L62.60875%2c62.5482927 L62.60875%2c62.5495415 L139.129375%2c138.994888 L139.130625%2c138.994888 C139.130625%2c138.994888 139.130625%2c125.441249 139.130625%2c119.338459 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(0.000000%2c 0.312195)'%3e%3c/g%3e %3cg id='Group' transform='translate(160.000000%2c 160.156098)' fill='%23F0F0F0' fill-rule='nonzero'%3e %3cpolygon id='Path' points='55.651875 0 58.613125 9.1011122 68.19125 9.1011122 60.4425 14.7256195 63.4025 23.8273561 55.651875 18.2022244 47.9025 23.8273561 50.8625 14.7256195 43.11375 9.1011122 52.691875 9.1011122'%3e%3c/polygon%3e %3cpolygon id='Path' points='16.300625 16.284722 24.835 20.6286049 31.60875 13.8620878 30.11 23.3141073 38.645 27.6586146 29.18375 29.1546537 27.685625 38.607922 23.33625 30.0806244 13.875625 31.5779122 20.65 24.8113951'%3e%3c/polygon%3e %3cpolygon id='Path' points='0 55.5975805 9.11 52.6404683 9.11125 43.0723122 14.74 50.812878 23.850625 47.8551415 18.22 55.5975805 23.850625 63.3406439 14.74 60.3835317 9.11125 68.124722 9.11125 58.5559415'%3e%3c/polygon%3e %3cpolygon id='Path' points='16.300625 94.9110634 20.64875 86.3843902 13.875625 79.6184976 23.336875 81.115161 27.685625 72.5884878 29.18375 82.0405073 38.645 83.5365463 30.11 87.881678 31.60875 97.334322 24.835 90.5659317'%3e%3c/polygon%3e %3cpolygon id='Path' points='55.651875 111.195785 52.691875 102.094049 43.113125 102.094049 50.8625 96.4695415 47.9025 87.3684293 55.651875 92.9929366 63.4025 87.3684293 60.4425 96.4695415 68.19125 102.094049 58.613125 102.094049'%3e%3c/polygon%3e %3cpolygon id='Path' points='95.00375 94.9110634 86.46875 90.5678049 79.69625 97.334322 81.194375 87.881678 72.659375 83.5377951 82.120625 82.0405073 83.619375 72.5884878 87.9675 81.115161 97.42875 79.6184976 90.654375 86.3850146'%3e%3c/polygon%3e %3cpolygon id='Path' points='111.304375 55.5975805 102.19375 58.5559415 102.19375 68.124722 96.56375 60.3829073 87.45375 63.3406439 93.084375 55.5975805 87.45375 47.8551415 96.56375 50.812878 102.19375 43.0723122 102.19375 52.6404683'%3e%3c/polygon%3e %3cpolygon id='Path' points='95.00375 16.2853463 90.65625 24.8113951 97.42875 31.5779122 87.9675 30.0806244 83.619375 38.607922 82.120625 29.1546537 72.659375 27.6579902 81.194375 23.3141073 79.69625 13.8627122 86.469375 20.6286049'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3c = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/corsica%3c/title%3e %3cg id='flags/corsica' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-corsica' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23FCFCFC' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M215.71%2c135.520625 C215.71%2c101.680625 188.2775%2c74.24875 154.438125%2c74.24875 C129.466875%2c74.24875 108%2c89.1925 98.455%2c110.62 L90.898125%2c138.016875 L97.854375%2c144.973125 L83.94125%2c172.799375 L97.854375%2c179.755625 L90.898125%2c186.711875 L90.898125%2c193.668125 L97.854375%2c200.624375 L97.854375%2c214.5375 L104.810625%2c221.49375 L125.68%2c214.5375 C125.68%2c214.5375 125.68%2c221.49375 132.63625%2c228.450625 C139.5925%2c235.406875 146.55%2c249.320625 146.55%2c249.320625 C146.55%2c249.320625 167.419375%2c256.276875 181.3325%2c235.4075 C195.245625%2c214.538125 209.15875%2c207.58125 209.15875%2c207.58125 L195.74875%2c180.76 C208.0125%2c169.558125 215.71%2c153.44125 215.71%2c135.520625 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M220.70375%2c158.95125 C248.971875%2c154.183125 253.680625%2c98.829375 253.680625%2c98.829375 L214.724375%2c98.829375 C234.898125%2c147.525 213.7825%2c150.800625 213.7825%2c150.800625 C210.921875%2c148.6725 108.548125%2c100.175 105.303125%2c98.941875 C104.52125%2c99.988125 101.643125%2c102.73625 98.144375%2c111.2925 C94.645%2c119.84875 93.78625%2c127.54625 93.78625%2c127.54625 C95.425%2c128.614375 204.145625%2c166.5775 207.019375%2c166.89375 C212.7225%2c170.6225 219.74%2c181.773125 215.818125%2c214.834375 L253.314375%2c204.266875 C253.315625%2c204.266875 240.59%2c170.415 220.70375%2c158.95125 Z' id='Path' fill='%23ACABB1'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3b = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/costa-rica%3c/title%3e %3cg id='flags/costa-rica' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-costa-rica' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M310.048125%2c104.348125 L9.951875%2c104.348125 C3.520625%2c121.68125 0%2c140.42875 0%2c160 C0%2c179.57125 3.520625%2c198.31875 9.951875%2c215.651875 L310.04875%2c215.651875 C316.48%2c198.31875 320%2c179.57125 320%2c160 C320%2c140.42875 316.48%2c121.68125 310.048125%2c104.348125 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cg id='Group' transform='translate(38.711875%2c 0.000000)' fill='%230052B4'%3e %3cpath d='M121.288125%2c0 C72.79375%2c0 29.341875%2c21.5775 4.4408921e-15%2c55.651875 L242.575625%2c55.651875 C213.234375%2c21.5775 169.7825%2c0 121.288125%2c0 Z' id='Path'%3e%3c/path%3e %3cpath d='M242.57625%2c264.348125 L4.4408921e-15%2c264.348125 C29.341875%2c298.4225 72.79375%2c320 121.288125%2c320 C169.7825%2c320 213.234375%2c298.4225 242.57625%2c264.348125 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3a = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/croatia%3c/title%3e %3cg id='flags/croatia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-croatia' fill-rule='nonzero'%3e %3cpath d='M320%2c160 C320%2c140.42875 316.479375%2c121.680625 310.048125%2c104.348125 L160%2c97.39125 L9.951875%2c104.3475 C3.520625%2c121.680625 0%2c140.42875 0%2c160 C0%2c179.57125 3.520625%2c198.319375 9.951875%2c215.651875 L160%2c222.60875 L310.048125%2c215.6525 C316.479375%2c198.319375 320%2c179.57125 320%2c160 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cpath d='M160%2c320 C228.794375%2c320 287.44125%2c276.58 310.048125%2c215.651875 L9.951875%2c215.651875 C32.55875%2c276.58 91.205625%2c320 160%2c320 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M9.951875%2c104.348125 L310.04875%2c104.348125 C287.44125%2c43.42 228.794375%2c0 160%2c0 C91.205625%2c0 32.55875%2c43.42 9.951875%2c104.348125 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cg id='Group' transform='translate(104.348125%2c 62.608750)' fill='%23338AF3'%3e %3cpolygon id='Path' points='97.39125 48.69625 69.565 48.69625 74.203125 13.913125 92.753125 0 111.30375 13.913125 111.30375 41.739375'%3e%3c/polygon%3e %3cpolygon id='Path' points='13.9125 48.69625 41.73875 48.69625 37.100625 13.913125 18.55 0 1.77635684e-14 13.913125 1.77635684e-14 41.739375'%3e%3c/polygon%3e %3c/g%3e %3cpolygon id='Path' fill='%230052B4' points='178.55125 111.305 141.44875 111.305 141.44875 76.521875 160 62.60875 178.55125 76.521875'%3e%3c/polygon%3e %3cpath d='M104.348125%2c104.34875 L104.348125%2c180.87 C104.348125%2c199.090625 113.149375%2c215.294375 126.724375%2c225.4525 L136.46375%2c223.015625 L148.75375%2c235.379375 C152.388125%2c236.128125 156.14875%2c236.5225 160.000625%2c236.5225 C163.831875%2c236.5225 167.57375%2c236.133125 171.18875%2c235.391875 L185.218125%2c223.710625 L193.275625%2c225.43 C206.845%2c215.2725 215.6525%2c199.085625 215.6525%2c180.87 L215.6525%2c104.34875 L104.348125%2c104.34875 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cg id='Group' transform='translate(104.348125%2c 104.348125)' fill='%23D80027'%3e %3crect id='Rectangle' x='0' y='-1.77635684e-14' width='22.260625' height='22.260625'%3e%3c/rect%3e %3crect id='Rectangle' x='44.52125' y='-1.77635684e-14' width='22.260625' height='22.260625'%3e%3c/rect%3e %3crect id='Rectangle' x='89.043125' y='-1.77635684e-14' width='22.260625' height='22.260625'%3e%3c/rect%3e %3crect id='Rectangle' x='22.260625' y='22.260625' width='22.260625' height='22.260625'%3e%3c/rect%3e %3crect id='Rectangle' x='66.7825' y='22.260625' width='22.260625' height='22.260625'%3e%3c/rect%3e %3crect id='Rectangle' x='0' y='44.514375' width='22.260625' height='22.260625'%3e%3c/rect%3e %3crect id='Rectangle' x='22.260625' y='66.775625' width='22.260625' height='22.260625'%3e%3c/rect%3e %3crect id='Rectangle' x='44.52125' y='44.514375' width='22.260625' height='22.260625'%3e%3c/rect%3e %3crect id='Rectangle' x='89.043125' y='44.514375' width='22.260625' height='22.260625'%3e%3c/rect%3e %3crect id='Rectangle' x='66.7825' y='66.775625' width='22.260625' height='22.260625'%3e%3c/rect%3e %3crect id='Rectangle' x='44.52125' y='89.03625' width='22.260625' height='22.260625'%3e%3c/rect%3e %3cpath d='M22.260625%2c89.038125 L1.43625%2c89.038125 C3.34625%2c97.313125 7.10125%2c104.885 12.25%2c111.29875 L22.260625%2c111.29875 L22.260625%2c89.038125 L22.260625%2c89.038125 Z' id='Path'%3e%3c/path%3e %3cpath d='M89.043125%2c111.299375 L99.053125%2c111.299375 C104.203125%2c104.885625 107.956875%2c97.313125 109.866875%2c89.03875 L89.043125%2c89.03875 L89.043125%2c111.299375 L89.043125%2c111.299375 Z' id='Path'%3e%3c/path%3e %3cpath d='M22.260625%2c111.299375 L22.260625%2c121.0125 C28.735%2c125.884375 36.30125%2c129.3775 44.52125%2c131.05375 L44.52125%2c111.299375 L22.260625%2c111.299375 L22.260625%2c111.299375 Z' id='Path'%3e%3c/path%3e %3cpath d='M66.7825%2c111.299375 L66.7825%2c131.05375 C75.003125%2c129.37875 82.56875%2c125.884375 89.043125%2c121.0125 L89.043125%2c111.299375 L66.7825%2c111.299375 L66.7825%2c111.299375 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$39 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/cuba%3c/title%3e %3cg id='flags/cuba' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-cuba' fill-rule='nonzero'%3e %3cpolygon id='Path' fill='%23FF9811' points='0.312507012 27.8257337 0.311882623 27.8257337 0.311882623 292.174266 0.312507012 292.174266 0.312507012 160.000625'%3e%3c/polygon%3e %3cellipse id='Oval' fill='%23F0F0F0' cx='160.155005' cy='160' rx='159.843122' ry='160'%3e%3c/ellipse%3e %3cg id='Group' transform='translate(0.312507%2c 0.000625)' fill='%230052B4'%3e %3cpath d='M159.843746%2c1.17950815e-14 C107.549866%2c1.17950815e-14 61.1239989%2c25.1394732 31.961881%2c64.00025 L287.724988%2c64.00025 C258.563494%2c25.1388482 212.137003%2c1.17950815e-14 159.843746%2c1.17950815e-14 Z' id='Path'%3e%3c/path%3e %3cpath d='M159.843746%2c319.999375 C212.137627%2c319.999375 258.563494%2c294.859902 287.725612%2c255.999125 L31.961881%2c255.999125 C61.1233745%2c294.860527 107.549866%2c319.999375 159.843746%2c319.999375 Z' id='Path'%3e%3c/path%3e %3cpath d='M1.47648687e-14%2c160 C1.47648687e-14%2c170.959418 1.10392087%2c181.66071 3.20124566%2c192.000125 L316.486872%2c192.000125 C318.584197%2c181.66071 319.687493%2c170.959418 319.687493%2c160 C319.687493%2c149.040582 318.583572%2c138.33929 316.486872%2c127.999875 L3.20124566%2c127.999875 C1.10392087%2c138.33929 1.47648687e-14%2c149.040582 1.47648687e-14%2c160 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M47.1292418%2c46.8633081 C-15.2928631%2c109.346677 -15.2928631%2c210.653948 47.1292418%2c273.138567 C72.9246508%2c247.317841 97.7328998%2c222.484619 160.155629%2c160.00125 L47.1292418%2c46.8633081 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpolygon id='Path' fill='%23F0F0F0' points='65.0055171 118.261712 75.3541509 150.146212 108.850157 150.146212 81.7535202 169.853788 92.102154 201.738913 65.0055171 182.032586 37.9076313 201.738913 48.2587627 169.853788 21.1615013 150.146212 54.6550101 150.146212'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$38 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/curacao%3c/title%3e %3cg id='flags/curacao' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-curacao' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23FFDA44' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' fill='%230052B4'%3e %3cpath d='M160%2c320 C212.5%2c320 259.093125%2c294.71375 288.268125%2c255.656875 L31.731875%2c255.656875 C60.906875%2c294.71375 107.5%2c320 160%2c320 Z' id='Path'%3e%3c/path%3e %3cpath d='M320%2c160 C320%2c71.635 248.365%2c0 160%2c0 C71.635%2c0 0%2c71.635 0%2c160 C0%2c178.920625 3.293125%2c197.07 9.3225%2c213.918125 L310.676875%2c213.918125 C316.706875%2c197.07 320%2c178.920625 320%2c160 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(39.591250%2c 74.787500)' fill='%23F0F0F0'%3e %3cpolygon id='Path' points='69.9225 27.82625 78.555625 54.39625 106.495625 54.39625 83.8925 70.82 92.525625 97.39125 69.9225 80.96875 47.319375 97.39125 55.95375 70.82 33.350625 54.39625 61.289375 54.39625'%3e%3c/polygon%3e %3cpolygon id='Path' points='21.9425 8.8817842e-15 27.1225 15.9425 43.886875 15.9425 30.325 25.79625 35.505 41.739375 21.9425 31.885625 8.380625 41.739375 13.56125 25.79625 -4.4408921e-15 15.9425 16.76375 15.9425'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$37 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/cyprus%3c/title%3e %3cg id='flags/cyprus' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-cyprus' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23FCFCFC' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M250.435%2c139.130625 C245.565625%2c139.130625 239.53625%2c139.130625 229.565625%2c139.130625 C229.565625%2c177.550625 198.419375%2c208.695625 160.000625%2c208.695625 C121.58%2c208.695625 90.435625%2c177.550625 90.435625%2c139.130625 C83.710625%2c139.130625 76.29%2c139.130625 69.56625%2c139.130625 C69.56625%2c180.515 97.36375%2c215.406875 135.3075%2c226.1525 C131.1475%2c234.055 131.78125%2c244.004375 137.72375%2c251.42 C145.52875%2c245.164375 153.609375%2c238.68875 160.464375%2c233.19625 C167.319375%2c238.689375 175.400625%2c245.165 183.205%2c251.42 C189.20625%2c243.930625 189.796875%2c233.855 185.49875%2c225.914375 C223.026875%2c214.905 250.435%2c180.220625 250.435%2c139.130625 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M104.348125%2c132.17375 C104.348125%2c132.17375 104.348125%2c166.95625 139.130625%2c166.95625 L146.086875%2c173.9125 L160%2c173.9125 C160%2c173.9125 166.95625%2c153.043125 180.869375%2c153.043125 C180.869375%2c153.043125 180.869375%2c139.13 194.7825%2c139.13 C208.695625%2c139.13 215.651875%2c139.13 215.651875%2c139.13 C215.651875%2c139.13 208.695625%2c111.30375 243.478125%2c90.434375 L229.565%2c83.478125 C229.565%2c83.478125 180.869375%2c118.260625 146.086875%2c111.304375 L146.086875%2c125.2175 L132.17375%2c125.2175 L125.2175%2c118.26125 L104.348125%2c132.17375 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$36 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/czech-republic%3c/title%3e %3cg id='flags/czech-republic' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-czech-republic' fill-rule='nonzero'%3e %3cellipse id='Oval' fill='%23F0F0F0' cx='160.000156' cy='160' rx='159.999844' ry='160'%3e%3c/ellipse%3e %3cpath d='M146.087045%2c160 C146.087045%2c160 46.9565166%2c273.159375 46.8627667%2c273.136875 C75.8164885%2c302.09125 115.817074%2c320 160.000156%2c320 C248.36507%2c320 320%2c248.365 320%2c160 L146.087045%2c160 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M46.8627667%2c46.8625 C-15.6209222%2c109.34625 -15.6209222%2c210.653125 46.8627667%2c273.1375 C72.6833665%2c247.316875 97.5164673%2c222.48375 160.000156%2c160 L46.8627667%2c46.8625 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$35 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/democratic-republic-of-congo%3c/title%3e %3cg id='flags/democratic-republic-of-congo' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-democratic-republic-of-congo' fill-rule='nonzero'%3e %3cpath d='M302.233632%2c86.6348504 C294.840512%2c72.3104922 285.149893%2c58.865508 273.1424%2c46.858022 C261.134283%2c34.8499111 247.688666%2c25.1592975 233.364925%2c17.7668061 L120.646871%2c120.645436 L17.7675605%2c233.363429 C25.1606809%2c247.687787 34.8512998%2c261.133396 46.8587923%2c273.140882 C58.8662848%2c285.148368 72.3119014%2c294.838982 86.6356424%2c302.232098 L199.353697%2c199.352843 L302.233632%2c86.6348504 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M46.8587923%2c273.141507 C53.5706631%2c279.853374 60.7325336%2c285.839617 68.2444039%2c291.110236 L291.109264%2c68.244247 C285.839893%2c60.7323808 279.853646%2c53.5705142 273.141775%2c46.858647 C266.42928%2c40.1467799 259.268034%2c34.1611619 251.756164%2c28.8911681 L28.8913036%2c251.755907 C34.1606753%2c259.266523 40.1462965%2c266.42964 46.8587923%2c273.141507 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cg id='Group' fill='%23338AF3'%3e %3cpath d='M46.8587923%2c46.857397 C-3.62055105%2c97.3367129 -13.31117%2c173.147874 17.7675605%2c233.363429 L233.364925%2c17.7668061 C173.148713%2c-13.3112825 97.3375107%2c-3.61941883 46.8587923%2c46.857397 Z' id='Path'%3e%3c/path%3e %3cpath d='M273.141775%2c273.141507 C323.620494%2c222.662816 333.310488%2c146.851655 302.233632%2c86.6361004 L86.6362674%2c302.232723 C146.851855%2c333.310811 222.663682%2c323.620823 273.141775%2c273.141507 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpolygon id='Path' fill='%23FFDA44' points='85.2662682 48.6905199 93.9000128 75.2636138 121.839995 75.2636138 99.2362595 91.6860945 107.870004 118.258563 85.2662682 101.835458 62.6612824 118.258563 71.296277 91.6860945 48.6912912 75.2636138 76.6312737 75.2636138'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$34 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/denmark%3c/title%3e %3cg id='flags/denmark' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-denmark' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(1.354375%2c 0.000000)' fill='%23D80027'%3e %3cpath d='M123.863125%2c139.130625 L317.29125%2c139.130625 C307.064375%2c60.62625 239.9375%2c0 158.645625%2c0 C146.69875%2c0 135.063125%2c1.320625 123.863125%2c3.803125 L123.863125%2c139.130625 L123.863125%2c139.130625 Z' id='Path'%3e%3c/path%3e %3cpath d='M82.12375%2c139.130625 L82.12375%2c19.454375 C38.190625%2c43.425625 6.739375%2c87.395 -1.11022302e-15%2c139.130625 L82.12375%2c139.130625 L82.12375%2c139.130625 Z' id='Path'%3e%3c/path%3e %3cpath d='M82.12375%2c180.869375 L-1.11022302e-15%2c180.869375 C6.739375%2c232.605 38.190625%2c276.574375 82.12375%2c300.545 L82.12375%2c180.869375 L82.12375%2c180.869375 Z' id='Path'%3e%3c/path%3e %3cpath d='M123.863125%2c180.869375 L123.863125%2c316.196875 C135.063125%2c318.679375 146.69875%2c320 158.645625%2c320 C239.9375%2c320 307.064375%2c259.37375 317.29125%2c180.869375 L123.863125%2c180.869375 L123.863125%2c180.869375 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$33 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/djibouti%3c/title%3e %3cg id='flags/djibouti' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-djibouti' fill-rule='nonzero'%3e %3cpath d='M146.087045%2c173.913125 C146.087045%2c173.913125 46.9565166%2c46.840625 46.8627667%2c46.863125 C75.8164885%2c17.90875 115.817074%2c0 160.000156%2c0 C248.36507%2c0 320%2c71.635 320%2c160 L146.087045%2c173.913125 Z' id='Path' fill='%23338AF3'%3e%3c/path%3e %3cpath d='M146.087045%2c160 C146.087045%2c160 46.9565166%2c273.159375 46.8627667%2c273.136875 C75.8164885%2c302.09125 115.817074%2c320 160.000156%2c320 C248.36507%2c320 320%2c248.365 320%2c160 L146.087045%2c160 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M46.8627667%2c46.8625 C-15.6209222%2c109.34625 -15.6209222%2c210.653125 46.8627667%2c273.1375 C72.6833665%2c247.316875 97.5164673%2c222.48375 160.000156%2c160 L46.8627667%2c46.8625 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cpolygon id='Path' fill='%23D80027' points='64.7564993 118.260625 75.1158641 150.145625 108.644581 150.145625 81.5208579 169.853125 91.8795978 201.739375 64.7564993 182.0325 37.6321507 201.739375 47.9933906 169.853125 20.8696671 150.145625 54.3958844 150.145625'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$32 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/dominica%3c/title%3e %3cg id='flags/dominica' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-dominica' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(3.070625%2c 3.070625)' fill='%23496E2D'%3e %3cpath d='M188.23375%2c313.85875 C251.485625%2c301.31125 301.31125%2c251.485 313.85875%2c188.23375 L188.23375%2c188.23375 L188.23375%2c313.85875 Z' id='Path'%3e%3c/path%3e %3cpath d='M-6.66133815e-15%2c188.23375 C12.546875%2c251.485 62.373125%2c301.31125 125.625%2c313.85875 L125.625%2c188.23375 L-6.66133815e-15%2c188.23375 Z' id='Path'%3e%3c/path%3e %3cpath d='M313.85875%2c125.625 C301.31125%2c62.37375 251.485625%2c12.5475 188.23375%2c0 L188.23375%2c125.625 L313.85875%2c125.625 Z' id='Path'%3e%3c/path%3e %3cpath d='M125.625%2c-6.66133815e-15 C62.373125%2c12.5475 12.546875%2c62.37375 0%2c125.625 L125.625%2c125.625 L125.625%2c-6.66133815e-15 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(128.695625%2c 0.348125)' fill='%23FFDA44'%3e %3cpath d='M20.869375%2c190.95625 L0%2c190.95625 L0%2c316.58125 C6.810625%2c317.931875 13.7775%2c318.846875 20.869375%2c319.30375 L20.869375%2c190.95625 Z' id='Path'%3e%3c/path%3e %3cpath d='M20.869375%2c128.3475 L20.869375%2c-1.0200174e-14 C13.7775%2c0.45625 6.81%2c1.371875 0%2c2.7225 L0%2c128.3475 L20.869375%2c128.3475 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M170.435%2c0.348125 C166.98375%2c0.125 163.506875%2c0 160%2c0 C156.493125%2c0 153.01625%2c0.125 149.565%2c0.348125 L149.565%2c128.69625 L170.434375%2c128.69625 L170.434375%2c0.348125 L170.435%2c0.348125 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M149.565%2c319.651875 C153.01625%2c319.875 156.493125%2c320 160%2c320 C163.506875%2c320 166.98375%2c319.875 170.435%2c319.651875 L170.435%2c191.304375 L149.565625%2c191.304375 L149.565625%2c319.651875 L149.565%2c319.651875 Z' id='Path' fill='black'%3e%3c/path%3e %3cg id='Group' transform='translate(0.348125%2c 128.695625)' fill='%23FFDA44'%3e %3cpath d='M128.3475%2c20.869375 L128.3475%2c0 L2.7225%2c0 C1.37125%2c6.81125 0.45625%2c13.7775 -3.33066907e-15%2c20.869375 L128.3475%2c20.869375 Z' id='Path'%3e%3c/path%3e %3cpath d='M190.95625%2c20.869375 L319.304375%2c20.869375 C318.848125%2c13.7775 317.9325%2c6.81125 316.581875%2c0 L190.95625%2c0 L190.95625%2c20.869375 L190.95625%2c20.869375 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M191.304375%2c170.435 L319.6525%2c170.435 C319.875%2c166.984375 320%2c163.506875 320%2c160 C320%2c156.493125 319.875%2c153.015625 319.651875%2c149.565 L191.304375%2c149.565 L191.304375%2c170.435 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M0.348125%2c149.565 C0.125625%2c153.015625 0%2c156.493125 0%2c160 C0%2c163.506875 0.125625%2c166.984375 0.348125%2c170.435 L128.69625%2c170.435 L128.69625%2c149.565625 L0.348125%2c149.565625 L0.348125%2c149.565 Z' id='Path' fill='black'%3e%3c/path%3e %3ccircle id='Oval' fill='%23D80027' cx='160' cy='160' r='76.521875'%3e%3c/circle%3e %3cg id='Group' transform='translate(100.455625%2c 97.391250)' fill='%23496E2D'%3e %3cpath d='M76.978125%2c71.14625 C71.28625%2c59.763125 63.888125%2c48.225625 63.888125%2c48.225625 C63.888125%2c48.225625 64.071875%2c42.9725 64.071875%2c39.8425 C64.071875%2c35.1275 60.249375%2c31.305 55.534375%2c31.305 C51.0675%2c31.305 47.4075%2c34.736875 47.034375%2c39.10625 C43.521875%2c39.335625 40.7425%2c42.249375 40.7425%2c45.819375 C40.7425%2c48.415 42.213125%2c50.664375 44.365625%2c51.78875 C45.435625%2c49.28625 47.530625%2c47.3325 50.121875%2c46.441875 C50.544375%2c46.7875 50.998125%2c47.09625 51.4825%2c47.358125 L52.57625%2c47.881875 C52.57625%2c47.881875 48.520625%2c59.31375 48.520625%2c65.455 C48.520625%2c82.72 59.904375%2c88.044375 59.904375%2c88.044375 L59.904375%2c88.2225 L54.2125%2c93.91375 L65.595625%2c93.91375 L65.595625%2c82.53 L71.2875%2c88.221875 C71.3375%2c88.115 82.06875%2c81.328125 76.978125%2c71.14625 Z' id='Path'%3e%3c/path%3e %3cpolygon id='Path' points='59.544375 -1.77635684e-14 62.134375 7.97125 70.515625 7.97125 63.735 12.898125 66.325625 20.869375 59.544375 15.943125 52.763125 20.869375 55.35375 12.898125 48.573125 7.97125 56.954375 7.97125'%3e%3c/polygon%3e %3cpolygon id='Path' points='22.744375 11.9575 29.524375 16.884375 36.305625 11.956875 33.715625 19.929375 40.496875 24.855 32.115 24.855625 29.525 32.826875 26.934375 24.855625 18.553125 24.855 25.33375 19.928125'%3e%3c/polygon%3e %3cpolygon id='Path' points='1.77635684e-14 43.261875 8.380625 43.261875 10.97125 35.290625 13.56125 43.261875 21.943125 43.26125 15.1625 48.18875 17.753125 56.16 10.97125 51.233125 4.190625 56.159375 6.78 48.188125'%3e%3c/polygon%3e %3cpolygon id='Path' points='1.77635684e-14 81.955625 6.78 77.03 4.19 69.058125 10.97125 73.985 17.7525 69.058125 15.1625 77.029375 21.94375 81.95625 13.56125 81.956875 10.97125 89.9275 8.380625 81.955625'%3e%3c/polygon%3e %3cpolygon id='Path' points='22.744375 113.26 25.33375 105.29 18.5525 100.363125 26.934375 100.363125 29.525 92.39125 32.115 100.3625 40.496875 100.3625 33.715625 105.29 36.305625 113.260625 29.524375 108.33375'%3e%3c/polygon%3e %3cpolygon id='Path' points='59.544375 125.2175 56.954375 117.2475 48.573125 117.2475 55.35375 112.32 52.763125 104.34875 59.544375 109.274375 66.325 104.348125 63.735 112.32 70.515625 117.246875 62.134375 117.2475'%3e%3c/polygon%3e %3cpolygon id='Path' points='96.344375 113.26 89.564375 108.33375 82.78375 113.26125 85.373125 105.29 78.591875 100.363125 86.97375 100.3625 89.563125 92.39125 92.154375 100.363125 100.535625 100.363125 93.755 105.29'%3e%3c/polygon%3e %3cpolygon id='Path' points='119.08875 81.955625 110.708125 81.955625 108.1175 89.9275 105.5275 81.956875 97.145 81.956875 103.92625 77.029375 101.335625 69.05875 108.1175 73.985 114.8975 69.05875 112.30875 77.03'%3e%3c/polygon%3e %3cpolygon id='Path' points='119.08875 43.261875 112.30875 48.188125 114.898125 56.159375 108.1175 51.233125 101.33625 56.160625 103.92625 48.18875 97.145 43.2625 105.5275 43.26125 108.116875 35.29125 110.708125 43.261875'%3e%3c/polygon%3e %3cpolygon id='Path' points='96.344375 11.9575 93.755 19.928125 100.535625 24.855 92.154375 24.855 89.564375 32.826875 86.97375 24.855625 78.591875 24.85625 85.373125 19.928125 82.783125 11.958125 89.564375 16.88375'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$31 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/dominican-republic%3c/title%3e %3cg id='flags/dominican-republic' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-dominican-republic' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M5.511875%2c201.739375 C20.285625%2c256.55375 63.44625%2c299.715 118.26125%2c314.48875 L118.26125%2c201.739375 L5.511875%2c201.739375 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M118.26125%2c5.511875 C63.44625%2c20.285 20.285%2c63.44625 5.511875%2c118.260625 L118.26125%2c118.260625 L118.26125%2c5.511875 L118.26125%2c5.511875 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M314.488125%2c118.26125 C299.715%2c63.44625 256.55375%2c20.285 201.739375%2c5.511875 L201.739375%2c118.26125 L314.488125%2c118.26125 L314.488125%2c118.26125 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M201.739375%2c314.488125 C256.55375%2c299.714375 299.715%2c256.55375 314.48875%2c201.73875 L201.739375%2c201.73875 L201.739375%2c314.488125 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M201.739375%2c160 C201.739375%2c183.0525 183.0525%2c201.739375 160%2c201.739375 C136.948125%2c201.739375 118.260625%2c183.0525 118.260625%2c160 C118.260625%2c136.9475 160%2c118.260625 160%2c118.260625 C160%2c118.260625 201.739375%2c136.9475 201.739375%2c160 Z' id='Path' fill='%23496E2D'%3e%3c/path%3e %3cpath d='M118.260625%2c160 C118.260625%2c136.9475 136.948125%2c118.260625 160%2c118.260625 C183.0525%2c118.260625 201.739375%2c136.9475 201.739375%2c160' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M136.521875%2c139.130625 L136.521875%2c165.2175 C136.521875%2c178.184375 147.033125%2c188.695625 160%2c188.695625 C172.966875%2c188.695625 183.478125%2c178.184375 183.478125%2c165.2175 L183.478125%2c139.130625 L136.521875%2c139.130625 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$30 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/east-timor%3c/title%3e %3cg id='flags/east-timor' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-east-timor' fill-rule='nonzero'%3e %3cellipse id='Oval' fill='%23FFDA44' cx='160.000156' cy='160' rx='159.999844' ry='160'%3e%3c/ellipse%3e %3cpath d='M160.000156%2c0 C120.82707%2c0 84.9483545%2c14.085625 57.1346317%2c37.45875 L57.1346317%2c37.45875 L229.565088%2c160 L57.1346317%2c282.54125 L57.1346317%2c282.54125 C84.9483545%2c305.914375 120.82707%2c320 160.000156%2c320 C248.36507%2c320 320%2c248.365 320%2c160 C320%2c71.635 248.36507%2c0 160.000156%2c0 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M46.8627667%2c46.8625 C-15.6209222%2c109.34625 -15.6209222%2c210.653125 46.8627667%2c273.1375 C72.6833665%2c247.316875 97.5164673%2c222.48375 160.000156%2c160 L46.8627667%2c46.8625 Z' id='Path' fill='black'%3e%3c/path%3e %3cpolygon id='Path' fill='%23F0F0F0' points='44.3621442 123.346875 68.7121204 146.391875 98.1545916 130.351875 83.7639807 160.633125 108.114582 183.67875 74.8683644 179.34875 60.4758784 209.629375 54.3215095 176.671875 21.0752919 172.340625 50.5165132 156.3025'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2$ = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/ecuador%3c/title%3e %3cg id='flags/ecuador' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-ecuador' fill-rule='nonzero'%3e %3cpath d='M0%2c160 C0%2c71.635 71.635%2c0 160%2c0 C248.365%2c0 320%2c71.635 320%2c160 L160%2c173.913125 L0%2c160 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M21.41%2c240 C49.075625%2c287.8225 100.778125%2c320 160%2c320 C219.221875%2c320 270.924375%2c287.8225 298.59%2c240 L160%2c229.565 L21.41%2c240 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M298.59%2c240 C312.20375%2c216.46625 320%2c189.144375 320%2c160 L0%2c160 C0%2c189.144375 7.79625%2c216.46625 21.41%2c240 L298.59%2c240 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3ccircle id='Oval' fill='%23FFDA44' cx='160' cy='160' r='55.651875'%3e%3c/circle%3e %3cpath d='M160%2c194.7825 C140.820625%2c194.7825 125.2175%2c179.17875 125.2175%2c160 L125.2175%2c139.130625 C125.2175%2c119.95125 140.82125%2c104.348125 160%2c104.348125 C179.17875%2c104.348125 194.7825%2c119.951875 194.7825%2c139.130625 L194.7825%2c160 C194.7825%2c179.179375 179.179375%2c194.7825 160%2c194.7825 Z' id='Path' fill='%23338AF3'%3e%3c/path%3e %3cpath d='M215.651875%2c76.521875 L173.9125%2c76.521875 C173.9125%2c68.838125 167.683125%2c62.60875 159.999375%2c62.60875 C152.315625%2c62.60875 146.08625%2c68.838125 146.08625%2c76.521875 L104.346875%2c76.521875 C104.346875%2c84.20625 111.04%2c90.435 118.723125%2c90.435 L118.26%2c90.435 C118.26%2c98.119375 124.48875%2c104.348125 132.173125%2c104.348125 C132.173125%2c112.0325 138.401875%2c118.26125 146.08625%2c118.26125 L173.9125%2c118.26125 C181.596875%2c118.26125 187.825625%2c112.0325 187.825625%2c104.348125 C195.51%2c104.348125 201.73875%2c98.119375 201.73875%2c90.435 L201.275625%2c90.435 C208.959375%2c90.435 215.651875%2c84.205625 215.651875%2c76.521875 Z' id='Path' fill='black'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2_ = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/egypt%3c/title%3e %3cg id='flags/egypt' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-egypt' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M160%2c0 C91.205625%2c0 32.55875%2c43.42 9.951875%2c104.348125 L310.04875%2c104.348125 C287.44125%2c43.42 228.794375%2c0 160%2c0 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M160%2c320 C228.794375%2c320 287.44125%2c276.58 310.048125%2c215.651875 L9.951875%2c215.651875 C32.55875%2c276.58 91.205625%2c320 160%2c320 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M215.651875%2c142.60875 L173.9125%2c142.60875 C173.9125%2c134.925 167.683125%2c128.695625 159.999375%2c128.695625 C152.315625%2c128.695625 146.08625%2c134.925 146.08625%2c142.60875 L104.346875%2c142.60875 C104.346875%2c150.293125 111.04%2c156.521875 118.72375%2c156.521875 L118.26%2c156.521875 C118.26%2c164.20625 124.48875%2c170.435 132.173125%2c170.435 C132.173125%2c178.119375 138.401875%2c184.348125 146.08625%2c184.348125 L173.9125%2c184.348125 C181.596875%2c184.348125 187.825625%2c178.119375 187.825625%2c170.435 C195.51%2c170.435 201.73875%2c164.20625 201.73875%2c156.521875 L201.275625%2c156.521875 C208.959375%2c156.521875 215.651875%2c150.293125 215.651875%2c142.60875 Z' id='Path' fill='%23FF9811'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2Z = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/england%3c/title%3e %3cg id='flags/england' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-england' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M318.645625%2c139.130625 L180.870625%2c139.130625 L180.87%2c139.130625 L180.87%2c1.354375 C174.038125%2c0.465 167.073125%2c0 160%2c0 C152.926875%2c0 145.961875%2c0.465 139.130625%2c1.354375 L139.130625%2c139.129375 L139.130625%2c139.13 L1.354375%2c139.13 C0.465%2c145.961875 0%2c152.925625 0%2c160 C0%2c167.074375 0.465%2c174.038125 1.354375%2c180.869375 L139.129375%2c180.869375 L139.13%2c180.869375 L139.13%2c318.645625 C145.961875%2c319.535 152.926875%2c320 160%2c320 C167.073125%2c320 174.038125%2c319.535625 180.869375%2c318.645625 L180.869375%2c180.870625 L180.869375%2c180.87 L318.645625%2c180.87 C319.535%2c174.038125 320%2c167.074375 320%2c160 C320%2c152.925625 319.535%2c145.961875 318.645625%2c139.130625 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2Y = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/equatorial-guinea%3c/title%3e %3cg id='flags/equatorial-guinea' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-equatorial-guinea' fill-rule='nonzero'%3e %3cellipse id='Oval' fill='%23F0F0F0' cx='160.000156' cy='160' rx='159.999844' ry='160'%3e%3c/ellipse%3e %3cpath d='M97.3914674%2c104.348125 L310.04751%2c104.348125 C287.441282%2c43.42 228.793839%2c0 160.000156%2c0 C115.816449%2c0 75.8208635%2c17.911875 46.8683917%2c46.868125 L97.3914674%2c104.348125 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M97.3914674%2c215.651875 L310.04751%2c215.651875 C287.441282%2c276.58 228.793839%2c320 160.000156%2c320 C115.816449%2c320 75.8208635%2c302.088125 46.8683917%2c273.131875 L97.3914674%2c215.651875 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M46.8627667%2c46.8625 C-15.6209222%2c109.34625 -15.6209222%2c210.653125 46.8627667%2c273.1375 C72.6833665%2c247.316875 97.5164673%2c222.48375 160.000156%2c160 L46.8627667%2c46.8625 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M187.826379%2c132.17375 L187.826379%2c166.95625 C187.826379%2c188.25625 215.652602%2c194.783125 215.652602%2c194.783125 C215.652602%2c194.783125 243.478825%2c188.25625 243.478825%2c166.95625 L243.478825%2c132.17375 L187.826379%2c132.17375 Z' id='Path' fill='%23DEDDE0'%3e%3c/path%3e %3crect id='Rectangle' fill='%23786145' x='208.695734' y='160.695625' width='13.9131114' height='20.17375'%3e%3c/rect%3e %3cpath d='M229.565088%2c153.04375 C229.565088%2c145.359375 223.336344%2c139.130625 215.651977%2c139.130625 C207.967609%2c139.130625 201.738865%2c145.359375 201.738865%2c153.04375 C197.896994%2c153.04375 194.782622%2c156.158125 194.782622%2c160 C194.782622%2c163.841875 197.896994%2c166.95625 201.738865%2c166.95625 C204.020113%2c166.95625 227.283841%2c166.95625 229.565088%2c166.95625 C233.40696%2c166.95625 236.521332%2c163.841875 236.521332%2c160 C236.521332%2c156.158125 233.407585%2c153.04375 229.565088%2c153.04375 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2X = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/eritrea%3c/title%3e %3cg id='flags/eritrea' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-eritrea' fill-rule='nonzero'%3e %3cpath d='M146.087045%2c146.086875 C146.087045%2c146.086875 46.9565166%2c273.16 46.8627667%2c273.136875 C75.8164885%2c302.09125 115.817074%2c320 160.000156%2c320 C248.36507%2c320 320%2c248.365 320%2c160 L146.087045%2c146.086875 Z' id='Path' fill='%23338AF3'%3e%3c/path%3e %3cpath d='M146.087045%2c160 C146.087045%2c160 46.9565166%2c46.840625 46.8627667%2c46.863125 C75.8164885%2c17.90875 115.817074%2c0 160.000156%2c0 C248.36507%2c0 320%2c71.635 320%2c160 L146.087045%2c160 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M46.8627667%2c46.8625 C-15.6209222%2c109.34625 -15.6209222%2c210.653125 46.8627667%2c273.137504 C46.8583917%2c273.163125 320%2c160 320%2c160 L46.8627667%2c46.8625 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M83.478356%2c93.913125 C52.7915109%2c93.913125 27.8265353%2c118.87875 27.8265353%2c149.565 L27.8265353%2c170.434375 C27.8265353%2c201.12125 52.7921359%2c226.08625 83.478356%2c226.08625 C114.164576%2c226.08625 139.130177%2c201.120625 139.130177%2c170.434375 L139.130177%2c149.565 C139.130177%2c118.87875 114.165201%2c93.913125 83.478356%2c93.913125 Z M118.260822%2c170.435 C118.260822%2c185.98 108.009582%2c199.173125 93.9127208%2c203.616875 L93.9127208%2c180.87 L108.677706%2c166.105 L93.9208458%2c151.348125 L93.9127208%2c146.09625 L93.9127208%2c139.13125 L73.0439912%2c139.13125 L73.0439912%2c160 L58.2890056%2c174.754375 L73.0439912%2c189.50875 L73.0439912%2c203.616875 C58.9471299%2c199.17375 48.6958899%2c185.980625 48.6958899%2c170.435625 L48.6958899%2c149.56625 C48.6958899%2c130.386875 64.2996247%2c114.78375 83.478356%2c114.78375 C102.657087%2c114.78375 118.260822%2c130.3875 118.260822%2c149.56625 L118.260822%2c170.435 L118.260822%2c170.435 Z' id='Shape' fill='%23FFDA44'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2W = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/estonia%3c/title%3e %3cg id='flags/estonia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-estonia' fill-rule='nonzero'%3e %3cpath d='M0%2c160 C0%2c179.57125 3.520625%2c198.31875 9.951875%2c215.651875 L160%2c222.60875 L310.048125%2c215.6525 C316.48%2c198.31875 320%2c179.57125 320%2c160 C320%2c140.42875 316.48%2c121.68125 310.048125%2c104.348125 L160%2c97.39125 L9.951875%2c104.3475 C3.520625%2c121.68125 0%2c140.42875 0%2c160 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M160%2c0 C91.205625%2c0 32.55875%2c43.42 9.951875%2c104.348125 L310.04875%2c104.348125 C287.44125%2c43.42 228.794375%2c0 160%2c0 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M310.048125%2c215.651875 L9.951875%2c215.651875 C32.55875%2c276.579375 91.205625%2c320 160%2c320 C228.794375%2c320 287.44125%2c276.579375 310.048125%2c215.651875 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2V = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/ethiopia%3c/title%3e %3cg id='flags/ethiopia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-ethiopia' fill-rule='nonzero'%3e %3cpath d='M0%2c160 C0%2c179.5725 3.520625%2c198.32 9.9525%2c215.65375 L160%2c229.565 L310.0475%2c215.653125 C316.48%2c198.32 320%2c179.571875 320%2c160 C320%2c140.696875 316.580625%2c122.1925 310.31625%2c105.059375 L160%2c90.435 L9.68375%2c105.06 C3.419375%2c122.1925 0%2c140.696875 0%2c160 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M160%2c320 C228.794375%2c320 287.44125%2c276.58 310.048125%2c215.651875 L9.951875%2c215.651875 C32.55875%2c276.58 91.205625%2c320 160%2c320 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M160%2c0 C91.205625%2c0 32.55875%2c43.42 9.951875%2c104.348125 L310.04875%2c104.348125 C287.44125%2c43.42 228.794375%2c0 160%2c0 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3ccircle id='Oval' fill='%230052B4' cx='160' cy='160' r='76.521875'%3e%3c/circle%3e %3cg id='Group' transform='translate(101.429375%2c 100.744375)' fill='%23FFDA44'%3e %3cpolygon id='Path' points='58.554375 1.77635684e-14 72.368125 42.51375 117.14125 42.51375 80.905 68.789375 94.8275 111.429375 58.554375 85.02875 22.336875 111.380625 36.203125 68.789375 1.77635684e-14 42.51375 44.740625 42.51375'%3e%3c/polygon%3e %3cpolygon id='Path' points='113.648125 69.836875 69.825625 55.596875 96.90875 18.321875 85.65375 10.143125 58.569375 47.420625 31.4875 10.14375 20.23125 18.32125 47.31375 55.599375 3.493125 69.83625 7.791875 83.069375 51.614375 68.83125 51.614375 114.9075 65.526875 114.9075 65.526875 68.830625 109.3475 83.069375'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2U = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/european-union%3c/title%3e %3cg id='flags/european-union' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-european-union' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%230052B4' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(62.609375%2c 62.608750)' fill='%23FFDA44'%3e %3cpolygon id='Path' points='97.39125 0 102.571875 15.943125 119.334375 15.943125 105.7725 25.79625 110.953125 41.739375 97.39125 31.885625 83.82875 41.739375 89.009375 25.79625 75.4475 15.943125 92.210625 15.943125'%3e%3c/polygon%3e %3cpolygon id='Path' points='28.524375 28.525 43.461875 36.135 55.315 24.2825 52.691875 40.83875 67.62875 48.449375 51.071875 51.071875 48.449375 67.629375 40.83875 52.6925 24.2825 55.315625 36.135625 43.4625'%3e%3c/polygon%3e %3cpolygon id='Path' points='2.66453526e-14 97.39125 15.943125 92.210625 15.943125 75.4475 25.795625 89.01 41.739375 83.829375 31.885 97.39125 41.739375 110.953125 25.795625 105.773125 15.943125 119.335 15.943125 102.571875'%3e%3c/polygon%3e %3cpolygon id='Path' points='28.524375 166.2575 36.135 151.32 24.2825 139.466875 40.839375 142.090625 48.44875 127.15375 51.071875 143.710625 67.628125 146.333125 52.693125 153.94375 55.315 170.5 43.461875 158.646875'%3e%3c/polygon%3e %3cpolygon id='Path' points='97.39125 194.7825 92.21 178.839375 75.4475 178.839375 89.01 168.98625 83.82875 153.044375 97.39125 162.896875 110.953125 153.044375 105.7725 168.98625 119.334375 178.839375 102.57125 178.839375'%3e%3c/polygon%3e %3cpolygon id='Path' points='166.2575 166.2575 151.320625 158.6475 139.466875 170.500625 142.09 153.943125 127.154375 146.333125 143.710625 143.710625 146.333125 127.15375 153.943125 142.090625 170.499375 139.466875 158.64625 151.32125'%3e%3c/polygon%3e %3cpolygon id='Path' points='194.781875 97.39125 178.83875 102.571875 178.83875 119.335 168.985625 105.7725 153.04375 110.953125 162.896875 97.39125 153.04375 83.829375 168.98625 89.01 178.83875 75.4475 178.83875 92.21125'%3e%3c/polygon%3e %3cpolygon id='Path' points='166.2575 28.525 158.646875 43.4625 170.5 55.315625 153.9425 52.691875 146.333125 67.62875 143.710625 51.071875 127.154375 48.44875 142.09 40.83875 139.466875 24.283125 151.32125 36.135625'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2T = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/falkland-islands%3c/title%3e %3cg id='flags/falkland-islands' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-falkland-islands' fill-rule='nonzero'%3e %3cpath d='M320%2c160.156098 C320%2c248.434888 248.365%2c320 160%2c320 C71.635%2c320 0%2c248.434888 0%2c160.156098 C0%2c160.194185 160%2c0.329678049 160%2c0.312195122 C248.365%2c0.312195122 320%2c71.8773073 320%2c160.156098 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cg id='Group' fill='%23F0F0F0'%3e %3cpath d='M160%2c0.312195122 C159.99%2c0.312195122 159.9825%2c0.312195122 159.973125%2c0.312195122 L160%2c0.312195122 L160%2c0.312195122 Z' id='Path'%3e%3c/path%3e %3cpath d='M159.571875%2c160.156098 L160%2c160.156098 C160%2c160.012488 160%2c159.872624 160%2c159.72839 C159.8575%2c159.871376 159.715%2c160.013737 159.571875%2c160.156098 Z' id='Path'%3e%3c/path%3e %3cpath d='M160.000625%2c83.708878 C160.000625%2c55.5832195 160.000625%2c37.1543415 160.000625%2c0.312195122 L159.973125%2c0.312195122 C71.62%2c0.327180488 0%2c71.8854244 0%2c160.156098 L83.478125%2c160.156098 L83.478125%2c113.195083 L130.485625%2c160.156098 L159.5725%2c160.156098 C159.715%2c160.013737 159.8575%2c159.871376 160.000625%2c159.72839 C160.000625%2c148.959532 160.000625%2c139.35079 160.000625%2c130.671141 L112.9925%2c83.708878 L160.000625%2c83.708878 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(20.869375%2c 21.161210)' fill='%23D80027'%3e %3cpath d='M60.0775%2c4.43655952e-15 C35.053125%2c14.2354732 14.249375%2c35.0189268 4.4408921e-15%2c60.0188878 L4.4408921e-15%2c138.994888 L41.739375%2c138.994888 L41.739375%2c41.6999024 L41.739375%2c41.6986537 L139.130625%2c41.6986537 C139.130625%2c28.547122 139.130625%2c16.0181073 139.130625%2c4.43655952e-15 L60.0775%2c4.43655952e-15 Z' id='Path'%3e%3c/path%3e %3cpath d='M139.130625%2c119.338459 L82.285%2c62.5482927 L62.609375%2c62.5482927 L62.609375%2c62.5495415 L139.129375%2c138.994888 L139.130625%2c138.994888 C139.130625%2c138.994888 139.130625%2c125.441249 139.130625%2c119.338459 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpolygon id='Path' fill='%23FFDA44' points='257.39125 187.9552 257.39125 194.904663 201.739375 194.904663 201.739375 187.9552 180.869375 187.9552 180.869375 215.753678 194.7825 215.753678 194.7825 222.703766 264.348125 222.703766 264.348125 215.753678 278.260625 215.753678 278.260625 187.9552'%3e%3c/polygon%3e %3cpath d='M180.869375%2c83.708878 L180.869375%2c160.156098 C180.869375%2c197.394107 229.565%2c208.804215 229.565%2c208.804215 C229.565%2c208.804215 278.260625%2c197.394107 278.260625%2c160.156098 L278.260625%2c83.708878 L180.869375%2c83.708878 Z' id='Path' fill='%23338AF3'%3e%3c/path%3e %3cg id='Group' transform='translate(180.870000%2c 101.778107)' fill='%23F3F3F3'%3e %3cpath d='M48.6925%2c38.9525854 C36.519375%2c38.9525854 36.519375%2c50.0723512 24.34625%2c50.0723512 C12.173125%2c50.0723512 12.173125%2c38.9525854 0%2c38.9525854 L0%2c58.4117073 C12.173125%2c58.4117073 12.173125%2c69.5314732 24.34625%2c69.5314732 C36.519375%2c69.5314732 36.519375%2c58.4117073 48.6925%2c58.4117073 C60.866875%2c58.4117073 60.866875%2c69.5314732 73.041875%2c69.5314732 C85.216875%2c69.5314732 85.21625%2c58.4117073 97.39125%2c58.4117073 L97.39125%2c38.9525854 C85.216875%2c38.9525854 85.216875%2c50.0723512 73.041875%2c50.0723512 C60.866875%2c50.0723512 60.866875%2c38.9525854 48.6925%2c38.9525854 Z' id='Path'%3e%3c/path%3e %3cpath d='M48.6925%2c-1.77462381e-14 C36.519375%2c-1.77462381e-14 36.519375%2c11.1197659 24.34625%2c11.1197659 C12.173125%2c11.1197659 12.173125%2c-1.77462381e-14 0%2c-1.77462381e-14 L0%2c19.459122 C12.173125%2c19.459122 12.173125%2c30.5788878 24.34625%2c30.5788878 C36.519375%2c30.5788878 36.519375%2c19.459122 48.6925%2c19.459122 C60.866875%2c19.459122 60.866875%2c30.5788878 73.041875%2c30.5788878 C85.216875%2c30.5788878 85.21625%2c19.459122 97.39125%2c19.459122 L97.39125%2c-1.77462381e-14 C85.216875%2c-1.77462381e-14 85.216875%2c11.1197659 73.041875%2c11.1197659 C60.866875%2c11.1197659 60.866875%2c-1.77462381e-14 48.6925%2c-1.77462381e-14 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2S = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/faroe-islands%3c/title%3e %3cg id='flags/faroe-islands' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-faroe-islands' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M313.04375%2c160 L318.643125%2c139.130625 C317.713125%2c132.0175 316.318125%2c125.05 314.48875%2c118.26125 L146.086875%2c118.26125 L146.086875%2c0.60875 C138.986875%2c1.22 132.02125%2c2.300625 125.2175%2c3.809375 L97.39125%2c20.869375 L83.478125%2c19.465 C76.15625%2c23.46 69.180625%2c28.01 62.60875%2c33.059375 L62.60875%2c118.260625 L5.511875%2c118.260625 C3.6825%2c125.049375 2.2875%2c132.016875 1.356875%2c139.13 L6.95625%2c160 L1.356875%2c180.869375 C2.286875%2c187.9825 3.681875%2c194.95 5.51125%2c201.73875 L62.608125%2c201.73875 L62.608125%2c286.94 C69.18%2c291.99 76.15625%2c296.539375 83.4775%2c300.534375 L104.346875%2c299.13 L125.21625%2c316.19 C132.020625%2c317.698125 138.98625%2c318.77875 146.085625%2c319.390625 L146.085625%2c201.739375 L314.486875%2c201.739375 C316.31625%2c194.950625 317.71125%2c187.983125 318.643125%2c180.87 L313.04375%2c160 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M318.645625%2c139.130625 L125.218125%2c139.130625 L125.2175%2c139.130625 L125.2175%2c3.803125 C110.43125%2c7.081875 96.413125%2c12.39625 83.478125%2c19.454375 L83.478125%2c139.13 L83.478125%2c139.13 L1.354375%2c139.13 C0.465%2c145.961875 0%2c152.926875 0%2c160 C0%2c167.073125 0.465%2c174.038125 1.354375%2c180.869375 L83.4775%2c180.869375 L83.478125%2c180.869375 L83.478125%2c300.545 C96.413125%2c307.6025 110.43125%2c312.918125 125.2175%2c316.19625 L125.2175%2c180.87125 L125.2175%2c180.87 L318.645625%2c180.87 C319.535%2c174.038125 320%2c167.073125 320%2c160 C320%2c152.926875 319.535%2c145.961875 318.645625%2c139.130625 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2R = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/fiji%3c/title%3e %3cg id='flags/fiji' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-fiji' fill-rule='nonzero'%3e %3cpath d='M320%2c160.156098 C320%2c248.434888 248.365%2c320 160%2c320 C71.635%2c320 0%2c248.434888 0%2c160.156098 C0%2c160.194185 160%2c0.329678049 160%2c0.312195122 C248.365%2c0.312195122 320%2c71.8773073 320%2c160.156098 Z' id='Path' fill='%23338AF3'%3e%3c/path%3e %3cg id='Group' transform='translate(76.521875%2c 76.759415)' fill='%230052B4'%3e %3cpolygon id='Path' points='83.478125 1.77462381e-14 83.478125 53.9117268 27.82625 1.77462381e-14'%3e%3c/polygon%3e %3cpolygon id='Path' points='6.95625 83.3966829 53.96375 83.3966829 6.95625 20.8490146 0 69.4971317'%3e%3c/polygon%3e %3c/g%3e %3cg id='Group' fill='%23F0F0F0'%3e %3cpath d='M160%2c0.312195122 C159.99%2c0.312195122 159.981875%2c0.312195122 159.973125%2c0.312195122 L160%2c0.312195122 L160%2c0.312195122 Z' id='Path'%3e%3c/path%3e %3cpath d='M159.571875%2c160.156098 L160%2c160.156098 C160%2c160.012488 160%2c159.872624 160%2c159.72839 C159.8575%2c159.871376 159.715%2c160.013737 159.571875%2c160.156098 Z' id='Path'%3e%3c/path%3e %3cpath d='M160.00125%2c83.708878 C160.00125%2c55.5832195 160.00125%2c37.1543415 160.00125%2c0.312195122 L159.973125%2c0.312195122 C71.62%2c0.327180488 0%2c71.8854244 0%2c160.156098 L83.478125%2c160.156098 L83.478125%2c113.195083 L130.485625%2c160.156098 L159.573125%2c160.156098 C159.715625%2c160.013737 159.858125%2c159.871376 160.00125%2c159.72839 C160.00125%2c148.959532 160.00125%2c139.35079 160.00125%2c130.671141 L112.9925%2c83.708878 L160.00125%2c83.708878 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(20.869375%2c 21.161210)' fill='%23D80027'%3e %3cpath d='M60.0775%2c4.43655952e-15 C35.053125%2c14.2354732 14.249375%2c35.0189268 4.4408921e-15%2c60.0188878 L4.4408921e-15%2c138.994888 L41.739375%2c138.994888 L41.739375%2c41.6999024 L41.739375%2c41.6986537 L139.130625%2c41.6986537 C139.130625%2c28.547122 139.130625%2c16.0181073 139.130625%2c4.43655952e-15 L60.0775%2c4.43655952e-15 Z' id='Path'%3e%3c/path%3e %3cpath d='M139.130625%2c119.338459 L82.285%2c62.5482927 L62.609375%2c62.5482927 L62.609375%2c62.5495415 L139.129375%2c138.994888 L139.130625%2c138.994888 C139.130625%2c138.994888 139.130625%2c125.441249 139.130625%2c119.338459 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M180.869375%2c104.558517 L180.869375%2c160.155473 C180.869375%2c197.394107 229.565%2c208.804215 229.565%2c208.804215 C229.565%2c208.804215 278.260625%2c197.394107 278.260625%2c160.155473 L278.260625%2c104.558517 L229.565%2c90.6589659 L180.869375%2c104.558517 Z' id='Path' fill='%23F3F3F3'%3e%3c/path%3e %3cpath d='M278.260625%2c104.558517 L278.260625%2c83.7095024 L180.869375%2c83.7095024 L180.869375%2c104.558517 L222.6075%2c104.558517 L222.6075%2c146.257795 L180.869375%2c146.257795 L180.869375%2c160.156098 C180.869375%2c160.156722 180.869375%2c160.157346 180.869375%2c160.157346 L222.6075%2c160.157971 L222.6075%2c206.673171 C226.80625%2c208.156722 229.565%2c208.804839 229.565%2c208.804839 C229.565%2c208.804839 232.3225%2c208.157971 236.520625%2c206.673171 L236.520625%2c160.157346 L278.260625%2c160.157346 L278.260625%2c160.156098 L278.260625%2c146.257171 L236.520625%2c146.257171 L236.520625%2c104.557893 L278.260625%2c104.557893 L278.260625%2c104.558517 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2Q = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/finland%3c/title%3e %3cg id='flags/finland' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-finland' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M318.645625%2c139.130625 L125.218125%2c139.130625 L125.2175%2c139.130625 L125.2175%2c3.803125 C110.43125%2c7.081875 96.413125%2c12.39625 83.478125%2c19.454375 L83.478125%2c139.129375 L83.478125%2c139.13 L1.354375%2c139.13 C0.46375%2c145.961875 0%2c152.926875 0%2c160 C0%2c167.073125 0.46375%2c174.038125 1.354375%2c180.869375 L83.4775%2c180.869375 L83.478125%2c180.869375 L83.478125%2c300.545 C96.413125%2c307.6025 110.43125%2c312.918125 125.2175%2c316.19625 L125.2175%2c180.87125 L125.2175%2c180.87 L318.645625%2c180.87 C319.535%2c174.038125 320%2c167.073125 320%2c160 C320%2c152.926875 319.535%2c145.961875 318.645625%2c139.130625 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2P = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/france%3c/title%3e %3cg id='flags/france' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-france' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M320%2c160 C320%2c91.205625 276.58%2c32.55875 215.651875%2c9.951875 L215.651875%2c310.04875 C276.58%2c287.44125 320%2c228.794375 320%2c160 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M0%2c160 C0%2c228.794375 43.420625%2c287.44125 104.348125%2c310.048125 L104.348125%2c9.951875 C43.420625%2c32.55875 0%2c91.205625 0%2c160 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2O = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/french-polynesia%3c/title%3e %3cg id='flags/french-polynesia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-french-polynesia' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(19.454375%2c 0.000000)' fill='%23D80027'%3e %3cpath d='M-6.66133815e-15%2c83.478125 L281.090625%2c83.478125 C253.954375%2c33.743125 201.1925%2c0 140.545625%2c0 C79.89875%2c0 27.136875%2c33.743125 -6.66133815e-15%2c83.478125 Z' id='Path'%3e%3c/path%3e %3cpath d='M140.545625%2c320 C201.1925%2c320 253.954375%2c286.256875 281.09125%2c236.521875 L-6.66133815e-15%2c236.521875 C27.136875%2c286.256875 79.89875%2c320 140.545625%2c320 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M215.651875%2c160 C215.651875%2c190.73625 190.735625%2c208.695625 160%2c208.695625 C129.264375%2c208.695625 104.348125%2c190.73625 104.348125%2c160 C104.348125%2c129.26375 129.264375%2c104.348125 160%2c104.348125 C190.735625%2c104.348125 215.651875%2c129.26375 215.651875%2c160 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M215.651875%2c160 C215.651875%2c190.73625 190.735625%2c215.651875 160%2c215.651875 C129.264375%2c215.651875 104.348125%2c190.73625 104.348125%2c160' id='Path' fill='%230052B4'%3e%3c/path%3e %3cg id='Group' transform='translate(125.217500%2c 125.217500)' fill='%23D80027'%3e %3crect id='Rectangle' x='1.77635684e-14' y='20.869375' width='13.913125' height='27.82625'%3e%3c/rect%3e %3crect id='Rectangle' x='55.651875' y='20.869375' width='13.913125' height='27.82625'%3e%3c/rect%3e %3crect id='Rectangle' x='27.82625' y='0' width='13.913125' height='48.695625'%3e%3c/rect%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2N = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/gabon%3c/title%3e %3cg id='flags/gabon' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-gabon' fill-rule='nonzero'%3e %3cpath d='M310.048125%2c215.651875 C316.48%2c198.319375 320%2c179.57125 320%2c160 C320%2c140.42875 316.48%2c121.681875 310.048125%2c104.348125 L160%2c90.435 L9.951875%2c104.348125 C3.520625%2c121.681875 0%2c140.42875 0%2c160 C0%2c179.57125 3.520625%2c198.319375 9.951875%2c215.651875 L160%2c229.565 L310.048125%2c215.651875 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M160%2c320 C228.79375%2c320 287.44125%2c276.58 310.0475%2c215.651875 L9.95125%2c215.651875 C32.55875%2c276.58 91.205%2c320 160%2c320 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M160%2c0 C91.205%2c0 32.55875%2c43.42 9.95125%2c104.348125 L310.048125%2c104.348125 C287.44125%2c43.42 228.79375%2c0 160%2c0 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2M = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/galapagos-islands%3c/title%3e %3cg id='flags/galapagos-islands' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-galapagos-islands' fill-rule='nonzero'%3e %3cpath d='M320%2c160 C320%2c140.42875 316.48%2c121.680625 310.048125%2c104.348125 L160%2c97.39125 L9.951875%2c104.3475 C3.520625%2c121.680625 0%2c140.42875 0%2c160 C0%2c179.57125 3.520625%2c198.319375 9.951875%2c215.651875 L160%2c222.60875 L310.048125%2c215.6525 C316.48%2c198.319375 320%2c179.57125 320%2c160 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cpath d='M160%2c320 C228.794375%2c320 287.44125%2c276.58 310.048125%2c215.651875 L9.951875%2c215.651875 C32.55875%2c276.58 91.205625%2c320 160%2c320 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M9.951875%2c104.348125 L310.04875%2c104.348125 C287.44125%2c43.42 228.794375%2c0 160%2c0 C91.205625%2c0 32.55875%2c43.42 9.951875%2c104.348125 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2L = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/gambia%3c/title%3e %3cg id='flags/gambia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-gambia' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M160%2c0 C93.853125%2c0 37.085625%2c40.14125 12.7175%2c97.39125 L307.283125%2c97.39125 C282.915%2c40.14125 226.146875%2c0 160%2c0 Z' id='Path' fill='%23A2001D'%3e%3c/path%3e %3cpath d='M160%2c320 C226.146875%2c320 282.915%2c279.85875 307.2825%2c222.60875 L12.7175%2c222.60875 C37.085625%2c279.85875 93.853125%2c320 160%2c320 Z' id='Path' fill='%23496E2D'%3e%3c/path%3e %3cpath d='M314.488125%2c118.260625 L5.511875%2c118.260625 C1.925%2c131.56875 0%2c145.558125 0%2c160 C0%2c174.441875 1.925%2c188.43125 5.511875%2c201.739375 L314.48875%2c201.739375 C318.075%2c188.43125 320%2c174.441875 320%2c160 C320%2c145.558125 318.075%2c131.56875 314.488125%2c118.260625 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2K = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/georgia%3c/title%3e %3cg id='flags/georgia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-georgia' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' fill='%23D80027'%3e %3cpath d='M318.645625%2c139.130625 L180.870625%2c139.130625 L180.87%2c139.130625 L180.87%2c1.354375 C174.038125%2c0.465 167.073125%2c0 160%2c0 C152.926875%2c0 145.961875%2c0.465 139.130625%2c1.354375 L139.130625%2c139.129375 L139.130625%2c139.13 L1.354375%2c139.13 C0.465%2c145.961875 0%2c152.926875 0%2c160 C0%2c167.074375 0.465%2c174.038125 1.354375%2c180.869375 L139.129375%2c180.869375 L139.13%2c180.869375 L139.13%2c318.645625 C145.961875%2c319.535 152.926875%2c320 160%2c320 C167.073125%2c320 174.038125%2c319.535625 180.869375%2c318.645625 L180.869375%2c180.870625 L180.869375%2c180.87 L318.645625%2c180.87 C319.535%2c174.038125 320%2c167.074375 320%2c160 C320%2c152.926875 319.535%2c145.961875 318.645625%2c139.130625 Z' id='Path'%3e%3c/path%3e %3cpolygon id='Path' points='97.39125 76.521875 97.39125 55.651875 76.521875 55.651875 76.521875 76.521875 55.651875 76.521875 55.651875 97.39125 76.521875 97.39125 76.521875 118.260625 97.39125 118.260625 97.39125 97.39125 118.260625 97.39125 118.260625 76.521875'%3e%3c/polygon%3e %3cpolygon id='Path' points='243.478125 76.521875 243.478125 55.651875 222.60875 55.651875 222.60875 76.521875 201.739375 76.521875 201.739375 97.39125 222.60875 97.39125 222.60875 118.260625 243.478125 118.260625 243.478125 97.39125 264.348125 97.39125 264.348125 76.521875'%3e%3c/polygon%3e %3cpolygon id='Path' points='97.39125 222.60875 97.39125 201.739375 76.521875 201.739375 76.521875 222.60875 55.651875 222.60875 55.651875 243.478125 76.521875 243.478125 76.521875 264.348125 97.39125 264.348125 97.39125 243.478125 118.260625 243.478125 118.260625 222.60875'%3e%3c/polygon%3e %3cpolygon id='Path' points='243.478125 222.60875 243.478125 201.739375 222.60875 201.739375 222.60875 222.60875 201.739375 222.60875 201.739375 243.478125 222.60875 243.478125 222.60875 264.348125 243.478125 264.348125 243.478125 243.478125 264.348125 243.478125 264.348125 222.60875'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2J = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/germany%3c/title%3e %3cg id='flags/germany' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-germany' fill-rule='nonzero'%3e %3cpath d='M9.951875%2c215.651875 C32.55875%2c276.579375 91.205625%2c320 160%2c320 C228.794375%2c320 287.44125%2c276.579375 310.048125%2c215.651875 L160%2c201.739375 L9.951875%2c215.651875 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M160%2c0 C91.205625%2c0 32.55875%2c43.42 9.951875%2c104.348125 L160%2c118.260625 L310.048125%2c104.3475 C287.44125%2c43.42 228.794375%2c0 160%2c0 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M9.951875%2c104.348125 C3.520625%2c121.68125 0%2c140.42875 0%2c160 C0%2c179.57125 3.520625%2c198.31875 9.951875%2c215.651875 L310.04875%2c215.651875 C316.48%2c198.31875 320%2c179.57125 320%2c160 C320%2c140.42875 316.48%2c121.68125 310.048125%2c104.348125 L9.951875%2c104.348125 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2I = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/ghana%3c/title%3e %3cg id='flags/ghana' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-ghana' fill-rule='nonzero'%3e %3cpath d='M0%2c160 C0%2c179.57125 3.520625%2c198.31875 9.951875%2c215.651875 L160%2c222.60875 L310.048125%2c215.6525 C316.48%2c198.31875 320%2c179.57125 320%2c160 C320%2c140.42875 316.48%2c121.68125 310.048125%2c104.348125 L160%2c97.39125 L9.951875%2c104.3475 C3.520625%2c121.68125 0%2c140.42875 0%2c160 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M160%2c0 C91.205625%2c0 32.55875%2c43.42 9.951875%2c104.348125 L310.04875%2c104.348125 C287.44125%2c43.42 228.794375%2c0 160%2c0 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M310.048125%2c215.651875 L9.951875%2c215.651875 C32.55875%2c276.579375 91.205625%2c320 160%2c320 C228.794375%2c320 287.44125%2c276.579375 310.048125%2c215.651875 Z' id='Path' fill='%23496E2D'%3e%3c/path%3e %3cpolygon id='Path' fill='black' points='159.99875 104.348125 173.81125 146.860625 218.51625 146.860625 182.351875 173.1375 196.164375 215.651875 159.99875 189.376875 123.833125 215.651875 137.648125 173.1375 101.48375 146.860625 146.18625 146.860625'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2H = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/gibraltar%3c/title%3e %3cg id='flags/gibraltar' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-gibraltar' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F9F9F9' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(9.951250%2c 69.566875)' fill='%23D80027'%3e %3cpath d='M150.04875%2c250.433125 C218.8425%2c250.433125 277.49%2c207.013125 300.09625%2c146.085 L2.22044605e-15%2c146.085 C22.6075%2c207.013125 81.25375%2c250.433125 150.04875%2c250.433125 Z' id='Path'%3e%3c/path%3e %3cpolygon id='Path' points='212.6575 62.606875 212.6575 41.7375 219.61375 41.7375 219.61375 27.824375 205.700625 27.824375 205.700625 34.78125 191.788125 34.78125 191.788125 27.824375 177.875 27.824375 177.875 41.7375 184.83125 41.7375 184.83125 62.606875 170.918125 62.606875 170.918125 13.9125 177.875 13.9125 177.875 -8.8817842e-15 163.961875 -8.8817842e-15 163.961875 6.955 157.005 6.955 157.005 -8.8817842e-15 143.0925 -8.8817842e-15 143.0925 6.955 136.135625 6.955 136.135625 -8.8817842e-15 122.2225 -8.8817842e-15 122.2225 13.9125 129.179375 13.9125 129.179375 62.606875 115.26625 62.606875 115.26625 41.7375 122.2225 41.7375 122.2225 27.824375 108.309375 27.824375 108.309375 34.78125 94.396875 34.78125 94.396875 27.824375 80.48375 27.824375 80.48375 41.7375 87.44 41.7375 87.44 62.606875 73.526875 62.606875 73.526875 118.259375 226.570625 118.259375 226.570625 62.606875'%3e%3c/polygon%3e %3c/g%3e %3cpath d='M160%2c180.869375 C148.474375%2c180.869375 139.130625%2c190.213125 139.130625%2c201.73875 C139.130625%2c210.82375 144.939375%2c218.55125 153.04375%2c221.41625 L153.04375%2c250.435 L132.174375%2c250.435 L132.174375%2c278.26125 L166.956875%2c278.26125 L166.956875%2c221.416875 C175.06125%2c218.551875 180.87%2c210.825 180.87%2c201.739375 C180.869375%2c190.21375 171.525625%2c180.869375 160%2c180.869375 Z M160%2c208.695625 C156.158125%2c208.695625 153.04375%2c205.580625 153.04375%2c201.739375 C153.04375%2c197.8975 156.158125%2c194.783125 160%2c194.783125 C163.841875%2c194.783125 166.95625%2c197.8975 166.95625%2c201.739375 C166.95625%2c205.580625 163.841875%2c208.695625 160%2c208.695625 Z' id='Shape' fill='%23FFDA44'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2G = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/greece%3c/title%3e %3cg id='flags/greece' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-greece' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' fill='%23338AF3'%3e %3cpath d='M160%2c118.260625 L314.488125%2c118.260625 C310.47625%2c103.376875 304.37875%2c89.35125 296.51625%2c76.52125 L160%2c76.52125 L160%2c118.260625 Z' id='Path'%3e%3c/path%3e %3cpath d='M60.401875%2c285.2175 L259.5975%2c285.2175 C274.199375%2c273.5875 286.721875%2c259.46125 296.515625%2c243.478125 L23.48375%2c243.478125 C33.278125%2c259.460625 45.800625%2c273.5875 60.401875%2c285.2175 Z' id='Path'%3e%3c/path%3e %3cpath d='M55.651875%2c38.711875 C43.073125%2c49.54375 32.19875%2c62.299375 23.48375%2c76.521875 L55.651875%2c76.521875 L55.651875%2c38.711875 Z' id='Path'%3e%3c/path%3e %3cpath d='M160%2c160 C160%2c143.7025 160%2c130.063125 160%2c118.260625 L97.39125%2c118.260625 L97.39125%2c160 L55.651875%2c160 L55.651875%2c118.260625 L5.511875%2c118.260625 C1.925%2c131.569375 0%2c145.558125 0%2c160 C0%2c174.441875 1.925%2c188.430625 5.511875%2c201.739375 L314.48875%2c201.739375 C318.075%2c188.430625 320%2c174.441875 320%2c160 L160%2c160 Z' id='Path'%3e%3c/path%3e %3cpath d='M160%2c0 C137.781875%2c0 116.6225%2c4.533125 97.39125%2c12.7175 L97.39125%2c76.521875 L160%2c76.521875 C160%2c61.951875 160%2c49.56 160%2c34.7825 L259.598125%2c34.7825 C232.26625%2c13.015 197.655625%2c0 160%2c0 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2F = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/greenland%3c/title%3e %3cg id='flags/greenland' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-greenland' fill-rule='nonzero'%3e %3cpath d='M0%2c160 C0%2c71.635 71.635%2c0 160%2c0 C248.365%2c0 320%2c71.635 320%2c160 C313.04375%2c160 160%2c180.869375 160%2c180.869375 L0%2c160 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cpath d='M320%2c160 C320%2c248.365 248.365%2c320 160%2c320 C71.635%2c320 0%2c248.365 0%2c160' id='Path' fill='%23D80027'%3e%3c/path%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='111.304375' cy='160' r='76.521875'%3e%3c/circle%3e %3cpath d='M34.7825%2c160 C34.7825%2c117.739375 69.0425%2c83.478125 111.304375%2c83.478125 C153.566875%2c83.478125 187.82625%2c117.73875 187.82625%2c160' id='Path' fill='%23D80027'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2E = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/grenada%3c/title%3e %3cg id='flags/grenada' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-grenada' fill-rule='nonzero'%3e %3cellipse id='Oval' fill='%23FFDA44' cx='160' cy='160.155786' rx='159.999688' ry='159.844214'%3e%3c/ellipse%3e %3cpath d='M69.8208011%2c28.110728 C95.498876%2c10.5740694 126.547565%2c0.31157134 160%2c0.31157134 C193.452435%2c0.31157134 224.501124%2c10.5740694 250.179199%2c28.110728 L160%2c35.060205 L69.8208011%2c28.110728 Z' id='Path' fill='%23A2001D'%3e%3c/path%3e %3cpolygon id='Path' fill='%230052B4' points='160 160.155786 149.78877 149.954478 147.077525 154.806624'%3e%3c/polygon%3e %3cg id='Group' transform='translate(0.000000%2c 47.128443)' fill='%23496E2D'%3e %3cpath d='M46.862721%2c8.87313636e-15 C-15.620907%2c62.422912 -15.620907%2c163.631149 46.862721%2c226.054685 C72.6832955%2c200.259201 97.516372%2c175.450255 160%2c113.027342 L46.862721%2c8.87313636e-15 Z' id='Path'%3e%3c/path%3e %3cpath d='M273.137279%2c8.87313636e-15 C335.620907%2c62.422912 335.620907%2c163.631149 273.137279%2c226.054685 C247.316704%2c200.259201 222.483628%2c175.450255 160%2c113.027342 L273.137279%2c8.87313636e-15 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cellipse id='Oval' fill='%23A2001D' cx='160' cy='160.155786' rx='55.6517663' ry='55.597689'%3e%3c/ellipse%3e %3cg id='Group' transform='translate(107.152603%2c 0.000000)' fill='%23FFDA44'%3e %3cpolygon id='Path' points='52.8467718 104.558097 65.3211224 142.91384 105.694794 142.91384 73.0336074 166.623857 85.507958 204.981473 52.8467718 181.275827 20.1843356 204.981473 32.6611862 166.623857 0 142.91384 40.3711712 142.91384'%3e%3c/polygon%3e %3cpath d='M52.8473968%2c0.31157134 C52.8292718%2c0.31157134 52.8117719%2c0.312820123 52.7936469%2c0.312820123 L52.9005217%2c0.312820123 C52.8830217%2c0.312820123 52.8655217%2c0.31157134 52.8473968%2c0.31157134 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(46.871471%2c 0.311571)' fill='%23A2001D'%3e %3cpath d='M113.182279%2c0 L113.075404%2c0 C68.9173654%2c0.0143610036 28.9418185%2c17.8988057 -1.77635337e-14%2c46.8093791 L226.257683%2c46.8093791 C197.31524%2c17.8988057 157.339693%2c0.0143610036 113.182279%2c0 Z' id='Path'%3e%3c/path%3e %3cpath d='M0.000624998779%2c272.879674 C28.9543184%2c301.800862 68.9504903%2c319.688429 113.128529%2c319.688429 C157.306568%2c319.688429 197.30274%2c301.800862 226.256433%2c272.879674 L0.000624998779%2c272.879674 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(20.869410%2c 17.685888)' fill='%23FFDA44'%3e %3cpolygon id='Path' points='139.13059 4.43656818e-15 141.72121 7.96348871 150.102443 7.96348871 143.321832 12.8855666 145.912452 20.8490553 139.13059 15.9276018 132.349978 20.8490553 134.940598 12.8855666 128.158736 7.96348871 136.53997 7.96348871'%3e%3c/polygon%3e %3cpolygon id='Path' points='100.332541 4.43656818e-15 102.923161 7.96348871 111.304394 7.96348871 104.523782 12.8855666 107.114402 20.8490553 100.332541 15.9276018 93.5525539 20.8490553 96.1425488 12.8855666 89.360687 7.96348871 97.7419207 7.96348871'%3e%3c/polygon%3e %3cpolygon id='Path' points='177.928639 4.43656818e-15 180.519259 7.96348871 188.900493 7.96348871 182.119881 12.8855666 184.710501 20.8490553 177.928639 15.9276018 171.148027 20.8490553 173.738647 12.8855666 166.956785 7.96348871 175.338019 7.96348871'%3e%3c/polygon%3e %3cpolygon id='Path' points='139.13059 264.09074 141.72121 272.054228 150.102443 272.054228 143.321832 276.976306 145.912452 284.939795 139.13059 280.017717 132.349978 284.939795 134.940598 276.976306 128.158736 272.054228 136.53997 272.054228'%3e%3c/polygon%3e %3cpolygon id='Path' points='100.332541 264.09074 102.923161 272.054228 111.304394 272.054228 104.523782 276.976306 107.114402 284.939795 100.332541 280.017717 93.5525539 284.939795 96.1425488 276.976306 89.360687 272.054228 97.7419207 272.054228'%3e%3c/polygon%3e %3cpolygon id='Path' points='177.928639 264.09074 180.519259 272.054228 188.900493 272.054228 182.119881 276.976306 184.710501 284.939795 177.928639 280.017717 171.148027 284.939795 173.738647 276.976306 166.956785 272.054228 175.338019 272.054228'%3e%3c/polygon%3e %3cpath d='M27.8826821%2c139.82997 C31.9920491%2c146.316773 30.0608029%2c154.90278 23.5676905%2c159.008779 C17.0752032%2c163.114777 8.48022001%2c161.185407 4.37022804%2c154.698604 C-3.07038243%2c142.95505 1.24398414%2c123.775617 1.24398414%2c123.775617 C1.24398414%2c123.775617 20.4414466%2c128.085791 27.8826821%2c139.82997 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cellipse id='Oval' fill='%23A2001D' cx='40.716483' cy='170.823514' rx='6.95623641' ry='6.94947697'%3e%3c/ellipse%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2D = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/guam%3c/title%3e %3cg id='flags/guam' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-guam' fill-rule='nonzero'%3e %3cg id='Group' transform='translate(69.820625%2c 0.000000)' fill='%23D80027'%3e %3cpath d='M1.77635684e-14%2c292.17375 C25.6775%2c309.726875 56.7275%2c320 90.179375%2c320 C123.63125%2c320 154.680625%2c309.726875 180.35875%2c292.17375 L90.179375%2c278.260625 L1.77635684e-14%2c292.17375 Z' id='Path'%3e%3c/path%3e %3cpath d='M180.35875%2c27.82625 C154.680625%2c10.273125 123.63125%2c0 90.179375%2c0 C56.7275%2c0 25.6775%2c10.273125 1.77635684e-14%2c27.82625 L90.179375%2c41.739375 L180.35875%2c27.82625 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M320%2c160 C320%2c107.05625 288.3025%2c53.8875 250.179375%2c27.82625 L69.820625%2c27.82625 C27.66875%2c56.64125 0%2c105.0875 0%2c160 C0%2c214.914375 27.66875%2c263.35875 69.820625%2c292.17375 L250.179375%2c292.17375 C292.331875%2c263.35875 320%2c214.914375 320%2c160 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M150.945625%2c260.998125 C148.759375%2c259.123125 97.39125%2c214.468125 97.39125%2c160 C97.39125%2c105.531875 148.75875%2c60.87625 150.945625%2c59.001875 L160%2c51.240625 L169.054375%2c59.00125 C171.240625%2c60.87625 222.60875%2c105.53125 222.60875%2c160 C222.60875%2c214.46875 171.24125%2c259.124375 169.054375%2c260.998125 L160%2c268.759375 L150.945625%2c260.998125 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M208.695625%2c160 C208.695625%2c111.304375 160%2c69.565 160%2c69.565 C160%2c69.565 111.304375%2c111.305625 111.304375%2c160 C111.304375%2c174.896875 115.865%2c189.14 122.19125%2c201.739375 L197.80875%2c201.739375 C204.135%2c189.14 208.695625%2c174.896875 208.695625%2c160 Z' id='Path' fill='%23338AF3'%3e%3c/path%3e %3cpath d='M208.695625%2c160 C208.695625%2c174.896875 204.135%2c189.14 197.80875%2c201.739375 L160%2c208.695625 L122.19125%2c201.739375 C115.865%2c189.140625 111.304375%2c174.896875 111.304375%2c160 L208.695625%2c160 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M160%2c250.435 C160%2c250.435 183.455%2c230.324375 197.80875%2c201.739375 L122.19125%2c201.739375 C136.545%2c230.324375 160%2c250.435 160%2c250.435 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpolygon id='Path' fill='%236DA544' points='128.695625 132.17375 191.304375 132.17375 160 163.478125'%3e%3c/polygon%3e %3crect id='Rectangle' fill='%23A2001D' x='149.565' y='153.04375' width='20.869375' height='62.60875'%3e%3c/rect%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2C = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/guatemala%3c/title%3e %3cg id='flags/guatemala' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-guatemala' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(0.000000%2c 15.876250)' fill='%23338AF3'%3e %3cpath d='M320%2c144.12375 C320%2c80.69 283.084375%2c25.88 229.565%2c0 L229.565%2c288.246875 C283.084375%2c262.3675 320%2c207.556875 320%2c144.12375 Z' id='Path'%3e%3c/path%3e %3cpath d='M0%2c144.12375 C0%2c207.556875 36.915625%2c262.3675 90.435%2c288.2475 L90.435%2c8.8817842e-15 C36.915625%2c25.88 0%2c80.69 0%2c144.12375 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpolygon id='Path' fill='%23ACABB1' points='201.81125 187.055 174.7575 160.00125 200.509375 134.248125 199.3425 120.646875 191.97 113.273125 160 145.243125 128.03 113.273125 120.6575 120.646875 119.490625 134.248125 145.2425 160.00125 118.188125 187.055 132.945625 201.81125 160 174.758125 187.054375 201.81125'%3e%3c/polygon%3e %3cpath d='M199.351875%2c120.648125 L184.595%2c135.405 C190.889375%2c141.699375 194.783125%2c150.395 194.783125%2c160 C194.783125%2c179.21 179.21%2c194.7825 160.000625%2c194.7825 C140.79125%2c194.7825 125.2175%2c179.21 125.2175%2c160 C125.2175%2c150.395 129.11125%2c141.699375 135.405625%2c135.405 L120.64875%2c120.648125 C110.576875%2c130.718125 104.348125%2c144.63125 104.348125%2c160 C104.348125%2c190.73625 129.264375%2c215.651875 160%2c215.651875 C190.735625%2c215.651875 215.651875%2c190.735625 215.651875%2c160 C215.651875%2c144.631875 209.423125%2c130.71875 199.351875%2c120.648125 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2B = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/guernsey%3c/title%3e %3cg id='flags/guernsey' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-guernsey' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M318.645625%2c139.130625 L180.870625%2c139.130625 L180.87%2c139.130625 L180.87%2c1.354375 C174.038125%2c0.465 167.073125%2c0 160%2c0 C152.926875%2c0 145.961875%2c0.465 139.130625%2c1.354375 L139.130625%2c139.130625 L139.130625%2c139.130625 L1.354375%2c139.130625 C0.465%2c145.961875 0%2c152.926875 0%2c160 C0%2c167.073125 0.465%2c174.038125 1.354375%2c180.869375 L139.129375%2c180.869375 L139.13%2c180.869375 L139.13%2c318.645625 C145.961875%2c319.535 152.926875%2c320 160%2c320 C167.073125%2c320 174.038125%2c319.535625 180.869375%2c318.645625 L180.869375%2c180.87125 L180.869375%2c180.87 L318.645625%2c180.87 C319.535%2c174.038125 320%2c167.073125 320%2c160 C320%2c152.926875 319.535%2c145.961875 318.645625%2c139.130625 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpolygon id='Path' fill='%23FFDA44' points='205.2175 166.95625 215.651875 173.913125 215.651875 146.086875 205.2175 153.04375 166.95625 153.04375 166.95625 114.7825 173.913125 104.348125 146.086875 104.348125 153.04375 114.7825 153.04375 153.04375 114.7825 153.04375 104.348125 146.086875 104.348125 173.913125 114.7825 166.95625 153.04375 166.95625 153.04375 205.2175 146.086875 215.651875 173.913125 215.651875 166.95625 205.2175 166.95625 166.95625'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2A = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/guinea-bissau%3c/title%3e %3cg id='flags/guinea-bissau' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-guinea-bissau' fill-rule='nonzero'%3e %3cpath d='M160%2c0 C145.55875%2c0 131.56875%2c1.925 118.260625%2c5.511875 L104.348125%2c160 L118.26125%2c314.488125 C131.56875%2c318.075 145.55875%2c320 160%2c320 C248.365%2c320 320%2c248.365 320%2c160 C320%2c71.635 248.365%2c0 160%2c0 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M104.348125%2c160 L118.26125%2c314.488125 C131.56875%2c318.075 145.55875%2c320 160%2c320 C248.365%2c320 320%2c248.365 320%2c160 L104.348125%2c160 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cg id='Group' transform='translate(0.000000%2c 5.511875)' fill='%23D80027'%3e %3cpath d='M0%2c154.488125 C0%2c215.135 33.74375%2c267.8975 83.478125%2c295.03375 L83.478125%2c13.9425 C33.74375%2c41.07875 0%2c93.84125 0%2c154.488125 Z' id='Path'%3e%3c/path%3e %3cpath d='M0%2c154.488125 C0%2c228.4125 50.138125%2c290.61625 118.260625%2c308.97625 L118.260625%2c2.55351296e-14 C50.138125%2c18.36 0%2c80.56375 0%2c154.488125 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpolygon id='Path' fill='black' points='60.46 118.260625 70.819375 150.145625 104.348125 150.145625 77.224375 169.853125 87.583125 201.739375 60.46 182.0325 33.335625 201.739375 43.696875 169.853125 16.573125 150.145625 50.1 150.145625'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2z = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/guinea%3c/title%3e %3cg id='flags/guinea' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-guinea' fill-rule='nonzero'%3e %3cpath d='M215.65375%2c9.9525 C198.32%2c3.520625 179.571875%2c0 160%2c0 C140.429375%2c0 121.681875%2c3.520625 104.349375%2c9.95125 L97.3925%2c160 L104.34875%2c310.04875 C121.681875%2c316.48 140.429375%2c320 160%2c320 C179.5725%2c320 198.32%2c316.48 215.65375%2c310.0475 L222.61%2c160 L215.65375%2c9.9525 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M0%2c160 C0%2c228.79375 43.42%2c287.44125 104.348125%2c310.0475 L104.348125%2c9.95125 C43.42%2c32.55875 0%2c91.205 0%2c160 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M320%2c160 C320%2c91.205 276.58%2c32.55875 215.651875%2c9.95125 L215.651875%2c310.048125 C276.58%2c287.44125 320%2c228.79375 320%2c160 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2y = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/guyana%3c/title%3e %3cg id='flags/guyana' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-guyana' fill-rule='nonzero'%3e %3cellipse id='Oval' fill='%23F0F0F0' cx='160.000156' cy='160' rx='159.999844' ry='160'%3e%3c/ellipse%3e %3cpath d='M160.000156%2c0 C131.712059%2c0 105.144585%2c7.35125 82.0871073%2c20.2325 L82.0871073%2c299.7675 C105.14521%2c312.64875 131.712059%2c320 160.000156%2c320 C248.36507%2c320 320%2c248.365 320%2c160 C320%2c71.635 248.36507%2c0 160.000156%2c0 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M82.5577319%2c19.969375 C72.4921167%2c25.5475 63.0933759%2c32.1775 54.5058843%2c39.715 C55.3746334%2c38.95375 56.2515076%2c38.20125 57.1352567%2c37.45875 L179.675762%2c160 L57.1346317%2c282.54125 C56.2502576%2c281.79875 55.3740084%2c281.04625 54.5058843%2c280.285 C63.0927509%2c287.8225 72.4921167%2c294.451875 82.5571069%2c300.030625 L320%2c160 L82.5577319%2c19.969375 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cpath d='M69.0439951%2c28.36375 C64.1646248%2c31.7425 59.4783794%2c35.378125 55.0121338%2c39.26375 L160.000156%2c160 L55.0121338%2c280.73625 C59.4777544%2c284.621875 64.1639998%2c288.258125 69.0433701%2c291.63625 L292.611277%2c160 L69.0439951%2c28.36375 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M57.1346317%2c37.45875 C53.5777602%2c40.4475 50.1452635%2c43.580625 46.8627667%2c46.8625 L146.087045%2c160 L46.8627667%2c273.1375 C50.1452635%2c276.42 53.5771352%2c279.55375 57.1346317%2c282.54125 L179.675762%2c160 L57.1346317%2c37.45875 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M46.8627667%2c46.8625 C-15.6209222%2c109.34625 -15.6209222%2c210.653125 46.8627667%2c273.1375 C72.6833665%2c247.316875 97.5164673%2c222.48375 160.000156%2c160 L46.8627667%2c46.8625 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2x = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/haiti%3c/title%3e %3cg id='flags/haiti' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-haiti' fill-rule='nonzero'%3e %3cpath d='M320%2c160 C320%2c248.365 248.365%2c320 160%2c320 C71.635%2c320 0%2c248.365 0%2c160 C0%2c71.635 160%2c0 160%2c0 C160%2c0 320%2c71.635 320%2c160 Z' id='Path' fill='%23A2001D'%3e%3c/path%3e %3cpath d='M0%2c160 C0%2c71.635 71.635%2c0 160%2c0 C248.365%2c0 320%2c71.635 320%2c160' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpolygon id='Path' fill='%23F0F0F0' points='215.651875 201.739375 160 194.7825 104.348125 201.739375 104.348125 118.260625 215.651875 118.260625'%3e%3c/polygon%3e %3ccircle id='Oval' fill='%230052B4' cx='160' cy='166.95625' r='27.82625'%3e%3c/circle%3e %3ccircle id='Oval' fill='%23A2001D' cx='160' cy='166.95625' r='13.913125'%3e%3c/circle%3e %3cpolygon id='Path' fill='%236DA544' points='139.130625 132.17375 180.869375 132.17375 160 153.04375'%3e%3c/polygon%3e %3crect id='Rectangle' fill='%23FFDA44' x='153.04375' y='146.086875' width='13.913125' height='41.739375'%3e%3c/rect%3e %3cpolygon id='Path' fill='%236DA544' points='182.260625 183.651875 137.738125 183.651875 104.348125 201.739375 215.651875 201.739375'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2w = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/hawaii%3c/title%3e %3cg id='flags/hawaii' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-hawaii' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M160%2c320 C200.573125%2c320 237.611875%2c304.89 265.81625%2c280 L54.18375%2c280 C82.388125%2c304.89 119.426875%2c320 160%2c320 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cg id='Group' transform='translate(5.040625%2c 0.000000)' fill='%230052B4'%3e %3cpath d='M1.11022302e-15%2c200 C3.653125%2c214.19125 9.206875%2c227.61875 16.369375%2c240 L293.54875%2c240 C300.71125%2c227.61875 306.265%2c214.19125 309.918125%2c200 L154.959375%2c187.82625 L1.11022302e-15%2c200 Z' id='Path'%3e%3c/path%3e %3cpath d='M309.91875%2c120 C306.265625%2c105.80875 300.711875%2c92.38125 293.549375%2c80 L154.959375%2c76.521875 C154.959375%2c48.57625 154.959375%2c22.165625 154.959375%2c0 C143.07375%2c0 131.49%2c1.296875 120.343125%2c3.755 C120.129375%2c3.8025 15.82875%2c86.07375 15.82875%2c160 C18.495625%2c160.46375 154.959375%2c173.913125 154.959375%2c173.913125 C154.959375%2c173.913125 154.959375%2c143.4375 154.959375%2c120 L309.91875%2c120 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M160%2c99.82625 L160%2c19.82625 L109.328125%2c19.82625 L125.38875%2c3.765625 C59.456875%2c18.306875 8.7975%2c73.509375 1.04375%2c141.739375 C0.3625%2c147.733125 0%2c153.82375 0%2c160 C16.695625%2c160 81.04375%2c160 81.04375%2c160 L81.04375%2c128.110625 L113.24875%2c160 L170.489375%2c160 L109.3275%2c99.82625 L160%2c99.82625 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cpath d='M160.073125%2c160 L99.899375%2c99.82625 L81.04375%2c99.82625 L81.04375%2c99.826875 L141.216875%2c160 L60.869375%2c160 L60.869375%2c80 L298.59%2c80 C289.87875%2c64.941875 278.78%2c51.439375 265.816875%2c40 L60.869375%2c40 L60.869375%2c34.421875 C44.726875%2c47.1825 31.106875%2c62.9875 20.869375%2c80.97125 L20.869375%2c160 L0%2c160 C0%2c173.811875 1.75%2c187.215625 5.040625%2c200 L314.959375%2c200 C318.25%2c187.215 320%2c173.811875 320%2c160 L160.073125%2c160 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2v = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/honduras%3c/title%3e %3cg id='flags/honduras' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-honduras' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(15.876250%2c 0.000000)' fill='%23338AF3'%3e %3cpath d='M144.12375%2c320 C207.556875%2c320 262.3675%2c283.084375 288.2475%2c229.565 L8.8817842e-15%2c229.565 C25.88%2c283.084375 80.69%2c320 144.12375%2c320 Z' id='Path'%3e%3c/path%3e %3cpath d='M144.12375%2c0 C80.69%2c0 25.88%2c36.915625 8.8817842e-15%2c90.435 L288.246875%2c90.435 C262.3675%2c36.915625 207.556875%2c0 144.12375%2c0 Z' id='Path'%3e%3c/path%3e %3cpolygon id='Path' points='82.589375 104.348125 87.769375 120.29125 104.5325 120.29125 90.97125 130.14375 96.151875 146.086875 82.589375 136.23375 69.026875 146.086875 74.2075 130.14375 60.645625 120.29125 77.40875 120.29125'%3e%3c/polygon%3e %3cpolygon id='Path' points='82.589375 173.913125 87.769375 189.856875 104.5325 189.856875 90.97125 199.709375 96.151875 215.651875 82.589375 205.79875 69.026875 215.651875 74.2075 199.709375 60.645625 189.856875 77.40875 189.856875'%3e%3c/polygon%3e %3cpolygon id='Path' points='205.658125 104.348125 210.83875 120.29125 227.601875 120.29125 214.04 130.14375 219.220625 146.086875 205.658125 136.23375 192.095625 146.086875 197.27625 130.14375 183.714375 120.29125 200.478125 120.29125'%3e%3c/polygon%3e %3cpolygon id='Path' points='205.658125 173.913125 210.83875 189.856875 227.601875 189.856875 214.04 199.709375 219.220625 215.651875 205.658125 205.79875 192.095625 215.651875 197.27625 199.709375 183.714375 189.856875 200.478125 189.856875'%3e%3c/polygon%3e %3cpolygon id='Path' points='144.12375 139.130625 149.304375 155.074375 166.0675 155.074375 152.505625 164.926875 157.68625 180.869375 144.12375 171.01625 130.56125 180.869375 135.741875 164.926875 122.18 155.074375 138.943125 155.074375'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2u = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/hong-kong%3c/title%3e %3cg id='flags/hong-kong' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-hong-kong' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23D80027' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(83.699573%2c 77.862136)' fill='%23F0F0F0'%3e %3cpath d='M92.8191769%2c43.1803643 C89.1829269%2c58.3047393 82.7223019%2c55.4203643 79.5516769%2c68.6103643 C60.8748019%2c64.1197393 49.3723019%2c45.3384893 53.8629269%2c26.6603643 C58.3516769%2c7.98348933 77.1348019%2c-3.51901067 95.8123019%2c0.971614325 C89.4704269%2c27.3509893 96.0723019%2c29.6534893 92.8191769%2c43.1803643 Z' id='Path'%3e%3c/path%3e %3cpath d='M44.3548019%2c54.3878643 C57.6154269%2c62.5191143 52.8754269%2c67.7734893 64.4391769%2c74.8653643 C54.3966769%2c91.2409893 32.9810519%2c96.3753643 16.6048019%2c86.3334893 C0.229176945%2c76.2916143 -4.90644805%2c54.8747393 5.13605195%2c38.4991143 C28.2648019%2c52.6816143 32.4929269%2c47.1147393 44.3548019%2c54.3878643 Z' id='Path'%3e%3c/path%3e %3cpath d='M40.0366769%2c103.945364 C51.8685519%2c93.8466143 55.3991769%2c99.9778643 65.7173019%2c91.1716143 C78.1891769%2c105.782239 76.4541769%2c127.737239 61.8441769%2c140.209114 C47.2329269%2c152.680989 25.2779269%2c150.944114 12.8079269%2c136.334739 C33.4416769%2c118.720364 29.4535519%2c112.977239 40.0366769%2c103.945364 Z' id='Path'%3e%3c/path%3e %3cpath d='M85.8341769%2c123.365989 C79.8841769%2c108.992864 86.8066769%2c107.527864 81.6198019%2c94.9947393 C99.3691769%2c87.6491143 119.714177%2c96.0828643 127.060427%2c113.832239 C134.406052%2c131.581614 125.971052%2c151.925989 108.221677%2c159.272239 C97.8485519%2c134.204114 91.1554269%2c136.222239 85.8341769%2c123.365989 Z' id='Path'%3e%3c/path%3e %3cpath d='M118.456677%2c85.8103643 C102.948552%2c87.0272393 103.692927%2c79.9897393 90.1710519%2c81.0509893 C88.6691769%2c61.9016143 102.977927%2c45.1572393 122.128552%2c43.6541143 C141.278552%2c42.1547393 158.022302%2c56.4622393 159.523552%2c75.6134893 C132.475427%2c77.7341143 132.326052%2c84.7234893 118.456677%2c85.8103643 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2t = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/hungary%3c/title%3e %3cg id='flags/hungary' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-hungary' fill-rule='nonzero'%3e %3cpath d='M9.951875%2c104.348125 C3.520625%2c121.681875 0%2c140.42875 0%2c160 C0%2c179.57125 3.520625%2c198.319375 9.951875%2c215.651875 L160%2c229.565 L310.048125%2c215.651875 C316.479375%2c198.319375 320%2c179.57125 320%2c160 C320%2c140.42875 316.479375%2c121.681875 310.048125%2c104.348125 L160%2c90.435 L9.951875%2c104.348125 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cpath d='M160%2c0 C91.20625%2c0 32.55875%2c43.42 9.9525%2c104.348125 L310.049375%2c104.348125 C287.44125%2c43.42 228.795%2c0 160%2c0 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M160%2c320 C228.795%2c320 287.44125%2c276.58 310.04875%2c215.651875 L9.9525%2c215.651875 C32.55875%2c276.58 91.20625%2c320 160%2c320 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2s = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/iceland%3c/title%3e %3cg id='flags/iceland' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-iceland' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(5.511875%2c 0.000000)' fill='%230052B4'%3e %3cpath d='M7.77156117e-15%2c201.739375 C9.2575%2c236.08875 29.660625%2c265.86 57.096875%2c286.940625 L57.096875%2c201.739375 L7.77156117e-15%2c201.739375 Z' id='Path'%3e%3c/path%3e %3cpath d='M140.575%2c319.39125 C145.16125%2c319.78625 149.799375%2c320 154.488125%2c320 C228.4125%2c320 290.61625%2c269.861875 308.97625%2c201.739375 L140.575%2c201.739375 L140.575%2c319.39125 Z' id='Path'%3e%3c/path%3e %3cpath d='M308.97625%2c118.260625 C290.61625%2c50.138125 228.4125%2c0 154.488125%2c0 C149.799375%2c0 145.16125%2c0.21375 140.575%2c0.60875 L140.575%2c118.260625 L308.97625%2c118.260625 Z' id='Path'%3e%3c/path%3e %3cpath d='M57.096875%2c33.059375 C29.660625%2c54.140625 9.2575%2c83.91125 8.8817842e-15%2c118.260625 L57.096875%2c118.260625 L57.096875%2c33.059375 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M318.645625%2c139.130625 L125.218125%2c139.130625 L125.2175%2c139.130625 L125.2175%2c3.803125 C110.43125%2c7.081875 96.413125%2c12.39625 83.478125%2c19.454375 L83.478125%2c139.13 L83.478125%2c139.13 L1.354375%2c139.13 C0.46375%2c145.961875 0%2c152.926875 0%2c160 C0%2c167.073125 0.46375%2c174.038125 1.354375%2c180.869375 L83.4775%2c180.869375 L83.478125%2c180.869375 L83.478125%2c300.545 C96.413125%2c307.6025 110.43125%2c312.918125 125.2175%2c316.19625 L125.2175%2c180.87125 L125.2175%2c180.87 L318.645625%2c180.87 C319.535%2c174.038125 320%2c167.073125 320%2c160 C320%2c152.926875 319.535%2c145.961875 318.645625%2c139.130625 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2r = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/india%3c/title%3e %3cg id='flags/india' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-india' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M160%2c0 C96.56625%2c0 41.75625%2c36.915625 15.87625%2c90.435 L304.123125%2c90.435 C278.24375%2c36.915625 223.433125%2c0 160%2c0 Z' id='Path' fill='%23FF9811'%3e%3c/path%3e %3cpath d='M160%2c320 C223.433125%2c320 278.24375%2c283.084375 304.12375%2c229.565 L15.87625%2c229.565 C41.75625%2c283.084375 96.56625%2c320 160%2c320 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3ccircle id='Oval' fill='%230052B4' cx='160' cy='160' r='55.651875'%3e%3c/circle%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='34.7825'%3e%3c/circle%3e %3cpolygon id='Path' fill='%230052B4' points='160 117.07875 170.730625 141.415 197.170625 138.539375 181.460625 160 197.170625 181.460625 170.730625 178.585 160 202.92125 149.269375 178.585 122.829375 181.46 138.539375 160 122.829375 138.539375 149.269375 141.415'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2q = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/indonesia%3c/title%3e %3cg id='flags/indonesia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-indonesia' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M0%2c160 C0%2c71.635 71.635%2c0 160%2c0 C248.365%2c0 320%2c71.635 320%2c160' id='Path' fill='%23A2001D'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2p = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/iran%3c/title%3e %3cg id='flags/iran' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-iran' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M211.966875%2c118.26 L191.033125%2c118.26 C191.20625%2c120.56125 191.304375%2c122.8825 191.304375%2c125.216875 C191.304375%2c140.694375 187.435625%2c155.69625 180.69125%2c166.375 C178.610625%2c169.66875 175.114375%2c174.32 170.434375%2c177.4575 L170.434375%2c118.26 L149.565%2c118.26 L149.565%2c177.4575 C144.885625%2c174.32 141.38875%2c169.669375 139.308125%2c166.375 C132.563125%2c155.69625 128.695%2c140.694375 128.695%2c125.216875 C128.695%2c122.8825 128.79375%2c120.560625 128.96625%2c118.26 L108.0325%2c118.26 C107.898125%2c120.55 107.825%2c122.86875 107.825%2c125.216875 C107.825%2c168.126875 130.7425%2c201.73875 159.99875%2c201.73875 C189.255%2c201.73875 212.172516%2c168.126875 212.172516%2c125.216875 C212.17375%2c122.86875 212.100625%2c120.55 211.966875%2c118.26 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M66.086875%2c76.521875 L86.95625%2c76.521875 L86.95625%2c90.435 L107.825625%2c90.435 L107.825625%2c76.521875 L128.695%2c76.521875 L128.695%2c90.435 L149.564375%2c90.435 L149.564375%2c76.521875 L170.43375%2c76.521875 L170.43375%2c90.435 L191.303125%2c90.435 L191.303125%2c76.521875 L212.1725%2c76.521875 L212.1725%2c90.435 L233.041875%2c90.435 L233.041875%2c76.521875 L253.91125%2c76.521875 L253.91125%2c90.435 L304.121875%2c90.435 C278.24375%2c36.915625 223.433125%2c0 160%2c0 C96.566875%2c0 41.75625%2c36.915625 15.87625%2c90.435 L66.086875%2c90.435 L66.086875%2c76.521875 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M253.913125%2c229.565 L253.913125%2c243.478125 L233.04375%2c243.478125 L233.04375%2c229.565 L212.174375%2c229.565 L212.174375%2c243.478125 L191.305%2c243.478125 L191.305%2c229.565 L170.435625%2c229.565 L170.435625%2c243.478125 L149.56625%2c243.478125 L149.56625%2c229.565 L128.696875%2c229.565 L128.696875%2c243.478125 L107.8275%2c243.478125 L107.8275%2c229.565 L86.95625%2c229.565 L86.95625%2c243.478125 L66.086875%2c243.478125 L66.086875%2c229.565 L15.87625%2c229.565 C41.75625%2c283.084375 96.56625%2c320 160%2c320 C223.43375%2c320 278.24375%2c283.084375 304.12375%2c229.565 L253.913125%2c229.565 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2o = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/iraq%3c/title%3e %3cg id='flags/iraq' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-iraq' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M160%2c0 C91.205625%2c0 32.55875%2c43.42 9.951875%2c104.348125 L310.04875%2c104.348125 C287.44125%2c43.42 228.794375%2c0 160%2c0 Z' id='Path' fill='%23A2001D'%3e%3c/path%3e %3cpath d='M160%2c320 C228.794375%2c320 287.44125%2c276.58 310.048125%2c215.651875 L9.951875%2c215.651875 C32.55875%2c276.58 91.205625%2c320 160%2c320 Z' id='Path' fill='black'%3e%3c/path%3e %3cg id='Group' transform='translate(55.651875%2c 118.260625)' fill='%23496E2D'%3e %3cpath d='M66.0875%2c31.304375 C66%2c31.304375 65.914375%2c31.31 65.826875%2c31.31125 L65.826875%2c31.304375 L35.24125%2c31.304375 C36.791875%2c25.313125 42.228125%2c20.869375 48.69625%2c20.869375 L48.69625%2c1.77635684e-14 C29.516875%2c1.77635684e-14 13.91375%2c15.60375 13.91375%2c34.7825 L13.91375%2c51.82625 L13.91375%2c52.174375 L65.826875%2c52.174375 C65.944375%2c52.174375 66.036875%2c52.174375 66.0875%2c52.174375 C68.005625%2c52.174375 69.565625%2c53.735 69.565625%2c55.6525 L69.565625%2c62.60875 L-1.77635684e-14%2c62.60875 L-1.77635684e-14%2c83.478125 L90.435%2c83.478125 L90.435%2c55.651875 C90.435%2c42.226875 79.5125%2c31.304375 66.0875%2c31.304375 Z' id='Path'%3e%3c/path%3e %3cpolygon id='Path' points='118.26125 62.60875 118.26125 1.77635684e-14 97.391875 1.77635684e-14 97.391875 83.47875 132.174375 83.47875 132.174375 62.60875'%3e%3c/polygon%3e %3cpolygon id='Path' points='187.82625 62.609375 187.82625 1.77635684e-14 166.956875 1.77635684e-14 166.956875 62.609375 160 62.609375 160 41.74 139.130625 41.74 139.130625 83.479375 201.739375 83.479375 201.739375 62.609375'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2n = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/ireland%3c/title%3e %3cg id='flags/ireland' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-ireland' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M320%2c160 C320%2c91.20625 276.58%2c32.55875 215.651875%2c9.9525 L215.651875%2c310.049375 C276.58%2c287.44125 320%2c228.795 320%2c160 Z' id='Path' fill='%23FF9811'%3e%3c/path%3e %3cpath d='M0%2c160 C0%2c228.795 43.42%2c287.44125 104.348125%2c310.04875 L104.348125%2c9.9525 C43.42%2c32.55875 0%2c91.20625 0%2c160 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2m = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/isle-of-man%3c/title%3e %3cg id='flags/isle-of-man' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-isle-of-man' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23D80027' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpolygon id='Shape' fill='%23F0F0F0' points='219.241875 107.2575 207.933125 147.614375 174.001875 141.34875 152.160625 96.326875 93.15625 117.265 88.503125 104.1525 73.065625 102.250625 84.6975 135.03125 125.303125 124.646875 136.8425 157.165 108.7725 198.59125 156.408125 239.22 147.379375 249.805625 153.450625 264.126875 176.024375 237.661875 146.728125 207.68875 169.12 181.436875 219.03125 185.033125 230.399375 123.464375 244.08125 125.99125 253.449375 113.5725'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2l = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/israel%3c/title%3e %3cg id='flags/israel' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-israel' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(23.483750%2c 34.782500)' fill='%230052B4'%3e %3cpath d='M196.761875%2c90.435 L156.5975%2c90.435 L136.51625%2c55.6525 L116.435625%2c90.435 L76.270625%2c90.435 L96.354375%2c125.2175 L76.270625%2c160 L116.435625%2c160 L136.51625%2c194.7825 L156.5975%2c160 L196.761875%2c160 L176.678125%2c125.2175 L196.761875%2c90.435 Z M161.188125%2c125.2175 L148.853125%2c146.585 L124.18125%2c146.585 L111.844375%2c125.2175 L124.180625%2c103.85 L148.8525%2c103.85 L161.188125%2c125.2175 Z M136.51625%2c82.481875 L141.1075%2c90.434375 L131.92625%2c90.434375 L136.51625%2c82.481875 Z M99.5075%2c103.85 L108.69%2c103.85 L104.09875%2c111.8025 L99.5075%2c103.85 Z M99.5075%2c146.585 L104.099375%2c138.6325 L108.690625%2c146.585 L99.5075%2c146.585 Z M136.51625%2c167.9525 L131.925625%2c160 L141.1075%2c160 L136.51625%2c167.9525 Z M173.525%2c146.585 L164.3425%2c146.585 L168.934375%2c138.6325 L173.525%2c146.585 Z M164.3425%2c103.85 L173.525%2c103.85 L168.93375%2c111.8025 L164.3425%2c103.85 Z' id='Shape'%3e%3c/path%3e %3cpath d='M236.114375%2c8.8817842e-15 L36.918125%2c8.8817842e-15 C22.31625%2c11.63 9.79375%2c25.75625 -8.8817842e-15%2c41.739375 L273.0325%2c41.739375 C263.238125%2c25.756875 250.715625%2c11.63 236.114375%2c8.8817842e-15 Z' id='Path'%3e%3c/path%3e %3cpath d='M36.918125%2c250.435 L236.11375%2c250.435 C250.715625%2c238.805 263.238125%2c224.67875 273.031875%2c208.695625 L-8.8817842e-15%2c208.695625 C9.794375%2c224.678125 22.316875%2c238.805 36.918125%2c250.435 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2k = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/italy%3c/title%3e %3cg id='flags/italy' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-italy' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M320%2c160 C320%2c91.205625 276.58%2c32.55875 215.651875%2c9.951875 L215.651875%2c310.04875 C276.58%2c287.44125 320%2c228.794375 320%2c160 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M0%2c160 C0%2c228.794375 43.42%2c287.44125 104.348125%2c310.048125 L104.348125%2c9.951875 C43.42%2c32.55875 0%2c91.205625 0%2c160 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2j = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/ivory-coast%3c/title%3e %3cg id='flags/ivory-coast' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-ivory-coast' fill-rule='nonzero'%3e %3cpath d='M160%2c320 C179.57125%2c320 198.319375%2c316.48 215.651875%2c310.048125 L222.60875%2c160 L215.6525%2c9.951875 C198.319375%2c3.520625 179.57125%2c0 160%2c0 C140.42875%2c0 121.680625%2c3.520625 104.348125%2c9.951875 L97.39125%2c160 L104.3475%2c310.048125 C121.680625%2c316.48 140.42875%2c320 160%2c320 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cpath d='M0%2c160 C0%2c228.794375 43.42%2c287.44125 104.348125%2c310.048125 L104.348125%2c9.951875 C43.42%2c32.55875 0%2c91.205625 0%2c160 Z' id='Path' fill='%23FF9811'%3e%3c/path%3e %3cpath d='M215.651875%2c9.951875 L215.651875%2c310.04875 C276.58%2c287.44125 320%2c228.794375 320%2c160 C320%2c91.205625 276.58%2c32.55875 215.651875%2c9.951875 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2i = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/jamaica%3c/title%3e %3cg id='flags/jamaica' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-jamaica' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23FFDA44' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M257.41%2c33.075 C230.430625%2c12.336875 196.65875%2c0 160%2c0 C123.34125%2c0 89.56875%2c12.3375 62.589375%2c33.075 L160%2c130.485 L257.41%2c33.075 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M33.074375%2c62.59 C12.3375%2c89.569375 0%2c123.34125 0%2c160 C0%2c196.65875 12.3375%2c230.43125 33.075%2c257.41125 L130.485625%2c160 L33.074375%2c62.59 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M62.589375%2c286.925 C89.569375%2c307.663125 123.34125%2c320 160%2c320 C196.65875%2c320 230.430625%2c307.6625 257.410625%2c286.925 L160%2c189.515 L62.589375%2c286.925 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M286.925%2c257.41 C307.663125%2c230.430625 320%2c196.65875 320%2c160 C320%2c123.34125 307.663125%2c89.569375 286.925%2c62.59 L189.515%2c160 L286.925%2c257.41 Z' id='Path' fill='black'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2h = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/japan%3c/title%3e %3cg id='flags/japan' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-japan' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3ccircle id='Oval' fill='%23D80027' cx='160' cy='160' r='69.565'%3e%3c/circle%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2g = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/jersey%3c/title%3e %3cg id='flags/jersey' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-jersey' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M286.93625%2c257.421875 L189.514375%2c160.000625 L189.51375%2c160.000625 L286.93625%2c62.5775 C282.734375%2c57.1175 278.138125%2c51.864375 273.1375%2c46.8625 C268.135625%2c41.86125 262.883125%2c37.264375 257.4225%2c33.06375 L160.000625%2c130.485625 L160%2c130.48625 L62.578125%2c33.06375 C57.11875%2c37.265 51.865%2c41.860625 46.863125%2c46.8625 C41.86125%2c51.864375 37.265%2c57.1175 33.06375%2c62.5775 L130.48625%2c159.99875 L130.486875%2c159.999375 L33.06375%2c257.4225 C37.265625%2c262.8825 41.861875%2c268.135625 46.8625%2c273.1375 C51.864375%2c278.13875 57.116875%2c282.735625 62.5775%2c286.93625 L160%2c189.514375 L160.000625%2c189.51375 L257.4225%2c286.93625 C262.881875%2c282.734375 268.135625%2c278.138125 273.1375%2c273.136875 C278.139375%2c268.135 282.735%2c262.881875 286.93625%2c257.421875 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpolygon id='Path' fill='%23FFDA44' points='132.17375 48.695625 160 55.651875 187.82625 48.695625 187.82625 25.04375 176.695625 30.60875 160 13.913125 143.304375 30.60875 132.17375 25.04375'%3e%3c/polygon%3e %3cpath d='M132.17375%2c48.695625 L132.17375%2c66.088125 C132.17375%2c87.388125 160%2c93.914375 160%2c93.914375 C160%2c93.914375 187.82625%2c87.3875 187.82625%2c66.088125 L187.82625%2c48.695625 L132.17375%2c48.695625 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2f = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/jordan%3c/title%3e %3cg id='flags/jordan' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-jordan' fill-rule='nonzero'%3e %3cellipse id='Oval' fill='%23F0F0F0' cx='160.000156' cy='160' rx='159.999844' ry='160'%3e%3c/ellipse%3e %3cpath d='M97.3914674%2c104.348125 L310.04751%2c104.348125 C287.441282%2c43.42 228.793839%2c0 160.000156%2c0 C115.816449%2c0 75.8208635%2c17.911875 46.8683917%2c46.868125 L97.3914674%2c104.348125 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M97.3914674%2c215.651875 L310.04751%2c215.651875 C287.441282%2c276.58 228.793839%2c320 160.000156%2c320 C115.816449%2c320 75.8208635%2c302.088125 46.8683917%2c273.131875 L97.3914674%2c215.651875 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M46.8627667%2c46.8625 C-15.6209222%2c109.34625 -15.6209222%2c210.653125 46.8627667%2c273.1375 C72.6833665%2c247.316875 97.5164673%2c222.48375 160.000156%2c160 L46.8627667%2c46.8625 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpolygon id='Path' fill='%23F0F0F0' points='63.5033755 125.2175 72.2839919 143.579375 92.1145975 138.99625 83.2333562 157.309375 99.1802156 169.955625 79.32586 174.43 79.38086 194.7825 63.5033755 182.049375 47.625266 194.7825 47.6808909 174.43 27.8265353 169.955625 43.7727698 157.309375 34.8927784 138.99625 54.7221341 143.579375'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2e = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/kazakhstan%3c/title%3e %3cg id='flags/kazakhstan' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-kazakhstan' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23338AF3' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M250.435%2c161.739375 L69.565%2c161.739375 C69.565%2c174.22625 80.440625%2c184.348125 92.92625%2c184.348125 L92.17375%2c184.348125 C92.17375%2c196.835 102.295625%2c206.956875 114.7825%2c206.956875 C114.7825%2c219.44375 124.904375%2c229.565625 137.39125%2c229.565625 L182.60875%2c229.565625 C195.095625%2c229.565625 205.2175%2c219.44375 205.2175%2c206.956875 C217.704375%2c206.956875 227.82625%2c196.835 227.82625%2c184.348125 L227.07375%2c184.348125 C239.558125%2c184.348125 250.435%2c174.22625 250.435%2c161.739375 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M222.60875%2c132.17375 C222.60875%2c166.75125 194.5775%2c194.7825 160%2c194.7825 C125.421875%2c194.7825 97.39125%2c166.75125 97.39125%2c132.17375' id='Path' fill='%23338AF3'%3e%3c/path%3e %3cpolygon id='Path' fill='%23FFDA44' points='207.821875 132.17375 188.28125 141.365625 198.686875 160.290625 177.468125 156.23125 174.779375 177.66625 160 161.900625 145.22 177.66625 142.531875 156.23125 121.313125 160.289375 131.718125 141.365 112.178125 132.17375 131.71875 122.9825 121.313125 104.058125 142.53125 108.116875 145.220625 86.681875 160 102.4475 174.78 86.681875 177.468125 108.116875 198.6875 104.058125 188.281875 122.983125'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2d = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/kenya%3c/title%3e %3cg id='flags/kenya' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-kenya' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M160%2c0 C96.56625%2c0 41.75625%2c36.915625 15.87625%2c90.435 L304.123125%2c90.435 C278.24375%2c36.915625 223.433125%2c0 160%2c0 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M160%2c320 C96.56625%2c320 41.75625%2c283.084375 15.87625%2c229.565 L304.123125%2c229.565 C278.24375%2c283.084375 223.433125%2c320 160%2c320 Z' id='Path' fill='%23496E2D'%3e%3c/path%3e %3cpath d='M312.444375%2c111.304375 L7.555625%2c111.304375 C2.654375%2c126.66 0%2c143.019375 0%2c160 C0%2c176.980625 2.654375%2c193.34 7.555625%2c208.695625 L312.44375%2c208.695625 C317.345625%2c193.34 320%2c176.980625 320%2c160 C320%2c143.019375 317.345625%2c126.66 312.444375%2c111.304375 Z' id='Path' fill='%23A2001D'%3e%3c/path%3e %3cg id='Group' transform='translate(110.178125%2c 65.192500)' fill='%23F0F0F0'%3e %3cpolygon id='Path' points='99.64375 8.745625 80.695625 8.8817842e-15 49.821875 69.906875 18.948125 8.8817842e-15 0 8.745625 38.33 94.8075 0 180.869375 18.948125 189.615 49.821875 119.708125 80.695625 189.615 99.64375 180.869375 61.31375 94.8075'%3e%3c/polygon%3e %3cpath d='M62.69125%2c16.988125 C55.35625%2c8.9775 49.821875%2c4.3725 49.821875%2c4.3725 C49.821875%2c4.3725 44.2875%2c8.976875 36.9525%2c16.988125 L36.9525%2c172.625625 C44.2875%2c180.6375 49.821875%2c185.2425 49.821875%2c185.2425 C49.821875%2c185.2425 55.35625%2c180.638125 62.69125%2c172.62625 L62.69125%2c16.988125 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(125.217500%2c 79.571875)' fill='%23A2001D'%3e %3cpath d='M0%2c32.455 L0%2c128.4 C7.75125%2c142.134375 17.238125%2c153.391875 24.348125%2c160.855625 L24.348125%2c0 C17.238125%2c7.463125 7.750625%2c18.72125 0%2c32.455 Z' id='Path'%3e%3c/path%3e %3cpath d='M69.565%2c32.455 C61.813125%2c18.720625 52.326875%2c7.463125 45.216875%2c0 L45.216875%2c160.855625 C52.32625%2c153.391875 61.813125%2c142.134375 69.565%2c128.4 L69.565%2c32.455 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M194.7825%2c112.026875 L194.7825%2c207.971875 C202.629375%2c194.06625 208.695625%2c177.623125 208.695625%2c160 C208.695625%2c142.376875 202.629375%2c125.933125 194.7825%2c112.026875 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M125.2175%2c112.026875 L125.2175%2c207.971875 C117.370625%2c194.06625 111.304375%2c177.623125 111.304375%2c160 C111.304375%2c142.376875 117.370625%2c125.933125 125.2175%2c112.026875 Z' id='Path' fill='black'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2c = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/kiribati%3c/title%3e %3cg id='flags/kiribati' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-kiribati' fill-rule='nonzero'%3e %3cpath d='M0%2c160 C0%2c71.635 71.635%2c0 160%2c0 C248.365%2c0 320%2c71.635 320%2c160' id='Path' fill='%23D80027'%3e%3c/path%3e %3cg id='Group' transform='translate(104.348125%2c 41.738750)' fill='%23FFDA44'%3e %3cpolygon id='Path' points='111.30375 107.06 88.563125 117.755625 100.673125 139.78 75.98 135.055625 72.85125 160.000625 55.651875 141.65375 38.451875 160.000625 35.32375 135.055625 10.630625 139.77875 22.74 117.755625 0 107.06 22.74 96.3625 10.630625 74.340625 35.323125 79.063125 38.4525 54.119375 55.651875 72.465 72.851875 54.119375 75.98 79.063125 100.67375 74.340625 88.565 96.364375'%3e%3c/polygon%3e %3cpath d='M97.39125%2c10.435 L66.086875%2c10.435 C66.086875%2c4.673125 61.414375%2c-8.8817842e-15 55.651875%2c-8.8817842e-15 C49.889375%2c-8.8817842e-15 45.216875%2c4.6725 45.216875%2c10.435 L13.9125%2c10.435 C13.9125%2c16.1975 18.9325%2c20.87 24.695%2c20.87 L24.346875%2c20.87 C24.346875%2c26.6325 29.018125%2c31.305 34.781875%2c31.305 C34.781875%2c37.0675 39.453125%2c41.74 45.216875%2c41.74 L66.08625%2c41.74 C71.848125%2c41.74 76.52125%2c37.068125 76.52125%2c31.305 C82.283125%2c31.305 86.95625%2c26.633125 86.95625%2c20.87 L86.608125%2c20.87 C92.37125%2c20.87 97.39125%2c16.198125 97.39125%2c10.435 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M320%2c160 C320%2c248.365 248.365%2c320 160%2c320 C71.635%2c320 0%2c248.365 0%2c160 C6.95625%2c160 320%2c160 320%2c160 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cg id='Group' transform='translate(0.208125%2c 168.215000)' fill='%230052B4'%3e %3cpath d='M159.791875%2c151.785 C209.805625%2c151.785 254.451875%2c128.8325 283.793125%2c92.8925 C278.515625%2c89.294375 275.66625%2c83.478125 266.45625%2c83.478125 C253.123125%2c83.478125 253.123125%2c95.669375 239.790625%2c95.669375 C226.458125%2c95.669375 226.4575%2c83.478125 213.125%2c83.478125 C199.791875%2c83.478125 199.791875%2c95.669375 186.458125%2c95.669375 C173.124375%2c95.669375 173.12375%2c83.478125 159.789375%2c83.478125 C146.45625%2c83.478125 146.45625%2c95.669375 133.12375%2c95.669375 C119.7925%2c95.669375 119.7925%2c83.478125 106.459375%2c83.478125 C93.125%2c83.478125 93.125%2c95.669375 79.790625%2c95.669375 C66.45625%2c95.669375 66.45625%2c83.478125 53.121875%2c83.478125 C43.913125%2c83.478125 41.06375%2c89.293125 35.78875%2c92.89125 C65.12875%2c128.8325 109.7775%2c151.785 159.791875%2c151.785 Z' id='Path'%3e%3c/path%3e %3cpath d='M293.123125%2c12.19125 C279.79%2c12.19125 279.79%2c0 266.45625%2c0 C253.123125%2c0 253.123125%2c12.19125 239.790625%2c12.19125 C226.458125%2c12.19125 226.4575%2c0 213.125%2c0 C199.791875%2c0 199.791875%2c12.19125 186.458125%2c12.19125 C173.124375%2c12.19125 173.12375%2c0 159.789375%2c0 C146.45625%2c0 146.45625%2c12.19125 133.12375%2c12.19125 C119.7925%2c12.19125 119.7925%2c0 106.459375%2c0 C93.125%2c0 93.125%2c12.19125 79.790625%2c12.19125 C66.45625%2c12.19125 66.45625%2c0 53.121875%2c0 C39.790625%2c0 39.790625%2c12.19125 26.4575%2c12.19125 C13.19625%2c12.19125 13.119375%2c0.134375 -1.33226763e-14%2c0.005625 C0.369375%2c7.324375 1.243125%2c14.509375 2.564375%2c21.535625 C13.191875%2c23.0975 14.1225%2c33.524375 26.458125%2c33.524375 C39.79125%2c33.524375 39.79125%2c21.334375 53.1225%2c21.334375 C66.456875%2c21.334375 66.456875%2c33.524375 79.79125%2c33.524375 C93.125625%2c33.524375 93.125625%2c21.334375 106.46%2c21.334375 C119.793125%2c21.334375 119.793125%2c33.524375 133.124375%2c33.524375 C146.4575%2c33.524375 146.4575%2c21.334375 159.79%2c21.334375 C173.124375%2c21.334375 173.124375%2c33.524375 186.45875%2c33.524375 C199.793125%2c33.524375 199.793125%2c21.334375 213.125625%2c21.334375 C226.45875%2c21.334375 226.45875%2c33.524375 239.79125%2c33.524375 C253.12375%2c33.524375 253.124375%2c21.334375 266.456875%2c21.334375 C279.79125%2c21.334375 279.79125%2c33.524375 293.12375%2c33.524375 C305.460625%2c33.524375 306.39125%2c23.098125 317.019375%2c21.53625 C318.34125%2c14.509375 319.21375%2c7.325 319.585%2c0.00625 C306.463125%2c0.135625 306.385%2c12.19125 293.123125%2c12.19125 Z' id='Path'%3e%3c/path%3e %3cpath d='M266.45625%2c41.739375 C253.123125%2c41.739375 253.123125%2c53.930625 239.790625%2c53.930625 C226.458125%2c53.930625 226.4575%2c41.739375 213.125%2c41.739375 C199.791875%2c41.739375 199.791875%2c53.930625 186.458125%2c53.930625 C173.12375%2c53.930625 173.12375%2c41.739375 159.789375%2c41.739375 C146.45625%2c41.739375 146.45625%2c53.930625 133.12375%2c53.930625 C119.7925%2c53.930625 119.7925%2c41.739375 106.459375%2c41.739375 C93.125%2c41.739375 93.125%2c53.930625 79.790625%2c53.930625 C66.45625%2c53.930625 66.45625%2c41.739375 53.121875%2c41.739375 C39.790625%2c41.739375 39.790625%2c53.930625 26.4575%2c53.930625 C16.930625%2c53.930625 14.209375%2c47.708125 8.56875%2c44.153125 C12.32375%2c55.0025 17.20875%2c65.323125 23.091875%2c74.970625 C24.115%2c75.159375 25.22875%2c75.26375 26.4575%2c75.26375 C39.790625%2c75.26375 39.790625%2c63.07375 53.121875%2c63.07375 C66.45625%2c63.07375 66.45625%2c75.26375 79.790625%2c75.26375 C93.125%2c75.26375 93.125%2c63.07375 106.459375%2c63.07375 C119.7925%2c63.07375 119.7925%2c75.26375 133.12375%2c75.26375 C146.456875%2c75.26375 146.456875%2c63.07375 159.789375%2c63.07375 C173.12375%2c63.07375 173.12375%2c75.26375 186.458125%2c75.26375 C199.7925%2c75.26375 199.7925%2c63.07375 213.125%2c63.07375 C226.458125%2c63.07375 226.458125%2c75.26375 239.790625%2c75.26375 C253.123125%2c75.26375 253.12375%2c63.07375 266.45625%2c63.07375 C279.790625%2c63.07375 279.790625%2c75.26375 293.123125%2c75.26375 C294.353125%2c75.26375 295.466875%2c75.159375 296.49%2c74.97 C302.373125%2c65.323125 307.2575%2c55.0025 311.014375%2c44.15375 C305.373125%2c47.706875 302.65125%2c53.930625 293.123125%2c53.930625 C279.790625%2c53.930625 279.790625%2c41.739375 266.45625%2c41.739375 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M319.50375%2c147.359375 C306.6725%2c147.6625 306.495625%2c159.536875 293.33125%2c159.536875 C279.998125%2c159.536875 279.998125%2c147.345625 266.664375%2c147.345625 C253.33125%2c147.345625 253.33125%2c159.536875 239.99875%2c159.536875 C226.66625%2c159.536875 226.665625%2c147.345625 213.333125%2c147.345625 C200%2c147.345625 200%2c159.536875 186.66625%2c159.536875 C173.3325%2c159.536875 173.331875%2c147.345625 159.9975%2c147.345625 C146.664375%2c147.345625 146.664375%2c159.536875 133.331875%2c159.536875 C120.000625%2c159.536875 120.000625%2c147.345625 106.6675%2c147.345625 C93.333125%2c147.345625 93.333125%2c159.536875 79.99875%2c159.536875 C66.664375%2c159.536875 66.664375%2c147.345625 53.33%2c147.345625 C39.99875%2c147.345625 39.99875%2c159.536875 26.665625%2c159.536875 C13.50375%2c159.536875 13.325625%2c147.66375 0.495625%2c147.359375 C0.17%2c151.530625 0%2c155.745625 0%2c160 C0%2c162.914375 0.0825%2c165.81 0.238125%2c168.685625 C13.3275%2c168.8325 13.414375%2c180.869375 26.66625%2c180.869375 C39.999375%2c180.869375 39.999375%2c168.679375 53.330625%2c168.679375 C66.665%2c168.679375 66.665%2c180.869375 79.999375%2c180.869375 C93.33375%2c180.869375 93.33375%2c168.679375 106.668125%2c168.679375 C120.00125%2c168.679375 120.00125%2c180.869375 133.3325%2c180.869375 C146.665625%2c180.869375 146.665625%2c168.679375 159.998125%2c168.679375 C173.3325%2c168.679375 173.3325%2c180.869375 186.666875%2c180.869375 C200.00125%2c180.869375 200.00125%2c168.679375 213.33375%2c168.679375 C226.666875%2c168.679375 226.666875%2c180.869375 239.999375%2c180.869375 C253.331875%2c180.869375 253.3325%2c168.679375 266.665%2c168.679375 C279.999375%2c168.679375 279.999375%2c180.869375 293.331875%2c180.869375 C306.585%2c180.869375 306.671875%2c168.8325 319.76375%2c168.685625 C319.9175%2c165.809375 320%2c162.914375 320%2c160 C320%2c155.745625 319.83%2c151.530625 319.50375%2c147.359375 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2b = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/kosovo%3c/title%3e %3cg id='flags/kosovo' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-kosovo' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%230052B4' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(55.651875%2c 76.522500)' fill='%23F0F0F0'%3e %3cpolygon id='Path' points='14.62875 20.869375 18.0825 31.499375 29.2575 31.499375 20.216875 38.0675 23.67 48.695625 14.62875 42.1275 5.586875 48.695625 9.04125 38.0675 0 31.499375 11.174375 31.499375'%3e%3c/polygon%3e %3cpolygon id='Path' points='49.41125 10.435 52.865 21.064375 64.04 21.064375 54.999375 27.6325 58.4525 38.260625 49.41125 31.6925 40.37 38.260625 43.82375 27.6325 34.783125 21.064375 45.958125 21.064375'%3e%3c/polygon%3e %3cpolygon id='Path' points='84.19375 8.8817842e-15 87.6475 10.629375 98.8225 10.629375 89.781875 17.198125 93.235 27.82625 84.19375 21.2575 75.1525 27.82625 78.60625 17.198125 69.565625 10.629375 80.740625 10.629375'%3e%3c/polygon%3e %3cpolygon id='Path' points='194.0675 20.869375 190.61375 31.499375 179.43875 31.499375 188.48 38.0675 185.02625 48.695625 194.0675 42.1275 203.109375 48.695625 199.655 38.0675 208.69625 31.499375 197.52125 31.499375'%3e%3c/polygon%3e %3cpolygon id='Path' points='159.285 10.435 155.83125 21.064375 144.65625 21.064375 153.6975 27.6325 150.24375 38.260625 159.285 31.6925 168.32625 38.260625 164.8725 27.6325 173.913125 21.064375 162.738125 21.064375'%3e%3c/polygon%3e %3cpolygon id='Path' points='124.5025 8.8817842e-15 121.04875 10.629375 109.87375 10.629375 118.914375 17.198125 115.46125 27.82625 124.5025 21.2575 133.54375 27.82625 130.09 17.198125 139.130625 10.629375 127.955625 10.629375'%3e%3c/polygon%3e %3c/g%3e %3cpath d='M187.82625%2c166.95625 L160%2c132.17375 L146.086875%2c139.13 L146.086875%2c153.043125 L125.2175%2c166.95625 L111.304375%2c166.95625 L111.304375%2c184.930625 C131.696875%2c193.188125 146.086875%2c213.16875 146.086875%2c236.521875 L146.086875%2c236.521875 L160%2c236.521875 L160%2c222.60875 L173.913125%2c208.695625 L187.82625%2c222.60875 L201.739375%2c208.695625 L201.739375%2c194.7825 L215.6525%2c173.913125 L187.82625%2c166.95625 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2a = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/kuwait%3c/title%3e %3cg id='flags/kuwait' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-kuwait' fill-rule='nonzero'%3e %3cpath d='M310.048135%2c215.651875 C316.479378%2c198.31875 320%2c179.57125 320%2c160 C320%2c140.42875 316.479378%2c121.68125 310.048135%2c104.348125 L160.000156%2c90.435 L9.95217778%2c104.348125 C3.52093406%2c121.68125 0.000312499695%2c140.42875 0.000312499695%2c160 C0.000312499695%2c179.57125 3.52093406%2c198.31875 9.95217778%2c215.651875 L160.000156%2c229.565 L310.048135%2c215.651875 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cpath d='M160.000156%2c320 C228.793839%2c320 287.441282%2c276.58 310.04751%2c215.651875 L9.95155278%2c215.651875 C32.5590307%2c276.58 91.2052234%2c320 160.000156%2c320 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M160.000156%2c0 C91.2052234%2c0 32.5590307%2c43.42 9.95155278%2c104.348125 L310.048135%2c104.348125 C287.441282%2c43.42 228.793839%2c0 160.000156%2c0 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M46.8627667%2c46.8625 C-15.6209222%2c109.34625 -15.6209222%2c210.653125 46.8627667%2c273.1375 C63.1721258%2c256.828125 79.0908603%2c240.909375 104.347711%2c215.6525 L104.347711%2c104.348125 L46.8627667%2c46.8625 Z' id='Path' fill='black'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$29 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/kyrgyzstan%3c/title%3e %3cg id='flags/kyrgyzstan' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-kyrgyzstan' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23D80027' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpolygon id='Path' fill='%23FFDA44' points='238.248125 160 206.27625 175.03875 223.301875 206.005625 188.58125 199.3625 184.18375 234.435 159.999375 208.64125 135.816875 234.435 131.4175 199.3625 96.7 206.004375 113.725 175.0375 81.751875 160 113.725 144.961875 96.7 113.994375 131.41625 120.638125 135.818125 85.565 159.999375 111.359375 184.185 85.565 188.58125 120.638125 223.303125 113.994375 206.276875 144.96375'%3e%3c/polygon%3e %3ccircle id='Oval' fill='%23D80027' cx='160' cy='160' r='48.695625'%3e%3c/circle%3e %3cg id='Group' transform='translate(132.177500%2c 132.173750)' fill='%23FFDA44'%3e %3cpath d='M3.474375%2c27.82625 C2.30125%2c27.82625 1.143125%2c27.88625 -1.77635684e-14%2c28 C0.041875%2c34.744375 2.481875%2c40.9175 6.511875%2c45.713125 C8.661875%2c39.9275 11.871875%2c34.651875 15.92%2c30.136875 C12.05375%2c28.65 7.859375%2c27.82625 3.474375%2c27.82625 Z' id='Path'%3e%3c/path%3e %3cpath d='M18.463125%2c54.034375 C21.388125%2c55.079375 24.5375%2c55.6525 27.8225%2c55.6525 C31.1075%2c55.6525 34.256875%2c55.079375 37.181875%2c54.034375 C35.5875%2c47.776875 32.295625%2c42.190625 27.8225%2c37.800625 C23.349375%2c42.19 20.0575%2c47.776875 18.463125%2c54.034375 Z' id='Path'%3e%3c/path%3e %3cpath d='M51.919375%2c13.9175 C47.108125%2c5.60125 38.1225%2c0 27.8225%2c0 C17.5225%2c0 8.536875%2c5.600625 3.725625%2c13.9175 C12.496875%2c13.961875 20.721875%2c16.346875 27.8225%2c20.465 C34.923125%2c16.346875 43.146875%2c13.961875 51.919375%2c13.9175 Z' id='Path'%3e%3c/path%3e %3cpath d='M39.72375%2c30.1375 C43.771875%2c34.651875 46.981875%2c39.9275 49.131875%2c45.71375 C53.161875%2c40.918125 55.601875%2c34.745 55.64375%2c28.000625 C54.5%2c27.88625 53.341875%2c27.8268746 52.169375%2c27.8268746 C47.785625%2c27.82625 43.59125%2c28.65 39.72375%2c30.1375 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$28 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/laos%3c/title%3e %3cg id='flags/laos' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-laos' fill-rule='nonzero'%3e %3cg id='Group' transform='translate(15.876250%2c 0.000000)' fill='%23D80027'%3e %3cpath d='M288.2475%2c90.435 C262.3675%2c36.915625 207.5575%2c0 144.12375%2c0 C80.69%2c0 25.88%2c36.915625 8.8817842e-15%2c90.435 L144.12375%2c104.348125 L288.2475%2c90.435 Z' id='Path'%3e%3c/path%3e %3cpath d='M8.8817842e-15%2c229.565 C25.88%2c283.084375 80.69%2c320 144.12375%2c320 C207.5575%2c320 262.3675%2c283.084375 288.2475%2c229.565 L144.12375%2c215.651875 L8.8817842e-15%2c229.565 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M304.12375%2c90.435 L15.87625%2c90.435 C5.705%2c111.469375 0%2c135.068125 0%2c160 C0%2c184.931875 5.705%2c208.530625 15.87625%2c229.565 L304.123125%2c229.565 C314.295625%2c208.530625 320%2c184.931875 320%2c160 C320%2c135.068125 314.295625%2c111.469375 304.12375%2c90.435 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='55.651875'%3e%3c/circle%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$27 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/latvia%3c/title%3e %3cg id='flags/latvia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-latvia' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(5.511875%2c 0.000000)' fill='%23A2001D'%3e %3cpath d='M154.488125%2c0 C80.56375%2c0 18.36%2c50.138125 2.55351296e-14%2c118.260625 L308.976875%2c118.260625 C290.61625%2c50.138125 228.4125%2c0 154.488125%2c0 Z' id='Path'%3e%3c/path%3e %3cpath d='M154.488125%2c320 C228.4125%2c320 290.61625%2c269.861875 308.97625%2c201.739375 L2.55351296e-14%2c201.739375 C18.36%2c269.86125 80.56375%2c320 154.488125%2c320 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$26 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/lebanon%3c/title%3e %3cg id='flags/lebanon' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-lebanon' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(15.876250%2c 0.000000)' fill='%23D80027'%3e %3cpath d='M144.12375%2c0 C80.69%2c0 25.88%2c36.915625 8.8817842e-15%2c90.435 L288.246875%2c90.435 C262.3675%2c36.915625 207.556875%2c0 144.12375%2c0 Z' id='Path'%3e%3c/path%3e %3cpath d='M144.12375%2c320 C207.556875%2c320 262.3675%2c283.084375 288.2475%2c229.565 L8.8817842e-15%2c229.565 C25.88%2c283.084375 80.69%2c320 144.12375%2c320 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpolygon id='Path' fill='%236DA544' points='201.739375 187.82625 160 111.304375 118.260625 187.82625 149.565 187.82625 149.565 208.695625 170.435 208.695625 170.435 187.82625'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$25 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/lesotho%3c/title%3e %3cg id='flags/lesotho' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-lesotho' fill-rule='nonzero'%3e %3cpath d='M0%2c160 C0%2c184.93125 5.704375%2c208.53 15.87625%2c229.565 L160%2c236.521875 L304.12375%2c229.565625 C314.295625%2c208.53 320%2c184.93125 320%2c160 C320%2c135.06875 314.295625%2c111.47 304.12375%2c90.435 L160%2c83.478125 L15.87625%2c90.434375 C5.704375%2c111.47 0%2c135.06875 0%2c160 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cpath d='M160%2c320 C223.433125%2c320 278.24375%2c283.084375 304.12375%2c229.565 L15.87625%2c229.565 C41.75625%2c283.084375 96.56625%2c320 160%2c320 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M160%2c0 C96.56625%2c0 41.75625%2c36.915625 15.87625%2c90.435 L304.123125%2c90.435 C278.24375%2c36.915625 223.433125%2c0 160%2c0 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M170.435%2c156.521875 L170.435%2c118.26125 L149.565625%2c118.26125 L149.565625%2c156.521875 L124.359375%2c181.72875 C131.69%2c193.72875 144.909375%2c201.739375 160.000625%2c201.739375 C175.091875%2c201.739375 188.310625%2c193.72875 195.641875%2c181.72875 L170.435%2c156.521875 Z' id='Path' fill='black'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$24 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/liberia%3c/title%3e %3cg id='flags/liberia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-liberia' fill-rule='nonzero'%3e %3cg id='Group' fill='%23F0F0F0'%3e %3ccircle id='Oval' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M36.5725%2c58.1825 L283.4275%2c58.1825 C274.31%2c47.141875 263.735%2c37.35125 252.004375%2c29.091875 L67.995625%2c29.091875 C56.265%2c37.35 45.690625%2c47.14125 36.5725%2c58.1825 Z' id='Path'%3e%3c/path%3e %3cpath d='M0%2c160 C0%2c164.904375 0.233125%2c169.753125 0.665%2c174.545625 L319.335%2c174.545625 C319.766875%2c169.753125 320%2c164.904375 320%2c160 C320%2c155.095625 319.766875%2c150.246875 319.335%2c145.455 L0.665%2c145.455 C0.233125%2c150.246875 0%2c155.095625 0%2c160 Z' id='Path'%3e%3c/path%3e %3cpath d='M17.4475%2c232.726875 L302.5525%2c232.726875 C307.26375%2c223.510625 311.10625%2c213.77875 313.975%2c203.636875 L6.025%2c203.636875 C8.893125%2c213.77875 12.736875%2c223.51125 17.4475%2c232.726875 Z' id='Path'%3e%3c/path%3e %3cpath d='M67.995625%2c290.909375 L252.00375%2c290.909375 C263.734375%2c282.65 274.309375%2c272.859375 283.426875%2c261.81875 L36.5725%2c261.81875 C45.690625%2c272.858125 56.265%2c282.65 67.995625%2c290.909375 Z' id='Path'%3e%3c/path%3e %3cpath d='M6.024375%2c116.36375 L313.975625%2c116.36375 C311.106875%2c106.22125 307.26375%2c96.48875 302.5525%2c87.273125 L17.4475%2c87.273125 C12.736875%2c96.48875 8.893125%2c106.22125 6.024375%2c116.36375 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(0.665000%2c 0.000000)' fill='%23D80027'%3e %3cpath d='M75.856875%2c29.090625 L251.339375%2c29.090625 C225.314375%2c10.766875 193.583125%2c0 159.335%2c0 C138.465625%2c0 101.881875%2c10.766875 75.856875%2c29.090625 Z' id='Path'%3e%3c/path%3e %3cpath d='M152.37875%2c87.273125 L301.8875%2c87.273125 C296.566875%2c76.865 290.140625%2c67.115625 282.7625%2c58.1825 L152.37875%2c58.1825 L152.37875%2c87.273125 Z' id='Path'%3e%3c/path%3e %3cpath d='M152.37875%2c145.455 L318.67%2c145.455 C317.77%2c135.46625 315.96125%2c125.73875 313.310625%2c116.364375 L152.37875%2c116.364375 L152.37875%2c145.455 Z' id='Path'%3e%3c/path%3e %3cpath d='M5.36%2c203.636875 L313.31%2c203.636875 C315.96125%2c194.263125 317.77%2c184.535 318.67%2c174.54625 L2.22044605e-14%2c174.54625 C0.9%2c184.535 2.70875%2c194.2625 5.36%2c203.636875 Z' id='Path'%3e%3c/path%3e %3cpath d='M35.9075%2c261.8175 L282.7625%2c261.8175 C290.140625%2c252.883125 296.566875%2c243.134375 301.8875%2c232.726875 L16.7825%2c232.726875 C22.103125%2c243.135 28.529375%2c252.884375 35.9075%2c261.8175 Z' id='Path'%3e%3c/path%3e %3cpath d='M159.335%2c320 C193.583125%2c320 225.314375%2c309.233125 251.339375%2c290.909375 L67.330625%2c290.909375 C93.355625%2c309.233125 125.086875%2c320 159.335%2c320 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M6.024375%2c116.36375 C3.373125%2c125.73875 1.565%2c135.465625 0.665%2c145.454375 L160%2c145.454375 L160%2c0 C86.7625%2c0 25.019375%2c49.2075 6.024375%2c116.36375 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpolygon id='Path' fill='%23F0F0F0' points='95.2425 41.739375 105.601875 73.62375 139.130625 73.62375 112.006875 93.33125 122.365625 125.2175 95.2425 105.51125 68.118125 125.2175 78.479375 93.33125 51.355625 73.62375 84.8825 73.62375'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$23 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/libya%3c/title%3e %3cg id='flags/libya' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-libya' fill-rule='nonzero'%3e %3cpath d='M15.87625%2c90.435 C5.705%2c111.47 0%2c135.068125 0%2c160 C0%2c184.931875 5.705%2c208.53 15.87625%2c229.565 L160%2c243.478125 L304.12375%2c229.565 C314.295%2c208.53 320%2c184.931875 320%2c160 C320%2c135.068125 314.295%2c111.47 304.12375%2c90.435 L160%2c76.521875 L15.87625%2c90.435 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M15.881875%2c229.565 C41.760625%2c283.084375 96.56625%2c320 160%2c320 C223.433125%2c320 278.239375%2c283.084375 304.118125%2c229.565 L15.881875%2c229.565 Z' id='Path' fill='%23496E2D'%3e%3c/path%3e %3cpath d='M15.881875%2c90.435 L304.118125%2c90.435 C278.239375%2c36.915625 223.433125%2c0 160%2c0 C96.56625%2c0 41.760625%2c36.915625 15.881875%2c90.435 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cg id='Group' transform='translate(88.370000%2c 104.347500)' fill='%23F0F0F0'%3e %3cpolygon id='Path' points='108.87125 26.39375 121.99875 44.484375 143.259375 37.590625 130.110625 55.665625 143.236875 73.755625 121.984375 66.835625 108.835625 84.910625 108.849375 62.56 87.595625 55.64 108.856875 48.74625'%3e%3c/polygon%3e %3cpath d='M73.043125%2c100.87 C48.070625%2c100.87 27.825625%2c80.625 27.825625%2c55.6525 C27.825625%2c30.68 48.070625%2c10.435 73.043125%2c10.435 C80.829375%2c10.435 88.15625%2c12.40375 94.5525%2c15.87 C84.5175%2c6.056875 70.795%2c-1.77635684e-14 55.651875%2c-1.77635684e-14 C24.915625%2c-1.77635684e-14 0%2c24.91625 0%2c55.651875 C0%2c86.3875 24.91625%2c111.30375 55.651875%2c111.30375 C70.795625%2c111.30375 84.518125%2c105.246875 94.5525%2c95.43375 C88.155625%2c98.90125 80.83%2c100.87 73.043125%2c100.87 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$22 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/liechtenstein%3c/title%3e %3cg id='flags/liechtenstein' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-liechtenstein' fill-rule='nonzero'%3e %3cpath d='M320%2c160 C320%2c248.365 248.365%2c320 160%2c320 C71.635%2c320 0%2c248.365 0%2c160 C6.95625%2c160 160%2c139.130625 160%2c139.130625 L320%2c160 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M0%2c160 C0%2c71.635 71.635%2c0 160%2c0 C248.365%2c0 320%2c71.635 320%2c160' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M118.260625%2c111.304375 C118.260625%2c99.77875 108.916875%2c90.435 97.39125%2c90.435 C92.044375%2c90.435 87.17125%2c92.4475 83.478125%2c95.753125 L83.478125%2c83.478125 L90.434375%2c83.478125 L90.434375%2c69.565 L83.478125%2c69.565 L83.478125%2c62.60875 L69.565%2c62.60875 L69.565%2c69.565 L62.60875%2c69.565 L62.60875%2c83.478125 L69.565%2c83.478125 L69.565%2c95.753125 C65.871875%2c92.4475 60.99875%2c90.435 55.651875%2c90.435 C44.12625%2c90.435 34.7825%2c99.77875 34.7825%2c111.304375 C34.7825%2c117.48375 37.470625%2c123.03375 41.73875%2c126.855625 L41.73875%2c139.130625 L111.30375%2c139.130625 L111.30375%2c126.855625 C115.573125%2c123.03375 118.260625%2c117.48375 118.260625%2c111.304375 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$21 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/lithuania%3c/title%3e %3cg id='flags/lithuania' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-lithuania' fill-rule='nonzero'%3e %3cpath d='M310.048125%2c215.651875 C316.48%2c198.319375 320%2c179.57125 320%2c160 C320%2c140.42875 316.48%2c121.680625 310.048125%2c104.348125 L160%2c90.435 L9.951875%2c104.348125 C3.52%2c121.680625 0%2c140.42875 0%2c160 C0%2c179.57125 3.52%2c198.319375 9.951875%2c215.651875 L160%2c229.565 L310.048125%2c215.651875 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M310.048125%2c104.348125 C287.44125%2c43.42 228.794375%2c0 160%2c0 C91.205625%2c0 32.55875%2c43.42 9.951875%2c104.348125 L310.048125%2c104.348125 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M160%2c320 C228.794375%2c320 287.44125%2c276.58 310.048125%2c215.651875 L9.951875%2c215.651875 C32.55875%2c276.58 91.205625%2c320 160%2c320 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$20 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/luxembourg%3c/title%3e %3cg id='flags/luxembourg' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-luxembourg' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M160%2c0 C91.205625%2c0 32.55875%2c43.42 9.951875%2c104.348125 L310.04875%2c104.348125 C287.44125%2c43.42 228.794375%2c0 160%2c0 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M160%2c320 C228.794375%2c320 287.44125%2c276.58 310.048125%2c215.651875 L9.951875%2c215.651875 C32.55875%2c276.58 91.205625%2c320 160%2c320 Z' id='Path' fill='%23338AF3'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1$ = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/macao%3c/title%3e %3cg id='flags/macao' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-macao' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23496E2D' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M187.82625%2c153.328125 C183.89875%2c153.328125 180.17%2c154.11125 176.7075%2c155.3575 C178.604375%2c151.13 179.87625%2c146.42625 179.87625%2c141.403125 C179.87625%2c121.5275 160.000625%2c106.620625 160.000625%2c106.620625 C160.000625%2c106.620625 140.125%2c121.5275 140.125%2c141.403125 C140.125%2c146.425625 141.396875%2c151.13 143.29375%2c155.3575 C139.830625%2c154.1125 136.101875%2c153.328125 132.175%2c153.328125 C112.299375%2c153.328125 97.3925%2c173.20375 97.3925%2c173.20375 C97.3925%2c173.20375 112.299375%2c193.08 132.175%2c193.08 C143.828125%2c193.08 153.766875%2c186.25 160.00125%2c180.59625 C166.235625%2c186.249375 176.174375%2c193.08 187.8275%2c193.08 C207.703125%2c193.08 222.61%2c173.20375 222.61%2c173.20375 C222.61%2c173.20375 207.701875%2c153.328125 187.82625%2c153.328125 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cg id='Group' transform='translate(72.496250%2c 62.608750)' fill='%23FFDA44'%3e %3cpolygon id='Path' points='87.50375 -8.8817842e-15 91.609375 12.635 104.895 12.635 94.148125 20.445 98.250625 33.08 87.50375 25.27 76.756875 33.08 80.859375 20.445 70.1125 12.635 83.398125 12.635'%3e%3c/polygon%3e %3cpolygon id='Path' points='36.983125 22.099375 44.881875 29.210625 54.08625 23.896875 49.76375 33.60625 57.661875 40.71875 47.091875 39.6075 42.769375 49.316875 40.558125 38.92125 29.98875 37.81 39.1925 32.495'%3e%3c/polygon%3e %3cpolygon id='Path' points='1.77635684e-14 59.083125 10.39625 61.2925 15.710625 52.088125 16.821875 62.6575 27.216875 64.86875 17.508125 69.191875 18.619375 79.760625 11.50625 71.86375 1.7975 76.18625 7.111875 66.98125'%3e%3c/polygon%3e %3cpolygon id='Path' points='138.024375 22.099375 130.12625 29.210625 120.921875 23.896875 125.24375 33.60625 117.34625 40.71875 127.91625 39.6075 132.23875 49.316875 134.45 38.92125 145.019375 37.81 135.815625 32.495'%3e%3c/polygon%3e %3cpolygon id='Path' points='175.008125 59.083125 164.611875 61.2925 159.298125 52.088125 158.18625 62.6575 147.79125 64.86875 157.5 69.191875 156.38875 79.760625 163.501875 71.86375 173.210625 76.18625 167.89625 66.98125'%3e%3c/polygon%3e %3c/g%3e %3cg id='Group' transform='translate(96.229375%2c 206.993125)' fill='%23F0F0F0'%3e %3cpath d='M63.770625%2c41.739375 C79.55875%2c41.739375 94.11125%2c36.471875 105.785%2c27.60875 L21.756875%2c27.60875 C33.430625%2c36.47125 47.9825%2c41.739375 63.770625%2c41.739375 Z' id='Path'%3e%3c/path%3e %3cpath d='M1.77635684e-14%2c-3.55271368e-14 C2.208125%2c5.05375 5.008125%2c9.786875 8.296875%2c14.130625 L119.245625%2c14.130625 C122.534375%2c9.7875 125.334375%2c5.05375 127.5425%2c-3.55271368e-14 L1.77635684e-14%2c-3.55271368e-14 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1_ = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/madagascar%3c/title%3e %3cg id='flags/madagascar' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-madagascar' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M104.348125%2c160 L104.348125%2c310.048125 C121.680625%2c316.48 140.42875%2c320 160%2c320 C248.365%2c320 320%2c248.365 320%2c160 C320%2c71.635 104.348125%2c160 104.348125%2c160 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M160%2c0 C140.42875%2c0 121.680625%2c3.520625 104.348125%2c9.951875 L104.348125%2c160 C104.348125%2c160 246.26125%2c160 320%2c160 C320%2c71.635 248.365%2c0 160%2c0 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1Z = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/madeira%3c/title%3e %3cg id='flags/madeira' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-madeira' fill-rule='nonzero'%3e %3cpath d='M229.565%2c15.87625 C208.53%2c5.705 184.931875%2c0 160%2c0 C135.068125%2c0 111.47%2c5.705 90.435%2c15.87625 L76.521875%2c160 L90.435%2c304.12375 C111.47%2c314.295 135.068125%2c320 160%2c320 C184.931875%2c320 208.53%2c314.295 229.565%2c304.12375 L243.478125%2c160 L229.565%2c15.87625 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cg id='Group' transform='translate(0.000000%2c 15.881875)' fill='%230052B4'%3e %3cpath d='M90.435%2c0 C36.915625%2c25.879375 0%2c80.685 0%2c144.118125 C0%2c207.55125 36.915625%2c262.356875 90.435%2c288.23625 L90.435%2c0 Z' id='Path'%3e%3c/path%3e %3cpath d='M229.565%2c0 L229.565%2c288.23625 C283.08375%2c262.356875 320%2c207.55125 320%2c144.118125 C320%2c80.685 283.08375%2c25.879375 229.565%2c0 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpolygon id='Path' fill='%23D80027' points='205.2175 173.913125 215.651875 187.82625 215.651875 132.17375 205.2175 146.086875 173.913125 146.086875 173.913125 114.7825 187.82625 104.348125 132.17375 104.348125 146.086875 114.7825 146.086875 146.086875 114.7825 146.086875 104.348125 132.17375 104.348125 187.82625 114.7825 173.913125 146.086875 173.913125 146.086875 205.2175 132.17375 215.651875 187.82625 215.651875 173.913125 205.2175 173.913125 173.913125'%3e%3c/polygon%3e %3cpolygon id='Path' fill='%23F0F0F0' points='201.739375 153.04375 166.95625 153.04375 166.95625 118.260625 153.04375 118.260625 153.04375 153.04375 118.260625 153.04375 118.260625 166.95625 153.04375 166.95625 153.04375 201.739375 166.95625 201.739375 166.95625 166.95625 201.739375 166.95625'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1Y = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/malawi%3c/title%3e %3cg id='flags/malawi' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-malawi' fill-rule='nonzero'%3e %3cpath d='M0%2c160 C0%2c179.57125 3.520625%2c198.31875 9.951875%2c215.651875 L160%2c222.60875 L310.048125%2c215.6525 C316.48%2c198.31875 320%2c179.57125 320%2c160 C320%2c140.42875 316.48%2c121.68125 310.048125%2c104.348125 L160%2c97.39125 L9.951875%2c104.3475 C3.520625%2c121.68125 0%2c140.42875 0%2c160 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M160%2c0 C91.205625%2c0 32.55875%2c43.42 9.951875%2c104.348125 L310.04875%2c104.348125 C287.44125%2c43.42 228.794375%2c0 160%2c0 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M310.048125%2c215.651875 L9.951875%2c215.651875 C32.55875%2c276.579375 91.205625%2c320 160%2c320 C228.794375%2c320 287.44125%2c276.579375 310.048125%2c215.651875 Z' id='Path' fill='%23496E2D'%3e%3c/path%3e %3cpolygon id='Path' fill='%23D80027' points='207.821875 76.521875 188.281875 67.330625 198.6875 48.40625 177.46875 52.465625 174.78 31.029375 160 46.795 145.220625 31.029375 142.53125 52.465625 121.313125 48.40625 131.71875 67.330625 112.178125 76.521875'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1X = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/malaysia%3c/title%3e %3cg id='flags/malaysia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-malaysia' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(5.511875%2c 34.782500)' fill='%23D80027'%3e %3cpath d='M147.531875%2c125.2175 L314.488125%2c125.2175 C314.488125%2c110.775625 312.563125%2c96.786875 308.97625%2c83.478125 L147.531875%2c83.478125 L147.531875%2c125.2175 Z' id='Path'%3e%3c/path%3e %3cpath d='M147.531875%2c41.739375 L291.004375%2c41.739375 C281.21%2c25.756875 268.688125%2c11.63 254.08625%2c8.8817842e-15 L147.531875%2c8.8817842e-15 L147.531875%2c41.739375 Z' id='Path'%3e%3c/path%3e %3cpath d='M154.488125%2c285.2175 C192.14375%2c285.2175 226.754375%2c272.2025 254.08625%2c250.435 L54.89%2c250.435 C82.221875%2c272.2025 116.8325%2c285.2175 154.488125%2c285.2175 Z' id='Path'%3e%3c/path%3e %3cpath d='M17.971875%2c208.695625 L291.004375%2c208.695625 C298.8675%2c195.865625 304.965%2c181.84 308.97625%2c166.95625 L2.55351296e-14%2c166.95625 C4.010625%2c181.84 10.10875%2c195.865625 17.971875%2c208.695625 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M160%2c160 C160%2c71.635 160%2c61.2175 160%2c0 C71.635%2c0 0%2c71.635 0%2c160 L160%2c160 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cg id='Group' transform='translate(42.483125%2c 48.696250)' fill='%23FFDA44'%3e %3cpath d='M63.913125%2c88.26 C42.061875%2c88.26 24.348125%2c70.545625 24.348125%2c48.695 C24.348125%2c26.844375 42.0625%2c9.13 63.913125%2c9.13 C70.72625%2c9.13 77.136875%2c10.853125 82.73375%2c13.885625 C73.95375%2c5.3 61.94625%2c0 48.695625%2c0 C21.8025%2c0 1.77635684e-14%2c21.801875 1.77635684e-14%2c48.695625 C1.77635684e-14%2c75.589375 21.8025%2c97.39125 48.695625%2c97.39125 C61.94625%2c97.39125 73.95375%2c92.09125 82.73375%2c83.505625 C77.136875%2c86.536875 70.726875%2c88.26 63.913125%2c88.26 Z' id='Path'%3e%3c/path%3e %3cpolygon id='Path' points='75.0625 20.86875 82.086875 35.5575 97.95 31.8925 90.84625 46.541875 103.60375 56.65875 87.72 60.239375 87.764375 76.52125 75.0625 66.335 62.36 76.52125 62.40375 60.239375 46.52 56.65875 59.2775 46.541875 52.173125 31.8925 68.0375 35.5575'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1W = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/maldives%3c/title%3e %3cg id='flags/maldives' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-maldives' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23D80027' cx='160' cy='160' r='160'%3e%3c/circle%3e %3crect id='Rectangle' fill='%236DA544' x='55.651875' y='83.478125' width='208.695625' height='153.04375'%3e%3c/rect%3e %3cpath d='M185.766875%2c205.2175 C160.794375%2c205.2175 140.549375%2c184.9725 140.549375%2c160 C140.549375%2c135.0275 160.794375%2c114.7825 185.766875%2c114.7825 C193.553125%2c114.7825 200.88%2c116.75125 207.27625%2c120.2175 C197.241875%2c110.404375 183.52%2c104.3475 168.375625%2c104.3475 C137.640625%2c104.3475 112.72375%2c129.26375 112.72375%2c159.999375 C112.72375%2c190.735 137.640625%2c215.65125 168.375625%2c215.65125 C183.52%2c215.65125 197.2425%2c209.594375 207.27625%2c199.78125 C200.88%2c203.24875 193.553125%2c205.2175 185.766875%2c205.2175 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1V = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/mali%3c/title%3e %3cg id='flags/mali' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-mali' fill-rule='nonzero'%3e %3cpath d='M215.651875%2c9.951875 C198.31875%2c3.520625 179.57125%2c0 160%2c0 C140.42875%2c0 121.68125%2c3.520625 104.348125%2c9.951875 L90.435%2c160 L104.348125%2c310.048125 C121.68125%2c316.48 140.42875%2c320 160%2c320 C179.57125%2c320 198.31875%2c316.48 215.651875%2c310.048125 L229.565%2c160 L215.651875%2c9.951875 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M320%2c160 C320%2c91.20625 276.58%2c32.55875 215.651875%2c9.9525 L215.651875%2c310.049375 C276.58%2c287.44125 320%2c228.795 320%2c160 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M0%2c160 C0%2c228.795 43.42%2c287.44125 104.348125%2c310.04875 L104.348125%2c9.9525 C43.42%2c32.55875 0%2c91.20625 0%2c160 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1U = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/malta%3c/title%3e %3cg id='flags/malta' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-malta' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M160%2c0 C248.365%2c0 320%2c71.635 320%2c160 C320%2c248.365 248.365%2c320 160%2c320' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpolygon id='Path' fill='%23ACABB1' points='111.304375 62.60875 111.304375 41.739375 90.435 41.739375 90.435 62.60875 69.565 62.60875 69.565 83.478125 90.435 83.478125 90.435 104.348125 111.304375 104.348125 111.304375 83.478125 132.17375 83.478125 132.17375 62.60875'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1T = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/marshall-island%3c/title%3e %3cg id='flags/marshall-island' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-marshall-island' fill-rule='nonzero'%3e %3cpath d='M160%2c320 C248.365%2c320 320%2c248.365 320%2c160 C320%2c133.148125 313.375%2c107.84625 301.68625%2c85.625 L159.811875%2c160.1875 L234.375%2c18.31375 C212.15375%2c6.625 186.851875%2c0 160%2c0 C71.635%2c0 0%2c71.635 0%2c160 C0%2c204.183125 17.90875%2c244.183125 46.8625%2c273.1375 C75.816875%2c302.091875 115.816875%2c320 160%2c320 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M301.5175%2c85.799375 C294.19375%2c71.859375 284.671875%2c58.77125 272.950625%2c47.05 C261.22875%2c35.32875 248.1425%2c25.806875 234.20125%2c18.48375 L46.675625%2c273.324375 L301.5175%2c85.799375 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cpath d='M46.675625%2c273.324375 L301.5175%2c85.799375 C294.19375%2c71.859375 284.671875%2c58.77125 272.950625%2c47.05 L46.675625%2c273.324375 Z' id='Path' fill='%23FF9811'%3e%3c/path%3e %3cpolygon id='Path' fill='%23F0F0F0' points='138.9425 93.82625 119.4025 103.0175 129.808125 121.9425 108.589375 117.883125 105.900625 139.318125 91.120625 123.5525 76.340625 139.318125 73.653125 117.883125 52.434375 121.94125 62.83875 103.016875 43.29875 93.82625 62.839375 84.634375 52.434375 65.710625 73.651875 69.76875 76.34125 48.33375 91.120625 64.099375 105.900625 48.33375 108.589375 69.76875 129.80875 65.710625 119.403125 84.635'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1S = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/martinique%3c/title%3e %3cg id='flags/martinique' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-martinique' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(1.370625%2c 1.370625)' fill='%230052B4'%3e %3cpath d='M317.258125%2c137.759375 C312.844375%2c104.018125 297.688125%2c71.414375 271.76625%2c45.4925 C245.844375%2c19.570625 213.24%2c4.41375 179.49875%2c-7.49400542e-15 L179.49875%2c137.759375 L317.258125%2c137.759375 L317.258125%2c137.759375 Z' id='Path'%3e%3c/path%3e %3cpath d='M137.76%2c-7.49400542e-15 C104.018125%2c4.41375 71.41375%2c19.57 45.491875%2c45.491875 C19.570625%2c71.414375 4.41375%2c104.01875 -7.49400542e-15%2c137.760625 L137.76%2c137.760625 L137.76%2c-7.49400542e-15 Z' id='Path'%3e%3c/path%3e %3cpath d='M-7.49400542e-15%2c179.499375 C4.41375%2c213.240625 19.570625%2c245.845625 45.491875%2c271.766875 C71.41375%2c297.688125 104.0175%2c312.844375 137.76%2c317.26 L137.76%2c179.499375 L-7.49400542e-15%2c179.499375 Z' id='Path'%3e%3c/path%3e %3cpath d='M179.499375%2c317.258125 C213.240625%2c312.844375 245.844375%2c297.688125 271.76625%2c271.76625 C297.688125%2c245.844375 312.844375%2c213.240625 317.258125%2c179.499375 L179.499375%2c179.499375 L179.499375%2c317.258125 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(69.565625%2c 47.168750)' fill='%23F0F0F0'%3e %3cpath d='M145.0525%2c54.355 C145.0525%2c52.2275 146.781875%2c50.498125 148.91%2c50.498125 L157.175%2c50.498125 C170.24%2c50.498125 180.869375%2c39.869375 180.869375%2c26.805 C180.869375%2c13.740625 170.240625%2c3.11125 157.175%2c3.11125 L149.32625%2c3.11125 C146.764375%2c1.186875 143.3275%2c-8.8817842e-15 139.53625%2c-8.8817842e-15 C131.628125%2c-8.8817842e-15 125.2175%2c5.128125 125.2175%2c11.454375 C125.2175%2c17.719375 131.505625%2c22.801875 139.308125%2c22.900625 L139.304375%2c22.94625 L157.175%2c22.94625 C159.303125%2c22.94625 161.0325%2c24.67625 161.0325%2c26.80375 C161.0325%2c28.93125 159.303125%2c30.660625 157.175%2c30.660625 L148.91%2c30.660625 C135.845%2c30.660625 125.216875%2c41.289375 125.216875%2c54.35375 C125.216875%2c67.418125 135.844375%2c78.0475 148.91%2c78.0475 L180.86875%2c78.0475 L180.86875%2c58.21125 L148.91%2c58.21125 C146.781875%2c58.211875 145.0525%2c56.4825 145.0525%2c54.355 Z' id='Path'%3e%3c/path%3e %3cpath d='M19.835625%2c54.355 C19.835625%2c52.2275 21.565%2c50.498125 23.693125%2c50.498125 L31.958125%2c50.498125 C45.023125%2c50.498125 55.6525%2c39.869375 55.6525%2c26.805 C55.6525%2c13.740625 45.02375%2c3.11125 31.958125%2c3.11125 L24.109375%2c3.11125 C21.5475%2c1.186875 18.110625%2c-8.8817842e-15 14.319375%2c-8.8817842e-15 C6.41125%2c-8.8817842e-15 0.000625%2c5.128125 0.000625%2c11.454375 C0.000625%2c17.719375 6.28875%2c22.801875 14.09125%2c22.900625 L14.0875%2c22.94625 L31.95875%2c22.94625 C34.086875%2c22.94625 35.81625%2c24.67625 35.81625%2c26.80375 C35.81625%2c28.93125 34.086875%2c30.660625 31.95875%2c30.660625 L23.69375%2c30.660625 C10.62875%2c30.660625 0.000625%2c41.289375 0.000625%2c54.35375 C0.000625%2c67.418125 10.628125%2c78.0475 23.69375%2c78.0475 L55.651875%2c78.0475 L55.651875%2c58.21125 L23.693125%2c58.21125 C21.565%2c58.211875 19.835625%2c56.4825 19.835625%2c54.355 Z' id='Path'%3e%3c/path%3e %3cpath d='M145.0525%2c201.96875 C145.0525%2c199.84125 146.781875%2c198.111875 148.91%2c198.111875 L157.175%2c198.111875 C170.24%2c198.111875 180.869375%2c187.483125 180.869375%2c174.41875 C180.869375%2c161.354375 170.240625%2c150.725 157.175%2c150.725 L149.32625%2c150.725 C146.764375%2c148.800625 143.3275%2c147.61375 139.53625%2c147.61375 C131.6275%2c147.61375 125.216875%2c152.7425 125.216875%2c159.068125 C125.216875%2c165.333125 131.505%2c170.415625 139.3075%2c170.514375 L139.30375%2c170.56 L157.174375%2c170.56 C159.3025%2c170.56 161.031875%2c172.29 161.031875%2c174.4175 C161.031875%2c176.545 159.3025%2c178.274375 157.174375%2c178.274375 L148.909375%2c178.274375 C135.844375%2c178.274375 125.21625%2c188.903125 125.21625%2c201.9675 C125.21625%2c215.031875 135.84375%2c225.66125 148.909375%2c225.66125 L180.86875%2c225.66125 L180.86875%2c205.825625 L148.91%2c205.825625 C146.781875%2c205.82625 145.0525%2c204.095625 145.0525%2c201.96875 Z' id='Path'%3e%3c/path%3e %3cpath d='M19.835625%2c201.96875 C19.835625%2c199.84125 21.565%2c198.111875 23.693125%2c198.111875 L31.958125%2c198.111875 C45.023125%2c198.111875 55.6525%2c187.483125 55.6525%2c174.41875 C55.6525%2c161.354375 45.02375%2c150.725 31.958125%2c150.725 L24.109375%2c150.725 C21.5475%2c148.800625 18.110625%2c147.61375 14.319375%2c147.61375 C6.410625%2c147.61375 0%2c152.7425 0%2c159.068125 C0%2c165.333125 6.288125%2c170.415625 14.090625%2c170.514375 L14.086875%2c170.56 L31.958125%2c170.56 C34.08625%2c170.56 35.815625%2c172.29 35.815625%2c174.4175 C35.815625%2c176.545 34.08625%2c178.274375 31.958125%2c178.274375 L23.693125%2c178.274375 C10.628125%2c178.274375 0%2c188.903125 0%2c201.9675 C0%2c215.031875 10.6275%2c225.66125 23.693125%2c225.66125 L55.651875%2c225.66125 L55.651875%2c205.825625 L23.693125%2c205.825625 C21.565%2c205.82625 19.835625%2c204.095625 19.835625%2c201.96875 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1R = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/mauritania%3c/title%3e %3cg id='flags/mauritania' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-mauritania' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23496E2D' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(104.348125%2c 111.304375)' fill='%23FFDA44'%3e %3cpath d='M55.651875%2c73.54 C29.010625%2c73.54 6.754375%2c54.81625 1.29375%2c29.8125 C0.455%2c33.656875 0%2c37.6425 0%2c41.73875 C0%2c72.475625 24.915625%2c97.390625 55.651875%2c97.390625 C86.388125%2c97.390625 111.30375%2c72.475 111.30375%2c41.73875 C111.30375%2c37.6425 110.84875%2c33.656875 110.01%2c29.8125 C104.549375%2c54.816875 82.293125%2c73.54 55.651875%2c73.54 Z' id='Path'%3e%3c/path%3e %3cpolygon id='Path' points='55.65125 0 60.83125 15.943125 77.595625 15.943125 64.03375 25.79625 69.21375 41.739375 55.65125 31.885625 42.089375 41.739375 47.27 25.79625 33.708125 15.943125 50.47125 15.943125'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1Q = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/mauritius%3c/title%3e %3cg id='flags/mauritius' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-mauritius' fill-rule='nonzero'%3e %3cpath d='M19.454375%2c83.478125 L160%2c97.39125 L300.545625%2c83.478125 C273.40875%2c33.743125 220.646875%2c0 160%2c0 C99.353125%2c0 46.59125%2c33.743125 19.454375%2c83.478125 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M19.454375%2c236.521875 L160%2c250.435 L300.545625%2c236.521875 C312.948125%2c213.79 320%2c187.71875 320%2c160 L160%2c146.086875 L0%2c160 C0%2c187.71875 7.051875%2c213.79 19.454375%2c236.521875 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M19.454375%2c83.478125 C7.051875%2c106.21 0%2c132.28125 0%2c160 L320%2c160 C320%2c132.28125 312.948125%2c106.21 300.545625%2c83.478125 L160%2c83.478125 L19.454375%2c83.478125 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M160%2c320 C220.646875%2c320 273.40875%2c286.256875 300.545625%2c236.521875 L19.454375%2c236.521875 C46.59125%2c286.256875 99.353125%2c320 160%2c320 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1P = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/melilla%3c/title%3e %3cg id='flags/melilla' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-melilla' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23338AF3' cx='160' cy='160' r='160'%3e%3c/circle%3e %3crect id='Rectangle' fill='%23818085' x='76.521875' y='173.913125' width='166.95625' height='20.869375'%3e%3c/rect%3e %3cpolygon id='Path' fill='%23FFDA44' points='104.348125 111.304375 160 118.261875 215.651875 111.304375 215.651875 77.913125 193.39125 89.04375 160 55.651875 126.60875 89.04375 104.348125 77.913125'%3e%3c/polygon%3e %3cg id='Group' transform='translate(69.565000%2c 132.174375)' fill='%23F0F0F0'%3e %3cpolygon id='Path' points='20.87 83.47875 1.77635684e-14 83.47875 1.77635684e-14 45.2175 6.956875 34.781875 1.77635684e-14 24.3475 1.77635684e-14 3.55271368e-14 20.87 3.55271368e-14'%3e%3c/polygon%3e %3cpolygon id='Path' points='180.87 83.47875 160 83.47875 160 3.55271368e-14 180.87 3.55271368e-14 180.87 24.346875 173.913125 34.956875 180.87 45.21875'%3e%3c/polygon%3e %3c/g%3e %3crect id='Rectangle' fill='%23ACABB1' x='69.565' y='156.521875' width='180.869375' height='20.869375'%3e%3c/rect%3e %3cpath d='M160%2c243.478125 C129.313125%2c243.478125 104.348125%2c218.5125 104.348125%2c187.82625 L104.348125%2c111.305 L215.6525%2c111.305 L215.6525%2c187.82625 C215.6525%2c218.5125 190.686875%2c243.478125 160%2c243.478125 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cpath d='M160%2c222.60875 C140.820625%2c222.60875 125.2175%2c207.005 125.2175%2c187.82625 L125.2175%2c132.175 L194.7825%2c132.175 L194.7825%2c187.82625 C194.7825%2c207.005 179.179375%2c222.60875 160%2c222.60875 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cg id='Group' transform='translate(104.348125%2c 111.304375)' fill='%23D80027'%3e %3crect id='Rectangle' x='0' y='-1.77635684e-14' width='20.869375' height='20.869375'%3e%3c/rect%3e %3crect id='Rectangle' x='90.434375' y='-1.77635684e-14' width='20.869375' height='20.869375'%3e%3c/rect%3e %3crect id='Rectangle' x='90.434375' y='45.2175' width='20.869375' height='20.869375'%3e%3c/rect%3e %3crect id='Rectangle' x='0' y='45.2175' width='20.869375' height='20.869375'%3e%3c/rect%3e %3crect id='Rectangle' x='45.216875' y='-1.77635684e-14' width='20.869375' height='20.869375'%3e%3c/rect%3e %3cpath d='M55.651875%2c111.304375 C52.016875%2c111.304375 48.5125%2c110.741875 45.216875%2c109.703125 L45.216875%2c131.17875 C48.599375%2c131.82375 52.084375%2c132.174375 55.651875%2c132.174375 C59.219375%2c132.174375 62.704375%2c131.82375 66.086875%2c131.17875 L66.086875%2c109.703125 C62.79125%2c110.74125 59.286875%2c111.304375 55.651875%2c111.304375 Z' id='Path'%3e%3c/path%3e %3cpath d='M21.334375%2c82.168125 L4.679375%2c98.823125 C7.566875%2c105.3975 11.686875%2c111.309375 16.750625%2c116.265625 L31.500625%2c101.515625 C26.236875%2c96.43 22.57%2c89.705 21.334375%2c82.168125 Z' id='Path'%3e%3c/path%3e %3cpath d='M106.624375%2c98.824375 L89.969375%2c82.169375 C88.733125%2c89.705625 85.066875%2c96.43 79.80375%2c101.5175 L94.55375%2c116.2675 C99.61625%2c111.310625 103.736875%2c105.39875 106.624375%2c98.824375 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1O = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/mexico%3c/title%3e %3cg id='flags/mexico' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-mexico' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M320%2c160 C320%2c96.56625 283.084375%2c41.75625 229.565%2c15.87625 L229.565%2c304.123125 C283.084375%2c278.24375 320%2c223.43375 320%2c160 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cg id='Group' transform='translate(0.000000%2c 15.876250)' fill='%236DA544'%3e %3cpath d='M0%2c144.12375 C0%2c207.5575 36.915625%2c262.3675 90.435%2c288.2475 L90.435%2c8.8817842e-15 C36.915625%2c25.88 0%2c80.69 0%2c144.12375 Z' id='Path'%3e%3c/path%3e %3cpath d='M118.260625%2c144.12375 C118.260625%2c167.175625 136.948125%2c185.863125 160%2c185.863125 C183.051875%2c185.863125 201.739375%2c167.175625 201.739375%2c144.12375 L201.739375%2c130.210625 L118.260625%2c130.210625 L118.260625%2c144.12375 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M215.651875%2c132.17375 L173.9125%2c132.17375 C173.9125%2c124.49 167.683125%2c118.260625 159.999375%2c118.260625 C152.315625%2c118.260625 146.08625%2c124.49 146.08625%2c132.17375 L104.346875%2c132.17375 C104.346875%2c139.858125 111.04%2c146.086875 118.723125%2c146.086875 L118.26%2c146.086875 C118.26%2c153.77125 124.48875%2c160 132.173125%2c160 C132.173125%2c167.684375 138.401875%2c173.913125 146.08625%2c173.913125 L173.9125%2c173.913125 C181.596875%2c173.913125 187.825625%2c167.684375 187.825625%2c160 C195.51%2c160 201.73875%2c153.77125 201.73875%2c146.086875 L201.275%2c146.086875 C208.959375%2c146.086875 215.651875%2c139.858125 215.651875%2c132.17375 Z' id='Path' fill='%23FF9811'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1N = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/micronesia%3c/title%3e %3cg id='flags/micronesia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-micronesia' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23338AF3' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(69.565000%2c 69.565000)' fill='%23F0F0F0'%3e %3cpolygon id='Path' points='90.434375 -1.77635684e-14 97.340625 21.2575 119.693125 21.2575 101.610625 34.395625 108.516875 55.6525 90.434375 42.515 72.35125 55.6525 79.259375 34.395625 61.17625 21.2575 83.528125 21.2575'%3e%3c/polygon%3e %3cpolygon id='Path' points='-1.77635684e-14 90.43625 21.2575 83.52875 21.2575 61.17625 34.395625 79.26 55.6525 72.353125 42.515 90.43625 55.6525 108.5175 34.395625 101.61 21.2575 119.693125 21.2575 97.341875'%3e%3c/polygon%3e %3cpolygon id='Path' points='90.435625 180.87 83.52875 159.6125 61.17625 159.6125 79.26 146.474375 72.353125 125.2175 90.435625 138.355 108.5175 125.2175 101.61 146.474375 119.693125 159.6125 97.341875 159.6125'%3e%3c/polygon%3e %3cpolygon id='Path' points='180.87 90.434375 159.6125 97.34125 159.6125 119.693125 146.474375 101.61 125.2175 108.516875 138.355 90.434375 125.2175 72.3525 146.474375 79.26 159.6125 61.17625 159.6125 83.528125'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1M = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/moldova%3c/title%3e %3cg id='flags/moldova' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-moldova' fill-rule='nonzero'%3e %3cpath d='M229.565%2c15.87625 C208.53%2c5.705 184.93125%2c0 160%2c0 C135.06875%2c0 111.47%2c5.705 90.435%2c15.87625 L76.521875%2c160 L90.435%2c304.12375 C111.47%2c314.295 135.06875%2c320 160%2c320 C184.93125%2c320 208.53%2c314.295 229.565%2c304.12375 L243.478125%2c160 L229.565%2c15.87625 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M90.435%2c15.881875 C36.91625%2c41.76125 0%2c96.566875 0%2c160 C0%2c223.433125 36.91625%2c278.23875 90.435%2c304.118125 L90.435%2c15.881875 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M229.565%2c15.881875 L229.565%2c304.118125 C283.08375%2c278.23875 320%2c223.433125 320%2c160 C320%2c96.566875 283.08375%2c41.76125 229.565%2c15.881875 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M215.651875%2c125.886875 L177.39125%2c125.886875 C177.39125%2c116.281875 169.605%2c108.495625 160%2c108.495625 C150.395%2c108.495625 142.60875%2c116.281875 142.60875%2c125.886875 L104.348125%2c125.886875 C104.348125%2c135.34375 112.58625%2c143.009375 122.041875%2c143.009375 L121.471875%2c143.009375 C121.471875%2c152.466875 129.138125%2c160.13375 138.595625%2c160.13375 C138.595625%2c168.506875 144.609375%2c175.464375 152.551875%2c176.951875 L139.058125%2c207.415625 C145.52375%2c210.04375 152.59%2c211.504375 160%2c211.504375 C167.409375%2c211.504375 174.47625%2c210.04375 180.94125%2c207.415625 L167.448125%2c176.951875 C175.390625%2c175.464375 181.404375%2c168.506875 181.404375%2c160.13375 C190.861875%2c160.13375 198.528125%2c152.466875 198.528125%2c143.009375 L197.9575%2c143.009375 C207.414375%2c143.009375 215.651875%2c135.343125 215.651875%2c125.886875 Z' id='Path' fill='%23FF9811'%3e%3c/path%3e %3cpolygon id='Path' fill='%230052B4' points='160 149.565 137.39125 160 137.39125 180.869375 160 194.7825 182.60875 180.869375 182.60875 160'%3e%3c/polygon%3e %3crect id='Rectangle' fill='%23D80027' x='137.39125' y='139.130625' width='45.2175' height='20.869375'%3e%3c/rect%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1L = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/monaco%3c/title%3e %3cg id='flags/monaco' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-monaco' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M0%2c160 C0%2c71.635 71.635%2c0 160%2c0 C248.365%2c0 320%2c71.635 320%2c160' id='Path' fill='%23D80027'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1K = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/mongolia%3c/title%3e %3cg id='flags/mongolia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-mongolia' fill-rule='nonzero'%3e %3cpath d='M160%2c320 C179.57125%2c320 198.319375%2c316.48 215.651875%2c310.048125 L222.60875%2c160 L215.6525%2c9.951875 C198.319375%2c3.520625 179.57125%2c0 160%2c0 C140.42875%2c0 121.680625%2c3.520625 104.348125%2c9.951875 L97.39125%2c160 L104.3475%2c310.048125 C121.680625%2c316.48 140.42875%2c320 160%2c320 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cg id='Group' transform='translate(0.000000%2c 9.951875)' fill='%23A2001D'%3e %3cpath d='M0%2c150.048125 C0%2c218.8425 43.42%2c277.489375 104.348125%2c300.09625 L104.348125%2c-1.11022302e-15 C43.42%2c22.606875 0%2c81.25375 0%2c150.048125 Z' id='Path'%3e%3c/path%3e %3cpath d='M215.651875%2c-1.11022302e-15 L215.651875%2c300.096875 C276.58%2c277.489375 320%2c218.8425 320%2c150.048125 C320%2c81.25375 276.58%2c22.606875 215.651875%2c-1.11022302e-15 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(20.869375%2c 83.478125)' fill='%23FFDA44'%3e %3crect id='Rectangle' x='55.6525' y='76.521875' width='13.913125' height='55.651875'%3e%3c/rect%3e %3crect id='Rectangle' x='-4.4408921e-15' y='76.521875' width='13.913125' height='55.651875'%3e%3c/rect%3e %3ccircle id='Oval' cx='34.7825' cy='97.39125' r='13.913125'%3e%3c/circle%3e %3ccircle id='Oval' cx='34.7825' cy='48.695625' r='6.95625'%3e%3c/circle%3e %3crect id='Rectangle' x='20.87' y='118.26125' width='27.82625' height='13.913125'%3e%3c/rect%3e %3crect id='Rectangle' x='20.87' y='62.60875' width='27.82625' height='13.913125'%3e%3c/rect%3e %3cpolygon id='Path' points='34.7825 0 39.71 15.1625 55.6525 15.1625 42.755625 24.53375 47.679375 39.69625 34.7825 30.325 21.88625 39.69625 26.81 24.53375 13.913125 15.1625 29.855625 15.1625'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1J = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/montenegro%3c/title%3e %3cg id='flags/montenegro' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-montenegro' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23FFDA44' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M320%2c160 C320%2c105.086875 292.331875%2c56.640625 250.179375%2c27.82625 L69.820625%2c27.82625 C27.66875%2c56.640625 0%2c105.086875 0%2c160 C0%2c214.914375 27.66875%2c263.359375 69.820625%2c292.17375 L250.179375%2c292.17375 C292.331875%2c263.359375 320%2c214.914375 320%2c160 Z' id='Path' fill='%23A2001D'%3e%3c/path%3e %3cg id='Group' transform='translate(97.390000%2c 76.521875)' fill='%23FFDA44'%3e %3cpolygon id='Path' points='27.8275 41.73875 97.3925 41.73875 97.3925 13.913125 83.479375 20.869375 62.61 -1.77635684e-14 41.740625 20.869375 27.8275 13.913125'%3e%3c/polygon%3e %3cpath d='M125.21875%2c83.478125 L90.449375%2c83.478125 C91.813125%2c81.119375 92.605625%2c78.39 92.605625%2c75.47 C92.605625%2c66.603125 85.4175%2c59.41625 76.551875%2c59.41625 C70.42625%2c59.41625 65.10625%2c62.84875 62.399375%2c67.8925 C59.6925%2c62.848125 54.3725%2c59.41625 48.246875%2c59.41625 C39.38125%2c59.41625 32.193125%2c66.603125 32.193125%2c75.47 C32.193125%2c78.390625 32.986875%2c81.12 34.349375%2c83.478125 L1.77635684e-14%2c83.478125 C1.77635684e-14%2c94.1175 9.266875%2c102.741875 19.905625%2c102.741875 L19.264375%2c102.741875 C19.264375%2c111.46875 25.06875%2c118.8375 33.026875%2c121.204375 L17.39125%2c136.84125 L32.148125%2c151.598125 L53.08125%2c130.665 C53.90125%2c130.965625 54.749375%2c131.205625 55.62625%2c131.370625 L42.9775%2c159.93 C49.03875%2c162.395 55.663125%2c163.763125 62.61%2c163.763125 C69.55625%2c163.763125 76.180625%2c162.395 82.2425%2c159.93 L69.59375%2c131.370625 C70.47%2c131.20625 71.318125%2c130.965625 72.1375%2c130.665 L93.070625%2c151.598125 L107.826875%2c136.84125 L92.190625%2c121.205 C100.148125%2c118.836875 105.953125%2c111.469375 105.953125%2c102.7425 L105.31125%2c102.7425 C115.95125%2c102.741875 125.21875%2c94.1175 125.21875%2c83.478125 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpolygon id='Path' fill='%236DA544' points='160 170.435 137.39125 180.869375 137.39125 201.739375 160 215.651875 182.60875 201.739375 182.60875 180.869375'%3e%3c/polygon%3e %3crect id='Rectangle' fill='%230052B4' x='137.39125' y='160' width='45.2175' height='27.82625'%3e%3c/rect%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1I = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/montserrat%3c/title%3e %3cg id='flags/montserrat' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-montserrat' fill-rule='nonzero'%3e %3cpath d='M320%2c160.156098 C320%2c248.434888 248.365%2c320 160%2c320 C71.635%2c320 0%2c248.434888 0%2c160.156098 C0%2c160.194185 160%2c0.329678049 160%2c0.312195122 C248.365%2c0.312195122 320%2c71.8773073 320%2c160.156098 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cg id='Group' fill='%23F0F0F0'%3e %3cpath d='M160%2c0.312195122 C159.99%2c0.312195122 159.9825%2c0.312195122 159.973125%2c0.312195122 L160%2c0.312195122 L160%2c0.312195122 Z' id='Path'%3e%3c/path%3e %3cpath d='M159.571875%2c160.156098 L160%2c160.156098 C160%2c160.012488 160%2c159.872624 160%2c159.72839 C159.8575%2c159.871376 159.715%2c160.013737 159.571875%2c160.156098 Z' id='Path'%3e%3c/path%3e %3cpath d='M160.000625%2c83.708878 C160.000625%2c55.5832195 160.000625%2c37.1543415 160.000625%2c0.312195122 L159.973125%2c0.312195122 C71.619375%2c0.327180488 0%2c71.8854244 0%2c160.156098 L83.478125%2c160.156098 L83.478125%2c113.195083 L130.485%2c160.156098 L159.5725%2c160.156098 C159.715%2c160.013737 159.8575%2c159.871376 160.000625%2c159.72839 C160.000625%2c148.959532 160.000625%2c139.35079 160.000625%2c130.671141 L112.9925%2c83.708878 L160.000625%2c83.708878 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(20.869375%2c 21.161210)' fill='%23D80027'%3e %3cpath d='M60.0775%2c4.43655952e-15 C35.053125%2c14.2354732 14.24875%2c35.0189268 4.4408921e-15%2c60.0188878 L4.4408921e-15%2c138.994888 L41.739375%2c138.994888 L41.739375%2c41.6999024 L41.739375%2c41.6986537 L139.130625%2c41.6986537 C139.130625%2c28.547122 139.130625%2c16.0181073 139.130625%2c4.43655952e-15 L60.0775%2c4.43655952e-15 Z' id='Path'%3e%3c/path%3e %3cpath d='M139.130625%2c119.338459 L82.28375%2c62.5482927 L62.60875%2c62.5482927 L62.60875%2c62.5495415 L139.129375%2c138.994888 L139.130625%2c138.994888 C139.130625%2c138.994888 139.130625%2c125.441249 139.130625%2c119.338459 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M180.869375%2c83.708878 L180.869375%2c160.155473 C180.869375%2c197.394107 229.565%2c208.804215 229.565%2c208.804215 C229.565%2c208.804215 278.260625%2c197.394107 278.260625%2c160.155473 L278.260625%2c83.708878 L180.869375%2c83.708878 Z' id='Path' fill='%23338AF3'%3e%3c/path%3e %3cpath d='M180.869375%2c160.155473 C180.869375%2c197.394107 229.565%2c208.804215 229.565%2c208.804215 C229.565%2c208.804215 278.260625%2c197.394107 278.260625%2c160.155473 L180.869375%2c160.155473 L180.869375%2c160.155473 Z' id='Path' fill='%23A2001D'%3e%3c/path%3e %3cpolygon id='Path' fill='black' points='250.435 118.458693 236.52125 118.458693 236.52125 104.558517 222.608125 104.558517 222.608125 118.458693 208.695625 118.458693 208.695625 132.35762 222.608125 132.35762 222.608125 174.055649 236.52125 174.055649 236.52125 132.35762 250.435 132.35762'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1H = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/morocco%3c/title%3e %3cg id='flags/morocco' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-morocco' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23D80027' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M254.555%2c131.30625 L182.32125%2c131.30625 L160%2c62.60875 L137.67875%2c131.30625 L65.445%2c131.30625 L123.883125%2c173.76375 L101.56125%2c242.46375 L160%2c200.005 L218.43875%2c242.46375 L196.116875%2c173.764375 L254.555%2c131.30625 Z M140.23875%2c168.449375 L147.786875%2c145.21875 L172.2125%2c145.21875 L179.76125%2c168.449375 L179.76125%2c168.449375 L179.76125%2c168.45 L160%2c182.806875 L140.239375%2c168.45 L140.23875%2c168.449375 L140.23875%2c168.449375 Z M167.6925%2c131.30625 L152.308125%2c131.30625 L160%2c107.63125 L167.6925%2c131.30625 Z M191.595625%2c159.85125 L186.84125%2c145.219375 L211.734375%2c145.219375 L191.595625%2c159.85125 Z M133.158125%2c145.219375 L128.40375%2c159.85125 L108.264375%2c145.219375 L133.158125%2c145.219375 Z M128.025625%2c206.038125 L135.718125%2c182.36375 L148.165%2c191.40625 L128.025625%2c206.038125 Z M171.835%2c191.406875 L184.281875%2c182.364375 L191.974375%2c206.03875 L171.835%2c191.406875 Z' id='Shape' fill='%23FFDA44'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1G = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/mozambique%3c/title%3e %3cg id='flags/mozambique' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-mozambique' fill-rule='nonzero'%3e %3cellipse id='Oval' fill='%23F0F0F0' cx='160.000156' cy='160' rx='159.999844' ry='160'%3e%3c/ellipse%3e %3cpath d='M86.482103%2c222.60875 L46.8683917%2c273.131875 C75.8208635%2c302.088125 115.816449%2c320 160.000156%2c320 C226.143842%2c320 282.902536%2c279.856875 307.269387%2c222.60875 L86.482103%2c222.60875 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M307.518137%2c97.970625 C283.287536%2c40.41375 226.367591%2c0 160.000156%2c0 C115.816449%2c0 75.8208635%2c17.911875 46.8683917%2c46.868125 L86.9371026%2c97.970625 L307.518137%2c97.970625 L307.518137%2c97.970625 Z' id='Path' fill='%23496E2D'%3e%3c/path%3e %3cpath d='M34.7827785%2c117.68125 L34.7827785%2c201.73875 L314.488755%2c201.73875 C318.077502%2c188.431875 320%2c174.441875 320%2c160 C320%2c145.34875 318.026252%2c131.16125 314.336881%2c117.68125 L34.7827785%2c117.68125 L34.7827785%2c117.68125 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M46.8627667%2c46.8625 C-15.6209222%2c109.34625 -15.6209222%2c210.653125 46.8627667%2c273.1375 C72.6833665%2c247.316875 97.5164673%2c222.48375 160.000156%2c160 L46.8627667%2c46.8625 Z' id='Path' fill='%23A2001D'%3e%3c/path%3e %3cpolygon id='Path' fill='%23FFDA44' points='64.7564993 118.260625 75.1158641 150.145625 108.644581 150.145625 81.5208579 169.853125 91.8795978 201.739375 64.7564993 182.0325 37.6321507 201.739375 47.9933906 169.853125 20.8696671 150.145625 54.3958844 150.145625'%3e%3c/polygon%3e %3crect id='Rectangle' fill='%23F0F0F0' x='34.4421539' y='160' width='60.6399408' height='27.82625'%3e%3c/rect%3e %3cpolygon id='Path' fill='black' points='106.562708 128.099375 96.724593 118.260625 64.7571243 150.228125 32.7896555 118.260625 22.9515401 128.099375 54.9471338 160.038125 22.9515401 192.034375 32.7896555 201.739375 64.7571243 169.829375 96.724593 201.739375 106.562708 192.034375 74.5671147 160.038125'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1F = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/myanmar%3c/title%3e %3cg id='flags/myanmar' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-myanmar' fill-rule='nonzero'%3e %3cpath d='M310.048125%2c215.651875 C316.48%2c198.319375 320%2c179.57125 320%2c160 C320%2c140.42875 316.48%2c121.680625 310.048125%2c104.348125 L160%2c90.435 L9.951875%2c104.348125 C3.520625%2c121.680625 0%2c140.42875 0%2c160 C0%2c179.57125 3.520625%2c198.319375 9.951875%2c215.651875 L160%2c229.565 L310.048125%2c215.651875 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M310.048125%2c104.348125 C287.44125%2c43.42 228.794375%2c0 160%2c0 C91.205625%2c0 32.55875%2c43.42 9.951875%2c104.348125 L310.048125%2c104.348125 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M160%2c320 C228.794375%2c320 287.44125%2c276.58 310.048125%2c215.651875 L9.951875%2c215.651875 C32.55875%2c276.58 91.205625%2c320 160%2c320 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpolygon id='Path' fill='%23F0F0F0' points='269.718125 135.36625 185.90125 135.36625 160 55.651875 134.09875 135.36625 50.281875 135.36625 118.09125 184.6325 92.19 264.348125 160 215.651875 227.81 264.3475 201.909375 184.631875'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1E = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/namibia%3c/title%3e %3cg id='flags/namibia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-namibia' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M46.863125%2c273.1375 C53.575%2c279.849375 60.73625%2c285.835 68.248125%2c291.105 L291.10375%2c68.24875 C285.834375%2c60.736875 279.84875%2c53.575625 273.13625%2c46.86375 C266.424375%2c40.151875 259.263125%2c34.166875 251.75125%2c28.896875 L28.89625%2c251.753125 C34.165625%2c259.26375 40.15125%2c266.425625 46.863125%2c273.1375 Z' id='Path' fill='%23A2001D'%3e%3c/path%3e %3cpath d='M46.863125%2c46.8625 C-3.614375%2c97.34 -13.304375%2c173.1475 17.7725%2c233.36125 L233.36125%2c17.773125 C173.1475%2c-13.30375 97.339375%2c-3.6125 46.863125%2c46.8625 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M273.136875%2c273.1375 C323.613125%2c222.66125 333.303125%2c146.853125 302.2275%2c86.63875 L86.63875%2c302.2275 C146.851875%2c333.304375 222.66%2c323.614375 273.136875%2c273.1375 Z' id='Path' fill='%23496E2D'%3e%3c/path%3e %3cpolygon id='Path' fill='%23FFDA44' points='132.17375 90.435 114.245 98.868125 123.7925 116.231875 104.324375 112.508125 101.856875 132.17375 88.296875 117.709375 74.73625 132.17375 72.27 112.508125 52.80125 116.23125 62.348125 98.8675 44.42 90.435 62.34875 82.00125 52.80125 64.63875 72.269375 68.3625 74.736875 48.695625 88.296875 63.160625 101.8575 48.695625 104.324375 68.3625 123.7925 64.63875 114.24625 82.001875'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1D = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/nato%3c/title%3e %3cg id='flags/nato' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-nato' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%230052B4' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M228.665625%2c171.1625 C229.254375%2c167.526875 229.565%2c163.79875 229.565%2c160 C229.565%2c163.79875 229.254375%2c167.526875 228.665625%2c171.1625 L257.39125%2c160 L228.665625%2c148.838125 L212.8875%2c142.7075 L187.253125%2c132.746875 L177.2925%2c107.1125 C194.08875%2c112.618125 207.380625%2c125.91 212.886875%2c142.706875 L228.665%2c148.8375 C223.896875%2c119.4025 200.59625%2c96.10125 171.161875%2c91.33375 L160%2c62.60875 L148.8375%2c91.334375 C119.4025%2c96.103125 96.1025%2c119.403125 91.334375%2c148.838125 L62.60875%2c160 L91.335%2c171.1625 C96.103125%2c200.5975 119.403125%2c223.8975 148.838125%2c228.665625 L160%2c257.39125 L171.1625%2c228.665625 C200.596875%2c223.8975 223.8975%2c200.596875 228.665625%2c171.1625 Z M176.505%2c143.495625 L160%2c160 L218.978125%2c160 L176.504375%2c176.505 L160%2c160 L160%2c218.97875 L143.495%2c176.504375 L160%2c160 L101.021875%2c160 L143.495%2c143.495625 L160%2c160 L160%2c101.021875 L176.505%2c143.495625 Z M142.706875%2c107.113125 L132.745625%2c132.7475 L107.1125%2c142.708125 C112.618125%2c125.91 125.91%2c112.619375 142.706875%2c107.113125 Z M107.113125%2c177.293125 L132.745625%2c187.25375 L142.706875%2c212.886875 C125.91%2c207.380625 112.619375%2c194.09 107.113125%2c177.293125 Z M177.293125%2c212.886875 L187.25375%2c187.25375 L212.886875%2c177.293125 C207.380625%2c194.09 194.09%2c207.380625 177.293125%2c212.886875 Z' id='Shape' fill='%23F0F0F0'%3e%3c/path%3e %3cg id='Group' transform='translate(101.021875%2c 101.021875)' fill='%230052B4'%3e %3cpolygon id='Path' points='117.95625 58.978125 58.978125 58.978125 75.483125 75.483125'%3e%3c/polygon%3e %3cpolygon id='Path' points='0 58.978125 58.978125 58.978125 42.473125 42.47375'%3e%3c/polygon%3e %3cpolygon id='Path' points='58.978125 117.956875 58.978125 58.978125 42.473125 75.483125'%3e%3c/polygon%3e %3cpolygon id='Path' points='58.978125 58.978125 75.483125 42.47375 58.978125 0'%3e%3c/polygon%3e %3c/g%3e %3cg id='Group' transform='translate(20.869375%2c 20.869375)' fill='%23F0F0F0'%3e %3crect id='Rectangle' x='132.174375' y='-1.33226763e-14' width='13.913125' height='27.82625'%3e%3c/rect%3e %3crect id='Rectangle' x='-1.33226763e-14' y='132.174375' width='27.82625' height='13.913125'%3e%3c/rect%3e %3crect id='Rectangle' x='132.174375' y='250.435' width='13.913125' height='27.82625'%3e%3c/rect%3e %3crect id='Rectangle' x='250.435' y='132.174375' width='27.82625' height='13.913125'%3e%3c/rect%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1C = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/nauru%3c/title%3e %3cg id='flags/nauru' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-nauru' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%230052B4' cx='160' cy='160' r='160'%3e%3c/circle%3e %3ccircle id='Oval' fill='%23FFDA44' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(0.609375%2c 0.000000)' fill='%230052B4'%3e %3cpath d='M159.390625%2c0 C75.713125%2c0 7.051875%2c64.238125 -1.42247325e-14%2c146.086875 L318.781875%2c146.086875 C311.729375%2c64.238125 243.068125%2c0 159.390625%2c0 Z' id='Path'%3e%3c/path%3e %3cpath d='M159.390625%2c320 C243.068125%2c320 311.729375%2c255.761875 318.781875%2c173.913125 L-1.42247325e-14%2c173.913125 C7.051875%2c255.761875 75.713125%2c320 159.390625%2c320 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpolygon id='Path' fill='%23F0F0F0' points='132.174375 215.651875 114.245625 224.085625 123.7925 241.44875 104.324375 237.724375 101.8575 257.39125 88.296875 242.926875 74.736875 257.39125 72.27 237.724375 52.80125 241.448125 62.34875 224.085 44.42 215.651875 62.349375 207.21875 52.80125 189.85625 72.269375 193.58 74.7375 173.913125 88.296875 188.3775 101.858125 173.913125 104.324375 193.58 123.793125 189.85625 114.24625 207.219375'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1B = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/nepal%3c/title%3e %3cg id='flags/nepal' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-nepal' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(0.000000%2c 0.831875)' fill='%230052B4'%3e %3cpolygon id='Path' points='319.060625 176.559375 319.056875 176.554375 319.05625 176.559375'%3e%3c/polygon%3e %3cpath d='M319.056875%2c176.559375 C319.056875%2c176.558125 319.056875%2c176.556875 319.056875%2c176.554375 L143.59125%2c6.9388939e-15 C135.675625%2c0.806875 127.93%2c2.190625 120.398125%2c4.10875 C51.18625%2c21.730625 0%2c159.168125 0%2c159.168125 C0%2c159.168125 223.99875%2c309.065 249.553125%2c291.770625 C254.66625%2c288.310625 259.56875%2c284.5625 264.23625%2c280.55 L160.246875%2c176.559375 L319.056875%2c176.559375 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M278.260625%2c160 L122.653125%2c4.393125 C52.305%2c21.21625 0%2c84.495 0%2c160 C0%2c248.365 71.635%2c320 160%2c320 C193.518125%2c320 224.623125%2c309.68625 250.330625%2c292.069375 L118.260625%2c160 L278.260625%2c160 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cg id='Group' transform='translate(56.525625%2c 55.651875)' fill='%23F0F0F0'%3e %3cpolygon id='Path' points='95.644375 180.59375 76.10375 171.4025 86.509375 152.478125 65.290625 156.5375 62.601875 135.10125 47.8225 150.866875 33.043125 135.10125 30.35375 156.5375 9.135625 152.4775 19.54125 171.4025 0 180.59375 19.54125 189.784375 9.135625 208.709375 30.355 204.650625 33.0425 226.085625 47.8225 210.32 62.601875 226.085625 65.290625 204.650625 86.50875 208.71 76.103125 189.785625'%3e%3c/polygon%3e %3cpolygon id='Path' points='82.605 33.0875 68.3925 26.403125 75.960625 12.63875 60.5275 15.59125 58.571875 1.77635684e-14 47.8225 11.466875 37.073125 1.77635684e-14 35.116875 15.59125 19.68375 12.63875 27.2525 26.403125 13.039375 33.0875 47.8225 40.045'%3e%3c/polygon%3e %3cpath d='M89.56125%2c33.0875 C89.56125%2c56.139375 70.87375%2c74.826875 47.821875%2c74.826875 C24.77%2c74.826875 6.0825%2c56.139375 6.0825%2c33.0875' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1A = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/netherlands%3c/title%3e %3cg id='flags/netherlands' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-netherlands' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M160%2c0 C91.205625%2c0 32.55875%2c43.42 9.951875%2c104.348125 L310.04875%2c104.348125 C287.44125%2c43.42 228.794375%2c0 160%2c0 Z' id='Path' fill='%23A2001D'%3e%3c/path%3e %3cpath d='M160%2c320 C228.794375%2c320 287.44125%2c276.58 310.048125%2c215.651875 L9.951875%2c215.651875 C32.55875%2c276.58 91.205625%2c320 160%2c320 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1z = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/new-zealand%3c/title%3e %3cg id='flags/new-zealand' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-new-zealand' fill-rule='nonzero'%3e %3cpath d='M320%2c160.156098 C320%2c248.434888 248.365%2c320 160%2c320 C71.635%2c320 0%2c248.434888 0%2c160.156098 C0%2c160.194185 160%2c0.329678049 160%2c0.312195122 C248.365%2c0.312195122 320%2c71.8773073 320%2c160.156098 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cg id='Group' fill='%23F0F0F0'%3e %3cpath d='M160%2c0.312195122 C159.99125%2c0.312195122 159.981875%2c0.312195122 159.973125%2c0.312195122 L160%2c0.312195122 L160%2c0.312195122 Z' id='Path'%3e%3c/path%3e %3cpath d='M159.571875%2c160.156098 L160%2c160.156098 C160%2c160.012488 160%2c159.872624 160%2c159.72839 C159.8575%2c159.871376 159.715%2c160.013737 159.571875%2c160.156098 Z' id='Path'%3e%3c/path%3e %3cpath d='M160.000625%2c83.708878 C160.000625%2c55.5832195 160.000625%2c37.1543415 160.000625%2c0.312195122 L159.973125%2c0.312195122 C71.62%2c0.327180488 0%2c71.8854244 0%2c160.156098 L83.478125%2c160.156098 L83.478125%2c113.195083 L130.485625%2c160.156098 L159.5725%2c160.156098 C159.715%2c160.013737 159.858125%2c159.871376 160.000625%2c159.72839 C160.000625%2c148.959532 160.000625%2c139.35079 160.000625%2c130.671141 L112.9925%2c83.708878 L160.000625%2c83.708878 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(20.869375%2c 21.161210)' fill='%23D80027'%3e %3cpath d='M60.0775%2c-1.33096786e-14 C35.053125%2c14.2354732 14.249375%2c35.0189268 4.4408921e-15%2c60.0188878 L4.4408921e-15%2c138.994888 L41.739375%2c138.994888 L41.739375%2c41.6999024 L41.739375%2c41.6986537 L139.130625%2c41.6986537 C139.130625%2c28.547122 139.130625%2c16.0181073 139.130625%2c-1.33096786e-14 L60.0775%2c-1.33096786e-14 Z' id='Path'%3e%3c/path%3e %3cpath d='M139.130625%2c119.338459 L82.285%2c62.5482927 C82.285%2c62.5482927 62.609375%2c62.5495415 62.609375%2c62.5482927 L62.609375%2c62.5495415 L139.130625%2c138.994888 L139.130625%2c138.994888 C139.130625%2c138.994888 139.130625%2c125.441249 139.130625%2c119.338459 Z' id='Path'%3e%3c/path%3e %3cpolygon id='Path' points='256.211875 97.7595317 259.665 108.377912 270.840625 108.377912 261.799375 114.940254 265.253125 125.55801 256.211875 118.996293 247.17 125.55801 250.62375 114.940254 241.581875 108.377912 252.7575 108.377912'%3e%3c/polygon%3e %3cpolygon id='Path' points='216.2625 174.206127 221.443125 190.134322 238.20625 190.134322 224.64375 199.97721 229.825 215.90478 216.2625 206.061268 202.7 215.90478 207.88125 199.97721 194.31875 190.134322 211.081875 190.134322'%3e%3c/polygon%3e %3cpolygon id='Path' points='217.77125 49.1114146 222.08875 62.3853268 236.058125 62.3853268 224.755625 70.5866927 229.073125 83.8599805 217.77125 75.6561171 206.47 83.8599805 210.786875 70.5866927 199.485625 62.3853268 213.454375 62.3853268'%3e%3c/polygon%3e %3cpolygon id='Path' points='179.331875 97.2962341 184.511875 113.224429 201.275625 113.224429 187.713125 123.067317 192.894375 138.994888 179.331875 129.151376 165.769375 138.994888 170.950625 123.067317 157.388125 113.224429 174.15125 113.224429'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1y = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/nicaragua%3c/title%3e %3cg id='flags/nicaragua' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-nicaragua' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(15.876250%2c 0.000000)' fill='%23338AF3'%3e %3cpath d='M144.12375%2c0 C80.69%2c0 25.88%2c36.915625 8.8817842e-15%2c90.435 L288.246875%2c90.435 C262.3675%2c36.915625 207.556875%2c0 144.12375%2c0 Z' id='Path'%3e%3c/path%3e %3cpath d='M144.12375%2c320 C207.556875%2c320 262.3675%2c283.084375 288.2475%2c229.565 L8.8817842e-15%2c229.565 C25.88%2c283.084375 80.69%2c320 144.12375%2c320 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M160%2c111.304375 C133.10625%2c111.304375 111.304375%2c133.10625 111.304375%2c160 C111.304375%2c186.89375 133.10625%2c208.695625 160%2c208.695625 C186.89375%2c208.695625 208.695625%2c186.89375 208.695625%2c160 C208.695625%2c133.10625 186.89375%2c111.304375 160%2c111.304375 Z M160%2c187.82625 C144.6325%2c187.82625 132.17375%2c175.36875 132.17375%2c160 C132.17375%2c144.63125 144.631875%2c132.17375 160%2c132.17375 C175.368125%2c132.17375 187.82625%2c144.63125 187.82625%2c160 C187.82625%2c175.36875 175.3675%2c187.82625 160%2c187.82625 Z' id='Shape' fill='%23FFDA44'%3e%3c/path%3e %3cpolygon id='Path' fill='%230052B4' points='184.09875 166.95625 160 160 135.90125 166.95625 127.86875 180.869375 192.130625 180.869375'%3e%3c/polygon%3e %3cpolygon id='Path' fill='%23338AF3' points='160 125.2175 143.934375 153.04375 160 160 176.065625 153.04375'%3e%3c/polygon%3e %3cpolygon id='Path' fill='%236DA544' points='135.90125 166.95625 184.09875 166.95625 176.065625 153.04375 143.934375 153.04375'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1x = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/niger%3c/title%3e %3cg id='flags/niger' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-niger' fill-rule='nonzero'%3e %3cpath d='M15.87625%2c90.435 C5.705%2c111.47 0%2c135.068125 0%2c160 C0%2c184.931875 5.705%2c208.53 15.87625%2c229.565 L160%2c243.478125 L304.12375%2c229.565 C314.295%2c208.53 320%2c184.931875 320%2c160 C320%2c135.068125 314.295%2c111.47 304.12375%2c90.435 L160%2c76.521875 L15.87625%2c90.435 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cpath d='M15.881875%2c229.565 C41.760625%2c283.084375 96.56625%2c320 160%2c320 C223.43375%2c320 278.239375%2c283.084375 304.118125%2c229.565 L15.881875%2c229.565 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cg id='Group' transform='translate(15.881875%2c 0.000000)' fill='%23FF9811'%3e %3cpath d='M0%2c90.435 L288.23625%2c90.435 C262.3575%2c36.915625 207.55125%2c0 144.118125%2c0 C80.685%2c0 25.87875%2c36.915625 0%2c90.435 Z' id='Path'%3e%3c/path%3e %3ccircle id='Oval' cx='144.118125' cy='160' r='55.651875'%3e%3c/circle%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1w = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/nigeria%3c/title%3e %3cg id='flags/nigeria' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-nigeria' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(0.000000%2c 9.952500)' fill='%236DA544'%3e %3cpath d='M0%2c150.0475 C0%2c218.8425 43.42%2c277.48875 104.348125%2c300.09625 L104.348125%2c1.33226763e-14 C43.42%2c22.60625 0%2c81.25375 0%2c150.0475 Z' id='Path'%3e%3c/path%3e %3cpath d='M320%2c150.0475 C320%2c81.25375 276.58%2c22.60625 215.651875%2c1.77635684e-14 L215.651875%2c300.096875 C276.58%2c277.48875 320%2c218.8425 320%2c150.0475 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1v = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/niue%3c/title%3e %3cg id='flags/niue' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-niue' fill-rule='nonzero'%3e %3cpath d='M160%2c0.312195122 C159.99%2c0.312195122 159.9825%2c0.312195122 159.973125%2c0.312195122 L160%2c0.312195122 L160%2c0.312195122 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cpath d='M320%2c160.156098 C320%2c248.434888 248.365%2c320 160%2c320 C71.635%2c320 0%2c248.434888 0%2c160.156098 C0%2c160.194185 160%2c0.329678049 160%2c0.312195122 C248.365%2c0.312195122 320%2c71.8773073 320%2c160.156098 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cg id='Group' transform='translate(76.521875%2c 76.759415)' fill='%230052B4'%3e %3cpolygon id='Path' points='83.478125 1.77462381e-14 83.478125 53.9117268 27.82625 1.77462381e-14'%3e%3c/polygon%3e %3cpolygon id='Path' points='6.95625 83.3966829 53.963125 83.3966829 6.95625 20.8490146 0 69.4971317'%3e%3c/polygon%3e %3c/g%3e %3cg id='Group' transform='translate(0.000000%2c 0.312195)' fill='%23F0F0F0'%3e %3cpath d='M159.571875%2c159.843902 L160%2c159.843902 C160%2c159.700293 160%2c159.560429 160%2c159.416195 C159.8575%2c159.55918 159.715%2c159.701541 159.571875%2c159.843902 Z' id='Path'%3e%3c/path%3e %3cpath d='M160.000625%2c83.3966829 C160.000625%2c55.2710244 160.000625%2c36.8421463 160.000625%2c0 L159.973125%2c0 C71.619375%2c0.0149853659 0%2c71.5732293 0%2c159.843902 L83.478125%2c159.843902 L83.478125%2c112.882888 L130.485%2c159.843902 L159.5725%2c159.843902 C159.715%2c159.701541 159.8575%2c159.55918 160.000625%2c159.416195 C160.000625%2c148.647337 160.000625%2c139.038595 160.000625%2c130.358946 L112.9925%2c83.3966829 L160.000625%2c83.3966829 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(20.869375%2c 21.161210)' fill='%23D80027'%3e %3cpath d='M139.130625%2c119.338459 L82.28375%2c62.5482927 L62.60875%2c62.5482927 L62.60875%2c62.5495415 L139.129375%2c138.994888 L139.130625%2c138.994888 C139.130625%2c138.994888 139.130625%2c125.441249 139.130625%2c119.338459 Z' id='Path'%3e%3c/path%3e %3cpath d='M60.0775%2c4.43655952e-15 C53.909375%2c3.50907317 48%2c7.41962927 42.38%2c11.6885854 L48.945%2c11.6885854 L31.59375%2c24.2850341 L38.22%2c44.6632585 L20.86875%2c32.0693073 L19.0225%2c33.4098732 C11.818125%2c41.5831415 5.430625%2c50.4919415 4.4408921e-15%2c60.0188878 L4.4408921e-15%2c138.994888 L41.739375%2c138.994888 L41.739375%2c41.6999024 L41.739375%2c41.6986537 L139.130625%2c41.6986537 C139.130625%2c28.547122 139.130625%2c16.0181073 139.130625%2c4.43655952e-15 L60.0775%2c4.43655952e-15 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M68.35%2c29.1290537 C66.624375%2c30.336 64.923125%2c31.5766634 63.2475%2c32.8497951 L52.463125%2c45.4462439 L41.738125%2c53.2298927 L39.87625%2c54.5810732 C35.9475%2c59.0392195 32.263125%2c63.7171512 28.844375%2c68.5955122 C32.74125%2c70.4849171 37.115625%2c71.5470049 41.738125%2c71.5470049 C58.066875%2c71.5470049 71.3031261%2c58.3236683 71.3031261%2c42.0108488 C71.304375%2c37.3916098 70.241875%2c33.0227512 68.35%2c29.1290537 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cg id='Group' transform='translate(27.110000%2c 28.111298)' fill='%23FFDA44'%3e %3cpath d='M12.766875%2c26.4697756 L14.62875%2c25.1185951 L31.98%2c37.7131707 L25.353125%2c17.3349463 L42.703125%2c4.73849756 L36.136875%2c4.73849756 C27.640625%2c11.1940683 19.81125%2c18.4769561 12.766875%2c26.4697756 Z' id='Path'%3e%3c/path%3e %3cpolygon id='Path' points='83.47875 4.43655952e-15 86.9325 10.6177561 98.1075 10.6177561 89.066875 17.180722 92.51875 27.798478 83.47875 21.2361366 74.438125 27.798478 77.889375 17.180722 68.84875 10.6177561 80.024375 10.6177561'%3e%3c/polygon%3e %3cpolygon id='Path' points='14.629375 69.4971317 18.083125 80.1148878 29.258125 80.1148878 20.218125 86.678478 23.67 97.2962341 14.629375 90.7332683 5.588125 97.2962341 9.04 86.678478 -4.4408921e-15 80.1148878 11.175 80.1148878'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1u = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/norfolk-island%3c/title%3e %3cg id='flags/norfolk-island' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-norfolk-island' fill-rule='nonzero'%3e %3cpath d='M229.565%2c15.87625 C208.53%2c5.705 184.931875%2c0 160%2c0 C135.068125%2c0 111.47%2c5.705 90.435%2c15.87625 L76.521875%2c160 L90.435%2c304.12375 C111.47%2c314.295 135.068125%2c320 160%2c320 C184.931875%2c320 208.53%2c314.295 229.565%2c304.12375 L243.478125%2c160 L229.565%2c15.87625 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cg id='Group' transform='translate(0.000000%2c 15.881875)' fill='%236DA544'%3e %3cpath d='M90.435%2c0 C36.915625%2c25.87875 0%2c80.684375 0%2c144.118125 C0%2c207.551875 36.915625%2c262.3575 90.435%2c288.23625 L90.435%2c0 Z' id='Path'%3e%3c/path%3e %3cpath d='M229.565%2c0 L229.565%2c288.23625 C283.084375%2c262.3575 320%2c207.55125 320%2c144.118125 C320%2c80.685 283.084375%2c25.87875 229.565%2c0 Z' id='Path'%3e%3c/path%3e %3cpolygon id='Path' points='201.739375 192.81375 160 60.64 118.260625 192.81375 149.565 192.81375 149.565 227.59625 170.435 227.59625 170.435 192.81375'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1t = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/north-korea%3c/title%3e %3cg id='flags/north-korea' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-north-korea' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(38.711875%2c 0.000000)' fill='%230052B4'%3e %3cpath d='M121.288125%2c0 C72.79375%2c0 29.341875%2c21.5775 4.4408921e-15%2c55.651875 L242.575625%2c55.651875 C213.234375%2c21.5775 169.7825%2c0 121.288125%2c0 Z' id='Path'%3e%3c/path%3e %3cpath d='M242.57625%2c264.348125 L4.4408921e-15%2c264.348125 C29.341875%2c298.4225 72.79375%2c320 121.288125%2c320 C169.7825%2c320 213.234375%2c298.4225 242.57625%2c264.348125 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M296.51625%2c76.521875 L23.48375%2c76.521875 C8.590625%2c100.825 0%2c129.408125 0%2c160 C0%2c190.591875 8.590625%2c219.175625 23.48375%2c243.478125 L296.51625%2c243.478125 C311.409375%2c219.175625 320%2c190.591875 320%2c160 C320%2c129.408125 311.409375%2c100.825 296.51625%2c76.521875 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='98.435' cy='160' r='61.565'%3e%3c/circle%3e %3cpolygon id='Path' fill='%23D80027' points='98.435 98.435 112.248125 140.948125 157.021875 140.948125 120.78625 167.224375 134.7075 209.864375 98.435 183.463125 62.2175 209.815 76.08375 167.224375 39.880625 140.948125 84.62125 140.948125'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1s = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/northen-cyprus%3c/title%3e %3cg id='flags/northen-cyprus' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-northen-cyprus' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(23.483125%2c 55.651875)' fill='%23D80027'%3e %3cpath d='M15.22875%2c0 C9.614375%2c6.520625 4.5175%2c13.4975 -4.4408921e-15%2c20.869375 L273.0325%2c20.869375 C268.515%2c13.4975 263.41875%2c6.52 257.80375%2c0 L15.22875%2c0 Z' id='Path'%3e%3c/path%3e %3cpath d='M15.22875%2c208.69625 L257.804375%2c208.69625 C263.41875%2c202.175625 268.515625%2c195.19875 273.033125%2c187.826875 L0.000625%2c187.826875 C4.5175%2c195.198125 9.614375%2c202.175625 15.22875%2c208.69625 Z' id='Path'%3e%3c/path%3e %3cpolygon id='Path' points='116.041875 75.089375 129.169375 93.18 150.43 86.28625 137.281875 104.36125 150.408125 122.45125 129.155 115.53125 116.006875 133.60625 116.02 111.255625 94.766875 104.335625 116.028125 97.441875'%3e%3c/polygon%3e %3cpath d='M80.21375%2c149.565625 C55.24125%2c149.565625 34.99625%2c129.320625 34.99625%2c104.348125 C34.99625%2c79.375625 55.24125%2c59.130625 80.21375%2c59.130625 C88%2c59.130625 95.326875%2c61.099375 101.723125%2c64.565625 C91.68875%2c54.7525 77.965625%2c48.695625 62.8225%2c48.695625 C32.08625%2c48.695625 7.170625%2c73.611875 7.170625%2c104.3475 C7.170625%2c135.083125 32.086875%2c159.999375 62.8225%2c159.999375 C77.965625%2c159.999375 91.68875%2c153.9425 101.723125%2c144.129375 C95.326875%2c147.596875 88.000625%2c149.565625 80.21375%2c149.565625 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1r = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/northern-marianas-islands%3c/title%3e %3cg id='flags/northern-marianas-islands' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-northern-marianas-islands' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23338AF3' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M154.95625%2c260.74375 C150.643125%2c260.535 147.074375%2c257.731875 145.67625%2c253.92625 L145.67625%2c253.92625 C143.206875%2c257.146875 138.963125%2c258.768125 134.7825%2c257.69 L134.7825%2c257.69 C130.594375%2c256.611875 127.66625%2c253.1475 127.060625%2c249.12625 L127.060625%2c249.12625 C123.985625%2c251.783125 119.505625%2c252.50625 115.63125%2c250.608125 L115.63125%2c250.608125 C111.749375%2c248.701875 109.579375%2c244.715 109.801875%2c240.659375 L109.801875%2c240.659375 C106.26125%2c242.64875 101.725625%2c242.454375 98.31%2c239.810625 L98.31%2c239.810625 C94.90125%2c237.166875 93.5725%2c232.833125 94.601875%2c228.9025 L94.601875%2c228.9025 C90.73375%2c230.140625 86.3375%2c229.041875 83.52%2c225.765 L83.52%2c225.765 C80.7025%2c222.495625 80.270625%2c217.980625 82.06625%2c214.3425 L82.06625%2c214.3425 C78.03125%2c214.773125 73.94125%2c212.811875 71.84%2c209.041875 L71.84%2c209.041875 C69.731875%2c205.27125 70.219375%2c200.756875 72.71625%2c197.54875 L72.71625%2c197.54875 C68.674375%2c197.159375 65.056875%2c194.41125 63.763125%2c190.293125 L63.763125%2c190.293125 C62.4625%2c186.175 63.85375%2c181.848125 66.949375%2c179.21125 L66.949375%2c179.21125 C63.0675%2c178.01375 60.09%2c174.59125 59.651875%2c170.3 L59.651875%2c170.3 C59.21375%2c166.008125 61.44%2c162.06375 64.994375%2c160.101875 L64.994375%2c160.101875 C61.439375%2c158.15375 59.199375%2c154.21 59.62375%2c149.924375 L59.62375%2c149.924375 C59.62375%2c149.924375 59.62375%2c149.924375 59.630625%2c149.924375 L59.630625%2c149.924375 C60.055%2c145.625 63.0325%2c142.19625 66.906875%2c140.985 L66.906875%2c140.985 C63.81125%2c138.355625 62.40625%2c134.035625 63.693125%2c129.916875 L63.693125%2c129.916875 C64.98%2c125.791875 68.59%2c123.036875 72.6325%2c122.633125 L72.6325%2c122.633125 C70.135%2c119.433125 69.634375%2c114.9175 71.728125%2c111.14125 L71.728125%2c111.14125 C73.821875%2c107.370625 77.9125%2c105.401875 81.954375%2c105.82625 L81.954375%2c105.82625 C80.145625%2c102.188125 80.57%2c97.673125 83.380625%2c94.39 L83.380625%2c94.39 C86.184375%2c91.11375 90.580625%2c90.0075 94.455625%2c91.231875 L94.455625%2c91.231875 C93.411875%2c87.308125 94.73375%2c82.9675 98.1425%2c80.3175 L98.1425%2c80.3175 C101.544375%2c77.66625 106.08%2c77.464375 109.620625%2c79.44 L109.620625%2c79.44 C109.39125%2c75.385 111.554375%2c71.398125 115.429375%2c69.485 L115.429375%2c69.485 C119.2975%2c67.57875 123.784375%2c68.28875 126.865625%2c70.945625 L126.865625%2c70.945625 C127.456875%2c66.925625 130.385625%2c63.4475 134.56625%2c62.36125 L134.56625%2c62.36125 L134.56625%2c62.36125 L134.56625%2c62.36125 C138.74%2c61.27625 142.98375%2c62.883125 145.46%2c66.096875 L145.46%2c66.096875 C146.858125%2c62.291875 150.42%2c59.48125 154.733125%2c59.265625 L154.733125%2c59.265625 C159.039375%2c59.04375 162.865%2c61.46375 164.64625%2c65.103125 L164.64625%2c65.103125 C166.775%2c61.6525 170.82375%2c59.6075 175.088125%2c60.254375 L175.088125%2c60.254375 C179.359375%2c60.894375 182.63625%2c64.038125 183.651875%2c67.969375 L183.651875%2c67.969375 C186.434375%2c65.005 190.816875%2c63.83 194.865625%2c65.318125 L194.865625%2c65.318125 C198.92125%2c66.81375 201.495%2c70.55625 201.69%2c74.61875 L201.69%2c74.61875 C205.008125%2c72.281875 209.54375%2c72.01 213.21%2c74.291875 L213.21%2c74.291875 C216.87625%2c76.566875 218.63625%2c80.7475 218.01%2c84.76125 L218.01%2c84.76125 C221.731875%2c83.140625 226.225625%2c83.7875 229.35625%2c86.750625 L229.35625%2c86.750625 C232.486875%2c89.72125 233.376875%2c94.16625 231.958125%2c97.97125 L231.958125%2c97.97125 C235.93%2c97.129375 240.201875%2c98.66 242.678125%2c102.200625 L242.678125%2c102.200625 L242.678125%2c102.200625 L242.678125%2c102.200625 C245.154375%2c105.734375 245.13375%2c110.27 242.984375%2c113.71375 L242.984375%2c113.71375 C247.04%2c113.685625 250.915%2c116.05125 252.633125%2c120.009375 L252.633125%2c120.009375 C254.344375%2c123.974375 253.405%2c128.42 250.601875%2c131.3625 L250.601875%2c131.3625 C254.588125%2c132.155625 257.90625%2c135.25125 258.7825%2c139.480625 L258.7825%2c139.480625 C259.651875%2c143.71 257.83625%2c147.863125 254.504375%2c150.18 L254.504375%2c150.18 C258.233125%2c151.76 260.8625%2c155.453125 260.869375%2c159.76625 L260.869375%2c159.76625 C260.869375%2c159.814375 260.869375%2c159.856875 260.869375%2c159.905625 L260.869375%2c159.905625 C260.869375%2c159.93375 260.869375%2c159.968125 260.869375%2c159.99625 L260.869375%2c159.99625 C260.869375%2c164.30875 258.25375%2c168.01 254.525%2c169.603125 L254.525%2c169.603125 C257.864375%2c171.90625 259.69375%2c176.05875 258.824375%2c180.288125 L258.824375%2c180.288125 C257.961875%2c184.5175 254.650625%2c187.620625 250.664375%2c188.4275 L250.664375%2c188.4275 C253.475%2c191.363125 254.428125%2c195.80125 252.72375%2c199.77375 L252.72375%2c199.77375 L252.72375%2c199.77375 L252.72375%2c199.77375 C251.019375%2c203.73875 247.144375%2c206.11125 243.081875%2c206.09 L243.081875%2c206.09 C245.238125%2c209.53375 245.273125%2c214.069375 242.80375%2c217.61 L242.80375%2c217.61 C240.334375%2c221.151875 236.07%2c222.695625 232.0975%2c221.860625 L232.0975%2c221.860625 C233.52375%2c225.65875 232.64%2c230.11125 229.516875%2c233.08875 L229.516875%2c233.08875 L229.516875%2c233.08875 L229.516875%2c233.08875 C226.38625%2c236.06 221.899375%2c236.713125 218.1775%2c235.10625 L218.1775%2c235.10625 C218.810625%2c239.113125 217.0575%2c243.30125 213.398125%2c245.59 L213.398125%2c245.59 C209.73875%2c247.87875 205.203125%2c247.61375 201.878125%2c245.28375 L201.878125%2c245.28375 C201.69%2c249.34625 199.13%2c253.09625 195.081875%2c254.59875 L195.081875%2c254.59875 C195.081875%2c254.59875 195.081875%2c254.59875 195.075%2c254.59875 L195.075%2c254.59875 C191.02625%2c256.094375 186.64375%2c254.92625 183.854375%2c251.97 L183.854375%2c251.97 C182.8525%2c255.9075 179.583125%2c259.058125 175.311875%2c259.7125 L175.311875%2c259.7125 L175.311875%2c259.7125 L175.311875%2c259.7125 C171.0475%2c260.359375 166.991875%2c258.328125 164.85625%2c254.8775 L164.85625%2c254.8775 C163.15875%2c258.376875 159.569375%2c260.756148 155.47875%2c260.756148 L155.47875%2c260.756148 C155.304375%2c260.756148 155.130625%2c260.75125 154.95625%2c260.74375 Z' id='Path' fill='%23F3F3F3'%3e%3c/path%3e %3ccircle id='Oval' fill='%23338AF3' cx='160' cy='160' r='69.565'%3e%3c/circle%3e %3cpath d='M175.226875%2c136.386875 C178.644375%2c133.851875 180.869375%2c129.8 180.869375%2c125.2175 L180.869375%2c118.26125 C180.869375%2c110.576875 174.640625%2c104.348125 166.95625%2c104.348125 L153.04375%2c104.348125 C145.359375%2c104.348125 139.130625%2c110.576875 139.130625%2c118.26125 L139.130625%2c125.2175 C139.130625%2c129.8 141.355625%2c133.851875 144.773125%2c136.386875 L132.174375%2c264.3475 C132.174375%2c264.3475 139.130625%2c271.305 160.000625%2c271.305 C180.870625%2c271.305 187.826875%2c264.3475 187.826875%2c264.3475 L175.226875%2c136.386875 Z' id='Path' fill='%23BDBCC1'%3e%3c/path%3e %3cpolygon id='Path' fill='%23F0F0F0' points='159.999375 104.348125 172.085625 141.546875 211.20125 141.546875 179.5575 164.539375 191.643125 201.739375 159.999375 178.74875 128.354375 201.739375 140.4425 164.539375 108.798125 141.546875 147.9125 141.546875'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1q = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/norway%3c/title%3e %3cg id='flags/norway' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-norway' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(5.511875%2c 0.000000)' fill='%23D80027'%3e %3cpath d='M7.77156117e-15%2c201.739375 C9.2575%2c236.08875 29.660625%2c265.86 57.096875%2c286.940625 L57.096875%2c201.739375 L7.77156117e-15%2c201.739375 Z' id='Path'%3e%3c/path%3e %3cpath d='M140.575%2c319.39125 C145.16125%2c319.78625 149.799375%2c320 154.488125%2c320 C228.4125%2c320 290.61625%2c269.861875 308.97625%2c201.739375 L140.575%2c201.739375 L140.575%2c319.39125 Z' id='Path'%3e%3c/path%3e %3cpath d='M308.97625%2c118.260625 C290.61625%2c50.138125 228.4125%2c0 154.488125%2c0 C149.799375%2c0 145.16125%2c0.21375 140.575%2c0.60875 L140.575%2c118.260625 L308.97625%2c118.260625 Z' id='Path'%3e%3c/path%3e %3cpath d='M57.096875%2c33.059375 C29.660625%2c54.140625 9.2575%2c83.91125 8.8817842e-15%2c118.260625 L57.096875%2c118.260625 L57.096875%2c33.059375 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M318.645625%2c139.130625 L125.218125%2c139.130625 L125.2175%2c139.130625 L125.2175%2c3.803125 C110.43125%2c7.081875 96.413125%2c12.39625 83.478125%2c19.454375 L83.478125%2c139.129375 L83.478125%2c139.13 L1.354375%2c139.13 C0.46375%2c145.961875 0%2c152.926875 0%2c160 C0%2c167.073125 0.46375%2c174.038125 1.354375%2c180.869375 L83.4775%2c180.869375 L83.478125%2c180.869375 L83.478125%2c300.545 C96.413125%2c307.6025 110.43125%2c312.918125 125.2175%2c316.19625 L125.2175%2c180.87125 L125.2175%2c180.87 L318.645625%2c180.87 C319.535%2c174.038125 320%2c167.073125 320%2c160 C320%2c152.926875 319.535%2c145.961875 318.645625%2c139.130625 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1p = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/oman%3c/title%3e %3cg id='flags/oman' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-oman' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(0.000000%2c 19.454375)' fill='%23D80027'%3e %3cpath d='M0%2c140.545625 C0%2c201.1925 33.74375%2c253.955 83.478125%2c281.09125 L83.478125%2c-6.66133815e-15 C33.74375%2c27.13625 0%2c79.89875 0%2c140.545625 Z' id='Path'%3e%3c/path%3e %3cpath d='M310.04875%2c196.1975 C316.48%2c178.864375 320%2c160.116875 320%2c140.545625 C320%2c120.974375 316.48%2c102.22625 310.04875%2c84.89375 L9.9525%2c84.89375 C3.520625%2c102.22625 0%2c120.974375 0%2c140.545625 C0%2c160.116875 3.520625%2c178.864375 9.9525%2c196.1975 L160%2c210.110625 L310.04875%2c196.1975 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M160%2c320 C228.795%2c320 287.44125%2c276.58 310.04875%2c215.651875 L9.9525%2c215.651875 C32.55875%2c276.58 91.20625%2c320 160%2c320 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M0%2c160 C0%2c233.924375 50.138125%2c296.128125 118.260625%2c314.488125 L118.260625%2c5.511875 C50.138125%2c23.871875 0%2c86.075625 0%2c160 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpolygon id='Path' fill='%23F0F0F0' points='97.885625 70.40875 83.12875 55.651875 73.29125 65.490625 63.45375 55.651875 48.696875 70.40875 58.535 80.246875 48.695625 90.085625 63.4525 104.8425 73.290625 95.00375 83.12875 104.8425 97.885625 90.085625 88.0475 80.246875'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1o = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/orkney-islands%3c/title%3e %3cg id='flags/orkney-islands' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-orkney-islands' fill-rule='nonzero'%3e %3cpath d='M314.488125%2c201.739375 C318.075%2c188.430625 320%2c174.441875 320%2c160 C320%2c145.558125 318.075%2c131.569375 314.488125%2c118.260625 L146.086875%2c0.60875 C114.82375%2c3.3025 86.134375%2c14.98375 62.60875%2c33.059375 L5.511875%2c118.260625 C1.925%2c131.569375 0%2c145.558125 0%2c160 C0%2c174.3575 1.901875%2c188.269375 5.44875%2c201.508125 L62.608125%2c286.940625 C86.13375%2c305.01625 114.823125%2c316.698125 146.08625%2c319.39125 L314.488125%2c201.739375 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cg id='Group' transform='translate(5.511875%2c 0.000000)' fill='%23D80027'%3e %3cpath d='M7.77156117e-15%2c201.739375 C9.2575%2c236.08875 29.66125%2c265.86 57.096875%2c286.940625 L57.096875%2c201.739375 L7.77156117e-15%2c201.739375 Z' id='Path'%3e%3c/path%3e %3cpath d='M140.575%2c319.39125 C145.16125%2c319.78625 149.799375%2c320 154.488125%2c320 C228.4125%2c320 290.61625%2c269.861875 308.97625%2c201.739375 L140.575%2c201.739375 L140.575%2c319.39125 Z' id='Path'%3e%3c/path%3e %3cpath d='M308.97625%2c118.260625 C290.61625%2c50.138125 228.4125%2c0 154.488125%2c0 C149.799375%2c0 145.16125%2c0.21375 140.575%2c0.60875 L140.575%2c118.260625 L308.97625%2c118.260625 Z' id='Path'%3e%3c/path%3e %3cpath d='M57.096875%2c33.059375 C29.66125%2c54.140625 9.2575%2c83.91125 8.8817842e-15%2c118.260625 L57.096875%2c118.260625 L57.096875%2c33.059375 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M318.645625%2c139.130625 L125.218125%2c139.130625 L125.2175%2c139.130625 L125.2175%2c3.803125 C110.43125%2c7.081875 96.413125%2c12.39625 83.478125%2c19.454375 L83.478125%2c139.13 L83.478125%2c139.13 L1.354375%2c139.13 C0.465%2c145.961875 0%2c152.926875 0%2c160 C0%2c167.073125 0.465%2c174.038125 1.354375%2c180.869375 L83.4775%2c180.869375 L83.478125%2c180.869375 L83.478125%2c300.545 C96.413125%2c307.6025 110.43125%2c312.918125 125.2175%2c316.19625 L125.2175%2c180.87125 L125.2175%2c180.87 L318.645625%2c180.87 C319.535%2c174.038125 320%2c167.073125 320%2c160 C320%2c152.926875 319.535%2c145.961875 318.645625%2c139.130625 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1n = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/ossetia%3c/title%3e %3cg id='flags/ossetia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-ossetia' fill-rule='nonzero'%3e %3cpath d='M310.048125%2c215.651875 C316.48%2c198.31875 320%2c179.57125 320%2c160 C320%2c140.42875 316.48%2c121.68125 310.048125%2c104.348125 L160%2c90.435 L9.951875%2c104.348125 C3.520625%2c121.68125 0%2c140.42875 0%2c160 C0%2c179.57125 3.520625%2c198.31875 9.951875%2c215.651875 L160%2c229.565 L310.048125%2c215.651875 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M160%2c320 C228.79375%2c320 287.44125%2c276.58 310.0475%2c215.651875 L9.95125%2c215.651875 C32.55875%2c276.58 91.205%2c320 160%2c320 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M160%2c0 C91.205%2c0 32.55875%2c43.42 9.95125%2c104.348125 L310.048125%2c104.348125 C287.44125%2c43.42 228.79375%2c0 160%2c0 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1m = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/pakistan%3c/title%3e %3cg id='flags/pakistan' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-pakistan' fill-rule='nonzero'%3e %3cg id='Group' fill='%23F0F0F0'%3e %3ccircle id='Oval' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M0%2c160 C0%2c220.646875 33.743125%2c273.40875 83.478125%2c300.545625 L83.478125%2c19.454375 C33.743125%2c46.59125 0%2c99.353125 0%2c160 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M160%2c0 C132.28125%2c0 106.21%2c7.051875 83.478125%2c19.454375 L83.478125%2c300.545 C106.21%2c312.948125 132.28125%2c320 160%2c320 C248.365%2c320 320%2c248.365 320%2c160 C320%2c71.635 248.365%2c0 160%2c0 Z' id='Path' fill='%23496E2D'%3e%3c/path%3e %3cg id='Group' transform='translate(132.173336%2c 104.349375)' fill='%23F0F0F0'%3e %3cpath d='M96.2347894%2c82.11125 C75.9929144%2c96.736875 47.7266644%2c92.184375 33.1016644%2c71.943125 C18.4754144%2c51.700625 23.0285394%2c23.435 43.2704144%2c8.81 C49.5816644%2c4.25 56.6729144%2c1.554375 63.8872894%2c0.6175 C50.0079144%2c-1.458125 35.3360394%2c1.669375 23.0629144%2c10.5375 C-1.84958562%2c28.53875 -7.45396062%2c63.326875 10.5466644%2c88.240625 C28.5472894%2c113.1525 63.3360394%2c118.7575 88.2497894%2c100.755 C100.524164%2c91.886875 108.099789%2c78.94125 110.486039%2c65.110625 C107.332289%2c71.664375 102.546664%2c77.550625 96.2347894%2c82.11125 Z' id='Path'%3e%3c/path%3e %3cpolygon id='Path' points='95.3679144 1.77635684e-14 106.770414 12.288125 121.980414 5.243125 113.816039 19.883125 125.217914 32.1725 108.770414 28.931875 100.606664 43.573125 98.6060394 26.929375 82.1585394 23.68875 97.3691644 16.64375'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1l = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/palau%3c/title%3e %3cg id='flags/palau' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-palau' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23338AF3' cx='160' cy='160' r='160'%3e%3c/circle%3e %3ccircle id='Oval' fill='%23FFDA44' cx='125.2175' cy='160' r='69.565'%3e%3c/circle%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1k = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/palestine%3c/title%3e %3cg id='flags/palestine' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-palestine' fill-rule='nonzero'%3e %3cellipse id='Oval' fill='%23F0F0F0' cx='160.000156' cy='160' rx='159.999844' ry='160'%3e%3c/ellipse%3e %3cpath d='M97.3914674%2c104.348125 L310.04751%2c104.348125 C287.441282%2c43.42 228.793839%2c0 160.000156%2c0 C115.816449%2c0 75.8208635%2c17.911875 46.8683917%2c46.868125 L97.3914674%2c104.348125 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M97.3914674%2c215.651875 L310.04751%2c215.651875 C287.441282%2c276.58 228.793839%2c320 160.000156%2c320 C115.816449%2c320 75.8208635%2c302.088125 46.8683917%2c273.131875 L97.3914674%2c215.651875 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M46.8627667%2c46.8625 C-15.6209222%2c109.34625 -15.6209222%2c210.653125 46.8627667%2c273.1375 C72.6833665%2c247.316875 97.5164673%2c222.48375 160.000156%2c160 L46.8627667%2c46.8625 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1j = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/panama%3c/title%3e %3cg id='flags/panama' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-panama' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M0%2c160 C0%2c248.365 71.635%2c320 160%2c320 C160%2c259.153125 160%2c160 160%2c160 C160%2c160 55.651875%2c160 0%2c160 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M160%2c0 C248.365%2c0 320%2c71.635 320%2c160 C259.153125%2c160 160%2c160 160%2c160 C160%2c160 160%2c55.651875 160%2c0 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpolygon id='Path' fill='%230052B4' points='95.243125 55.651875 105.60375 87.538125 139.130625 87.538125 112.006875 107.244375 122.366875 139.130625 95.243125 119.42375 68.119375 139.130625 78.479375 107.244375 51.355625 87.538125 84.8825 87.538125'%3e%3c/polygon%3e %3cpolygon id='Path' fill='%23D80027' points='224.756875 180.869375 235.1175 212.755625 268.644375 212.755625 241.52 232.461875 251.880625 264.348125 224.756875 244.64125 197.633125 264.348125 207.993125 232.461875 180.869375 212.755625 214.39625 212.755625'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1i = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/papua-new-guinea%3c/title%3e %3cg id='flags/papua-new-guinea' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-papua-new-guinea' fill-rule='nonzero'%3e %3cpath d='M273.137268%2c273.137107 C210.653624%2c335.620964 109.347548%2c335.620964 46.8626543%2c273.137107 C-15.6209889%2c210.653251 -15.6209889%2c109.346202 46.8632793%2c46.8617207 C109.346923%2c-15.6221361 200.814891%2c-5.78399426 263.298534%2c56.7004875 C325.781553%2c119.184344 335.620286%2c210.653251 273.137268%2c273.137107 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M46.8632793%2c46.8623457 C109.346923%2c-15.6215111 210.652374%2c-15.6202611 273.137268%2c46.8629707 C335.620911%2c109.346827 335.620911%2c210.653251 273.137268%2c273.137732' id='Path' fill='%23A2001D'%3e%3c/path%3e %3cg id='Group' transform='translate(41.738913%2c 139.130628)' fill='%23F0F0F0'%3e %3cpolygon id='Path' points='80.5373624 76.5220058 83.1273579 84.4938944 91.5092186 84.4938944 84.7279802 89.4201528 87.3186008 97.3920414 80.5373624 92.465158 73.756124 97.3920414 76.3461195 89.4201528 69.5655061 84.4938944 77.9467418 84.4938944'%3e%3c/polygon%3e %3cpolygon id='Path' points='59.1305239 1.77635988e-14 63.4486416 13.2862727 77.4173677 13.2862727 66.115512 21.4969117 70.4323796 34.7831844 59.1305239 26.5712954 47.8292933 34.7831844 52.1467859 21.4969117 40.8443052 13.2862727 54.8142813 13.2862727'%3e%3c/polygon%3e %3cpolygon id='Path' points='59.1305239 97.3920414 63.4473916 110.678314 77.4173677 110.678314 66.114262 118.888328 70.4323796 132.174601 59.1305239 123.962712 47.8292933 132.174601 52.1455359 118.888328 40.8443052 110.678314 54.8124063 110.678314'%3e%3c/polygon%3e %3cpolygon id='Path' points='99.9742041 34.7831844 104.292322 48.0694571 118.261048 48.0694571 106.959192 56.2794712 111.27606 69.5657439 99.9742041 61.3538549 88.6729735 69.5657439 92.9904661 56.2794712 81.6886104 48.0694571 95.6579615 48.0694571'%3e%3c/polygon%3e %3cpolygon id='Path' points='18.2862187 34.7831844 22.6043364 48.0694571 36.5724375 48.0694571 25.2712068 56.2794712 29.5874494 69.5657439 18.2862187 61.3538549 6.98436306 69.5657439 11.3024807 56.2794712 8.88176902e-15 48.0694571 13.9693511 48.0694571'%3e%3c/polygon%3e %3c/g%3e %3cpath d='M267.842902%2c118.475593 C260.692289%2c111.324956 251.401055%2c107.100574 241.416697%2c106.374947 L271.304146%2c83.1292827 C259.401041%2c71.2261374 243.447318%2c65.8505032 227.879845%2c66.9873801 C226.016098%2c60.2898687 222.462979%2c53.9636079 217.196113%2c48.6967238 L205.390508%2c72.3080142 C204.616135%2c70.8967618 203.635511%2c69.5686345 202.439263%2c68.3730075 C195.646775%2c61.5811209 184.635544%2c61.5811209 177.844305%2c68.3730075 C171.053067%2c75.1648941 171.051817%2c86.1761629 177.844305%2c92.9680495 C179.039928%2c94.1636766 180.368676%2c95.1443032 181.779924%2c95.9193046 L158.168714%2c107.72495 C163.43683%2c112.993709 169.767444%2c116.54934 176.468683%2c118.411843 C175.32806%2c133.97937 180.698051%2c149.930647 192.60178%2c161.834417 L218.714236%2c128.26061 C220.678607%2c126.326232 223.272978%2c125.258105 226.032973%2c125.258105 C228.820468%2c125.258105 231.440464%2c126.343107 233.411085%2c128.314985 C235.382332%2c130.285613 236.467955%2c132.906243 236.467955%2c135.693123 C236.467955%2c138.480627 235.382332%2c141.100632 233.411085%2c143.071885 L243.249819%2c152.910652 C247.847936%2c148.311894 250.381056%2c142.197509 250.381056%2c135.693748 C250.381056%2c130.372488 248.683559%2c125.31373 245.549815%2c121.131223 C250.116057%2c122.3506 254.431675%2c124.739354 258.006668%2c128.314985 C268.85665%2c139.164378 268.85665%2c156.818159 258.006668%2c167.666927 L267.845402%2c177.505694 C275.728513%2c169.621931 280.070381%2c159.140663 280.070381%2c147.991269 C280.068506%2c136.840624 275.726013%2c126.359357 267.842902%2c118.475593 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1h = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/paraguay%3c/title%3e %3cg id='flags/paraguay' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-paraguay' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M160%2c0 C96.56625%2c0 41.75625%2c36.915625 15.87625%2c90.435 L304.123125%2c90.435 C278.24375%2c36.915625 223.433125%2c0 160%2c0 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M160%2c320 C223.433125%2c320 278.24375%2c283.084375 304.12375%2c229.565 L15.87625%2c229.565 C41.75625%2c283.084375 96.56625%2c320 160%2c320 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M199.351875%2c113.691875 L184.595%2c128.44875 C190.889375%2c134.743125 194.783125%2c143.43875 194.783125%2c153.04375 C194.783125%2c172.25375 179.21%2c187.82625 160.000625%2c187.82625 C140.79125%2c187.82625 125.218125%2c172.253125 125.218125%2c153.04375 C125.218125%2c143.43875 129.111875%2c134.743125 135.40625%2c128.44875 L120.649375%2c113.691875 C110.5775%2c123.761875 104.34875%2c137.675 104.34875%2c153.04375 C104.34875%2c183.78 129.265%2c208.695625 160.000625%2c208.695625 C190.73625%2c208.695625 215.6525%2c183.779375 215.6525%2c153.04375 C215.6525%2c137.675 209.423125%2c123.761875 199.351875%2c113.691875 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpolygon id='Path' fill='%23FFDA44' points='160 132.17375 165.180625 148.1175 181.94375 148.1175 168.381875 157.97 173.5625 173.913125 160 164.06 146.4375 173.913125 151.618125 157.97 138.05625 148.1175 154.819375 148.1175'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1g = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/peru%3c/title%3e %3cg id='flags/peru' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-peru' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(0.000000%2c 9.952500)' fill='%23D80027'%3e %3cpath d='M320%2c150.0475 C320%2c81.25375 276.58%2c22.60625 215.651875%2c1.77635684e-14 L215.651875%2c300.096875 C276.58%2c277.48875 320%2c218.8425 320%2c150.0475 Z' id='Path'%3e%3c/path%3e %3cpath d='M0%2c150.0475 C0%2c218.8425 43.42%2c277.48875 104.348125%2c300.09625 L104.348125%2c1.33226763e-14 C43.42%2c22.60625 0%2c81.25375 0%2c150.0475 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1f = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/philippines%3c/title%3e %3cg id='flags/philippines' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-philippines' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M160%2c0 L160%2c160 L46.8625%2c273.1375 C75.816875%2c302.09125 115.816875%2c320 160%2c320 C248.365%2c320 320%2c248.365 320%2c160 C320%2c71.635 160%2c0 160%2c0 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M160%2c0 C115.816875%2c0 75.816875%2c17.90875 46.8625%2c46.8625 C86.11875%2c86.11875 100.054375%2c100.055 160%2c160 L320%2c160 C320%2c71.635 248.365%2c0 160%2c0 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cg id='Group' transform='translate(13.913125%2c 62.608750)' fill='%23FFDA44'%3e %3cpolygon id='Path' points='95.64375 97.39125 76.10375 88.2 86.509375 69.275625 65.290625 73.335 62.601875 51.899375 47.821875 67.664375 33.0425 51.899375 30.353125 73.335 9.135 69.275 19.540625 88.2 2.22044605e-15 97.39125 19.540625 106.5825 9.135 125.506875 30.355 121.448125 33.041875 142.883125 47.821875 127.118125 62.601875 142.883125 65.290625 121.448125 86.508125 125.5075 76.103125 106.583125'%3e%3c/polygon%3e %3cpolygon id='Path' points='28.7575 1.77635684e-14 35.26 9.089375 45.913125 5.715 39.276875 14.7075 45.779375 23.796875 35.175625 20.265 28.54 29.256875 28.623125 18.081875 18.02 14.549375 28.675 11.175'%3e%3c/polygon%3e %3cpolygon id='Path' points='28.7575 165.525625 35.26 174.615 45.913125 171.24 39.276875 180.233125 45.779375 189.3225 35.175625 185.790625 28.54 194.7825 28.623125 183.6075 18.02 180.075 28.675 176.700625'%3e%3c/polygon%3e %3cpolygon id='Path' points='121.503125 82.763125 115.00125 91.8525 104.3475 88.476875 110.98375 97.47 104.48125 106.56 115.085 103.0275 121.72125 112.019375 121.6375 100.845 132.240625 97.3125 121.58625 93.938125'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1e = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/pitcairn-islands%3c/title%3e %3cg id='flags/pitcairn-islands' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-pitcairn-islands' fill-rule='nonzero'%3e %3cpath d='M320%2c160.156098 C320%2c248.434888 248.365%2c320 160%2c320 C71.635%2c320 0%2c248.434888 0%2c160.156098 C0%2c160.194185 160%2c0.329678049 160%2c0.312195122 C248.365%2c0.312195122 320%2c71.8773073 320%2c160.156098 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cg id='Group' fill='%23F0F0F0'%3e %3cpath d='M160%2c0.312195122 C159.99%2c0.312195122 159.9825%2c0.312195122 159.973125%2c0.312195122 L160%2c0.312195122 L160%2c0.312195122 Z' id='Path'%3e%3c/path%3e %3cpath d='M159.571875%2c160.156098 L160%2c160.156098 C160%2c160.012488 160%2c159.872624 160%2c159.72839 C159.8575%2c159.871376 159.715%2c160.013737 159.571875%2c160.156098 Z' id='Path'%3e%3c/path%3e %3cpath d='M160.000625%2c83.708878 C160.000625%2c55.5832195 160.000625%2c37.1543415 160.000625%2c0.312195122 L159.973125%2c0.312195122 C71.619375%2c0.327180488 0%2c71.8854244 0%2c160.156098 L83.478125%2c160.156098 L83.478125%2c113.195083 L130.485%2c160.156098 L159.5725%2c160.156098 C159.715%2c160.013737 159.8575%2c159.871376 160.000625%2c159.72839 C160.000625%2c148.959532 160.000625%2c139.35079 160.000625%2c130.671141 L112.9925%2c83.708878 L160.000625%2c83.708878 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(20.869375%2c 21.161210)' fill='%23D80027'%3e %3cpath d='M60.0775%2c4.43655952e-15 C35.053125%2c14.2354732 14.24875%2c35.0189268 4.4408921e-15%2c60.0188878 L4.4408921e-15%2c138.994888 L41.739375%2c138.994888 L41.739375%2c41.6999024 L41.739375%2c41.6986537 L139.130625%2c41.6986537 C139.130625%2c28.547122 139.130625%2c16.0181073 139.130625%2c4.43655952e-15 L60.0775%2c4.43655952e-15 Z' id='Path'%3e%3c/path%3e %3cpath d='M139.130625%2c119.338459 L82.28375%2c62.5482927 L62.60875%2c62.5482927 L62.60875%2c62.5495415 L139.129375%2c138.994888 L139.130625%2c138.994888 C139.130625%2c138.994888 139.130625%2c125.441249 139.130625%2c119.338459 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpolygon id='Path' fill='%23ACABB1' points='250.435 97.6084293 229.565 104.558517 208.695625 97.6084293 201.739375 80.2341463 208.695625 62.8598634 250.435 62.8598634 243.478125 80.2341463'%3e%3c/polygon%3e %3cpath d='M180.869375%2c97.6084293 L180.869375%2c174.055024 C180.869375%2c211.293659 229.565%2c222.703766 229.565%2c222.703766 C229.565%2c222.703766 278.260625%2c211.293659 278.260625%2c174.055024 L278.260625%2c97.6084293 L180.869375%2c97.6084293 Z' id='Path' fill='%23338AF3'%3e%3c/path%3e %3cpath d='M185.259375%2c192.166088 C197.229375%2c215.124293 229.565625%2c222.703766 229.565625%2c222.703766 C229.565625%2c222.703766 261.901875%2c215.124293 273.871875%2c192.166088 L229.565625%2c118.458068 L185.259375%2c192.166088 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M278.260625%2c173.282654 L229.565%2c97.6084293 L180.869375%2c173.283278 L180.869375%2c174.055024 C180.869375%2c180.947044 182.540625%2c186.952429 185.25875%2c192.166088 L229.565%2c123.311454 L273.87125%2c192.166088 C276.589375%2c186.95118 278.260625%2c180.94642 278.260625%2c174.0544 L278.260625%2c173.282654 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1d = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/portugal%3c/title%3e %3cg id='flags/portugal' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-portugal' fill-rule='nonzero'%3e %3cpath d='M0%2c160 C0%2c228.79375 43.42%2c287.440625 104.346875%2c310.0475 L118.260625%2c159.999375 L104.346875%2c9.951875 C43.42%2c32.559375 0%2c91.205625 0%2c160 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M320%2c160 C320%2c71.635 248.365%2c0 160%2c0 C140.42875%2c0 121.680625%2c3.520625 104.346875%2c9.951875 L104.346875%2c310.048125 C121.680625%2c316.48 140.42875%2c320 160%2c320 C248.365%2c320 320%2c248.365 320%2c160 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3ccircle id='Oval' fill='%23FFDA44' cx='104.348125' cy='160' r='55.651875'%3e%3c/circle%3e %3cpath d='M73.04375%2c132.17375 L73.04375%2c166.95625 C73.04375%2c184.245 87.05875%2c198.260625 104.348125%2c198.260625 C121.6375%2c198.260625 135.6525%2c184.245625 135.6525%2c166.95625 L135.6525%2c132.17375 L73.04375%2c132.17375 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M104.348125%2c177.39125 C98.594375%2c177.39125 93.913125%2c172.71 93.913125%2c166.95625 L93.913125%2c153.04375 L114.7825%2c153.04375 L114.7825%2c166.956875 C114.7825%2c172.71 110.10125%2c177.39125 104.348125%2c177.39125 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1c = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/puerto-rico%3c/title%3e %3cg id='flags/puerto-rico' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-puerto-rico' fill-rule='nonzero'%3e %3cellipse id='Oval' fill='%23F0F0F0' cx='160.000156' cy='160' rx='159.999844' ry='160'%3e%3c/ellipse%3e %3cg id='Group' transform='translate(0.000312%2c 0.000000)' fill='%23D80027'%3e %3cpath d='M159.999844%2c0 C107.654895%2c0 61.1830653%2c25.139375 31.9930938%2c64 L288.006594%2c64 C258.816622%2c25.139375 212.344793%2c0 159.999844%2c0 Z' id='Path'%3e%3c/path%3e %3cpath d='M159.999844%2c320 C212.344793%2c320 258.816622%2c294.860625 288.006594%2c256 L31.9930938%2c256 C61.1830653%2c294.860625 107.654895%2c320 159.999844%2c320 Z' id='Path'%3e%3c/path%3e %3cpath d='M0%2c160 C0%2c170.959375 1.10499892%2c181.660625 3.20437187%2c192 L316.796566%2c192 C318.895939%2c181.660625 319.999688%2c170.959375 319.999688%2c160 C319.999688%2c149.040625 318.894689%2c138.339375 316.795941%2c128 L3.20437187%2c128 C1.10499892%2c138.339375 0%2c149.040625 0%2c160 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M46.8627667%2c46.8625 C-15.6209222%2c109.34625 -15.6209222%2c210.653125 46.8627667%2c273.1375 C72.6833665%2c247.316875 97.5164673%2c222.48375 160.000156%2c160 L46.8627667%2c46.8625 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpolygon id='Path' fill='%23F0F0F0' points='64.7564993 118.260625 75.1158641 150.145625 108.644581 150.145625 81.5208579 169.853125 91.8795978 201.739375 64.7564993 182.0325 37.6321507 201.739375 47.9933906 169.853125 20.8696671 150.145625 54.3958844 150.145625'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1b = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/qatar%3c/title%3e %3cg id='flags/qatar' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-qatar' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M320%2c160 C320%2c71.635 248.365%2c0 160%2c0 C128.7%2c0 99.50375%2c8.996875 74.8425%2c24.531875 L109.913125%2c39.4325 L62.60875%2c59.53125 L109.913125%2c79.629375 L62.60875%2c99.726875 L109.913125%2c119.82375 L62.60875%2c139.918125 L109.913125%2c160.01125 L62.60875%2c180.10875 L109.913125%2c200.205 L62.60875%2c220.299375 L109.913125%2c240.395625 L62.60875%2c260.493125 L109.913125%2c280.5875 L74.858125%2c295.48 C99.51625%2c311.0075 128.70625%2c320 160%2c320 C248.365%2c320 320%2c248.365 320%2c160 Z' id='Path' fill='%23751A46'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1a = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/rapa-nui%3c/title%3e %3cg id='flags/rapa-nui' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-rapa-nui' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23FCFCFC' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M208.695625%2c132.17375 L208.695625%2c146.086875 L227.790625%2c146.086875 C219.821875%2c157.161875 209.2075%2c166.203125 196.875%2c172.29125 C193.71125%2c169.004375 189.269375%2c166.95625 184.3475%2c166.95625 C176.050625%2c166.95625 169.115625%2c172.768125 167.37875%2c180.5425 C164.9475%2c180.75625 162.486875%2c180.869375 160%2c180.869375 C157.513125%2c180.869375 155.0525%2c180.755 152.62125%2c180.5425 C150.884375%2c172.76875 143.949375%2c166.95625 135.6525%2c166.95625 C130.730625%2c166.95625 126.29%2c169.004375 123.125%2c172.29125 C110.7925%2c166.20375 100.17875%2c157.16125 92.21%2c146.086875 L111.304375%2c146.086875 L111.304375%2c132.17375 L62.60875%2c132.17375 C62.60875%2c185.960625 106.213125%2c229.565 160%2c229.565 C213.788125%2c229.565 257.39125%2c185.960625 257.39125%2c132.17375 L208.695625%2c132.17375 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$19 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/republic-of-macedonia%3c/title%3e %3cg id='flags/republic-of-macedonia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-republic-of-macedonia' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23FFDA44' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(1.839375%2c 1.839375)' fill='%23D80027'%3e %3cpath d='M182.493125%2c316.32125 C208.515625%2c312.35125 232.469375%2c302.10375 252.778125%2c287.185 L158.160625%2c158.160625 L182.493125%2c316.32125 Z' id='Path'%3e%3c/path%3e %3cpath d='M133.8275%2c1.0269563e-14 C107.805625%2c3.97 83.851875%2c14.2175 63.541875%2c29.135625 L158.160625%2c158.160625 L133.8275%2c1.0269563e-14 Z' id='Path'%3e%3c/path%3e %3cpath d='M63.541875%2c287.185 C83.850625%2c302.103125 107.804375%2c312.350625 133.82625%2c316.321875 L158.160625%2c158.160625 L63.541875%2c287.185 Z' id='Path'%3e%3c/path%3e %3cpath d='M29.135625%2c63.541875 C14.216875%2c83.851875 3.970625%2c107.805 1.0269563e-14%2c133.8275 L158.160625%2c158.160625 L29.135625%2c63.541875 Z' id='Path'%3e%3c/path%3e %3cpath d='M1.0269563e-14%2c182.493125 C3.97%2c208.515625 14.2175%2c232.469375 29.13625%2c252.778125 L158.160625%2c158.160625 L1.0269563e-14%2c182.493125 Z' id='Path'%3e%3c/path%3e %3cpath d='M316.32125%2c133.8275 C312.350625%2c107.805625 302.10375%2c83.851875 287.185%2c63.5425 L158.160625%2c158.160625 L316.32125%2c133.8275 Z' id='Path'%3e%3c/path%3e %3cpath d='M252.778125%2c29.135 C232.46875%2c14.216875 208.515625%2c3.97 182.493125%2c1.0269563e-14 L158.160625%2c158.160625 L252.778125%2c29.135 Z' id='Path'%3e%3c/path%3e %3cpath d='M287.18625%2c252.77875 C302.104375%2c232.469375 312.35125%2c208.515 316.3225%2c182.49375 L158.160625%2c158.160625 L287.18625%2c252.77875 Z' id='Path'%3e%3c/path%3e %3ccircle id='Oval' cx='158.160625' cy='158.160625' r='55.651875'%3e%3c/circle%3e %3c/g%3e %3ccircle id='Oval' fill='%23FFDA44' cx='160' cy='160' r='41.739375'%3e%3c/circle%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$18 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/republic-of-poland%3c/title%3e %3cg id='flags/republic-of-poland' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-republic-of-poland' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M320%2c160 C320%2c248.365 248.365%2c320 160%2c320 C71.635%2c320 0%2c248.365 0%2c160' id='Path' fill='%23D80027'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$17 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/republic-of-the-congo%3c/title%3e %3cg id='flags/republic-of-the-congo' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-republic-of-the-congo' fill-rule='nonzero'%3e %3cpath d='M86.7319%2c302.277717 L204.272384%2c204.272877 L302.277267%2c86.7324441 C287.039785%2c57.2024924 262.878564%2c33.0281569 233.360474%2c17.7713068 L115.726865%2c115.728022 L17.7713576%2c233.360329 C33.0269643%2c262.879656 57.2013104%2c287.040242 86.7319%2c302.277717 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M273.141677%2c273.142139 C323.620366%2c222.662847 333.31098%2c146.852346 302.232892%2c86.6361943 L86.6356501%2c302.233342 C146.851828%2c333.310791 222.662987%2c323.620182 273.141677%2c273.142139 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M46.8581977%2c46.8581343 C-3.62049179%2c97.3368018 -13.3104802%2c173.147928 17.7663576%2c233.364079 L233.364224%2c17.7669318 C173.148046%2c-13.3111424 97.3368873%2c-3.6199082 46.8581977%2c46.8581343 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$16 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/romania%3c/title%3e %3cg id='flags/romania' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-romania' fill-rule='nonzero'%3e %3cpath d='M215.651875%2c9.95125 C198.318125%2c3.520625 179.57125%2c0 160%2c0 C140.42875%2c0 121.68125%2c3.520625 104.348125%2c9.95125 L90.435%2c159.999375 L104.348125%2c310.0475 C121.680625%2c316.48 140.428125%2c320 160%2c320 C179.570625%2c320 198.31875%2c316.48 215.651875%2c310.0475 L229.564375%2c160 L215.651875%2c9.95125 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M320%2c160 C320%2c91.20625 276.58%2c32.558125 215.651875%2c9.951875 L215.651875%2c310.049375 C276.58%2c287.440625 320%2c228.795 320%2c160 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M0%2c159.999375 C0%2c228.795 43.42%2c287.440625 104.3475%2c310.04875 L104.3475%2c9.9525 C43.42%2c32.55875 0%2c91.205 0%2c159.999375 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$15 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/russia%3c/title%3e %3cg id='flags/russia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-russia' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M310.048125%2c215.651875 C316.48%2c198.31875 320%2c179.57125 320%2c160 C320%2c140.42875 316.48%2c121.68125 310.048125%2c104.348125 L9.951875%2c104.348125 C3.520625%2c121.68125 0%2c140.42875 0%2c160 C0%2c179.57125 3.520625%2c198.31875 9.951875%2c215.651875 L160%2c229.565 L310.048125%2c215.651875 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M160%2c320 C228.794375%2c320 287.44125%2c276.58 310.048125%2c215.651875 L9.951875%2c215.651875 C32.55875%2c276.58 91.205625%2c320 160%2c320 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$14 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/rwanda%3c/title%3e %3cg id='flags/rwanda' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-rwanda' fill-rule='nonzero'%3e %3cpath d='M0%2c160 C0%2c187.71875 7.051875%2c213.79 19.454375%2c236.521875 L160%2c250.435 L300.545625%2c236.521875 C312.948125%2c213.79 320%2c187.71875 320%2c160 L160%2c146.086875 L0%2c160 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M300.545625%2c83.478125 C273.40875%2c33.743125 220.646875%2c0 160%2c0 C99.353125%2c0 46.59125%2c33.743125 19.454375%2c83.478125 C7.051875%2c106.21 0%2c132.28125 0%2c160 L320%2c160 C320%2c132.28125 312.948125%2c106.21 300.545625%2c83.478125 Z' id='Path' fill='%23338AF3'%3e%3c/path%3e %3cpath d='M160%2c320 C220.646875%2c320 273.40875%2c286.256875 300.545625%2c236.521875 L19.454375%2c236.521875 C46.59125%2c286.256875 99.353125%2c320 160%2c320 Z' id='Path' fill='%23496E2D'%3e%3c/path%3e %3cpolygon id='Path' fill='%23FFDA44' points='180.869375 93.638125 200.410625 102.83 190.005 121.755 211.22375 117.69625 213.9125 139.130625 228.69125 123.365625 243.47125 139.130625 246.159375 117.69625 267.378125 121.75375 256.973125 102.829375 276.513125 93.638125 256.9725 84.4475 267.378125 65.5225 246.16 69.58125 243.470625 48.146875 228.69125 63.911875 213.911875 48.146875 211.22375 69.58125 190.004375 65.5225 200.41 84.448125'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$13 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/saba-island%3c/title%3e %3cg id='flags/saba-island' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-saba-island' fill-rule='nonzero'%3e %3cellipse id='Oval' fill='%23F0F0F0' cx='160' cy='160' rx='159.999992' ry='159.999941'%3e%3c/ellipse%3e %3cg id='Group' fill='%23D80027'%3e %3cpath d='M160%2c2.31297395e-10 C159.850625%2c-0.112440686 -0.0424915268%2c159.958125 0%2c160 C0%2c71.6350327 71.6350047%2c2.31297395e-10 160%2c2.31297395e-10 Z' id='Path'%3e%3c/path%3e %3cpath d='M160%2c2.11235539e-15 C160.149375%2c-0.112440686 320.042492%2c159.9575 320%2c160 C320%2c71.6350327 248.364995%2c2.11235539e-15 160%2c2.11235539e-15 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(0.000000%2c 160.000000)' fill='%230052B4'%3e %3cpath d='M160%2c160 C159.850625%2c160.112441 -0.0424915268%2c0.0424999843 0%2c0 C0%2c88.3649673 71.6350047%2c160 160%2c160 Z' id='Path'%3e%3c/path%3e %3cpath d='M160%2c160 C160.149375%2c160.112441 320.042492%2c0.0424999843 320%2c0 C320%2c88.3649673 248.364995%2c160 160%2c160 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpolygon id='Path' fill='%23FFDA44' points='160 83.4781533 177.267499 136.621259 233.145621 136.621259 187.938749 169.464996 205.206248 222.608727 160 189.764364 114.793752 222.608727 132.061251 169.464996 86.8550039 136.621259 142.732501 136.621259'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$12 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/saint-kitts-and-nevis%3c/title%3e %3cg id='flags/saint-kitts-and-nevis' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-saint-kitts-and-nevis' transform='translate(0.000000%2c 0.000000)' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23FFDA44' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M46.8626831%2c273.137942 C53.5745843%2c279.849843 60.7364873%2c285.836117 68.2483916%2c291.105512 L291.104262%2c68.2496416 C285.834867%2c60.7371123 279.849218%2c53.5758343 273.136692%2c46.8639331 C266.424791%2c40.1520318 259.263513%2c34.1676335 251.751608%2c28.8969879 L28.8969879%2c251.753483 C34.1657585%2c259.265388 40.1507818%2c266.426041 46.8626831%2c273.137942 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M46.8633081%2c46.8626831 C-3.61376412%2c97.3397552 -13.304427%2c173.148176 17.7731944%2c233.361537 L233.361537%2c17.7738194 C173.148176%2c-13.303177 97.3385052%2c-3.61251411 46.8633081%2c46.8626831 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M273.137317%2c273.137942 C323.613764%2c222.66212 333.303802%2c146.853699 302.228056%2c86.6390884 L86.6378384%2c302.228681 C146.851824%2c333.305052 222.660245%2c323.615014 273.137317%2c273.137942 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cg id='Group' transform='translate(97.489131%2c 97.489756)' fill='%23F0F0F0'%3e %3cpolygon id='Path' points='4.24251657 91.2659815 19.1788249 98.8766362 31.0326212 87.0234649 28.410111 103.579155 43.3457943 111.190434 26.7888546 113.81232 24.1663444 130.369259 16.5563147 115.432951 -1.77636378e-14 118.055461 11.8531713 106.20229'%3e%3c/polygon%3e %3cpolygon id='Path' points='91.2659815 4.24251657 106.201665 11.8531713 118.055461 -1.77636378e-14 115.433576 16.5556897 130.369259 24.1669694 113.81232 26.7894796 111.190434 43.3457943 103.57978 28.410111 87.0234649 31.0319962 98.8766362 19.1788249'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$11 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/salvador%3c/title%3e %3cg id='flags/salvador' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-salvador' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(15.876250%2c 0.000000)' fill='%230052B4'%3e %3cpath d='M144.12375%2c0 C80.69%2c0 25.88%2c36.915625 8.8817842e-15%2c90.435 L288.246875%2c90.435 C262.3675%2c36.915625 207.556875%2c0 144.12375%2c0 Z' id='Path'%3e%3c/path%3e %3cpath d='M144.12375%2c320 C207.556875%2c320 262.3675%2c283.084375 288.2475%2c229.565 L8.8817842e-15%2c229.565 C25.88%2c283.084375 80.69%2c320 144.12375%2c320 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpolygon id='Path' fill='%23FFDA44' points='127.86875 166.95625 160 111.304375 192.13125 166.95625'%3e%3c/polygon%3e %3cpolygon id='Path' fill='%236DA544' points='201.739375 185.331875 160 206.201875 118.260625 185.331875 118.260625 157.50625 201.739375 157.50625'%3e%3c/polygon%3e %3cpath d='M199.351875%2c113.691875 L184.595%2c128.44875 C190.889375%2c134.743125 194.783125%2c143.43875 194.783125%2c153.04375 C194.783125%2c172.25375 179.21%2c187.82625 160.000625%2c187.82625 C140.79125%2c187.82625 125.218125%2c172.253125 125.218125%2c153.04375 C125.218125%2c143.43875 129.111875%2c134.743125 135.40625%2c128.44875 L120.649375%2c113.691875 C110.5775%2c123.761875 104.34875%2c137.675 104.34875%2c153.04375 C104.34875%2c183.78 129.265%2c208.695625 160.000625%2c208.695625 C190.73625%2c208.695625 215.6525%2c183.779375 215.6525%2c153.04375 C215.6525%2c137.675 209.423125%2c123.761875 199.351875%2c113.691875 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$10 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/samoa%3c/title%3e %3cg id='flags/samoa' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-samoa' fill-rule='nonzero'%3e %3cpath d='M320%2c160 C320%2c248.365 248.365%2c320 160%2c320 C71.635%2c320 0%2c248.365 0%2c160 C54.95625%2c105.04375 101.565%2c58.435 160%2c0 C248.365%2c0 320%2c71.635 320%2c160 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M160%2c160 C160%2c71.635 160%2c61.2175 160%2c0 C71.635%2c0 0%2c71.635 0%2c160 L160%2c160 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cg id='Group' transform='translate(39.949375%2c 41.739375)' fill='%23F0F0F0'%3e %3cpolygon id='Path' points='88.209375 62.60875 90.8 70.580625 99.18125 70.580625 92.4 75.50625 94.990625 83.478125 88.209375 78.55125 81.428125 83.478125 84.01875 75.50625 77.2375 70.580625 85.61875 70.580625'%3e%3c/polygon%3e %3cpolygon id='Path' points='46.111875 -1.77635684e-14 50.42875 13.286875 64.39875 13.286875 53.09625 21.49625 57.414375 34.7825 46.111875 26.570625 34.81 34.7825 39.1275 21.49625 27.825625 13.286875 41.794375 13.286875'%3e%3c/polygon%3e %3cpolygon id='Path' points='87.85125 13.9125 92.168125 27.2 106.1375 27.2 94.835625 35.409375 99.1525 48.695625 87.85125 40.48375 76.549375 48.695625 80.866875 35.409375 69.565 27.2 83.53375 27.2'%3e%3c/polygon%3e %3cpolygon id='Path' points='54.85875 69.565 59.17625 82.851875 73.145 82.851875 61.843125 91.06125 66.160625 104.3475 54.85875 96.13625 43.556875 104.3475 47.874375 91.06125 36.5725 82.851875 50.541875 82.851875'%3e%3c/polygon%3e %3cpolygon id='Path' points='18.285625 34.7825 22.603125 48.069375 36.5725 48.069375 25.27 56.27875 29.5875 69.565 18.285625 61.35375 6.984375 69.565 11.30125 56.27875 0 48.069375 13.96875 48.069375'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$$ = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/san-marino%3c/title%3e %3cg id='flags/san-marino' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-san-marino' fill-rule='nonzero'%3e %3cpath d='M320%2c160 C320%2c248.365 248.365%2c320 160%2c320 C71.635%2c320 0%2c248.365 0%2c160 C6.95625%2c160 160%2c139.130625 160%2c139.130625 L320%2c160 Z' id='Path' fill='%23338AF3'%3e%3c/path%3e %3cpath d='M0%2c160 C0%2c71.635 71.635%2c0 160%2c0 C248.365%2c0 320%2c71.635 320%2c160' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cpath d='M223.51%2c110.4025 L160%2c173.913125 L96.49%2c110.4025 C88.276875%2c122.594375 83.47875%2c137.26875 83.47875%2c153.043125 L83.47875%2c173.9125 C83.47875%2c207.4225 105.131875%2c235.968125 135.18%2c246.3 C131.169375%2c254.16 131.845625%2c263.969375 137.7225%2c271.30375 C145.5275%2c265.048125 153.608125%2c258.5725 160.463125%2c253.08 C167.318125%2c258.573125 175.399375%2c265.04875 183.20375%2c271.30375 C189.149375%2c263.88375 189.776875%2c253.9275 185.608125%2c246.02125 C215.245625%2c235.465 236.52125%2c207.12875 236.52125%2c173.9125 L236.52125%2c153.04375 C236.52125%2c137.26875 231.723125%2c122.595 223.51%2c110.4025 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M160%2c229.565 C129.313125%2c229.565 104.348125%2c204.599375 104.348125%2c173.913125 L104.348125%2c153.04375 C104.348125%2c122.356875 129.31375%2c97.391875 160%2c97.391875 C190.68625%2c97.391875 215.651875%2c122.3575 215.651875%2c153.04375 L215.651875%2c173.913125 C215.651875%2c204.599375 190.686875%2c229.565 160%2c229.565 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M194.7825%2c173.913125 L194.7825%2c153.04375 C194.7825%2c133.864375 179.17875%2c118.26125 160%2c118.26125 C140.82125%2c118.26125 125.2175%2c133.865 125.2175%2c153.04375 L125.2175%2c173.913125 L160%2c180.869375 L194.7825%2c173.913125 Z' id='Path' fill='%23338AF3'%3e%3c/path%3e %3cpath d='M125.2175%2c173.913125 L125.2175%2c173.913125 C125.2175%2c193.0925 140.82125%2c208.695625 160%2c208.695625 C179.17875%2c208.695625 194.7825%2c193.091875 194.7825%2c173.913125 L194.7825%2c173.913125 L125.2175%2c173.913125 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M201.739375%2c97.39125 C201.739375%2c85.865625 192.395625%2c76.521875 180.87%2c76.521875 C175.523125%2c76.521875 170.65%2c78.534375 166.956875%2c81.84 L166.956875%2c69.565 L173.913125%2c69.565 L173.913125%2c55.651875 L166.956875%2c55.651875 L166.956875%2c48.695625 L153.04375%2c48.695625 L153.04375%2c55.651875 L146.0875%2c55.651875 L146.0875%2c69.565 L153.04375%2c69.565 L153.04375%2c81.84 C149.350625%2c78.534375 144.476875%2c76.521875 139.130625%2c76.521875 C127.605%2c76.521875 118.26125%2c85.865625 118.26125%2c97.39125 C118.26125%2c103.570625 120.949375%2c109.120625 125.2175%2c112.9425 L125.2175%2c125.2175 L194.7825%2c125.2175 L194.7825%2c112.9425 C199.05125%2c109.120625 201.739375%2c103.570625 201.739375%2c97.39125 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$_ = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/sao-tome-and-principe%3c/title%3e %3cg id='flags/sao-tome-and-principe' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-sao-tome-and-principe' fill-rule='nonzero'%3e %3cellipse id='Oval' fill='%23FFDA44' cx='160.000156' cy='160' rx='159.999844' ry='160'%3e%3c/ellipse%3e %3cg id='Group' transform='translate(46.868392%2c 0.000000)' fill='%236DA544'%3e %3cpath d='M50.5230757%2c104.348125 L263.179118%2c104.348125 C240.57289%2c43.42 181.925447%2c0 113.131765%2c0 C68.9480577%2c0 28.9524717%2c17.911875 -1.7763551e-14%2c46.868125 L50.5230757%2c104.348125 Z' id='Path'%3e%3c/path%3e %3cpath d='M50.5230757%2c215.651875 L263.179118%2c215.651875 C240.57289%2c276.58 181.925447%2c320 113.131765%2c320 C68.9480577%2c320 28.9524717%2c302.088125 -1.7763551e-14%2c273.131875 L50.5230757%2c215.651875 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M46.8627667%2c46.8625 C-15.6209222%2c109.34625 -15.6209222%2c210.653125 46.8627667%2c273.1375 C72.6833665%2c247.316875 97.5164673%2c222.48375 160.000156%2c160 L46.8627667%2c46.8625 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpolygon id='Path' fill='black' points='203.171364 132.17375 210.078232 153.43125 232.429461 153.43125 214.346978 166.56875 221.253846 187.82625 203.171364 174.688125 185.088882 187.82625 191.995125 166.56875 173.913268 153.43125 196.264496 153.43125'%3e%3c/polygon%3e %3cpolygon id='Path' fill='black' points='272.736921 132.17375 279.643164 153.43125 301.994393 153.43125 283.912535 166.56875 290.818778 187.82625 272.736921 174.688125 254.653814 187.82625 261.560682 166.56875 243.4782 153.43125 265.829428 153.43125'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$Z = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/sardinia%3c/title%3e %3cg id='flags/sardinia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-sardinia' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M318.645625%2c139.130625 L180.870625%2c139.130625 L180.87%2c139.130625 L180.87%2c1.354375 C174.038125%2c0.465 167.073125%2c0 160%2c0 C152.926875%2c0 145.961875%2c0.465 139.130625%2c1.354375 L139.130625%2c139.129375 L139.130625%2c139.13 L1.354375%2c139.13 C0.465%2c145.961875 0%2c152.926875 0%2c160 C0%2c167.073125 0.465%2c174.038125 1.354375%2c180.869375 L139.129375%2c180.869375 L139.13%2c180.869375 L139.13%2c318.645625 C145.961875%2c319.535 152.926875%2c320 160%2c320 C167.073125%2c320 174.038125%2c319.535625 180.869375%2c318.645625 L180.869375%2c180.87125 L180.869375%2c180.87 L318.645625%2c180.87 C319.535%2c174.038125 320%2c167.073125 320%2c160 C320%2c152.926875 319.535%2c145.961875 318.645625%2c139.130625 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M236.521875%2c55.651875 C223.555625%2c55.651875 212.66125%2c64.52 209.5725%2c76.52125 L236.521875%2c83.4775 L263.47125%2c76.52125 C260.3825%2c64.520625 249.488125%2c55.651875 236.521875%2c55.651875 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M208.695625%2c118.260625 L243.478125%2c125.216875 L243.478125%2c110.4275 C253.25625%2c107.91 260.9525%2c100.211875 263.469375%2c90.434375 L236.521875%2c83.478125 L201.739375%2c83.478125 L208.695625%2c104.3475 L208.695625%2c118.260625 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M263.47125%2c76.521875 L201.739375%2c76.521875 L201.739375%2c90.435 L201.739375%2c104.348125 L208.695625%2c104.348125 L208.695625%2c90.435 L263.469375%2c90.435 C264.041875%2c88.211875 264.348125%2c85.880625 264.348125%2c83.47875 C264.348125%2c81.07625 264.04375%2c78.745 263.47125%2c76.521875 Z' id='Path' fill='%23ACABB1'%3e%3c/path%3e %3cpath d='M90.435%2c55.651875 C77.46875%2c55.651875 66.574375%2c64.52 63.485625%2c76.52125 L90.435%2c83.4775 L117.384375%2c76.52125 C114.295625%2c64.520625 103.40125%2c55.651875 90.435%2c55.651875 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M62.60875%2c118.260625 L97.39125%2c125.216875 L97.39125%2c110.4275 C107.169375%2c107.91 114.865625%2c100.211875 117.3825%2c90.434375 L90.435%2c83.478125 L55.651875%2c83.478125 L62.608125%2c104.3475 L62.608125%2c118.260625 L62.60875%2c118.260625 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M117.384375%2c76.521875 L55.651875%2c76.521875 L55.651875%2c90.435 L55.651875%2c104.348125 L62.608125%2c104.348125 L62.608125%2c90.435 L117.381875%2c90.435 C117.954375%2c88.211875 118.260625%2c85.880625 118.260625%2c83.47875 C118.260625%2c81.07625 117.956875%2c78.745 117.384375%2c76.521875 Z' id='Path' fill='%23ACABB1'%3e%3c/path%3e %3cpath d='M236.521875%2c194.7825 C223.555625%2c194.7825 212.66125%2c203.650625 209.5725%2c215.651875 L236.521875%2c222.608125 L263.47125%2c215.651875 C260.3825%2c203.650625 249.488125%2c194.7825 236.521875%2c194.7825 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M208.695625%2c257.39125 L243.478125%2c264.3475 L243.478125%2c249.558125 C253.25625%2c247.040625 260.9525%2c239.3425 263.469375%2c229.565 L236.521875%2c222.60875 L201.739375%2c222.60875 L208.695625%2c243.478125 L208.695625%2c257.39125 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M263.47125%2c215.651875 L201.739375%2c215.651875 L201.739375%2c229.565 L201.739375%2c243.478125 L208.695625%2c243.478125 L208.695625%2c229.565 L263.469375%2c229.565 C264.041875%2c227.341875 264.348125%2c225.010625 264.348125%2c222.60875 C264.348125%2c220.206875 264.04375%2c217.875625 263.47125%2c215.651875 Z' id='Path' fill='%23ACABB1'%3e%3c/path%3e %3cpath d='M90.435%2c194.7825 C77.46875%2c194.7825 66.574375%2c203.650625 63.485625%2c215.651875 L90.435%2c222.608125 L117.384375%2c215.651875 C114.295625%2c203.650625 103.40125%2c194.7825 90.435%2c194.7825 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M62.60875%2c257.39125 L97.39125%2c264.3475 L97.39125%2c249.558125 C107.169375%2c247.040625 114.865625%2c239.3425 117.3825%2c229.565 L90.435%2c222.60875 L55.651875%2c222.60875 L62.608125%2c243.478125 L62.608125%2c257.39125 L62.60875%2c257.39125 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M117.384375%2c215.651875 L55.651875%2c215.651875 L55.651875%2c229.565 L55.651875%2c243.478125 L62.608125%2c243.478125 L62.608125%2c229.565 L117.381875%2c229.565 C117.954375%2c227.341875 118.260625%2c225.010625 118.260625%2c222.60875 C118.260625%2c220.206875 117.956875%2c217.875625 117.384375%2c215.651875 Z' id='Path' fill='%23ACABB1'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$Y = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/saudi-arabia%3c/title%3e %3cg id='flags/saudi-arabia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-saudi-arabia' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%236DA544' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(67.826250%2c 90.434375)' fill='%23F0F0F0'%3e %3cpath d='M22.60875%2c100.87 C22.60875%2c112.395625 31.9525%2c121.739375 43.478125%2c121.739375 L106.086875%2c121.739375 C106.086875%2c131.344375 113.873125%2c139.130625 123.478125%2c139.130625 L144.3475%2c139.130625 C153.9525%2c139.130625 161.73875%2c131.344375 161.73875%2c121.739375 L161.73875%2c100.87 L22.60875%2c100.87 Z' id='Path'%3e%3c/path%3e %3cpath d='M163.478125%2c0.000625 L163.478125%2c48.69625 C163.478125%2c56.368125 157.236875%2c62.609375 149.565%2c62.609375 L149.565%2c83.47875 C168.744375%2c83.47875 184.3475%2c67.875 184.3475%2c48.69625 L184.3475%2c0.000625 L163.478125%2c0.000625 Z' id='Path'%3e%3c/path%3e %3cpath d='M13.913125%2c48.69625 C13.913125%2c56.368125 7.671875%2c62.609375 0%2c62.609375 L0%2c83.47875 C19.179375%2c83.47875 34.7825%2c67.875 34.7825%2c48.69625 L34.7825%2c0.000625 L13.913125%2c0.000625 L13.913125%2c48.69625 Z' id='Path'%3e%3c/path%3e %3crect id='Rectangle' x='132.17375' y='0.000625' width='20.869375' height='48.695625'%3e%3c/rect%3e %3cpath d='M100.869375%2c27.82625 C100.869375%2c29.744375 99.30875%2c31.304375 97.39125%2c31.304375 C95.47375%2c31.304375 93.913125%2c29.74375 93.913125%2c27.82625 L93.913125%2c-1.77635684e-14 L73.04375%2c-1.77635684e-14 L73.04375%2c27.82625 C73.04375%2c29.744375 71.483125%2c31.304375 69.565625%2c31.304375 C67.648125%2c31.304375 66.0875%2c29.74375 66.0875%2c27.82625 L66.0875%2c-1.77635684e-14 L45.2175%2c-1.77635684e-14 L45.2175%2c27.82625 C45.2175%2c41.251875 56.14%2c52.174375 69.565625%2c52.174375 C74.73625%2c52.174375 79.53125%2c50.549375 83.47875%2c47.789375 C87.425625%2c50.54875 92.22125%2c52.174375 97.391875%2c52.174375 C98.433125%2c52.174375 99.456875%2c52.10125 100.46375%2c51.973125 C98.985%2c58.06625 93.4975%2c62.60875 86.956875%2c62.60875 L86.956875%2c83.478125 C106.13625%2c83.478125 121.739375%2c67.874375 121.739375%2c48.695625 L121.739375%2c27.82625 L121.739375%2c-1.77635684e-14 L100.87%2c-1.77635684e-14 L100.87%2c27.82625 L100.869375%2c27.82625 Z' id='Path'%3e%3c/path%3e %3crect id='Rectangle' x='45.2175' y='62.609375' width='31.304375' height='20.869375'%3e%3c/rect%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$X = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/scotland%3c/title%3e %3cg id='flags/scotland' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-scotland' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' fill='%230052B4'%3e %3cpath d='M257.41%2c33.075 C230.430625%2c12.336875 196.65875%2c0 160%2c0 C123.34125%2c0 89.56875%2c12.3375 62.589375%2c33.075 L160%2c130.485 L257.41%2c33.075 Z' id='Path'%3e%3c/path%3e %3cpath d='M33.074375%2c62.59 C12.3375%2c89.569375 0%2c123.34125 0%2c160 C0%2c196.65875 12.3375%2c230.43125 33.075%2c257.41125 L130.485625%2c160 L33.074375%2c62.59 Z' id='Path'%3e%3c/path%3e %3cpath d='M62.589375%2c286.925 C89.569375%2c307.663125 123.34125%2c320 160%2c320 C196.65875%2c320 230.430625%2c307.6625 257.410625%2c286.925 L160%2c189.515 L62.589375%2c286.925 Z' id='Path'%3e%3c/path%3e %3cpath d='M286.925%2c257.41 C307.663125%2c230.430625 320%2c196.65875 320%2c160 C320%2c123.34125 307.663125%2c89.569375 286.925%2c62.59 L189.515%2c160 L286.925%2c257.41 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$W = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/senegal%3c/title%3e %3cg id='flags/senegal' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-senegal' fill-rule='nonzero'%3e %3cpath d='M229.565%2c15.87625 C208.53%2c5.705 184.93125%2c0 160%2c0 C135.06875%2c0 111.47%2c5.705 90.435%2c15.87625 L76.521875%2c160 L90.435%2c304.12375 C111.47%2c314.295 135.06875%2c320 160%2c320 C184.93125%2c320 208.53%2c314.295 229.565%2c304.12375 L243.478125%2c160 L229.565%2c15.87625 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cg id='Group' transform='translate(0.000000%2c 15.881875)' fill='%23496E2D'%3e %3cpolygon id='Path' points='159.99875 88.46625 173.81125 130.97875 218.51625 130.97875 182.35125 157.255625 196.164375 199.77 159.99875 173.495 123.833125 199.77 137.64875 157.255625 101.48375 130.97875 146.185625 130.97875'%3e%3c/polygon%3e %3cpath d='M90.435%2c0 C36.91625%2c25.879375 0%2c80.685 0%2c144.118125 C0%2c207.55125 36.91625%2c262.356875 90.435%2c288.23625 L90.435%2c0 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M229.565%2c15.881875 L229.565%2c304.118125 C283.08375%2c278.23875 320%2c223.433125 320%2c160 C320%2c96.566875 283.08375%2c41.76125 229.565%2c15.881875 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$V = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/serbia%3c/title%3e %3cg id='flags/serbia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-serbia' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M160%2c0 C71.635%2c0 0%2c71.635 0%2c160 C0%2c179.57125 3.520625%2c198.319375 9.951875%2c215.651875 L310.04875%2c215.651875 C316.48%2c198.319375 320%2c179.57125 320%2c160 C320%2c71.635 248.365%2c0 160%2c0 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cg id='Group' transform='translate(9.951875%2c 0.000000)' fill='%23D80027'%3e %3cpath d='M150.048125%2c0 C81.25375%2c0 22.606875%2c43.42 -1.11022302e-15%2c104.348125 L300.096875%2c104.348125 C277.489375%2c43.42 218.8425%2c0 150.048125%2c0 Z' id='Path'%3e%3c/path%3e %3cpath d='M31.421875%2c90.435 L31.421875%2c170.25125 C31.421875%2c215.65375 90.735%2c229.565625 90.735%2c229.565625 C90.735%2c229.565625 150.0475%2c215.65375 150.0475%2c170.25125 L150.0475%2c90.435 L31.421875%2c90.435 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(55.651875%2c 62.608750)' fill='%23FFDA44'%3e %3cpolygon id='Path' points='10.251875 41.739375 79.8175 41.739375 79.8175 13.913125 65.904375 20.869375 45.035 1.77635684e-14 24.165 20.869375 10.251875 13.913125'%3e%3c/polygon%3e %3cpolygon id='Path' points='90.435 118.755625 45.2175 73.538125 0 118.755625 14.756875 133.5125 45.2175 103.051875 75.678125 133.5125'%3e%3c/polygon%3e %3c/g%3e %3cpath d='M146.086875%2c139.130625 L124.989375%2c139.130625 C126.175625%2c137.083125 126.865625%2c134.711875 126.865625%2c132.175625 C126.865625%2c124.490625 120.63625%2c118.2625 112.9525%2c118.2625 C107.643125%2c118.2625 103.0325%2c121.23625 100.686875%2c125.608125 C98.34125%2c121.236875 93.730625%2c118.2625 88.42125%2c118.2625 C80.7375%2c118.2625 74.508125%2c124.490625 74.508125%2c132.175625 C74.508125%2c134.711875 75.198125%2c137.08375 76.384375%2c139.130625 L55.651875%2c139.130625 C55.651875%2c146.815 62.345%2c153.04375 70.028125%2c153.04375 L69.565%2c153.04375 C69.565%2c160.728125 75.79375%2c166.956875 83.478125%2c166.956875 C83.478125%2c173.760625 88.364375%2c179.413125 94.8175%2c180.623125 L83.855%2c205.374375 C89.10875%2c207.51 94.85%2c208.69625 100.87%2c208.69625 C106.89%2c208.69625 112.63125%2c207.51 117.885%2c205.374375 L106.9225%2c180.623125 C113.375625%2c179.414375 118.261875%2c173.76125 118.261875%2c166.956875 C125.94625%2c166.956875 132.175%2c160.728125 132.175%2c153.04375 L131.711875%2c153.04375 C139.394375%2c153.04375 146.086875%2c146.814375 146.086875%2c139.130625 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$U = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/seychelles%3c/title%3e %3cg id='flags/seychelles' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-seychelles' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M268.005625%2c41.960625 C239.543125%2c15.903125 201.63%2c0 160%2c0 C153.185%2c0 146.469375%2c0.429375 139.878125%2c1.25625 L62.60875%2c90.435 L5.063125%2c200.081875 C8.780625%2c214.495 14.464375%2c228.11625 21.7975%2c240.655 L160%2c160 L268.005625%2c41.960625 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M293.206875%2c248.64875 L69.351875%2c291.84875 C95.12%2c309.599375 126.34375%2c320 160%2c320 C215.575625%2c320 264.525%2c291.660625 293.206875%2c248.64875 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M268.028125%2c41.981875 L21.88875%2c240.81 C28.326875%2c251.79 36.035%2c261.934375 44.814375%2c271.04 L320%2c160 C320%2c113.275625 299.968125%2c71.233125 268.028125%2c41.981875 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M0%2c160 C0%2c173.841875 1.75875%2c187.2725 5.063125%2c200.081875 L139.878125%2c1.25625 C61.01125%2c11.1525 0%2c78.45 0%2c160 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$T = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/sierra-leone%3c/title%3e %3cg id='flags/sierra-leone' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-sierra-leone' fill-rule='nonzero'%3e %3cpath d='M310.048125%2c215.651875 C316.48%2c198.31875 320%2c179.57125 320%2c160 C320%2c140.42875 316.48%2c121.68125 310.048125%2c104.348125 L160%2c90.435 L9.951875%2c104.348125 C3.52%2c121.68125 0%2c140.42875 0%2c160 C0%2c179.57125 3.52%2c198.31875 9.951875%2c215.651875 L160%2c229.565 L310.048125%2c215.651875 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cpath d='M160%2c320 C228.79375%2c320 287.44125%2c276.58 310.0475%2c215.651875 L9.95125%2c215.651875 C32.55875%2c276.58 91.205%2c320 160%2c320 Z' id='Path' fill='%23338AF3'%3e%3c/path%3e %3cpath d='M160%2c0 C91.205%2c0 32.55875%2c43.42 9.95125%2c104.348125 L310.048125%2c104.348125 C287.44125%2c43.42 228.79375%2c0 160%2c0 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$S = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/singapore%3c/title%3e %3cg id='flags/singapore' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-singapore' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M0%2c160.000625 C0%2c71.635 71.635%2c0 160%2c0 C248.365%2c0 320%2c71.635 320%2c160.000625' id='Path' fill='%23D80027'%3e%3c/path%3e %3cg id='Group' transform='translate(76.521250%2c 34.782500)' fill='%23F0F0F0'%3e %3cpath d='M20.87%2c48.695 C20.87%2c25.38375 37.253125%2c5.91 59.130625%2c1.131875 C55.768125%2c0.398125 52.28%2c4.4408921e-15 48.695625%2c4.4408921e-15 C21.80125%2c4.4408921e-15 -8.8817842e-15%2c21.80125 -8.8817842e-15%2c48.695625 C-8.8817842e-15%2c75.59 21.80125%2c97.39125 48.695625%2c97.39125 C52.27875%2c97.39125 55.7675%2c96.993125 59.130625%2c96.25875 C37.253125%2c91.480625 20.87%2c72.006875 20.87%2c48.695 Z' id='Path'%3e%3c/path%3e %3cpolygon id='Path' points='83.47875 3.478125 86.9325 14.10625 98.108125 14.10625 89.06625 20.675625 92.52 31.30375 83.47875 24.735625 74.4375 31.30375 77.89125 20.675625 68.85 14.10625 80.025 14.10625'%3e%3c/polygon%3e %3cpolygon id='Path' points='56.369375 24.3475 59.8225 34.97625 70.998125 34.97625 61.956875 41.545 65.410625 52.173125 56.369375 45.605 47.326875 52.173125 50.78125 41.545 41.739375 34.97625 52.915 34.97625'%3e%3c/polygon%3e %3cpolygon id='Path' points='110.58875 24.3475 114.043125 34.97625 125.218125 34.97625 116.17625 41.545 119.630625 52.173125 110.58875 45.605 101.5475 52.173125 105.00125 41.545 95.96 34.97625 107.135 34.97625'%3e%3c/polygon%3e %3cpolygon id='Path' points='100.154375 55.651875 103.608125 66.280625 114.783125 66.280625 105.741875 72.849375 109.195625 83.4775 100.154375 76.909375 91.113125 83.4775 94.566875 72.849375 85.525625 66.280625 96.7 66.280625'%3e%3c/polygon%3e %3cpolygon id='Path' points='66.80375 55.651875 70.256875 66.280625 81.433125 66.280625 72.39125 72.849375 75.845625 83.4775 66.80375 76.909375 57.761875 83.4775 61.215625 72.849375 52.174375 66.280625 63.35 66.280625'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$R = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/sint-eustatius%3c/title%3e %3cg id='flags/sint-eustatius' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-sint-eustatius' fill-rule='nonzero'%3e %3cpath d='M69.820625%2c292.17375 C95.499375%2c309.726875 126.5475%2c320 160%2c320 C193.4525%2c320 224.50125%2c309.726875 250.179375%2c292.17375 L160%2c278.260625 L69.820625%2c292.17375 Z' id='SVGCleanerId_0' fill='%23D80027'%3e%3c/path%3e %3cpath d='M250.179375%2c27.82625 C224.50125%2c10.273125 193.4525%2c0 160%2c0 C126.5475%2c0 95.498125%2c10.273125 69.820625%2c27.82625 L160%2c41.739375 L250.179375%2c27.82625 Z' id='SVGCleanerId_1' fill='%23D80027'%3e%3c/path%3e %3cpath d='M69.820625%2c292.17375 C95.499375%2c309.726875 126.5475%2c320 160%2c320 C193.4525%2c320 224.50125%2c309.726875 250.179375%2c292.17375 L160%2c278.260625 L69.820625%2c292.17375 Z' id='SVGCleanerId_0_1_' fill='%23D80027'%3e%3c/path%3e %3cpath d='M250.179375%2c27.82625 C224.50125%2c10.273125 193.4525%2c0 160%2c0 C126.5475%2c0 95.498125%2c10.273125 69.820625%2c27.82625 L160%2c41.739375 L250.179375%2c27.82625 Z' id='SVGCleanerId_1_1_' fill='%23D80027'%3e%3c/path%3e %3cg id='Group' transform='translate(0.336250%2c 27.825625)' fill='%230052B4'%3e %3cpath d='M319.25625%2c121.739375 C315.465625%2c72.358125 285.46125%2c24.348125 249.843125%2c1.77635684e-14 L69.484375%2c1.77635684e-14 C30.024375%2c26.975625 3.2575%2c71.155625 -6.80011603e-15%2c121.739375 L159.66375%2c132.174375 L319.25625%2c121.739375 Z' id='Path'%3e%3c/path%3e %3cpath d='M-6.80011603e-15%2c142.609375 C3.2575%2c193.19375 30.02375%2c237.373125 69.48375%2c264.34875 L249.8425%2c264.34875 C289.304375%2c237.37375 316.069375%2c193.19375 319.326875%2c142.609375 L159.66375%2c132.174375 L-6.80011603e-15%2c142.609375 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M319.5925%2c149.564375 L170.435%2c149.564375 L170.435%2c20.869375 L149.565625%2c20.869375 L149.565625%2c149.564375 L0.336875%2c149.564375 C0.115%2c153.014375 0%2c156.49375 0%2c160 C0%2c163.505625 0.114375%2c166.984375 0.33625%2c170.434375 L149.565625%2c170.434375 L149.565625%2c299.130625 L170.435%2c299.130625 L170.435%2c170.434375 L319.664375%2c170.434375 C319.885625%2c166.984375 320%2c163.505625 320%2c160 C320%2c156.519375 319.859375%2c153.03875 319.5925%2c149.564375 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpolygon id='Path' fill='%23F0F0F0' points='62.60875 160 159.999375 98.78625 257.39125 160 159.999375 221.214375'%3e%3c/polygon%3e %3cpolygon id='Path' fill='%236DA544' points='104.348125 187.82625 229.565 187.82625 201.739375 146.086875 187.82625 160 173.913125 153.04375 160 173.913125 132.17375 173.913125 118.260625 160'%3e%3c/polygon%3e %3cpolygon id='Path' fill='%23FFDA44' points='160 118.260625 163.45375 128.88875 174.628125 128.88875 165.5875 135.458125 169.04125 146.086875 160 139.518125 150.95875 146.086875 154.4125 135.458125 145.371875 128.88875 156.54625 128.88875'%3e%3c/polygon%3e %3cpath d='M159.999375%2c81.29625 L34.7825%2c160 L159.999375%2c238.70375 L285.2175%2c160 L159.999375%2c81.29625 Z M74%2c160 L159.999375%2c105.945625 L246%2c160 L159.999375%2c214.054375 L74%2c160 Z' id='Shape' fill='%23D80027'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$Q = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/sint-maarten%3c/title%3e %3cg id='flags/sint-maarten' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-sint-maarten' fill-rule='nonzero'%3e %3cpath d='M146.087045%2c173.913125 C146.087045%2c173.913125 46.9565166%2c46.840625 46.8627667%2c46.863125 C75.8164885%2c17.90875 115.817074%2c0 160.000156%2c0 C248.36507%2c0 320%2c71.635 320%2c160 L146.087045%2c173.913125 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M146.087045%2c160 C146.087045%2c160 46.9565166%2c273.159375 46.8627667%2c273.136875 C75.8164885%2c302.09125 115.817074%2c320 160.000156%2c320 C248.36507%2c320 320%2c248.365 320%2c160 L146.087045%2c160 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M46.8627667%2c46.8625 C-15.6209222%2c109.34625 -15.6209222%2c210.653125 46.8627667%2c273.1375 C72.6833665%2c247.316875 97.5164673%2c222.48375 160.000156%2c160 L46.8627667%2c46.8625 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cg id='Group' transform='translate(17.391546%2c 111.304375)' fill='%23FFDA44'%3e %3cpath d='M0.146874857%2c48.69625 C0.059374942%2c49.845 -4.44088776e-15%2c51.0025 -4.44088776e-15%2c52.17375 C-4.44088776e-15%2c77.14625 20.2449802%2c97.39125 45.2174558%2c97.39125 C70.1899315%2c97.39125 90.4349117%2c77.14625 90.4349117%2c52.17375 C90.4349117%2c51.0025 90.3755367%2c49.844375 90.2880368%2c48.69625 L0.146874857%2c48.69625 Z' id='Path'%3e%3c/path%3e %3cellipse id='Oval' cx='45.2174558' cy='13.913125' rx='13.9131114' ry='13.913125'%3e%3c/ellipse%3e %3c/g%3e %3cpath d='M31.3046569%2c121.739375 L31.3046569%2c166.956875 C31.3046569%2c190.919375 62.6090014%2c198.26125 62.6090014%2c198.26125 C62.6090014%2c198.26125 93.9133458%2c190.919375 93.9133458%2c166.956875 L93.9133458%2c121.739375 L31.3046569%2c121.739375 L31.3046569%2c121.739375 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M62.6240013%2c183.7 C56.816507%2c181.61 45.2171433%2c176.26875 45.2171433%2c166.95625 L45.2171433%2c135.651875 L80.0002344%2c135.651875 L80.0002344%2c166.95625 C80.0002344%2c176.299375 68.4021207%2c181.6275 62.6240013%2c183.7 Z' id='Path' fill='%23338AF3'%3e%3c/path%3e %3cpolygon id='Path' fill='%23F3F3F3' points='69.5652446 153.04375 69.5652446 146.086875 62.6090014 142.60875 55.6521332 146.086875 55.6521332 153.04375 52.1740115 156.521875 52.1740115 170.435 73.0439912 170.435 73.0439912 156.521875'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$P = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/slovakia%3c/title%3e %3cg id='flags/slovakia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-slovakia' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M160%2c320 C248.365%2c320 320%2c248.365 320%2c160 C320%2c140.42875 316.48%2c121.680625 310.048125%2c104.348125 L9.951875%2c104.348125 C3.520625%2c121.680625 0%2c140.42875 0%2c160 C0%2c248.365 71.635%2c320 160%2c320 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M160%2c320 C228.794375%2c320 287.44125%2c276.58 310.048125%2c215.651875 L9.951875%2c215.651875 C32.55875%2c276.58 91.205625%2c320 160%2c320 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M41.37375%2c90.435 L41.37375%2c170.25125 C41.37375%2c215.65375 100.686875%2c229.565625 100.686875%2c229.565625 C100.686875%2c229.565625 159.999375%2c215.65375 159.999375%2c170.25125 L159.999375%2c90.435 L41.37375%2c90.435 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cpath d='M55.286875%2c90.435 L55.286875%2c170.25125 C55.286875%2c175.58125 56.470625%2c180.615 58.815625%2c185.334375 C82.086875%2c185.334375 116.869375%2c185.334375 142.5575%2c185.334375 C144.9025%2c180.615625 146.08625%2c175.58125 146.08625%2c170.25125 L146.08625%2c90.435 L55.286875%2c90.435 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpolygon id='Path' fill='%23F0F0F0' points='128.5125 146.086875 107.64375 146.086875 107.64375 132.17375 121.556875 132.17375 121.556875 118.260625 107.64375 118.260625 107.64375 104.348125 93.730625 104.348125 93.730625 118.260625 79.818125 118.260625 79.818125 132.17375 93.730625 132.17375 93.730625 146.086875 72.860625 146.086875 72.860625 160 93.730625 160 93.730625 173.913125 107.64375 173.913125 107.64375 160 128.5125 160'%3e%3c/polygon%3e %3cpath d='M77.794375%2c204.75625 C86.76%2c210.390625 95.97125%2c213.661875 100.686875%2c215.116875 C105.4025%2c213.6625 114.61375%2c210.390625 123.579375%2c204.75625 C132.620625%2c199.07375 138.95875%2c192.575 142.5575%2c185.334375 C138.588125%2c182.52625 133.745%2c180.87 128.513125%2c180.87 C126.608125%2c180.87 124.7575%2c181.095625 122.978125%2c181.51 C119.2075%2c172.9425 110.648125%2c166.956875 100.6875%2c166.956875 C90.726875%2c166.956875 82.166875%2c172.9425 78.396875%2c181.51 C76.6175%2c181.095625 74.76625%2c180.87 72.861875%2c180.87 C67.63%2c180.87 62.786875%2c182.52625 58.8175%2c185.334375 C62.414375%2c192.574375 68.7525%2c199.073125 77.794375%2c204.75625 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$O = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/slovenia%3c/title%3e %3cg id='flags/slovenia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-slovenia' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M310.048125%2c104.348125 L139.130625%2c104.348125 L139.130625%2c62.60875 L55.651875%2c62.60875 L55.651875%2c104.348125 L9.951875%2c104.348125 C3.520625%2c121.680625 0%2c140.42875 0%2c160 C0%2c179.57125 3.520625%2c198.31875 9.951875%2c215.651875 L160%2c229.565 L310.048125%2c215.651875 C316.479375%2c198.31875 320%2c179.57125 320%2c160 C320%2c140.42875 316.479375%2c121.680625 310.048125%2c104.348125 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M160%2c320 C228.794375%2c320 287.44125%2c276.58 310.048125%2c215.651875 L9.951875%2c215.651875 C32.55875%2c276.58 91.205625%2c320 160%2c320 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M55.651875%2c104.348125 L55.651875%2c118.260625 C55.651875%2c150.21125 97.39125%2c160.000625 97.39125%2c160.000625 C97.39125%2c160.000625 139.130625%2c150.21125 139.130625%2c118.260625 L139.130625%2c104.348125 L125.2175%2c118.26125 L97.39125%2c97.391875 L69.565%2c118.26125 L55.651875%2c104.348125 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$N = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/solomon-islands%3c/title%3e %3cg id='flags/solomon-islands' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-solomon-islands' fill-rule='nonzero'%3e %3cpath d='M273.141285%2c273.141331 C333.148096%2c213.134579 335.517468%2c117.33165 280.274402%2c54.4824036 L159.999531%2c159.999063 L54.4821443%2c280.274441 C117.331452%2c335.517453 213.133849%2c333.148083 273.141285%2c273.141331 Z' id='Path' fill='%23496E2D'%3e%3c/path%3e %3cpath d='M46.8584024%2c46.8586692 C106.865213%2c-13.1480829 202.668236%2c-15.5174531 265.517543%2c39.7255588 L159.999531%2c160.001562 L39.7259101%2c265.517596 C-15.5177808%2c202.66835 -13.1477833%2c106.865421 46.8584024%2c46.8586692 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M265.516293%2c39.7249338 L39.7246601%2c265.516971 C42.0071576%2c268.113841 44.3771551%2c270.661336 46.8577774%2c273.140706 C49.3377748%2c275.620701 51.885897%2c277.990696 54.4833943%2c280.274441 L280.273777%2c54.4824036 C277.99128%2c51.8849089 275.620657%2c49.3374141 273.140035%2c46.8567942 C270.661288%2c44.3780493 268.113165%2c42.0074291 265.516293%2c39.7249338 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cg id='Group' transform='translate(52.783396%2c 55.647401)' fill='%23F0F0F0'%3e %3cpolygon id='Path' points='14.6293593 -8.88176601e-15 18.0837306 10.6293532 29.2593437 10.6293532 20.2181033 17.1974648 23.6712246 27.826818 14.6293593 21.2574565 5.58749402 27.826818 9.04186532 17.1974648 -1.77635494e-14 10.6293532 11.176238 10.6293532'%3e%3c/polygon%3e %3cpolygon id='Path' points='71.7161732 -8.88176601e-15 75.1705445 10.6293532 86.3455325 10.6293532 77.3042922 17.1974648 80.7580385 27.826818 71.7161732 21.2574565 62.6743079 27.826818 66.1286792 17.1974648 57.0868139 10.6293532 68.2624269 10.6293532'%3e%3c/polygon%3e %3cpolygon id='Path' points='14.6293593 55.654261 18.0837306 66.2836143 29.2593437 66.2836143 20.2181033 72.8523508 23.6712246 83.4817041 14.6293593 76.9123425 5.58749402 83.4817041 9.04186532 72.8523508 -1.77635494e-14 66.2836143 11.176238 66.2836143'%3e%3c/polygon%3e %3cpolygon id='Path' points='71.7161732 55.654261 75.1705445 66.2836143 86.3455325 66.2836143 77.3042922 72.8523508 80.7580385 83.4817041 71.7161732 76.9123425 62.6743079 83.4817041 66.1286792 72.8523508 57.0868139 66.2836143 68.2624269 66.2836143'%3e%3c/polygon%3e %3cpolygon id='Path' points='43.1730788 27.826818 46.6274501 38.4561713 57.8024381 38.4561713 48.7611978 45.0249078 52.2149441 55.654261 43.1730788 49.0848995 34.1312134 55.654261 37.5849597 45.0249078 28.5430944 38.4561713 39.7193325 38.4561713'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$M = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/somalia%3c/title%3e %3cg id='flags/somalia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-somalia' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23338AF3' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpolygon id='Path' fill='%23F0F0F0' points='160 83.478125 177.2675 136.62125 233.145 136.62125 187.93875 169.465 205.20625 222.60875 160 189.764375 114.79375 222.60875 132.06125 169.465 86.854375 136.62125 142.7325 136.62125'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$L = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/somaliland%3c/title%3e %3cg id='flags/somaliland' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-somaliland' fill-rule='nonzero'%3e %3cpath d='M310.048125%2c215.651875 C316.479375%2c198.31875 320%2c179.57125 320%2c160 C320%2c140.42875 316.479375%2c121.68125 310.048125%2c104.348125 L160%2c90.435 L9.951875%2c104.348125 C3.520625%2c121.68125 0%2c140.42875 0%2c160 C0%2c179.57125 3.520625%2c198.31875 9.951875%2c215.651875 L160%2c229.565 L310.048125%2c215.651875 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cpath d='M160%2c320 C228.79375%2c320 287.44125%2c276.58 310.0475%2c215.651875 L9.95125%2c215.651875 C32.55875%2c276.58 91.205%2c320 160%2c320 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M160%2c0 C91.205%2c0 32.55875%2c43.42 9.95125%2c104.348125 L310.048125%2c104.348125 C287.44125%2c43.42 228.79375%2c0 160%2c0 Z' id='Path' fill='%23496E2D'%3e%3c/path%3e %3cpolygon id='Path' fill='black' points='160 125.2175 168.633125 151.788125 196.5725 151.788125 173.969375 168.21125 182.60375 194.7825 160 178.361875 137.39625 194.7825 146.030625 168.21125 123.4275 151.788125 151.366875 151.788125'%3e%3c/polygon%3e %3cg id='Group' transform='translate(98.550625%2c 31.304375)' fill='%23F0F0F0'%3e %3cpath d='M108.985625%2c8.8817842e-15 L108.985625%2c32.463125 C108.985625%2c37.57875 104.825%2c41.73875 99.710625%2c41.73875 L99.710625%2c55.651875 C112.496875%2c55.651875 122.89875%2c45.25 122.89875%2c32.463125 L122.89875%2c8.8817842e-15 L108.985625%2c8.8817842e-15 Z' id='Path'%3e%3c/path%3e %3cpath d='M9.275625%2c32.463125 C9.275625%2c37.57875 5.115%2c41.73875 0%2c41.73875 L0%2c55.651875 C12.786875%2c55.651875 23.18875%2c45.25 23.18875%2c32.463125 L23.18875%2c8.8817842e-15 L9.275625%2c8.8817842e-15 L9.275625%2c32.463125 Z' id='Path'%3e%3c/path%3e %3crect id='Rectangle' x='88.11375' y='8.8817842e-15' width='13.913125' height='32.463125'%3e%3c/rect%3e %3cpath d='M67.24625%2c18.55 C67.24625%2c19.82875 66.205625%2c20.869375 64.9275%2c20.869375 C63.64875%2c20.869375 62.608125%2c19.82875 62.608125%2c18.55 L62.608125%2c4.4408921e-15 L48.695%2c4.4408921e-15 L48.695%2c18.55 C48.695%2c19.82875 47.655%2c20.869375 46.37625%2c20.869375 C45.0975%2c20.869375 44.0575%2c19.82875 44.0575%2c18.55 L44.0575%2c4.4408921e-15 L30.144375%2c4.4408921e-15 L30.144375%2c18.55 C30.144375%2c27.50125 37.425625%2c34.7825 46.37625%2c34.7825 C49.823125%2c34.7825 53.020625%2c33.699375 55.65125%2c31.86 C58.283125%2c33.699375 61.48%2c34.7825 64.926875%2c34.7825 C65.62125%2c34.7825 66.30375%2c34.73375 66.975%2c34.648125 C65.98875%2c38.71 62.330625%2c41.73875 57.970625%2c41.73875 L57.970625%2c55.651875 C70.756875%2c55.651875 81.15875%2c45.25 81.15875%2c32.463125 L81.15875%2c18.55 L81.15875%2c4.4408921e-15 L67.245625%2c4.4408921e-15 L67.24625%2c18.55 L67.24625%2c18.55 Z' id='Path'%3e%3c/path%3e %3crect id='Rectangle' x='30.145' y='41.739375' width='20.869375' height='13.913125'%3e%3c/rect%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$K = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/south-africa%3c/title%3e %3cg id='flags/south-africa' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-south-africa' fill-rule='nonzero'%3e %3cellipse id='Oval' fill='%23F0F0F0' cx='160.000156' cy='160' rx='159.999844' ry='160'%3e%3c/ellipse%3e %3cpath d='M46.8627667%2c273.1375 C-15.6209222%2c210.653125 -15.6209222%2c109.346875 46.8627667%2c46.8625 C46.8583917%2c46.869375 139.130802%2c160 139.130802%2c160 L46.8627667%2c273.1375 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M139.130802%2c160 L21.2209168%2c80.320625 C17.5652953%2c86.675 14.3415485%2c93.3075 11.5715512%2c100.1725 L71.2646179%2c160.000625 L11.5734262%2c219.831875 C14.3409235%2c226.691875 17.5615454%2c233.32 21.2146668%2c239.67 L139.130802%2c160 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M318.645626%2c139.130625 L139.126427%2c139.130625 L46.8615167%2c46.865 C36.9190264%2c56.8075 28.2809099%2c68.051875 21.2209168%2c80.32125 L100.745214%2c160 L21.2146668%2c239.66875 C28.2746599%2c251.94125 36.9165264%2c263.189375 46.8615167%2c273.134375 L139.126427%2c180.869375 L318.645626%2c180.869375 C319.535%2c174.038125 320%2c167.073125 320%2c160 C320%2c152.926875 319.535%2c145.961875 318.645626%2c139.130625 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M62.5865014%2c286.923125 C89.5671%2c307.661875 123.340192%2c320 160.000156%2c320 C233.924459%2c320 296.128148%2c269.861875 314.48813%2c201.739375 L147.770793%2c201.739375 L62.5865014%2c286.923125 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M314.48813%2c118.260625 C296.128148%2c50.138125 233.924459%2c0 160.000156%2c0 C123.340192%2c0 89.5671%2c12.338125 62.5865014%2c33.076875 L147.770168%2c118.260625 L314.48813%2c118.260625 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$J = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/south-korea%3c/title%3e %3cg id='flags/south-korea' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-south-korea' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M215.651875%2c160 C215.651875%2c173.913125 190.735625%2c208.695625 160%2c208.695625 C129.264375%2c208.695625 104.348125%2c173.913125 104.348125%2c160 C104.348125%2c129.26375 129.264375%2c104.348125 160%2c104.348125 C190.735625%2c104.348125 215.651875%2c129.26375 215.651875%2c160 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M215.651875%2c160 C215.651875%2c190.73625 190.735625%2c215.651875 160%2c215.651875 C129.264375%2c215.651875 104.348125%2c190.73625 104.348125%2c160' id='Path' fill='%230052B4'%3e%3c/path%3e %3crect id='Rectangle' fill='black' transform='translate(231.323521%2c 206.731184) rotate(-45.000000) translate(-231.323521%2c -206.731184) ' x='220.888933' y='199.774688' width='20.8691749' height='13.9129916'%3e%3c/rect%3e %3cpolygon id='Rectangle' fill='black' transform='translate(206.725324%2c 231.327656) rotate(-45.000000) translate(-206.725324%2c -231.327656) ' points='196.290737 224.37116 217.159912 224.37116 217.159912 238.284151 196.290737 238.284151'%3e%3c/polygon%3e %3cpolygon id='Rectangle' fill='black' transform='translate(260.841228%2c 236.238858) rotate(-45.000000) translate(-260.841228%2c -236.238858) ' points='250.40664 229.282362 271.275815 229.282362 271.275815 243.195354 250.40664 243.195354'%3e%3c/polygon%3e %3crect id='Rectangle' fill='black' transform='translate(236.243312%2c 260.839611) rotate(-45.000000) translate(-236.243312%2c -260.839611) ' x='225.808725' y='253.883115' width='20.8691749' height='13.9129916'%3e%3c/rect%3e %3cpolygon id='Rectangle' fill='black' transform='translate(246.081564%2c 221.486161) rotate(-45.000000) translate(-246.081564%2c -221.486161) ' points='235.646977 214.529666 256.516151 214.529666 256.516151 228.442657 235.646977 228.442657'%3e%3c/polygon%3e %3crect id='Rectangle' fill='black' transform='translate(221.490291%2c 246.082647) rotate(-45.000000) translate(-221.490291%2c -246.082647) ' x='211.055704' y='239.126151' width='20.8691749' height='13.9129916'%3e%3c/rect%3e %3crect id='Rectangle' fill='black' transform='translate(233.791798%2c 86.211183) rotate(-135.000000) translate(-233.791798%2c -86.211183) ' x='205.966127' y='79.2546873' width='55.6513413' height='13.9129916'%3e%3c/rect%3e %3crect id='Rectangle' fill='black' transform='translate(206.736299%2c 88.676747) rotate(-135.000000) translate(-206.736299%2c -88.676747) ' x='196.301711' y='81.7205642' width='20.8691749' height='13.9123666'%3e%3c/rect%3e %3crect id='Rectangle' fill='black' transform='translate(231.327937%2c 113.269476) rotate(-135.000000) translate(-231.327937%2c -113.269476) ' x='220.893349' y='106.313293' width='20.8691749' height='13.9123666'%3e%3c/rect%3e %3cpolygon id='Rectangle' fill='black' transform='translate(236.237388%2c 59.162374) rotate(-135.000000) translate(-236.237388%2c -59.162374) ' points='225.802801 52.2058783 246.671975 52.2058783 246.671975 66.1188699 225.802801 66.1188699'%3e%3c/polygon%3e %3crect id='Rectangle' fill='black' transform='translate(260.842380%2c 83.757920) rotate(-135.000000) translate(-260.842380%2c -83.757920) ' x='250.407792' y='76.8014245' width='20.8691749' height='13.9129916'%3e%3c/rect%3e %3cpolygon id='Rectangle' fill='black' transform='translate(71.458362%2c 248.543330) rotate(45.000000) translate(-71.458362%2c -248.543330) ' points='43.6326912 241.586834 99.2840325 241.586834 99.2840325 255.499826 43.6326912 255.499826'%3e%3c/polygon%3e %3cpolygon id='Rectangle' fill='black' transform='translate(98.509831%2c 246.078810) rotate(45.000000) translate(-98.509831%2c -246.078810) ' points='88.0752438 239.122627 108.944419 239.122627 108.944419 253.034993 88.0752438 253.034993'%3e%3c/polygon%3e %3crect id='Rectangle' fill='black' transform='translate(73.915976%2c 221.486996) rotate(45.000000) translate(-73.915976%2c -221.486996) ' x='63.4813889' y='214.5305' width='20.8691749' height='13.9129916'%3e%3c/rect%3e %3crect id='Rectangle' fill='black' transform='translate(100.970970%2c 219.026808) rotate(45.000000) translate(-100.970970%2c -219.026808) ' x='73.1452997' y='212.070312' width='55.6513413' height='13.9129916'%3e%3c/rect%3e %3cpolygon id='Rectangle' fill='black' transform='translate(71.457495%2c 71.456875) rotate(135.000000) translate(-71.457495%2c -71.456875) ' points='43.6318248 64.5003792 99.2831661 64.5003792 99.2831661 78.4133708 43.6318248 78.4133708'%3e%3c/polygon%3e %3cpolygon id='Rectangle' fill='black' transform='translate(86.209514%2c 86.210112) rotate(135.000000) translate(-86.209514%2c -86.210112) ' points='58.3838437 79.2536159 114.035185 79.2536159 114.035185 93.1666075 58.3838437 93.1666075'%3e%3c/polygon%3e %3crect id='Rectangle' fill='black' transform='translate(100.975572%2c 100.973788) rotate(135.000000) translate(-100.975572%2c -100.973788) ' x='73.1499017' y='94.0176046' width='55.6513413' height='13.9123666'%3e%3c/rect%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$I = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/south-sudan%3c/title%3e %3cg id='flags/south-sudan' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-south-sudan' fill-rule='nonzero'%3e %3cellipse id='Oval' fill='%23F0F0F0' cx='160.000156' cy='160' rx='159.999844' ry='160'%3e%3c/ellipse%3e %3cpath d='M307.518137%2c97.970625 C283.287536%2c40.41375 226.367591%2c0 160.000156%2c0 C115.816449%2c0 75.8208635%2c17.911875 46.8683917%2c46.868125 L86.9371026%2c97.970625 L307.518137%2c97.970625 L307.518137%2c97.970625 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M87.3914772%2c221.45 L46.8683917%2c273.131875 C75.8208635%2c302.088125 115.816449%2c320 160.000156%2c320 C226.591341%2c320 283.673785%2c279.31625 307.765012%2c221.45 L87.3914772%2c221.45 L87.3914772%2c221.45 Z' id='Path' fill='%23496E2D'%3e%3c/path%3e %3cpath d='M34.7827785%2c117.68125 L34.7827785%2c201.73875 L314.488755%2c201.73875 C318.077502%2c188.431875 320%2c174.441875 320%2c160 C320%2c145.34875 318.026252%2c131.16125 314.336881%2c117.68125 L34.7827785%2c117.68125 L34.7827785%2c117.68125 Z' id='Path' fill='%23A2001D'%3e%3c/path%3e %3cpath d='M46.8627667%2c46.8625 C-15.6209222%2c109.34625 -15.6209222%2c210.653125 46.8627667%2c273.1375 C72.6833665%2c247.316875 97.5164673%2c222.48375 160.000156%2c160 L46.8627667%2c46.8625 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpolygon id='Path' fill='%23FFDA44' points='52.1165116 120.22 71.6446175 147.470625 103.599586 137.3175 83.7177307 164.313125 103.245837 191.565 71.4283677 180.998125 51.5458872 207.993125 51.7646369 174.46625 19.945918 163.898125 51.8983868 153.745625'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$H = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/spain%3c/title%3e %3cg id='flags/spain' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-spain' fill-rule='nonzero'%3e %3cpath d='M0%2c160 C0%2c179.57125 3.520625%2c198.31875 9.951875%2c215.651875 L160%2c229.565 L310.048125%2c215.651875 C316.479375%2c198.31875 320%2c179.57125 320%2c160 C320%2c140.42875 316.479375%2c121.68125 310.048125%2c104.348125 L160%2c90.435 L9.951875%2c104.348125 C3.520625%2c121.68125 0%2c140.42875 0%2c160 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cg id='Group' transform='translate(9.951875%2c 0.000000)' fill='%23D80027'%3e %3cpath d='M300.09625%2c104.348125 C277.489375%2c43.420625 218.8425%2c0 150.048125%2c0 C81.25375%2c0 22.606875%2c43.420625 -1.11022302e-15%2c104.348125 L300.09625%2c104.348125 Z' id='Path'%3e%3c/path%3e %3cpath d='M-1.11022302e-15%2c215.651875 C22.606875%2c276.579375 81.25375%2c320 150.048125%2c320 C218.8425%2c320 277.489375%2c276.579375 300.09625%2c215.651875 L-1.11022302e-15%2c215.651875 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$G = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/sri-lanka%3c/title%3e %3cg id='flags/sri-lanka' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-sri-lanka' fill-rule='nonzero'%3e %3cpolygon id='Path' fill='%23FF9811' points='0.312508842 27.8263587 0.311884448 27.8263587 0.311884448 292.174266 0.312508842 292.174266 0.312508842 160.00125'%3e%3c/polygon%3e %3cellipse id='Oval' fill='%23FFDA44' cx='160.155942' cy='160' rx='159.844058' ry='160'%3e%3c/ellipse%3e %3cpath d='M125.408456%2c27.8263587 L70.0653564%2c27.8263587 C67.6127396%2c29.5044903 65.2125718%2c31.2513721 62.8604822%2c33.0595041 L48.9608632%2c160 L62.8604822%2c286.940496 C65.2125718%2c288.749253 67.6127396%2c290.496135 70.0653564%2c292.173641 L125.408456%2c292.173641 L125.408456%2c27.8263587 Z' id='Path' fill='%23FF9811'%3e%3c/path%3e %3cpath d='M0.312508842%2c160.00125 C0.312508842%2c211.717077 24.8311845%2c257.693507 62.8604822%2c286.941746 L62.8604822%2c33.0601291 C24.8311845%2c62.3089934 0.312508842%2c108.285423 0.312508842%2c160.00125 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpolygon id='Path' fill='%23FFDA44' points='257.453275 97.540381 257.453275 101.543522 257.601881 101.566022'%3e%3c/polygon%3e %3cpath d='M307.260504%2c201.739538 L277.144142%2c201.739538 L264.403397%2c215.652717 L264.403397%2c243.479076 L236.604159%2c243.479076 L236.604159%2c229.565897 L250.503778%2c229.565897 L250.503778%2c201.739538 L187.955805%2c201.739538 L187.955805%2c219.130856 L174.056186%2c219.130856 L174.056186%2c185.986352 C169.791579%2c182.165087 167.106688%2c176.61444 167.106688%2c170.435041 L167.106688%2c80.0003125 C167.106688%2c68.4746425 176.441368%2c59.130856 187.955805%2c59.130856 L187.955805%2c187.826984 L215.755043%2c187.826984 L225.293275%2c179.870078 C223.627393%2c175.898187 222.70454%2c171.536295 222.70454%2c166.957527 L222.70454%2c146.088071 L201.855424%2c146.088071 L201.855424%2c104.349158 L243.553656%2c104.349158 C243.553656%2c97.3928804 253.978527%2c90.4359783 253.978527%2c90.4359783 C253.978527%2c90.4359783 264.403397%2c97.3922554 264.403397%2c104.349158 L264.403397%2c114.784198 L264.403397%2c146.088696 C272.135259%2c146.180571 284.419573%2c145.979945 297.691052%2c146.088696 C294.20444%2c139.988672 292.202011%2c132.750519 292.202011%2c125.219239 C292.202011%2c112.943566 297.496866%2c101.907273 305.924926%2c94.2697432 C293.776731%2c67.322763 274.391817%2c44.3464232 250.248401%2c27.8263587 L146.257572%2c27.8263587 L146.257572%2c292.174891 L250.249026%2c292.174891 C279.607374%2c272.086688 301.928809%2c242.454697 312.758287%2c207.743311 L307.260504%2c201.739538 Z' id='Path' fill='%23A2001D'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$F = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/st-barts%3c/title%3e %3cg id='flags/st-barts' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-st-barts' transform='translate(-0.000000%2c 0.000000)' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(34.318777%2c 111.304429)' fill='%23ACABB1'%3e %3cpath d='M251.36182%2c17.3911412 L198.724266%2c17.3911412 C198.724266%2c7.78638727 190.937879%2c-1.7778152e-14 181.333125%2c-1.7778152e-14 L167.419837%2c27.825951 C167.419837%2c27.825951 182.260761%2c69.5651902 181.79663%2c69.5651902 L199.187771%2c69.5651902 C208.793151%2c69.5651902 216.578912%2c61.7794284 216.578912%2c52.174049 C226.184292%2c52.174049 233.970054%2c44.3882873 233.970054%2c34.7829079 L233.390828%2c34.7829079 C242.995582%2c34.7822823 251.36182%2c26.9965206 251.36182%2c17.3911412 Z' id='Path'%3e%3c/path%3e %3cpath d='M1.3333614e-14%2c17.3911412 L52.6375542%2c17.3911412 C52.6375542%2c7.78638727 60.4239415%2c-1.7778152e-14 70.0286954%2c-1.7778152e-14 L83.9419837%2c27.825951 C83.9419837%2c27.825951 69.1010595%2c69.5651902 69.5651902%2c69.5651902 L52.174049%2c69.5651902 C42.5686696%2c69.5651902 34.7829079%2c61.7794284 34.7829079%2c52.174049 C25.1775284%2c52.174049 17.3917667%2c44.3882873 17.3917667%2c34.7829079 L17.9709918%2c34.7829079 C8.36561242%2c34.7822823 1.3333614e-14%2c26.9965206 1.3333614e-14%2c17.3911412 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpolygon id='Path' fill='%23FFDA44' points='215.651902 222.608233 215.651902 229.564565 104.347473 229.564565 104.347473 222.608233 76.5215216 222.608233 76.5215216 250.434184 104.347473 250.434184 104.347473 257.390516 215.651902 257.390516 215.651902 250.434184 243.477853 250.434184 243.477853 222.608233'%3e%3c/polygon%3e %3cpath d='M104.347473%2c111.303804 L104.347473%2c180.868369 C104.347473%2c223.467688 159.999374%2c236.520896 159.999374%2c236.520896 C159.999374%2c236.520896 215.651276%2c223.467688 215.651276%2c180.868369 L215.651276%2c111.303804 L159.999374%2c104.347473 L104.347473%2c111.303804 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3crect id='Rectangle' fill='%23D80027' x='104.348098' y='139.132882' width='111.303804' height='41.7392392'%3e%3c/rect%3e %3cpolygon id='Path' fill='%23FFDA44' points='187.825325 76.5215216 187.825325 86.9563314 180.868994 90.4348098 173.912663 83.4778529 173.912663 62.6082333 146.086712 62.6082333 146.086712 83.4778529 139.13038 90.4348098 132.173424 86.9563314 132.173424 76.5215216 104.347473 76.5215216 104.347473 111.303804 215.651902 111.303804 215.651902 76.5215216'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$E = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/st-lucia%3c/title%3e %3cg id='flags/st-lucia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-st-lucia' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23338AF3' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpolygon id='Path' fill='%23F3F3F3' points='100.869375 215.651875 219.130625 215.651875 160 76.521875'%3e%3c/polygon%3e %3cpolygon id='Path' fill='%23333333' points='121.419375 201.739375 160 113.98375 198.580625 201.739375'%3e%3c/polygon%3e %3cpolygon id='Path' fill='%23FFDA44' points='100.869375 215.651875 219.130625 215.651875 160 160'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$D = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/st-vincent-and-the-grenadines%3c/title%3e %3cg id='flags/st-vincent-and-the-grenadines' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-st-vincent-and-the-grenadines' transform='translate(0.000000%2c 0.000000)' fill-rule='nonzero'%3e %3cpath d='M236.521875%2c19.454375 C213.79%2c7.051875 187.71875%2c0 160%2c0 C132.28125%2c0 106.21%2c7.051875 83.478125%2c19.454375 L69.565%2c160 L83.478125%2c300.545625 C106.21%2c312.948125 132.28125%2c320 160%2c320 C187.71875%2c320 213.79%2c312.948125 236.521875%2c300.545625 L250.435%2c160 L236.521875%2c19.454375 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M83.478125%2c300.544375 L83.478125%2c19.45375 C33.743125%2c46.59125 0%2c99.353125 0%2c160 C0%2c220.646875 33.743125%2c273.40875 83.478125%2c300.544375 Z' id='Path' fill='%23338AF3'%3e%3c/path%3e %3cg id='Group' transform='translate(97.390625%2c 19.453750)' fill='%236DA544'%3e %3cpath d='M222.609375%2c140.54625 C222.609375%2c79.899375 188.86625%2c27.1375 139.13125%2c0 L139.13125%2c281.090625 C188.86625%2c253.955 222.609375%2c201.193125 222.609375%2c140.54625 Z' id='Path'%3e%3c/path%3e %3cpolygon id='Path' points='27.826875 182.285625 0 140.54625 27.82625 98.806875 55.65375 140.54625'%3e%3c/polygon%3e %3cpolygon id='Path' points='97.391875 182.285625 69.565625 140.54625 97.391875 98.806875 125.218125 140.54625'%3e%3c/polygon%3e %3cpolygon id='Path' points='62.609375 237.9375 34.783125 196.198125 62.609375 154.459375 90.435625 196.198125'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$C = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/sudan%3c/title%3e %3cg id='flags/sudan' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-sudan' fill-rule='nonzero'%3e %3cpath d='M15.876547%2c90.435 C5.70530693%2c111.47 0.000312499695%2c135.068125 0.000312499695%2c160 C0.000312499695%2c184.931875 5.70530693%2c208.53 15.876547%2c229.565 L160.000156%2c243.478125 L304.123766%2c229.565 C314.295006%2c208.53 320%2c184.931875 320%2c160 C320%2c135.068125 314.295006%2c111.47 304.123766%2c90.435 L160.000156%2c76.521875 L15.876547%2c90.435 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cpath d='M15.882172%2c229.565 C41.7608967%2c283.084375 96.5664682%2c320 160.000156%2c320 C223.433844%2c320 278.239416%2c283.084375 304.118141%2c229.565 L15.882172%2c229.565 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M15.882172%2c90.435 L304.118141%2c90.435 C278.239416%2c36.915625 223.433844%2c0 160.000156%2c0 C96.5664682%2c0 41.7608967%2c36.915625 15.882172%2c90.435 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M46.8627667%2c46.8625 C-15.6209222%2c109.34625 -15.6209222%2c210.653125 46.8627667%2c273.1375 C72.6833665%2c247.316875 97.5164673%2c222.48375 160.000156%2c160 L46.8627667%2c46.8625 Z' id='Path' fill='%23496E2D'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$B = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/suriname%3c/title%3e %3cg id='flags/suriname' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-suriname' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M310.0475%2c104.348125 L9.95125%2c104.348125 C3.520625%2c121.681875 0%2c140.42875 0%2c160 C0%2c179.57125 3.520625%2c198.319375 9.95125%2c215.651875 L310.048125%2c215.651875 C316.48%2c198.319375 320%2c179.57125 320%2c160 C320%2c140.42875 316.48%2c121.681875 310.0475%2c104.348125 Z' id='Path' fill='%23A2001D'%3e%3c/path%3e %3cg id='Group' transform='translate(28.466250%2c 0.001250)' fill='%236DA544'%3e %3cpath d='M131.996875%2c319.99875 C186.798125%2c319.99875 235.158125%2c292.44125 263.994375%2c250.43375 L4.4408921e-15%2c250.43375 C28.83625%2c292.44125 77.195%2c319.99875 131.996875%2c319.99875 Z' id='Path'%3e%3c/path%3e %3cpath d='M131.996875%2c1.17950354e-14 C186.798125%2c1.17950354e-14 235.158125%2c27.5575 263.994375%2c69.565 L4.4408921e-15%2c69.565 C28.83625%2c27.5575 77.195%2c1.17950354e-14 131.996875%2c1.17950354e-14 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpolygon id='Path' fill='%23FFDA44' points='160 104.348125 173.813125 146.860625 218.51625 146.860625 182.35125 173.138125 196.165625 215.651875 160 189.3775 123.834375 215.651875 137.649375 173.138125 101.48375 146.860625 146.186875 146.860625'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$A = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/swaziland%3c/title%3e %3cg id='flags/swaziland' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-swaziland' fill-rule='nonzero'%3e %3cpath d='M304.12375%2c229.565 C314.295%2c208.530625 320%2c184.93125 320%2c160 C320%2c135.06875 314.295%2c111.469375 304.12375%2c90.435 L160%2c83.478125 L15.87625%2c90.434375 C5.705%2c111.469375 0%2c135.06875 0%2c160 C0%2c184.93125 5.705%2c208.530625 15.87625%2c229.565 L160%2c236.521875 L304.12375%2c229.565 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M160%2c0 C96.56625%2c0 41.75625%2c36.915625 15.87625%2c90.435 L304.123125%2c90.435 C278.24375%2c36.915625 223.433125%2c0 160%2c0 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M160%2c320 C96.56625%2c320 41.75625%2c283.084375 15.87625%2c229.565 L304.123125%2c229.565 C278.24375%2c283.084375 223.433125%2c320 160%2c320 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M312.444375%2c111.304375 L7.555625%2c111.304375 C2.654375%2c126.66 0%2c143.019375 0%2c160 C0%2c176.980625 2.654375%2c193.34 7.555625%2c208.695625 L312.44375%2c208.695625 C317.345625%2c193.34 320%2c176.980625 320%2c160 C320%2c143.019375 317.345625%2c126.66 312.444375%2c111.304375 Z' id='Path' fill='%23A2001D'%3e%3c/path%3e %3cg id='Group' transform='translate(55.651875%2c 125.217500)' fill='%23FFDA44'%3e %3crect id='Rectangle' x='0' y='27.82625' width='208.695625' height='13.913125'%3e%3c/rect%3e %3crect id='Rectangle' x='27.82625' y='0' width='153.04375' height='13.913125'%3e%3c/rect%3e %3c/g%3e %3cpath d='M237.515625%2c160 C237.515625%2c160 201.73875%2c201.739375 160%2c201.739375 C118.260625%2c201.739375 118.260625%2c160 118.260625%2c160 C118.260625%2c160 118.260625%2c118.260625 160%2c118.260625 C201.739375%2c118.260625 237.515625%2c160 237.515625%2c160 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cpath d='M160%2c201.739375 C118.260625%2c201.739375 82.484375%2c160 82.484375%2c160 C82.484375%2c160 118.260625%2c118.260625 160%2c118.260625' id='Path' fill='black'%3e%3c/path%3e %3crect id='Rectangle' fill='%23F0F0F0' x='132.17375' y='146.086875' width='13.913125' height='27.82625'%3e%3c/rect%3e %3crect id='Rectangle' fill='black' x='173.913125' y='146.086875' width='13.913125' height='27.82625'%3e%3c/rect%3e %3cg id='Group' transform='translate(41.738750%2c 146.086875)' fill='%230052B4'%3e %3ccircle id='Oval' cx='13.913125' cy='13.913125' r='13.913125'%3e%3c/circle%3e %3ccircle id='Oval' cx='222.609375' cy='13.913125' r='13.913125'%3e%3c/circle%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$z = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/sweden%3c/title%3e %3cg id='flags/sweden' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-sweden' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23FFDA44' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(1.354375%2c 0.000000)' fill='%230052B4'%3e %3cpath d='M123.863125%2c139.130625 L317.29125%2c139.130625 C307.064375%2c60.62625 239.9375%2c0 158.645625%2c0 C146.699375%2c0 135.0625%2c1.320625 123.863125%2c3.803125 L123.863125%2c139.130625 L123.863125%2c139.130625 Z' id='Path'%3e%3c/path%3e %3cpath d='M82.12375%2c139.130625 L82.12375%2c19.454375 C38.19%2c43.425625 6.739375%2c87.395 -1.11022302e-15%2c139.130625 L82.12375%2c139.130625 L82.12375%2c139.130625 Z' id='Path'%3e%3c/path%3e %3cpath d='M82.12375%2c180.869375 L-1.11022302e-15%2c180.869375 C6.739375%2c232.605 38.19%2c276.574375 82.12375%2c300.545 L82.12375%2c180.869375 L82.12375%2c180.869375 Z' id='Path'%3e%3c/path%3e %3cpath d='M123.863125%2c180.869375 L123.863125%2c316.196875 C135.0625%2c318.679375 146.699375%2c320 158.645625%2c320 C239.9375%2c320 307.064375%2c259.37375 317.29125%2c180.869375 L123.863125%2c180.869375 L123.863125%2c180.869375 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$y = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/switzerland%3c/title%3e %3cg id='flags/switzerland' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-switzerland' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23D80027' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpolygon id='Path' fill='%23F0F0F0' points='243.478125 132.174375 187.82625 132.174375 187.82625 76.521875 132.17375 76.521875 132.17375 132.174375 76.521875 132.174375 76.521875 187.82625 132.17375 187.82625 132.17375 243.478125 187.82625 243.478125 187.82625 187.82625 243.478125 187.82625'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$x = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/syria%3c/title%3e %3cg id='flags/syria' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-syria' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M160%2c0 C91.205625%2c0 32.55875%2c43.42 9.951875%2c104.348125 L310.04875%2c104.348125 C287.44125%2c43.42 228.794375%2c0 160%2c0 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M160%2c320 C228.794375%2c320 287.44125%2c276.58 310.048125%2c215.651875 L9.951875%2c215.651875 C32.55875%2c276.58 91.205625%2c320 160%2c320 Z' id='Path' fill='black'%3e%3c/path%3e %3cg id='Group' transform='translate(59.028750%2c 121.739375)' fill='%236DA544'%3e %3cpolygon id='Path' points='36.5725 -1.77635684e-14 45.205625 26.57 73.145 26.57 50.541875 42.99375 59.175625 69.565 36.5725 53.143125 13.969375 69.565 22.603125 42.99375 1.77635684e-14 26.57 27.939375 26.57'%3e%3c/polygon%3e %3cpolygon id='Path' points='165.37 -1.77635684e-14 174.003125 26.57 201.943125 26.57 179.339375 42.99375 187.973125 69.565 165.37 53.143125 142.766875 69.565 151.400625 42.99375 128.7975 26.57 156.736875 26.57'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$w = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/taiwan%3c/title%3e %3cg id='flags/taiwan' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-taiwan' fill-rule='nonzero'%3e %3cpath d='M320%2c160 C320%2c248.365 248.365%2c320 160%2c320 C71.635%2c320 0%2c248.365 0%2c160 C54.95625%2c105.04375 101.565%2c58.435 160%2c0 C248.365%2c0 320%2c71.635 320%2c160 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M160%2c160 C160%2c71.635 160%2c61.2175 160%2c0 C71.635%2c0 0%2c71.635 0%2c160 L160%2c160 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpolygon id='Path' fill='%23F0F0F0' points='139.130625 93.638125 119.59 102.830625 129.995 121.755 108.776875 117.695 106.0875 139.130625 91.30875 123.365625 76.52875 139.130625 73.840625 117.695 52.621875 121.75375 63.026875 102.829375 43.486875 93.638125 63.0275 84.4475 52.621875 65.5225 73.84 69.581875 76.529375 48.146875 91.30875 63.911875 106.088125 48.146875 108.776875 69.581875 129.995625 65.5225 119.59 84.448125'%3e%3c/polygon%3e %3ccircle id='Oval' fill='%230052B4' cx='91.31125' cy='93.635' r='29.783125'%3e%3c/circle%3e %3cpath d='M91.30875%2c109.508125 C82.558125%2c109.508125 75.439375%2c102.38875 75.439375%2c93.638125 C75.439375%2c84.8875 82.55875%2c77.768125 91.30875%2c77.768125 C100.059375%2c77.768125 107.17875%2c84.8875 107.17875%2c93.638125 C107.178125%2c102.38875 100.058125%2c109.508125 91.30875%2c109.508125 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$v = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/tajikistan%3c/title%3e %3cg id='flags/tajikistan' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-tajikistan' fill-rule='nonzero'%3e %3cpath d='M15.87625%2c90.435 C5.705%2c111.47 0%2c135.06875 0%2c160 C0%2c184.93125 5.705%2c208.53 15.87625%2c229.565 L160%2c243.478125 L304.12375%2c229.565 C314.295%2c208.53 320%2c184.93125 320%2c160 C320%2c135.06875 314.295%2c111.47 304.12375%2c90.435 L160%2c76.521875 L15.87625%2c90.435 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cpath d='M15.881875%2c229.565 C41.76125%2c283.08375 96.566875%2c320 160%2c320 C223.433125%2c320 278.239375%2c283.08375 304.118125%2c229.565 L15.881875%2c229.565 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M15.881875%2c90.435 L304.118125%2c90.435 C278.239375%2c36.91625 223.433125%2c0 160%2c0 C96.566875%2c0 41.76125%2c36.91625 15.881875%2c90.435 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cg id='Group' transform='translate(89.360625%2c 114.781875)' fill='%23FFDA44'%3e %3cpolygon id='Path' points='42.813125 86.9575 98.465625 86.9575 98.465625 63.305 87.335 68.87 70.639375 52.174375 53.94375 68.87 42.813125 63.305'%3e%3c/polygon%3e %3cpolygon id='Path' points='10.971875 59.13125 13.5625 67.1025 21.94375 67.1025 15.1625 72.029375 17.753125 80.000625 10.971875 75.074375 4.190625 80.000625 6.78125 72.029375 1.77635684e-14 67.1025 8.38125 67.1025'%3e%3c/polygon%3e %3cpolygon id='Path' points='19.0025 31.305 21.593125 39.27625 29.974375 39.27625 23.193125 44.203125 25.783125 52.174375 19.0025 47.248125 12.22125 52.174375 14.811875 44.203125 8.030625 39.27625 16.411875 39.27625'%3e%3c/polygon%3e %3cpolygon id='Path' points='41.96 10.435625 44.550625 18.406875 52.93125 18.406875 46.15125 23.33375 48.740625 31.305 41.96 26.37875 35.179375 31.305 37.769375 23.33375 30.988125 18.406875 39.37 18.406875'%3e%3c/polygon%3e %3cpolygon id='Path' points='130.306875 59.13125 127.71625 67.1025 119.335 67.1025 126.11625 72.029375 123.525625 80.000625 130.306875 75.074375 137.0875 80.000625 134.4975 72.029375 141.27875 67.1025 132.8975 67.1025'%3e%3c/polygon%3e %3cpolygon id='Path' points='122.27625 31.305 119.685625 39.27625 111.304375 39.27625 118.085625 44.203125 115.495 52.174375 122.27625 47.248125 129.0575 52.174375 126.466875 44.203125 133.248125 39.27625 124.866875 39.27625'%3e%3c/polygon%3e %3cpolygon id='Path' points='99.31875 10.435625 96.728125 18.406875 88.3475 18.406875 95.1275 23.33375 92.5375 31.305 99.31875 26.37875 106.099375 31.305 103.509375 23.33375 110.29 18.406875 101.90875 18.406875'%3e%3c/polygon%3e %3cpolygon id='Path' points='70.639375 0 73.23 7.97125 81.61125 7.97125 74.83 12.898125 77.420625 20.869375 70.639375 15.943125 63.858125 20.869375 66.44875 12.898125 59.6675 7.97125 68.04875 7.97125'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$u = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/tanzania%3c/title%3e %3cg id='flags/tanzania' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-tanzania' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23FFDA44' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M46.8625%2c273.1375 C53.574375%2c279.849375 60.735625%2c285.835 68.2475%2c291.105 L291.10375%2c68.248125 C285.835%2c60.73625 279.84875%2c53.575 273.136875%2c46.863125 C266.424375%2c40.15125 259.26375%2c34.16625 251.751875%2c28.89625 L28.89625%2c251.753125 C34.165%2c259.263125 40.15125%2c266.425 46.8625%2c273.1375 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M46.8625%2c46.8625 C-3.61375%2c97.34 -13.304375%2c173.146875 17.7725%2c233.36125 L233.36125%2c17.773125 C173.146875%2c-13.30375 97.339375%2c-3.6125 46.8625%2c46.8625 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M273.136875%2c273.1375 C323.613125%2c222.66125 333.303125%2c146.853125 302.2275%2c86.63875 L86.63875%2c302.2275 C146.851875%2c333.304375 222.66%2c323.61375 273.136875%2c273.1375 Z' id='Path' fill='%23338AF3'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$t = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/thailand%3c/title%3e %3cg id='flags/thailand' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-thailand' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M310.048125%2c104.348125 L9.951875%2c104.348125 C3.52%2c121.68125 0%2c140.42875 0%2c160 C0%2c179.57125 3.52%2c198.31875 9.951875%2c215.651875 L310.04875%2c215.651875 C316.48%2c198.31875 320%2c179.57125 320%2c160 C320%2c140.42875 316.48%2c121.68125 310.048125%2c104.348125 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cg id='Group' transform='translate(38.711875%2c 0.000000)' fill='%23D80027'%3e %3cpath d='M121.288125%2c0 C72.79375%2c0 29.341875%2c21.5775 4.4408921e-15%2c55.651875 L242.575625%2c55.651875 C213.234375%2c21.5775 169.7825%2c0 121.288125%2c0 Z' id='Path'%3e%3c/path%3e %3cpath d='M242.57625%2c264.348125 L4.4408921e-15%2c264.348125 C29.341875%2c298.4225 72.79375%2c320 121.288125%2c320 C169.7825%2c320 213.234375%2c298.4225 242.57625%2c264.348125 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$s = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/tibet%3c/title%3e %3cg id='flags/tibet' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-tibet' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M69.820625%2c27.82625 C95.49875%2c10.2725 126.5475%2c0 160%2c0 C193.4525%2c0 224.50125%2c10.2725 250.179375%2c27.82625 L160%2c34.7825 L69.820625%2c27.82625 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M46.87125%2c273.12875 L120.6475%2c199.35375 L160%2c132.17375 L199.348125%2c199.349375 L273.12875%2c273.12875 C302.085%2c244.17625 320%2c204.183125 320%2c160 C320%2c105.086875 292.331875%2c56.640625 250.179375%2c27.82625 L69.820625%2c27.82625 C27.668125%2c56.640625 0%2c105.086875 0%2c160 C0%2c204.183125 17.915%2c244.17625 46.87125%2c273.12875 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cg id='Group' transform='translate(0.000000%2c 27.826250)' fill='%230052B4'%3e %3cpath d='M307.845%2c193.436875 L190.86375%2c144.963125 L199.3425%2c171.515625 L273.12875%2c245.301875 C287.86125%2c230.57125 299.735%2c212.9825 307.845%2c193.436875 Z' id='Path'%3e%3c/path%3e %3cpath d='M320%2c132.17375 C320%2c110.470625 315.674375%2c89.78 307.845%2c70.910625 L160%2c132.17375 L320%2c132.17375 Z' id='Path'%3e%3c/path%3e %3cpath d='M273.12875%2c19.045 C266.09625%2c12.01375 258.415625%2c5.630625 250.179375%2c4.4408921e-15 L214.77%2c4.4408921e-15 L160%2c132.17375 L273.12875%2c19.045 Z' id='Path'%3e%3c/path%3e %3cpolygon id='Path' points='160 4.4408921e-15 105.230625 4.4408921e-15 160 132.17375'%3e%3c/polygon%3e %3cpath d='M46.87125%2c19.045 C32.13875%2c33.77625 20.265625%2c51.364375 12.155625%2c70.91 L160%2c132.17375 L46.87125%2c19.045 Z' id='Path'%3e%3c/path%3e %3cpath d='M0%2c132.17375 C0%2c153.876875 4.325625%2c174.5675 12.155%2c193.436875 L160%2c132.17375 L0%2c132.17375 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(69.820625%2c 104.348125)' fill='%23FFDA44'%3e %3cpath d='M1.77635684e-14%2c187.825625 C25.6775%2c205.379375 56.726875%2c215.651875 90.179375%2c215.651875 C123.631875%2c215.651875 154.680625%2c205.379375 180.35875%2c187.825625 L1.77635684e-14%2c187.825625 Z' id='Path'%3e%3c/path%3e %3cpath d='M90.179375%2c55.651875 L129.53125%2c95.00375 C139.603125%2c84.9325 145.831875%2c71.02 145.831875%2c55.651875 C145.831875%2c24.915625 120.915625%2c0 90.18%2c0 C59.444375%2c0 34.5275%2c24.915625 34.5275%2c55.651875 C34.5275%2c71.019375 40.75625%2c84.9325 50.828125%2c95.00375 L90.179375%2c55.651875 Z' id='Path'%3e%3c/path%3e %3cpath d='M114.5275%2c135.651875 C114.5275%2c149.09875 103.625625%2c153.043125 90.179375%2c153.043125 C76.733125%2c153.043125 65.83125%2c149.09875 65.83125%2c135.651875 C65.83125%2c122.205 76.733125%2c111.30375 90.179375%2c111.30375 C103.625625%2c111.30375 114.5275%2c122.205 114.5275%2c135.651875 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M184.348125%2c240 C184.348125%2c253.446875 173.44625%2c264.348125 160%2c264.348125 C146.55375%2c264.348125 135.651875%2c253.446875 135.651875%2c240' id='Path' fill='%230052B4'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$r = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/togo%3c/title%3e %3cg id='flags/togo' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-togo' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23FFDA44' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(31.993125%2c 0.000000)' fill='%23496E2D'%3e %3cpath d='M128.006875%2c0 C127.890625%2c0.00125 121.050625%2c64 121.050625%2c64 L256.014375%2c64 C226.82375%2c25.139375 180.351875%2c0 128.006875%2c0 Z' id='Path'%3e%3c/path%3e %3cpath d='M128.006875%2c320 C180.351875%2c320 226.82375%2c294.860625 256.01375%2c256 L-1.33226763e-14%2c256 C29.19%2c294.860625 75.661875%2c320 128.006875%2c320 Z' id='Path'%3e%3c/path%3e %3cpath d='M284.803125%2c128 L121.050625%2c128 L128.006875%2c192 L284.803125%2c192 C286.903125%2c181.660625 288.006875%2c170.959375 288.006875%2c160 C288.006875%2c149.040625 286.901875%2c138.339375 284.803125%2c128 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M160%2c192 C160%2c158.60875 160%2c37.565 160%2c0 C71.635%2c0 0%2c71.635 0%2c160 C0%2c170.959375 1.105%2c181.660625 3.20375%2c192 L160%2c192 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpolygon id='Path' fill='%23F0F0F0' points='88.285625 76.521875 98.645625 108.40625 132.17375 108.40625 105.050625 128.114375 115.409375 160 88.285625 140.29375 61.161875 160 71.5225 128.114375 44.399375 108.40625 77.92625 108.40625'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$q = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/tokelau%3c/title%3e %3cg id='flags/tokelau' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-tokelau' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23FFDA44' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M257.39125%2c76.521875 C255.95625%2c83.41875 255.304375%2c90.764375 255.304375%2c98.086875 C255.304375%2c140.295625 280.46625%2c176.8275 316.525625%2c193.273125 C318.79625%2c182.538125 320%2c171.41 320%2c160 C320%2c71.635 248.365%2c0 160%2c0 C71.635%2c0 0%2c71.635 0%2c160 C0%2c248.365 71.635%2c320 160%2c320 C214.80125%2c320 263.16125%2c292.4425 291.9975%2c250.435 L90.435%2c250.435 L90.435%2c229.565625 L304.12375%2c229.565625 C306.310625%2c225.043125 308.28625%2c220.4 310.04875%2c215.6525 L90.435%2c215.6525 L257.39125%2c76.521875 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cg id='Group' transform='translate(19.080625%2c 48.695625)' fill='%23F0F0F0'%3e %3cpolygon id='Path' points='98.464375 34.7825 101.918125 45.41125 113.093125 45.41125 104.0525 51.980625 107.50625 62.60875 98.464375 56.040625 89.42375 62.60875 92.876875 51.980625 83.835 45.41125 95.010625 45.41125'%3e%3c/polygon%3e %3cpolygon id='Path' points='53.068125 111.304375 57.385625 124.59125 71.354375 124.59125 60.0525 132.800625 64.37 146.086875 53.068125 137.875625 41.766875 146.086875 46.08375 132.800625 34.7825 124.59125 48.75125 124.59125'%3e%3c/polygon%3e %3cpolygon id='Path' points='53.068125 -8.8817842e-15 57.385625 13.286875 71.354375 13.286875 60.0525 21.49625 64.37 34.7825 53.068125 26.57125 41.766875 34.7825 46.08375 21.49625 34.7825 13.286875 48.75125 13.286875'%3e%3c/polygon%3e %3cpolygon id='Path' points='18.285625 62.60875 22.603125 75.895625 36.57125 75.895625 25.27 84.105 29.5875 97.39125 18.285625 89.18 6.984375 97.39125 11.30125 84.105 2.22044605e-15 75.895625 13.968125 75.895625'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$p = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/tonga%3c/title%3e %3cg id='flags/tonga' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-tonga' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' fill='%23D80027'%3e %3cpolygon id='Path' points='104.348125 83.478125 104.348125 62.60875 83.478125 62.60875 83.478125 83.478125 62.60875 83.478125 62.60875 104.348125 83.478125 104.348125 83.478125 125.2175 104.348125 125.2175 104.348125 104.348125 125.2175 104.348125 125.2175 83.478125'%3e%3c/polygon%3e %3cpath d='M160%2c0 L160%2c160 C71.635%2c160.000625 36.515625%2c160 0%2c160.000625 C0%2c248.365 71.635%2c320 160%2c320 C248.365%2c320 320%2c248.365 320%2c160 C320%2c71.635 248.365%2c0 160%2c0 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$o = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/transnistria%3c/title%3e %3cg id='flags/transnistria' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-transnistria' fill-rule='nonzero'%3e %3cg id='Group' transform='translate(5.511875%2c 0.000000)' fill='%23A2001D'%3e %3cpath d='M308.97625%2c118.260625 C290.61625%2c50.138125 228.4125%2c0 154.488125%2c0 C80.56375%2c0 18.36%2c50.138125 2.55351296e-14%2c118.260625 L154.488125%2c125.2175 L308.97625%2c118.260625 Z' id='Path'%3e%3c/path%3e %3cpath d='M2.55351296e-14%2c201.739375 C18.36%2c269.86125 80.56375%2c320 154.488125%2c320 C228.4125%2c320 290.61625%2c269.861875 308.97625%2c201.739375 L154.488125%2c194.7825 L2.55351296e-14%2c201.739375 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M314.488125%2c118.260625 L5.511875%2c118.260625 C1.925%2c131.56875 0%2c145.558125 0%2c160 C0%2c174.441875 1.925%2c188.43125 5.511875%2c201.739375 L314.48875%2c201.739375 C318.075%2c188.43125 320%2c174.441875 320%2c160 C320%2c145.558125 318.075%2c131.56875 314.488125%2c118.260625 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$n = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/trinidad-and-tobago%3c/title%3e %3cg id='flags/trinidad-and-tobago' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-trinidad-and-tobago' fill-rule='nonzero'%3e %3cpath d='M86.6348905%2c17.7663565 C72.3111507%2c25.1594721 58.8655352%2c34.8500849 46.8580437%2c46.8575698 C34.8499272%2c58.8656796 25.1593091%2c72.3112877 17.7668143%2c86.6350196 L120.646116%2c199.353002 L233.364162%2c302.232248 C247.688526%2c294.839132 261.134142%2c285.148519 273.141633%2c273.141659 C285.14975%2c261.133549 294.839743%2c247.687941 302.232863%2c233.364209 L199.353561%2c120.645602 L86.6348905%2c17.7663565 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cpath d='M273.141633%2c273.141659 C279.853504%2c266.429793 285.839749%2c259.267927 291.109746%2c251.756061 L68.2442786%2c28.8900924 C60.7324089%2c34.1594608 53.570539%2c40.1457032 46.8586687%2c46.8575698 C40.1467985%2c53.5694363 34.1605527%2c60.7313023 28.8905565%2c68.2437928 L251.756024%2c291.108512 C259.267268%2c285.839143 266.429763%2c279.853526 273.141633%2c273.141659 Z' id='Path' fill='black'%3e%3c/path%3e %3cg id='Group' fill='%23D80027'%3e %3cpath d='M46.8574187%2c273.141659 C97.336758%2c323.620971 173.147329%2c333.310958 233.363537%2c302.232248 L17.7668143%2c86.6350196 C-13.3112886%2c146.851194 -3.61942051%2c222.662348 46.8574187%2c273.141659 Z' id='Path'%3e%3c/path%3e %3cpath d='M273.141633%2c46.8581948 C222.662294%2c-3.62049155 146.851723%2c-13.3104793 86.6355155%2c17.7663565 L302.232238%2c233.364834 C333.310966%2c173.14866 323.620973%2c97.3368811 273.141633%2c46.8581948 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$m = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/tunisia%3c/title%3e %3cg id='flags/tunisia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-tunisia' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23D80027' cx='160' cy='160' r='160'%3e%3c/circle%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='76.521875'%3e%3c/circle%3e %3cg id='Group' transform='translate(104.348125%2c 104.347500)' fill='%23D80027'%3e %3cpolygon id='Path' points='65.07875 26.39375 78.20625 44.484375 99.466875 37.590625 86.31875 55.665625 99.445 73.755625 78.19125 66.835625 65.043125 84.910625 65.056875 62.56 43.80375 55.64 65.065 48.74625'%3e%3c/polygon%3e %3cpath d='M73.043125%2c100.87 C48.070625%2c100.87 27.825625%2c80.625 27.825625%2c55.6525 C27.825625%2c30.68 48.070625%2c10.435 73.043125%2c10.435 C80.829375%2c10.435 88.15625%2c12.40375 94.5525%2c15.87 C84.518125%2c6.056875 70.79625%2c-1.77635684e-14 55.651875%2c-1.77635684e-14 C24.916875%2c-1.77635684e-14 0%2c24.91625 0%2c55.651875 C0%2c86.3875 24.916875%2c111.30375 55.651875%2c111.30375 C70.79625%2c111.30375 84.51875%2c105.246875 94.5525%2c95.43375 C88.15625%2c98.90125 80.829375%2c100.87 73.043125%2c100.87 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$l = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/turkey%3c/title%3e %3cg id='flags/turkey' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-turkey' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23D80027' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(44.578125%2c 104.347500)' fill='%23F0F0F0'%3e %3cpolygon id='Path' points='108.870625 26.39375 121.99875 44.484375 143.259375 37.590625 130.110625 55.665625 143.236875 73.755625 121.98375 66.835625 108.835625 84.910625 108.849375 62.56 87.595625 55.64 108.856875 48.74625'%3e%3c/polygon%3e %3cpath d='M73.043125%2c100.87 C48.070625%2c100.87 27.825625%2c80.625 27.825625%2c55.6525 C27.825625%2c30.68 48.070625%2c10.435 73.043125%2c10.435 C80.829375%2c10.435 88.155625%2c12.404375 94.551875%2c15.87 C84.5175%2c6.05625 70.794375%2c-1.77635684e-14 55.651875%2c-1.77635684e-14 C24.915625%2c-1.77635684e-14 0%2c24.91625 0%2c55.651875 C0%2c86.3875 24.91625%2c111.30375 55.651875%2c111.30375 C70.795625%2c111.30375 84.518125%2c105.246875 94.551875%2c95.43375 C88.155625%2c98.900625 80.829375%2c100.87 73.043125%2c100.87 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$k = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/turkmenistan%3c/title%3e %3cg id='flags/turkmenistan' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-turkmenistan' fill-rule='nonzero'%3e %3cg id='Group' transform='translate(-0.000000%2c 0.000000)' fill='%23496E2D'%3e %3cpath d='M159.999375%2c0 C148.053078%2c0 136.416158%2c1.320625 125.217364%2c3.803125 L118.261087%2c159.999375 L125.217364%2c316.19625 C136.416783%2c318.67875 148.053703%2c320 159.999375%2c320 C248.365345%2c320 320%2c248.365 320%2c159.999375 C320%2c71.634375 248.365345%2c0 159.999375%2c0 Z' id='Path'%3e%3c/path%3e %3cpath d='M41.738913%2c52.231875 C15.8113118%2c80.666875 -2.98427814e-15%2c118.485625 -2.98427814e-15%2c159.999375 C-2.98427814e-15%2c201.513125 15.8119368%2c239.331875 41.739538%2c267.768125 L48.6958152%2c159.999375 L41.738913%2c52.231875 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(139.129918%2c 56.983125)' fill='%23F0F0F0'%3e %3cpath d='M94.8834956%2c63.70375 C102.755401%2c41.7625 93.9116168%2c17.899375 74.9321677%2c6.014375 C78.345931%2c6.45875 81.7634444%2c7.2625 85.1359576%2c8.471875 C110.450431%2c17.554375 123.609233%2c45.436875 114.526697%2c70.750625 C105.444162%2c96.06625 77.561553%2c109.22375 52.2470791%2c100.14125 C48.8739409%2c98.93125 45.7245536%2c97.378125 42.8076672%2c95.55125 C65.014004%2c98.443125 87.0115899%2c85.645 94.8834956%2c63.70375 Z' id='Path'%3e%3c/path%3e %3cpolygon id='Path' points='51.2227001 0 44.3820484 8.83875 33.8638823 5.064375 40.1551569 14.300625 33.3157551 23.138125 44.043922 20.009375 50.3364466 29.244375 50.6739479 18.074375 61.4027399 14.945 50.8845738 11.171875'%3e%3c/polygon%3e %3cpolygon id='Path' points='69.6927722 28.799375 62.8521205 37.6375 52.3333294 33.863125 58.625229 43.099375 51.7852023 51.936875 62.5133692 48.806875 68.8058938 58.04375 69.1446451 46.873125 79.872812 43.743125 69.3540209 39.969375'%3e%3c/polygon%3e %3cpolygon id='Path' points='18.6575729 10.48875 11.8169212 19.32625 1.29875507 15.553125 7.59065465 24.78875 0.750627932 33.626875 11.4781698 30.4975 17.7706944 39.733125 18.1094457 28.563125 28.8376126 25.43375 18.3194466 21.659375'%3e%3c/polygon%3e %3cpolygon id='Path' points='17.90757 43.4775 11.0675432 52.315625 0.548752144 48.541875 6.84127672 57.778125 0 66.615625 10.7294169 63.486875 17.0213165 72.721875 17.3594428 61.551875 28.0882347 58.4225 17.5688186 54.648125'%3e%3c/polygon%3e %3cpolygon id='Path' points='49.2989426 54.740625 42.4582909 63.578125 31.9401248 59.804375 38.2326493 69.040625 31.3913726 77.8775 42.1207895 74.74875 48.4126891 83.985 48.7508154 72.81375 59.4796073 69.685 48.9601913 65.91125'%3e%3c/polygon%3e %3c/g%3e %3cpath d='M41.738913%2c52.231875 L41.738913%2c267.7675 C63.5389982%2c291.67625 92.4953613%2c308.941875 125.217364%2c316.195625 L125.217364%2c3.803125 C92.4947363%2c11.056875 63.5396232%2c28.3225 41.738913%2c52.231875 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpolygon id='Path' fill='%23F0F0F0' points='73.5952875 84.240625 59.6196079 73.829375 59.6196079 59.10625 73.5952875 48.695625 93.3609897 48.695625 107.336669 59.10625 107.336669 73.829375 93.3609897 84.240625'%3e%3c/polygon%3e %3cg id='Group' transform='translate(59.619608%2c 48.695625)' fill='%23FF9811'%3e %3cpolygon id='Path' points='23.8588432 -8.8817842e-15 13.9756796 -8.8817842e-15 8.88181889e-15 10.410625 8.88181889e-15 17.60875 23.8588432 17.60875'%3e%3c/polygon%3e %3cpolygon id='Path' points='23.8588432 35.545 33.7413818 35.545 47.7170614 25.13375 47.7170614 17.623125 23.8588432 17.623125'%3e%3c/polygon%3e %3c/g%3e %3cpolygon id='Path' fill='%23F0F0F0' points='73.5952875 271.303125 59.6196079 260.891875 59.6196079 246.169375 73.5952875 235.758125 93.3609897 235.758125 107.336669 246.169375 107.336669 260.891875 93.3609897 271.303125'%3e%3c/polygon%3e %3cg id='Group' transform='translate(59.619608%2c 235.758125)' fill='%23FF9811'%3e %3cpolygon id='Path' points='23.8588432 0 13.9756796 0 8.88181889e-15 10.41125 8.88181889e-15 17.609375 23.8588432 17.609375'%3e%3c/polygon%3e %3cpolygon id='Path' points='23.8588432 35.545 33.7413818 35.545 47.7170614 25.13375 47.7170614 17.62375 23.8588432 17.62375'%3e%3c/polygon%3e %3c/g%3e %3cg id='Group' transform='translate(59.130856%2c 93.495000)' fill='%23496E2D'%3e %3cpolygon id='Path' points='14.4644315 84.276875 0.488751909 73.865625 0.488751909 59.143125 14.4644315 48.731875 34.2301337 48.731875 48.2058133 59.143125 48.2058133 73.865625 34.2301337 84.276875'%3e%3c/polygon%3e %3cpolygon id='Path' points='48.6951902 107.183125 42.6076664 107.183125 42.6076664 101.09625 31.9107497 101.09625 24.3469701 93.5325 16.7838156 101.09625 6.08689878 101.09625 6.08689878 107.183125 -8.88181889e-15 107.183125 -8.88181889e-15 119.356875 6.08689878 119.356875 6.08689878 125.44375 16.7831906 125.44375 24.3475951 133.008125 31.9107497 125.44375 42.6076664 125.44375 42.6076664 119.356875 48.6951902 119.356875'%3e%3c/polygon%3e %3cpolygon id='Path' points='48.6951902 13.65125 42.6076664 13.65125 42.6076664 7.56375 31.9107497 7.56375 24.3469701 1.77635684e-14 16.7838156 7.56375 6.08689878 7.56375 6.08689878 13.65125 -8.88181889e-15 13.65125 -8.88181889e-15 25.825 6.08689878 25.825 6.08689878 31.911875 16.7831906 31.911875 24.3475951 39.476875 31.9107497 31.911875 42.6076664 31.911875 42.6076664 25.825 48.6951902 25.825'%3e%3c/polygon%3e %3c/g%3e %3cg id='Group' transform='translate(76.520924%2c 106.274375)' fill='%23D80027'%3e %3crect id='Rectangle' x='0' y='46.768125' width='13.9131793' height='13.913125'%3e%3c/rect%3e %3cellipse id='Oval' cx='6.95627717' cy='6.95625' rx='6.95627717' ry='6.95625'%3e%3c/ellipse%3e %3cellipse id='Oval' cx='6.95627717' cy='100.493125' rx='6.95627717' ry='6.95625'%3e%3c/ellipse%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$j = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/turks-and-caicos%3c/title%3e %3cg id='flags/turks-and-caicos' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-turks-and-caicos' fill-rule='nonzero'%3e %3cpath d='M320%2c160.156098 C320%2c248.434888 248.365%2c320 160%2c320 C71.635%2c320 0%2c248.434888 0%2c160.156098 C0%2c160.194185 160%2c0.329678049 160%2c0.312195122 C248.365%2c0.312195122 320%2c71.8773073 320%2c160.156098 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cg id='Group' fill='%23F0F0F0'%3e %3cpath d='M160%2c0.312195122 C159.99%2c0.312195122 159.9825%2c0.312195122 159.973125%2c0.312195122 L160%2c0.312195122 L160%2c0.312195122 Z' id='Path'%3e%3c/path%3e %3cpath d='M159.571875%2c160.156098 L160%2c160.156098 C160%2c160.012488 160%2c159.872624 160%2c159.72839 C159.8575%2c159.871376 159.715%2c160.013737 159.571875%2c160.156098 Z' id='Path'%3e%3c/path%3e %3cpath d='M160.000625%2c83.708878 C160.000625%2c55.5832195 160.000625%2c37.1543415 160.000625%2c0.312195122 L159.973125%2c0.312195122 C71.619375%2c0.327180488 0%2c71.8854244 0%2c160.156098 L83.478125%2c160.156098 L83.478125%2c113.195083 L130.485%2c160.156098 L159.5725%2c160.156098 C159.715%2c160.013737 159.8575%2c159.871376 160.000625%2c159.72839 C160.000625%2c148.959532 160.000625%2c139.35079 160.000625%2c130.671141 L112.9925%2c83.708878 L160.000625%2c83.708878 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(20.869375%2c 21.161210)' fill='%23D80027'%3e %3cpath d='M60.0775%2c4.43655952e-15 C35.053125%2c14.2354732 14.24875%2c35.0189268 4.4408921e-15%2c60.0188878 L4.4408921e-15%2c138.994888 L41.739375%2c138.994888 L41.739375%2c41.6999024 L41.739375%2c41.6986537 L139.130625%2c41.6986537 C139.130625%2c28.547122 139.130625%2c16.0181073 139.130625%2c4.43655952e-15 L60.0775%2c4.43655952e-15 Z' id='Path'%3e%3c/path%3e %3cpath d='M139.130625%2c119.338459 L82.28375%2c62.5482927 L62.60875%2c62.5482927 L62.60875%2c62.5495415 L139.129375%2c138.994888 L139.130625%2c138.994888 C139.130625%2c138.994888 139.130625%2c125.441249 139.130625%2c119.338459 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M180.869375%2c83.708878 L180.869375%2c160.155473 C180.869375%2c197.394107 229.565%2c208.804215 229.565%2c208.804215 C229.565%2c208.804215 278.260625%2c197.394107 278.260625%2c160.155473 L278.260625%2c83.708878 L180.869375%2c83.708878 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M222.60875%2c111.50798 C222.60875%2c119.184859 216.38%2c139.307083 208.695625%2c139.307083 C201.01125%2c139.307083 194.7825%2c119.184859 194.7825%2c111.50798 C194.7825%2c103.831102 208.695625%2c97.6084293 208.695625%2c97.6084293 C208.695625%2c97.6084293 222.60875%2c103.831102 222.60875%2c111.50798 Z' id='Path' fill='%23FF9811'%3e%3c/path%3e %3cpath d='M259.528125%2c126.646322 C261.773125%2c121.173541 263.519375%2c113.173854 263.519375%2c109.191493 C263.519375%2c102.79399 255.17125%2c97.6084293 255.17125%2c97.6084293 C255.17125%2c97.6084293 246.823125%2c102.794615 246.823125%2c109.191493 C246.823125%2c113.173854 248.569375%2c121.173541 250.814375%2c126.646322 L245.995%2c137.516956 C248.8275%2c138.667083 251.92375%2c139.306459 255.170625%2c139.306459 C258.4175%2c139.306459 261.51375%2c138.667083 264.34625%2c137.516956 L259.528125%2c126.646322 Z' id='Path' fill='%23A2001D'%3e%3c/path%3e %3cpath d='M219.130625%2c160.156098 C219.130625%2c160.156098 212.174375%2c174.055649 212.174375%2c187.9552 C212.174375%2c187.9552 233.04375%2c187.9552 246.956875%2c187.9552 C246.95625%2c174.055649 240%2c160.156098 240%2c160.156098 L229.565%2c153.206634 L219.130625%2c160.156098 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M240%2c160.156098 L240%2c156.681366 C240%2c150.924488 235.328125%2c146.256546 229.565%2c146.256546 C223.8025%2c146.256546 219.13%2c150.923863 219.13%2c156.681366 L219.13%2c160.156098 L240%2c160.156098 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$i = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/tuvalu%3c/title%3e %3cg id='flags/tuvalu' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-tuvalu' fill-rule='nonzero'%3e %3cpath d='M320%2c160.156098 C320%2c248.434888 248.365%2c320 160.000625%2c320 C71.635%2c320 0%2c248.434888 0%2c160.156098 C0%2c160.194185 160.000625%2c0.329678049 160.000625%2c0.312195122 C248.365%2c0.312195122 320%2c71.8773073 320%2c160.156098 Z' id='Path' fill='%23338AF3'%3e%3c/path%3e %3cg id='Group' transform='translate(76.521875%2c 76.759415)' fill='%230052B4'%3e %3cpolygon id='Path' points='0 83.3966829 53.96375 83.3966829 6.95625 27.7991024 0 48.6481171'%3e%3c/polygon%3e %3cpolygon id='Path' points='83.47875 53.9117268 27.82625 1.77462381e-14 83.478125 1.77462381e-14'%3e%3c/polygon%3e %3c/g%3e %3cg id='Group' fill='%23F0F0F0'%3e %3cpath d='M160.000625%2c0.312195122 C159.990625%2c0.312195122 159.9825%2c0.312195122 159.97375%2c0.312195122 L160.000625%2c0.312195122 L160.000625%2c0.312195122 Z' id='Path'%3e%3c/path%3e %3cpath d='M159.571875%2c160.156098 L160%2c160.156098 C160%2c160.012488 160%2c159.872624 160%2c159.72839 C159.8575%2c159.871376 159.715%2c160.013737 159.571875%2c160.156098 Z' id='Path'%3e%3c/path%3e %3cpath d='M160.00125%2c83.708878 C160.00125%2c55.5832195 160.00125%2c37.1537171 160.00125%2c0.312195122 L159.97375%2c0.312195122 C71.62%2c0.327180488 0%2c71.8854244 0%2c160.156098 L83.47875%2c160.156098 L83.47875%2c113.195083 L130.485625%2c160.156098 L159.573125%2c160.156098 C159.715625%2c160.013737 159.858125%2c159.871376 160.00125%2c159.72839 C160.00125%2c148.959532 160.00125%2c139.35079 160.00125%2c130.671141 L112.9925%2c83.708878 L160.00125%2c83.708878 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(20.869375%2c 21.161210)' fill='%23D80027'%3e %3cpath d='M60.0775%2c4.43655952e-15 C35.053125%2c14.2354732 14.249375%2c35.0189268 4.4408921e-15%2c60.0188878 L4.4408921e-15%2c138.994888 L41.739375%2c138.994888 L41.739375%2c41.6999024 L41.739375%2c41.6986537 L139.130625%2c41.6986537 C139.130625%2c28.547122 139.130625%2c16.0181073 139.130625%2c4.43655952e-15 L60.0775%2c4.43655952e-15 Z' id='Path'%3e%3c/path%3e %3cpath d='M139.13125%2c119.338459 L82.284375%2c62.5482927 L62.609375%2c62.5482927 L62.609375%2c62.5495415 L139.13%2c138.994888 L139.13125%2c138.994888 C139.13125%2c138.994888 139.13125%2c125.441249 139.13125%2c119.338459 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' transform='translate(160.000000%2c 90.658966)' fill='%23FFDA44'%3e %3cpolygon id='Path' points='14.62875 173.743454 18.0825 184.361834 29.258125 184.361834 20.2175 190.924176 23.67125 201.541932 14.62875 194.980215 5.588125 201.541932 9.041875 190.924176 0 184.361834 11.175 184.361834'%3e%3c/polygon%3e %3cpolygon id='Path' points='103.631875 104.245698 107.085 114.864078 118.260625 114.864078 109.22 121.427044 112.674375 132.0448 103.631875 125.483083 94.59125 132.0448 98.045 121.427044 89.0025 114.864078 100.178125 114.864078'%3e%3c/polygon%3e %3cpolygon id='Path' points='125.933125 1.77462381e-14 129.386875 10.6183805 140.5625 10.6183805 131.521875 17.180722 134.975 27.798478 125.933125 21.236761 116.8925 27.798478 120.34625 17.180722 111.304375 10.6183805 122.48 10.6183805'%3e%3c/polygon%3e %3cpolygon id='Path' points='131.458125 76.4465951 134.91125 87.0656 146.086875 87.0656 137.04625 93.6279415 140.5 104.245698 131.458125 97.6839805 122.4175 104.245698 125.87125 93.6279415 116.82875 87.0656 128.004375 87.0656'%3e%3c/polygon%3e %3cpolygon id='Path' points='30.65375 148.769093 40.613125 153.838517 48.515 145.944351 46.7675 156.970459 56.724375 162.039259 45.685625 163.786302 43.9375 174.813659 38.865 164.865249 27.82625 166.612917 35.728125 158.718751'%3e%3c/polygon%3e %3cpolygon id='Path' points='30.65375 107.071063 40.613125 112.139863 48.515 104.245698 46.7675 115.272429 56.724375 120.340605 45.685625 122.087649 43.9375 133.115005 38.865 123.16722 27.82625 124.914263 35.728125 117.020098'%3e%3c/polygon%3e %3cpolygon id='Path' points='65.43625 133.799337 75.395625 138.868761 83.2975 130.974595 81.55 142.000702 91.506875 147.069502 80.468125 148.816546 78.72 159.843902 73.6475 149.894868 62.60875 151.643161 70.510625 143.748995'%3e%3c/polygon%3e %3cpolygon id='Path' points='65.43625 44.5233951 75.395625 49.5921951 83.2975 41.6980293 81.55 52.724761 91.506875 57.7929366 80.468125 59.5399805 78.72 70.5673366 73.6475 60.6195512 62.60875 62.3665951 70.510625 54.4724293'%3e%3c/polygon%3e %3cpolygon id='Path' points='99.146875 43.4531902 109.10625 48.5219902 117.008125 40.6278244 115.26 51.6545561 125.2175 56.7227317 114.17875 58.4697756 112.430625 69.4971317 107.358125 59.5493463 96.319375 61.2963902 104.22125 53.4022244'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$h = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/uganda%3c/title%3e %3cg id='flags/uganda' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-uganda' fill-rule='nonzero'%3e %3cpath d='M279.245625%2c266.66625 C304.585%2c238.35875 320%2c200.9825 320%2c160 C320%2c119.0175 304.584375%2c81.640625 279.245%2c53.333125 L160%2c41.739375 L40.755%2c53.333125 C15.415625%2c81.640625 0%2c119.0175 0%2c160 C0%2c200.9825 15.415%2c238.35875 40.754375%2c266.66625 L160%2c278.260625 L279.245625%2c266.66625 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M40.755%2c53.333125 L279.245625%2c53.333125 C249.94875%2c20.60375 207.383125%2c0 160%2c0 C112.616875%2c0 70.05125%2c20.60375 40.755%2c53.333125 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M0%2c160 L160%2c173.913125 L320%2c160 C320%2c141.2975 316.780625%2c123.34875 310.8825%2c106.66625 L9.1175%2c106.66625 C3.219375%2c123.34875 0%2c141.2975 0%2c160 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M9.1175%2c213.333125 L310.88375%2c213.333125 C316.780625%2c196.650625 320%2c178.7025 320%2c160 L0%2c160 C0%2c178.7025 3.219375%2c196.650625 9.1175%2c213.333125 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M279.245625%2c266.66625 L40.754375%2c266.66625 C70.050625%2c299.39625 112.61625%2c320 160%2c320 C207.38375%2c320 249.949375%2c299.39625 279.245625%2c266.66625 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M213.39125%2c160 C213.39125%2c189.489375 189.489375%2c213.39125 160%2c213.39125 C130.510625%2c213.39125 106.60875%2c189.489375 106.60875%2c160 C106.60875%2c130.510625 130.510625%2c106.60875 160%2c106.60875 C189.489375%2c106.60875 213.39125%2c130.510625 213.39125%2c160 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cpath d='M179.559375%2c162.7225 L160%2c154.246875 C160%2c154.246875 164.57625%2c139.0575 164.82%2c138.018125 C164.998125%2c137.25875 165.093125%2c136.466875 165.093125%2c135.653125 C165.093125%2c132.77125 163.925%2c130.1625 162.03625%2c128.275 L166.955%2c123.35625 C163.808125%2c120.209375 159.46%2c118.2625 154.6575%2c118.2625 C149.855%2c118.2625 145.506875%2c120.20875 142.36%2c123.35625 L147.27875%2c128.275 C145.39%2c130.163125 144.2225%2c132.771875 144.2225%2c135.653125 C144.2225%2c136.706875 144.381875%2c137.7225 144.6725%2c138.681875 L137.266875%2c146.086875 L150.726875%2c146.086875 C150.726875%2c146.086875 145.161875%2c154.445625 142.12375%2c161.31 C139.085625%2c168.17375 142.165625%2c176.553125 149.186875%2c179.674375 L153.246875%2c181.47875 L160%2c187.82625 L160%2c194.7825 L153.04375%2c201.73875 L166.956875%2c201.73875 L166.956875%2c187.825625 L173.305%2c181.4775 L186.435%2c181.4775 C186.498125%2c181.346875 186.564375%2c181.219375 186.624375%2c181.085625 C189.74375%2c174.065 186.58125%2c165.8425 179.559375%2c162.7225 Z' id='Path' fill='black'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$g = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/ukraine%3c/title%3e %3cg id='flags/ukraine' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-ukraine' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23FFDA44' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M0%2c160 C0%2c71.635 71.635%2c0 160%2c0 C248.365%2c0 320%2c71.635 320%2c160' id='Path' fill='%23338AF3'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$f = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/united-arab-emirates%3c/title%3e %3cg id='flags/united-arab-emirates' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-united-arab-emirates' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M90.435%2c215.651875 L104.348125%2c310.049375 C121.680625%2c316.48125 140.42875%2c320 160%2c320 C228.79375%2c320 287.44125%2c276.58 310.0475%2c215.651875 L90.435%2c215.651875 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M90.435%2c104.348125 L104.348125%2c9.950625 C121.680625%2c3.51875 140.42875%2c0 160%2c0 C228.79375%2c0 287.44125%2c43.42 310.0475%2c104.348125 L90.435%2c104.348125 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M0%2c160 C0%2c228.794375 43.420625%2c287.44125 104.348125%2c310.048125 L104.348125%2c9.951875 C43.420625%2c32.55875 0%2c91.205625 0%2c160 Z' id='Path' fill='%23A2001D'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$e = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/united-kingdom%3c/title%3e %3cg id='flags/united-kingdom' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-united-kingdom' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(5.511875%2c 5.511875)' fill='%230052B4'%3e %3cpath d='M27.563125%2c57.076875 C14.995%2c73.42875 5.518125%2c92.275625 -8.8817842e-15%2c112.75 L83.23625%2c112.75 L27.563125%2c57.076875 Z' id='Path'%3e%3c/path%3e %3cpath d='M308.97625%2c112.75 C303.458125%2c92.27625 293.980625%2c73.429375 281.413125%2c57.0775 L225.74125%2c112.75 L308.97625%2c112.75 Z' id='Path'%3e%3c/path%3e %3cpath d='M-9.99200722e-15%2c196.228125 C5.51875%2c216.701875 14.995625%2c235.54875 27.563125%2c251.9 L83.234375%2c196.228125 L-9.99200722e-15%2c196.228125 L-9.99200722e-15%2c196.228125 Z' id='Path'%3e%3c/path%3e %3cpath d='M251.899375%2c27.56375 C235.5475%2c14.995625 216.70125%2c5.51875 196.226875%2c-8.8817842e-15 L196.226875%2c83.235625 L251.899375%2c27.56375 Z' id='Path'%3e%3c/path%3e %3cpath d='M57.076875%2c281.4125 C73.42875%2c293.980625 92.275625%2c303.4575 112.749375%2c308.97625 L112.749375%2c225.74125 L57.076875%2c281.4125 Z' id='Path'%3e%3c/path%3e %3cpath d='M112.74875%2c-9.99200722e-15 C92.275%2c5.51875 73.428125%2c14.995625 57.076875%2c27.563125 L112.74875%2c83.235 L112.74875%2c-9.99200722e-15 Z' id='Path'%3e%3c/path%3e %3cpath d='M196.2275%2c308.97625 C216.70125%2c303.4575 235.548125%2c293.980625 251.899375%2c281.413125 L196.2275%2c225.74125 L196.2275%2c308.97625 Z' id='Path'%3e%3c/path%3e %3cpath d='M225.74125%2c196.228125 L281.413125%2c251.900625 C293.980625%2c235.549375 303.458125%2c216.701875 308.97625%2c196.228125 L225.74125%2c196.228125 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cg id='Group' fill='%23D80027'%3e %3cpath d='M318.645625%2c139.130625 L180.870625%2c139.130625 L180.87%2c139.130625 L180.87%2c1.354375 C174.038125%2c0.465 167.073125%2c0 160%2c0 C152.925625%2c0 145.961875%2c0.465 139.130625%2c1.354375 L139.130625%2c139.129375 L139.130625%2c139.13 L1.354375%2c139.13 C0.465%2c145.961875 0%2c152.926875 0%2c160 C0%2c167.074375 0.465%2c174.038125 1.354375%2c180.869375 L139.129375%2c180.869375 L139.13%2c180.869375 L139.13%2c318.645625 C145.961875%2c319.535 152.925625%2c320 160%2c320 C167.073125%2c320 174.038125%2c319.535625 180.869375%2c318.645625 L180.869375%2c180.870625 L180.869375%2c180.87 L318.645625%2c180.87 C319.535%2c174.038125 320%2c167.074375 320%2c160 C320%2c152.926875 319.535%2c145.961875 318.645625%2c139.130625 Z' id='Path'%3e%3c/path%3e %3cpath d='M201.739375%2c201.739375 L201.739375%2c201.739375 L273.136875%2c273.1375 C276.420625%2c269.855 279.553125%2c266.423125 282.541875%2c262.865625 L221.415625%2c201.739375 L201.739375%2c201.739375 L201.739375%2c201.739375 Z' id='Path'%3e%3c/path%3e %3cpath d='M118.260625%2c201.74 L118.259375%2c201.74 L46.8625%2c273.136875 C50.145%2c276.420625 53.576875%2c279.553125 57.134375%2c282.541875 L118.260625%2c221.414375 L118.260625%2c201.74 Z' id='Path'%3e%3c/path%3e %3cpath d='M118.260625%2c118.261875 L118.260625%2c118.260625 L46.863125%2c46.8625 C43.579375%2c50.145 40.446875%2c53.576875 37.458125%2c57.134375 L98.585%2c118.261875 L118.260625%2c118.261875 L118.260625%2c118.261875 Z' id='Path'%3e%3c/path%3e %3cpath d='M201.739375%2c118.261875 L201.739375%2c118.261875 L273.1375%2c46.863125 C269.855%2c43.579375 266.423125%2c40.446875 262.865625%2c37.45875 L201.739375%2c98.585625 L201.739375%2c118.261875 L201.739375%2c118.261875 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$d = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/united-nations%3c/title%3e %3cg id='flags/united-nations' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-united-nations' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23338AF3' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(69.103125%2c 96.053125)' fill='%23F0F0F0'%3e %3cpath d='M90.434375%2c8.295 C59.6975%2c8.295 34.7825%2c33.21125 34.7825%2c63.946875 C34.7825%2c94.6825 59.698125%2c119.59875 90.434375%2c119.59875 C121.169375%2c119.59875 146.08625%2c94.6825 146.08625%2c63.946875 C146.08625%2c33.21125 121.16875%2c8.295 90.434375%2c8.295 Z M76.52125%2c63.946875 C76.52125%2c56.263125 82.75%2c50.03375 90.434375%2c50.03375 C98.118125%2c50.03375 104.3475%2c56.263125 104.3475%2c63.946875 C104.3475%2c71.63125 98.118125%2c77.86 90.434375%2c77.86 C82.75%2c77.86 76.52125%2c71.63125 76.52125%2c63.946875 Z M104.859375%2c40.1475 C102.7%2c38.835625 100.34625%2c37.816875 97.85375%2c37.12875 L97.85375%2c22.87875 C104.129375%2c24.005 109.915625%2c26.529375 114.881875%2c30.125625 L104.859375%2c40.1475 Z M83.94125%2c36.890625 C81.330625%2c37.515 78.864375%2c38.506875 76.598125%2c39.80875 L66.529375%2c29.74 C71.619375%2c26.17625 77.536875%2c23.714375 83.94125%2c22.7125 L83.94125%2c36.890625 Z M76.5975%2c88.085 C78.86375%2c89.38625 81.33%2c90.37875 83.940625%2c91.0025 L83.940625%2c105.18 C77.535625%2c104.179375 71.619375%2c101.71625 66.529375%2c98.1525 L76.5975%2c88.085 Z M97.854375%2c90.765 C100.34625%2c90.076875 102.70125%2c89.05875 104.859375%2c87.746875 L114.88125%2c97.76875 C109.915%2c101.364375 104.129375%2c103.889375 97.85375%2c105.015625 L97.85375%2c90.765625 L97.854375%2c90.765625 L97.854375%2c90.765 Z M114.571875%2c77.784375 C115.7975%2c75.65125 116.755625%2c73.34375 117.38375%2c70.90375 L131.585%2c70.90375 C130.54%2c77.13 128.11875%2c82.885625 124.64125%2c87.851875 L114.571875%2c77.784375 Z M117.38375%2c56.990625 C116.755625%2c54.55 115.7975%2c52.244375 114.571875%2c50.110625 L124.640625%2c40.041875 C128.118125%2c45.00875 130.54%2c50.76375 131.584375%2c56.99 L117.383125%2c56.99 L117.383125%2c56.990625 L117.38375%2c56.990625 Z M56.6125%2c39.5 L66.634375%2c49.521875 C65.24125%2c51.815625 64.170625%2c54.325625 63.484375%2c56.990625 L49.283125%2c56.990625 C50.36625%2c50.536875 52.928125%2c44.588125 56.6125%2c39.5 Z M49.283125%2c70.903125 L63.484375%2c70.903125 C64.17%2c73.568125 65.240625%2c76.078125 66.634375%2c78.371875 L56.6125%2c88.39375 C52.928125%2c83.305625 50.36625%2c77.3575 49.283125%2c70.903125 Z' id='Shape'%3e%3c/path%3e %3cpath d='M180.86875%2c63.946875 C180.86875%2c39.209375 170.9325%2c16.79625 154.83875%2c0.46875 L140.081875%2c15.225625 C152.399375%2c27.775625 159.999375%2c44.973125 159.999375%2c63.946875 C159.999375%2c102.366875 128.85375%2c133.511875 90.434375%2c133.511875 C52.01375%2c133.511875 20.869375%2c102.366875 20.869375%2c63.946875 C20.869375%2c44.73625 28.655%2c27.345 41.244375%2c14.756875 L26.4875%2c3.55271368e-14 C10.121875%2c16.365625 0%2c38.974375 0%2c63.946875 C0%2c105.33125 27.798125%2c140.223125 65.74125%2c150.96875 C61.58125%2c158.87125 62.215%2c168.820625 68.1575%2c176.23625 C75.9625%2c169.98125 84.043125%2c163.505 90.898125%2c158.0125 C97.753125%2c163.505625 105.834375%2c169.98125 113.63875%2c176.23625 C119.64%2c168.746875 120.230625%2c158.67125 115.9325%2c150.730625 C153.460625%2c139.72125 180.86875%2c105.0375 180.86875%2c63.946875 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$c = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/united-states-of-america%3c/title%3e %3cg id='flags/united-states-of-america' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-united-states-of-america' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(5.511875%2c 34.782500)' fill='%23D80027'%3e %3cpath d='M147.531875%2c125.2175 L314.488125%2c125.2175 C314.488125%2c110.77625 312.563125%2c96.78625 308.97625%2c83.478125 L147.531875%2c83.478125 L147.531875%2c125.2175 Z' id='Path'%3e%3c/path%3e %3cpath d='M147.531875%2c41.739375 L291.004375%2c41.739375 C281.21%2c25.756875 268.686875%2c11.63 254.085625%2c8.8817842e-15 L147.531875%2c8.8817842e-15 L147.531875%2c41.739375 Z' id='Path'%3e%3c/path%3e %3cpath d='M154.488125%2c285.2175 C192.14375%2c285.2175 226.754375%2c272.2025 254.085625%2c250.435 L54.890625%2c250.435 C82.221875%2c272.2025 116.8325%2c285.2175 154.488125%2c285.2175 Z' id='Path'%3e%3c/path%3e %3cpath d='M17.971875%2c208.695625 L291.004375%2c208.695625 C298.8675%2c195.865 304.965625%2c181.84 308.97625%2c166.95625 L2.55351296e-14%2c166.95625 C4.010625%2c181.84 10.10875%2c195.865 17.971875%2c208.695625 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M74.115%2c24.98625 L88.695625%2c24.98625 L75.133125%2c34.839375 L80.31375%2c50.7825 L66.751875%2c40.929375 L53.19%2c50.7825 L57.665%2c37.009375 C45.72375%2c46.95625 35.2575%2c58.61 26.6325%2c71.595 L31.304375%2c71.595 L22.67125%2c77.866875 C21.32625%2c80.110625 20.03625%2c82.39 18.8%2c84.703125 L22.9225%2c97.39125 L15.23125%2c91.803125 C13.319375%2c95.85375 11.570625%2c99.995625 9.99875%2c104.22375 L14.540625%2c118.20375 L31.304375%2c118.20375 L17.741875%2c128.056875 L22.9225%2c144 L9.360625%2c134.146875 L1.236875%2c140.049375 C0.42375%2c146.585625 0%2c153.243125 0%2c160 L160%2c160 C160%2c71.635 160%2c61.2175 160%2c0 C128.3925%2c0 98.928125%2c9.16875 74.115%2c24.98625 Z M80.31375%2c144 L66.751875%2c134.146875 L53.19%2c144 L58.370625%2c128.056875 L44.808125%2c118.20375 L61.571875%2c118.20375 L66.751875%2c102.260625 L71.931875%2c118.20375 L88.695625%2c118.20375 L75.133125%2c128.056875 L80.31375%2c144 Z M75.133125%2c81.448125 L80.31375%2c97.39125 L66.751875%2c87.538125 L53.19%2c97.39125 L58.370625%2c81.448125 L44.808125%2c71.595 L61.571875%2c71.595 L66.751875%2c55.651875 L71.931875%2c71.595 L88.695625%2c71.595 L75.133125%2c81.448125 Z M137.705%2c144 L124.143125%2c134.146875 L110.58125%2c144 L115.761875%2c128.056875 L102.199375%2c118.20375 L118.963125%2c118.20375 L124.143125%2c102.260625 L129.323125%2c118.20375 L146.086875%2c118.20375 L132.524375%2c128.056875 L137.705%2c144 Z M132.524375%2c81.448125 L137.705%2c97.39125 L124.143125%2c87.538125 L110.58125%2c97.39125 L115.761875%2c81.448125 L102.199375%2c71.595 L118.963125%2c71.595 L124.143125%2c55.651875 L129.323125%2c71.595 L146.086875%2c71.595 L132.524375%2c81.448125 Z M132.524375%2c34.839375 L137.705%2c50.7825 L124.143125%2c40.929375 L110.58125%2c50.7825 L115.761875%2c34.839375 L102.199375%2c24.98625 L118.963125%2c24.98625 L124.143125%2c9.043125 L129.323125%2c24.98625 L146.086875%2c24.98625 L132.524375%2c34.839375 Z' id='Shape' fill='%230052B4'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$b = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/uruguay%3c/title%3e %3cg id='flags/uruguay' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-uruguay' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M160%2c118.260625 L314.488125%2c118.260625 C310.47625%2c103.376875 304.37875%2c89.35125 296.51625%2c76.52125 L160%2c76.52125 L160%2c118.260625 Z' id='SVGCleanerId_0' fill='%23338AF3'%3e%3c/path%3e %3cg id='Group' transform='translate(23.483750%2c 0.000000)' fill='%23338AF3'%3e %3cpath d='M36.918125%2c285.2175 L236.11375%2c285.2175 C250.715625%2c273.5875 263.238125%2c259.46125 273.031875%2c243.478125 L-8.8817842e-15%2c243.478125 C9.794375%2c259.460625 22.316875%2c273.5875 36.918125%2c285.2175 Z' id='Path'%3e%3c/path%3e %3cpath d='M136.51625%2c0 C136.51625%2c13.913125 136.51625%2c34.7825 136.51625%2c34.7825 L236.114375%2c34.7825 C208.783125%2c13.015 174.171875%2c0 136.51625%2c0 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M160%2c118.260625 L314.488125%2c118.260625 C310.47625%2c103.376875 304.37875%2c89.35125 296.51625%2c76.52125 L160%2c76.52125 L160%2c118.260625 Z' id='SVGCleanerId_0_1_' fill='%23338AF3'%3e%3c/path%3e %3cpath d='M0%2c160 C0%2c174.441875 1.925%2c188.430625 5.511875%2c201.739375 L314.48875%2c201.739375 C318.075%2c188.430625 320%2c174.441875 320%2c160 L0%2c160 Z' id='Path' fill='%23338AF3'%3e%3c/path%3e %3cpolygon id='Path' fill='%23FFDA44' points='139.130625 93.638125 119.589375 102.83 129.995 121.755 108.77625 117.69625 106.0875 139.130625 91.30875 123.365625 76.52875 139.130625 73.840625 117.69625 52.621875 121.75375 63.026875 102.829375 43.486875 93.638125 63.0275 84.4475 52.621875 65.5225 73.84 69.58125 76.529375 48.146875 91.30875 63.911875 106.088125 48.146875 108.77625 69.58125 129.995625 65.5225 119.59 84.448125'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$a = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/uzbekistn%3c/title%3e %3cg id='flags/uzbekistn' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-uzbekistn' fill-rule='nonzero'%3e %3cpath d='M7.55498535%2c111.30481 C2.65374493%2c126.65987 0%2c143.018059 0%2c159.99875 C0%2c176.980066 2.65436993%2c193.339505 7.55561035%2c208.694565 L159.999688%2c215.652092 L312.443765%2c208.695815 C317.34438%2c193.34013 320%2c176.980066 320%2c160 C320%2c143.018684 317.345005%2c126.65987 312.443765%2c111.304185 L159.999688%2c104.347908 L7.55498535%2c111.30481 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cg id='Group' transform='translate(3.803118%2c 104.348533)' fill='%23D80027'%3e %3cpath d='M308.640022%2c6.95627717 L156.195945%2c-1.77636378e-14 L3.75124267%2c6.95627717 C2.29874551%2c11.508795 1.04812295%2c16.1506881 6.10621471e-15%2c20.8694565 L312.38939%2c20.8694565 C311.342517%2c16.1500631 310.092519%2c11.507545 308.640022%2c6.95627717 Z' id='Path'%3e%3c/path%3e %3cpath d='M0.00187499634%2c90.4334783 C1.04874795%2c95.1522467 2.29937051%2c99.7935148 3.75186767%2c104.346033 L3.76686764%2c104.346658 L156.19532%2c111.302935 L308.639397%2c104.346658 C310.091894%2c99.7941398 311.342517%2c95.1522467 312.390015%2c90.4334783 L0.00187499634%2c90.4334783 L0.00187499634%2c90.4334783 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M159.999063%2c320 C231.383923%2c320 291.840055%2c273.247942 312.44314%2c208.69519 L7.55561035%2c208.69519 C28.1586951%2c273.247317 88.616077%2c320 159.999063%2c320 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M159.999063%2c1.77636378e-14 C88.615452%2c1.77636378e-14 28.1593201%2c46.7526826 7.55498535%2c111.305435 L312.442515%2c111.305435 C291.84068%2c46.7520576 231.383923%2c1.77636378e-14 159.999063%2c1.77636378e-14 Z' id='Path' fill='%23338AF3'%3e%3c/path%3e %3cg id='Group' transform='translate(59.699883%2c 34.782011)' fill='%23F0F0F0'%3e %3cpath d='M13.4162238%2c31.3051223 C13.4162238%2c16.3194387 23.9480782%2c3.80063985 38.0124257%2c0.729377849 C35.85118%2c0.256876003 33.6080593%2c0.00125000488 31.3043138%2c0.00125000488 C14.0155976%2c0.00125000488 0%2c14.0163048 0%2c31.3057473 C0%2c48.5951898 14.0143476%2c62.6102446 31.3043138%2c62.6102446 C33.6080593%2c62.6102446 35.850555%2c62.3539936 38.0124257%2c61.8821167 C23.9487032%2c58.8096047 13.4162238%2c46.2908058 13.4162238%2c31.3051223 Z' id='Path'%3e%3c/path%3e %3cpolygon id='Path' points='56.5148896 45.5345529 58.6336355 52.0564533 65.4911221 52.0564533 59.9436329 56.0877191 62.0623788 62.6096196 56.5148896 58.5789788 50.9661504 62.6096196 53.0855213 56.0877191 47.5374071 52.0564533 54.3948937 52.0564533'%3e%3c/polygon%3e %3cpolygon id='Path' points='78.4023468 45.5345529 80.5217177 52.0564533 87.3792043 52.0564533 81.8310901 56.0877191 83.950461 62.6096196 78.4023468 58.5789788 72.8542327 62.6096196 74.9736035 56.0877191 69.4261144 52.0564533 76.282976 52.0564533'%3e%3c/polygon%3e %3cpolygon id='Path' points='100.290429 45.5345529 102.409175 52.0564533 109.267287 52.0564533 103.719172 56.0877191 105.837918 62.6096196 100.290429 58.5789788 94.7416899 62.6096196 96.8616858 56.0877191 91.3129466 52.0564533 98.1710582 52.0564533'%3e%3c/polygon%3e %3cpolygon id='Path' points='122.178511 45.5345529 124.297882 52.0564533 131.154744 52.0564533 125.607255 56.0877191 127.726625 62.6096196 122.178511 58.5789788 116.629772 62.6096196 118.749768 56.0877191 113.201029 52.0564533 120.058515 52.0564533'%3e%3c/polygon%3e %3cpolygon id='Path' points='144.065969 45.5345529 146.185339 52.0564533 153.042826 52.0564533 147.495337 56.0877191 149.614708 62.6096196 144.065969 58.5789788 138.517854 62.6096196 140.637225 56.0877191 135.089736 52.0564533 141.946598 52.0564533'%3e%3c/polygon%3e %3cpolygon id='Path' points='78.4023468 22.7675889 80.5217177 29.2888644 87.3792043 29.2888644 81.8310901 33.3207552 83.950461 39.8420306 78.4023468 35.8113899 72.8542327 39.8420306 74.9736035 33.3207552 69.4261144 29.2888644 76.282976 29.2888644'%3e%3c/polygon%3e %3cpolygon id='Path' points='100.290429 22.7675889 102.409175 29.2888644 109.267287 29.2888644 103.719172 33.3207552 105.837918 39.8420306 100.290429 35.8113899 94.7416899 39.8420306 96.8616858 33.3207552 91.3129466 29.2888644 98.1710582 29.2888644'%3e%3c/polygon%3e %3cpolygon id='Path' points='122.178511 22.7675889 124.297882 29.2888644 131.154744 29.2888644 125.607255 33.3207552 127.726625 39.8420306 122.178511 35.8113899 116.629772 39.8420306 118.749768 33.3207552 113.201029 29.2888644 120.058515 29.2888644'%3e%3c/polygon%3e %3cpolygon id='Path' points='144.065969 22.7675889 146.185339 29.2888644 153.042826 29.2888644 147.495337 33.3207552 149.614708 39.8420306 144.065969 35.8113899 138.517854 39.8420306 140.637225 33.3207552 135.089736 29.2888644 141.946598 29.2888644'%3e%3c/polygon%3e %3cpolygon id='Path' points='100.290429 -4.44090945e-15 102.409175 6.52252548 109.267287 6.52252548 103.719172 10.5531662 105.837918 17.0756917 100.290429 13.045051 94.7416899 17.0756917 96.8616858 10.5531662 91.3129466 6.52252548 98.1710582 6.52252548'%3e%3c/polygon%3e %3cpolygon id='Path' points='122.178511 -4.44090945e-15 124.297882 6.52252548 131.154744 6.52252548 125.607255 10.5531662 127.726625 17.0756917 122.178511 13.045051 116.629772 17.0756917 118.749768 10.5531662 113.201029 6.52252548 120.058515 6.52252548'%3e%3c/polygon%3e %3cpolygon id='Path' points='144.065969 -4.44090945e-15 146.185339 6.52252548 153.042826 6.52252548 147.495337 10.5531662 149.614708 17.0756917 144.065969 13.045051 138.517854 17.0756917 140.637225 10.5531662 135.089736 6.52252548 141.946598 6.52252548'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$9 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/vanuatu%3c/title%3e %3cg id='flags/vanuatu' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-vanuatu' fill-rule='nonzero'%3e %3cpath d='M319.710575%2c160 C319.710575%2c152.926875 319.24662%2c145.961875 318.357426%2c139.130625 L139.003091%2c139.130625 C106.344563%2c106.444375 46.8178838%2c46.8675 46.8203815%2c46.8625 C-15.6067938%2c109.34625 -15.6067938%2c210.6525 46.8203815%2c273.1375 L139.004964%2c180.87 L318.357426%2c180.87 C319.245996%2c174.038125 319.710575%2c167.073125 319.710575%2c160 Z' id='Path' fill='black'%3e%3c/path%3e %3cg id='Group' transform='translate(318.535078%2c 142.561250)' fill='%23F0F0F0'%3e %3cpath d='M1.12991352%2c21.0775 C1.12304474%2c21.38625 1.11617597%2c21.69625 1.10743389%2c22.005 C1.1149271%2c21.695 1.12242031%2c21.38625 1.12991352%2c21.0775 Z' id='Path'%3e%3c/path%3e %3cpath d='M0.976302726%2c25.45 C0.961940741%2c25.755625 0.940709982%2c26.06 0.924474695%2c26.365 C0.940709982%2c26.060625 0.960691873%2c25.755625 0.976302726%2c25.45 Z' id='Path'%3e%3c/path%3e %3cpath d='M0.760872959%2c28.9375 C0.729026819%2c29.386875 0.697805114%2c29.83625 0.661587936%2c30.284375 C0.697805114%2c29.83625 0.728402385%2c29.386875 0.760872959%2c28.9375 Z' id='Path'%3e%3c/path%3e %3cpath d='M0.226981798%2c0 C0.285678604%2c0.535 0.34437541%2c1.069375 0.397452309%2c1.605625 C0.34437541%2c1.06875 0.28505417%2c0.535 0.226981798%2c0 Z' id='Path'%3e%3c/path%3e %3cpath d='M0.923850261%2c8.511875 C0.940709982%2c8.816875 0.961316307%2c9.12125 0.975678292%2c9.426875 C0.960691873%2c9.12125 0.940709982%2c8.81625 0.923850261%2c8.511875 Z' id='Path'%3e%3c/path%3e %3cpath d='M1.10680945%2c12.873125 C1.11555153%2c13.181875 1.12179587%2c13.491875 1.12928908%2c13.800625 C1.12242031%2c13.490625 1.1149271%2c13.181875 1.10680945%2c12.873125 Z' id='Path'%3e%3c/path%3e %3cpath d='M0.661587936%2c4.5925 C0.697805114%2c5.040625 0.729026819%2c5.49 0.760872959%2c5.939375 C0.728402385%2c5.49 0.697805114%2c5.040625 0.661587936%2c4.5925 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M318.357426%2c139.13 C318.429236%2c139.678125 318.492928%2c140.229375 318.558494%2c140.77875 C309.070842%2c61.4775 241.640701%2c1.77635684e-14 159.855444%2c1.77635684e-14 C115.711699%2c1.77635684e-14 75.7472915%2c17.909375 46.8191327%2c46.865 L139.000593%2c139.130625 L318.357426%2c139.130625 L318.357426%2c139.13 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M318.357426%2c180.869375 L139.000593%2c180.869375 L46.8191327%2c273.135 C75.7472915%2c302.09 115.711699%2c320 159.855444%2c320 C241.640701%2c320 309.071466%2c258.5225 318.558494%2c179.220625 C318.492928%2c179.77 318.427987%2c180.32125 318.357426%2c180.869375 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M318.931905%2c175.8325 C318.878829%2c176.36875 318.820132%2c176.903125 318.761435%2c177.438125 C318.820132%2c176.903125 318.879453%2c176.369375 318.931905%2c175.8325 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cpath d='M319.295951%2c148.500625 C319.356521%2c149.35625 319.411471%2c150.21375 319.458303%2c151.073125 C319.410846%2c150.21375 319.356521%2c149.35625 319.295951%2c148.500625 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M318.558494%2c140.77875 C318.630304%2c141.371875 318.698367%2c141.96625 318.762059%2c142.56125 C318.697118%2c141.96625 318.629055%2c141.3725 318.558494%2c140.77875 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M318.931905%2c144.166875 C319.029317%2c145.16 319.117362%2c146.155625 319.196666%2c147.155 C319.117987%2c146.155625 319.029942%2c145.159375 318.931905%2c144.166875 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M319.710575%2c160 C319.710575%2c161.216875 319.691842%2c162.42875 319.664991%2c163.638125 C319.691842%2c162.428125 319.710575%2c161.21625 319.710575%2c160 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M319.458928%2c168.92625 C319.411471%2c169.785625 319.356521%2c170.643125 319.296575%2c171.49875 C319.356521%2c170.643125 319.410846%2c169.785625 319.458928%2c168.92625 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M319.196666%2c172.845625 C319.117362%2c173.84375 319.029317%2c174.84 318.931905%2c175.8325 C319.029942%2c174.84 319.117987%2c173.84375 319.196666%2c172.845625 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M318.762059%2c177.438125 C318.698367%2c178.033125 318.630304%2c178.626875 318.558494%2c179.220625 C318.629055%2c178.6275 318.697118%2c178.033125 318.762059%2c177.438125 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M319.664991%2c156.36125 C319.691842%2c157.57125 319.710575%2c158.78375 319.710575%2c159.999375 C319.710575%2c158.78375 319.691842%2c157.57125 319.664991%2c156.36125 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M319.51138%2c151.988125 C319.567579%2c153.133125 319.610041%2c154.2825 319.642511%2c155.43375 C319.610041%2c154.281875 319.568204%2c153.133125 319.51138%2c151.988125 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M319.641887%2c164.56625 C319.609416%2c165.7175 319.566955%2c166.866875 319.510756%2c168.011875 C319.568204%2c166.86625 319.610041%2c165.7175 319.641887%2c164.56625 Z' id='Path' fill='black'%3e%3c/path%3e %3cg id='Group' transform='translate(20.852040%2c 57.151875)' fill='%23FFDA44'%3e %3cpath d='M298.706173%2c95.83375 L112.278248%2c95.83375 L16.5169066%2c-8.8817842e-15 C13.4215867%2c3.2675 10.0665022%2c7.83 7.9915077%2c11.079375 L99.5703893%2c102.789375 L7.9147023%2c194.53 C9.72930781%2c197.76125 13.6826001%2c202.54375 16.4582097%2c205.655625 L112.280121%2c109.746875 L298.728652%2c109.746875 C298.827937%2c107.439375 298.859159%2c105.121875 298.859159%2c102.790625 C298.859159%2c99.666875 298.772363%2c97.36375 298.706173%2c95.83375 Z' id='Path'%3e%3c/path%3e %3cpath d='M17.9799557%2c136.955625 L17.9799557%2c123.55375 C31.3415967%2c123.55375 42.2111212%2c112.673125 42.2111212%2c99.300625 C42.2111212%2c89.83875 34.5199663%2c82.14125 25.0672828%2c82.14125 C18.6274938%2c82.14125 13.3878672%2c87.385 13.3878672%2c93.831875 C13.3878672%2c97.95375 16.7379562%2c101.3075 20.8567236%2c101.3075 C23.1846139%2c101.3075 25.0785226%2c99.410625 25.0785226%2c97.080625 L38.4676387%2c97.080625 C38.4676387%2c106.80125 30.5672984%2c114.70875 20.857348%2c114.70875 C9.35589622%2c114.709375 -8.87374237e-15%2c105.343125 -8.87374237e-15%2c93.833125 C-8.87374237e-15%2c79.9975 11.2460583%2c68.741875 25.0679072%2c68.741875 C41.9038996%2c68.741875 55.6014862%2c82.451875 55.6014862%2c99.3025 C55.6008617%2c120.063125 38.7242811%2c136.955625 17.9799557%2c136.955625 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$8 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/vatican-city%3c/title%3e %3cg id='flags/vatican-city' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-vatican-city' transform='translate(0.000000%2c 0.000000)' fill-rule='nonzero'%3e %3cpath d='M160%2c0 C248.365%2c0 320%2c71.635 320%2c160 C320%2c248.365 248.365%2c320 160%2c320 C160%2c313.04375 139.130625%2c160 139.130625%2c160 L160%2c0 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cpath d='M160%2c320 C71.635%2c320 0%2c248.365 0%2c160 C0%2c71.635 71.635%2c0 160%2c0' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3cpath d='M221.26875%2c139.228125 L251.338125%2c179.006875 C246.600625%2c186.180625 246.625625%2c195.845625 252.105%2c203.09375 C259.055%2c212.288125 272.143125%2c214.108125 281.338125%2c207.1575 C290.5325%2c200.2075 292.3525%2c187.119375 285.40125%2c177.925 C279.923125%2c170.676875 270.630625%2c168.016875 262.436875%2c170.618125 L215.57375%2c108.6225 L204.475%2c117.0125 L187.825%2c129.59625 L204.605%2c151.793125 L221.26875%2c139.228125 Z M264.558125%2c184.959375 C267.623125%2c182.641875 271.98625%2c183.249375 274.303125%2c186.313125 C276.619375%2c189.378125 276.01375%2c193.74125 272.94875%2c196.05875 C269.884375%2c198.374375 265.52125%2c197.769375 263.205%2c194.70375 C260.886875%2c191.63875 261.49375%2c187.275625 264.558125%2c184.959375 Z' id='Shape' fill='%23ACABB1'%3e%3c/path%3e %3cpath d='M272.84375%2c151.7925 L289.62375%2c129.595625 L272.975%2c117.010625 L261.87625%2c108.620625 L215.013125%2c170.61625 C206.820625%2c168.015 197.5275%2c170.675625 192.04875%2c177.923125 C185.0975%2c187.118125 186.9175%2c200.205625 196.111875%2c207.155625 C205.306875%2c214.105625 218.394375%2c212.28625 225.344375%2c203.091875 C230.823125%2c195.84375 230.848125%2c186.17875 226.11125%2c179.005 L256.180625%2c139.22625 L272.84375%2c151.7925 Z M214.245625%2c194.703125 C211.929375%2c197.76875 207.566875%2c198.374375 204.501875%2c196.058125 C201.436875%2c193.740625 200.830625%2c189.3775 203.1475%2c186.3125 C205.46375%2c183.24875 209.826875%2c182.64125 212.8925%2c184.95875 C215.956875%2c187.275625 216.5625%2c191.63875 214.245625%2c194.703125 Z' id='Shape' fill='%23FFDA44'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$7 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/venezuela%3c/title%3e %3cg id='flags/venezuela' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-venezuela' fill-rule='nonzero'%3e %3cpath d='M304.12375%2c229.565 C314.295625%2c208.53 320%2c184.931875 320%2c160 C320%2c135.068125 314.295625%2c111.47 304.12375%2c90.435 L160%2c76.521875 L15.87625%2c90.435 C5.704375%2c111.47 0%2c135.068125 0%2c160 C0%2c184.931875 5.704375%2c208.53 15.87625%2c229.565 L160%2c243.478125 L304.12375%2c229.565 Z' id='Path' fill='%230052B4'%3e%3c/path%3e %3cpath d='M160%2c320 C223.433125%2c320 278.24375%2c283.084375 304.12375%2c229.565 L15.87625%2c229.565 C41.75625%2c283.084375 96.56625%2c320 160%2c320 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cg id='Group' transform='translate(42.896250%2c 111.304375)' fill='%23F0F0F0'%3e %3cpolygon id='Path' points='234.208125 80.103125 225.7575 86.706875 229.425 96.7825 220.533125 90.786875 212.081875 97.389375 215.036875 87.08 206.14625 81.0825 216.864375 80.70875 219.821875 70.399375 223.490625 80.476875'%3e%3c/polygon%3e %3cpolygon id='Path' points='212.566875 42.621875 206.885 51.7175 213.779375 59.93125 203.3725 57.34 197.68875 66.433125 196.939375 55.735 186.53375 53.139375 196.47875 49.12125 195.73125 38.4225 202.624375 46.639375'%3e%3c/polygon%3e %3cpolygon id='Path' points='179.4125 14.80125 177.18375 25.291875 186.47125 30.654375 175.805625 31.77875 173.575625 42.26625 169.213125 32.47 158.54625 33.589375 166.5175 26.413125 162.155625 16.616875 171.443125 21.978125'%3e%3c/polygon%3e %3cpolygon id='Path' points='138.7425 1.77635684e-14 140.236875 10.620625 150.7975 12.481875 141.15875 17.185625 142.651875 27.805625 135.201875 20.090625 125.560625 24.791875 130.596875 15.32125 123.14625 7.6075 133.70875 9.469375'%3e%3c/polygon%3e %3cpolygon id='Path' points='95.464375 1.77635684e-14 100.5 9.469375 111.06 7.60625 103.611875 15.323125 108.645 24.793125 99.00625 20.090625 91.555 27.80375 93.049375 17.185625 83.41 12.484375 93.971875 10.620625'%3e%3c/polygon%3e %3cpolygon id='Path' points='54.794375 14.80125 62.765625 21.978125 72.05125 16.616875 67.690625 26.416875 75.66 33.591875 64.994375 32.47 60.630625 42.26625 58.40375 31.776875 47.7375 30.656875 57.025 25.293125'%3e%3c/polygon%3e %3cpolygon id='Path' points='21.64 42.621875 31.585625 46.639375 38.476875 38.424375 37.73125 49.125 47.67375 53.143125 37.268125 55.73625 36.51875 66.433125 30.8375 57.34 20.430625 59.933125 27.324375 51.7175'%3e%3c/polygon%3e %3cpolygon id='Path' points='-8.8817842e-15 80.103125 10.72 80.476875 14.38625 70.400625 17.345625 80.710625 28.0625 81.085 19.17125 87.0825 22.12625 97.39125 13.67625 90.78875 4.784375 96.784375 8.4525 86.706875'%3e%3c/polygon%3e %3c/g%3e %3cpath d='M304.12375%2c90.435 C278.24375%2c36.915625 223.433125%2c0 160%2c0 C96.56625%2c0 41.75625%2c36.915625 15.87625%2c90.435 L304.12375%2c90.435 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$6 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/vietnam%3c/title%3e %3cg id='flags/vietnam' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-vietnam' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23D80027' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpolygon id='Path' fill='%23FFDA44' points='160 83.478125 177.2675 136.62125 233.145625 136.62125 187.93875 169.465 205.20625 222.60875 160 189.764375 114.79375 222.60875 132.06125 169.465 86.855 136.62125 142.7325 136.62125'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$5 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/virgin-islands%3c/title%3e %3cg id='flags/virgin-islands' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-virgin-islands' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23FCFCFC' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(73.043750%2c 84.605000)' fill='%23FFDA44'%3e %3cpath d='M114.130625%2c27.17375 C114.130625%2c12.16625 101.964375%2c0 86.95625%2c0 C71.948125%2c0 59.781875%2c12.16625 59.781875%2c27.17375 L1.77635684e-14%2c27.17375 C1.77635684e-14%2c41.949375 12.87125%2c53.92875 27.646875%2c53.92875 L26.756875%2c53.92875 C26.756875%2c68.705625 38.734375%2c80.685625 53.5125%2c80.685625 C53.5125%2c93.76875 62.90875%2c104.64 75.318125%2c106.96375 L75.24875%2c107.12 L98.664375%2c107.12 L98.595%2c106.96375 C111.005%2c104.63875 120.400625%2c93.768125 120.400625%2c80.685625 C135.178125%2c80.685625 147.15625%2c68.705625 147.15625%2c53.92875 L146.265%2c53.92875 C161.040625%2c53.92875 173.9125%2c41.949375 173.9125%2c27.17375 L114.130625%2c27.17375 Z' id='Path'%3e%3c/path%3e %3cpath d='M75.010625%2c104.3475 L58.161875%2c142.386875 C67.051875%2c146.000625 76.76875%2c148.009375 86.956875%2c148.009375 C97.145%2c148.009375 106.861875%2c146.00125 115.75125%2c142.386875 L98.903125%2c104.3475 L75.010625%2c104.3475 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M125.2175%2c125.141875 L125.2175%2c171.94875 C125.2175%2c198.5725 160%2c206.73125 160%2c206.73125 C160%2c206.73125 194.7825%2c198.5725 194.7825%2c171.94875 L194.7825%2c125.141875 L125.2175%2c125.141875 L125.2175%2c125.141875 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cg id='Group' transform='translate(24.592500%2c 161.126250)' fill='%23338AF3'%3e %3cpolygon id='Path' points='14.206875 0 33.01875 52.615 51.635 0 65.8425 0 38.70125 69.565 27.335625 69.565 8.8817842e-15 0'%3e%3c/polygon%3e %3cpolygon id='Path' points='232.79875 69.565 232.79875 0 246.319375 0 246.319375 69.565'%3e%3c/polygon%3e %3c/g%3e %3cg id='Group' transform='translate(139.130625%2c 140.256875)' fill='%23D80027'%3e %3cpath d='M0%2c3.55271368e-14 L0%2c56.72125 C4.781875%2c60.240625 9.926875%2c62.66125 13.913125%2c64.21125 L13.913125%2c3.55271368e-14 L0%2c3.55271368e-14 Z' id='Path'%3e%3c/path%3e %3cpath d='M41.73875%2c3.55271368e-14 L41.73875%2c56.72125 C36.956875%2c60.240625 31.811875%2c62.66125 27.825625%2c64.21125 L27.825625%2c3.55271368e-14 L41.73875%2c3.55271368e-14 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3crect id='Rectangle' fill='%230052B4' x='125.2175' y='125.140625' width='69.565' height='22.0725'%3e%3c/rect%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$4 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/wales%3c/title%3e %3cg id='flags/wales' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-wales' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M320%2c160 C320%2c248.365 248.365%2c320 160%2c320 C71.635%2c320 0%2c248.365 0%2c160' id='Path' fill='%23496E2D'%3e%3c/path%3e %3cpath d='M276.88375%2c111.339375 C271.161875%2c95.1125 255.70125%2c83.47875 237.516875%2c83.47875 L201.739375%2c83.47875 C178.6875%2c83.47875 160%2c102.16625 160%2c125.218125 C160%2c132.749375 162.005%2c139.9875 165.494375%2c146.0875 C152.20875%2c145.97875 139.913125%2c146.179375 132.17375%2c146.0875 C132.17375%2c129.99 132.17375%2c109.48375 132.17375%2c105.193125 L133.8175%2c103.549375 C141.19625%2c96.170625 138.735625%2c83.873125 138.735625%2c83.873125 C138.735625%2c83.873125 126.439375%2c81.41375 119.060625%2c88.7925 L110.46125%2c97.391875 L100.869375%2c97.391875 C79.738125%2c97.391875 62.60875%2c114.521875 62.60875%2c135.6525 L90.435%2c135.6525 L90.435%2c166.956875 C90.435%2c171.535625 91.358125%2c175.8975 93.02625%2c179.87 L83.478125%2c187.82625 L69.565%2c187.82625 L69.565%2c173.913125 L55.651875%2c173.913125 L55.651875%2c201.739375 L118.260625%2c201.739375 L118.260625%2c229.565625 L104.3475%2c229.565625 L104.3475%2c243.47875 L132.17375%2c243.47875 L132.17375%2c215.6525 L144.926875%2c200.348125 L175.0725%2c200.348125 L187.825625%2c215.6525 L187.825625%2c229.565625 L173.9125%2c229.565625 L173.9125%2c243.47875 L229.564375%2c243.47875 L229.564375%2c166.95625 C229.564375%2c155.430625 238.908125%2c146.086875 250.43375%2c146.086875 C250.73%2c146.086875 251.02375%2c146.0975 251.3175%2c146.109375 C250.74125%2c143.879375 250.43375%2c141.54125 250.43375%2c139.130625 C250.435%2c124.225 262.155625%2c112.0575 276.88375%2c111.339375 Z M201.739375%2c229.565 L201.739375%2c200.3475 L202.89875%2c200.3475 L215.651875%2c215.651875 L215.651875%2c229.565 L201.739375%2c229.565 L201.739375%2c229.565 Z' id='Shape' fill='%23D80027'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$3 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/western-sahara%3c/title%3e %3cg id='flags/western-sahara' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-western-sahara' fill-rule='nonzero'%3e %3cpath d='M15.876547%2c90.435 C5.70530693%2c111.47 0.000312499695%2c135.068125 0.000312499695%2c160 C0.000312499695%2c184.931875 5.70530693%2c208.53 15.876547%2c229.565 L160.000156%2c243.478125 L304.123766%2c229.565 C314.295006%2c208.53 320%2c184.931875 320%2c160 C320%2c135.068125 314.295006%2c111.47 304.123766%2c90.435 L160.000156%2c76.521875 L15.876547%2c90.435 Z' id='Path' fill='%23F0F0F0'%3e%3c/path%3e %3cpath d='M15.882172%2c229.565 C41.7608967%2c283.084375 96.5670932%2c320 160.000156%2c320 C223.433219%2c320 278.239416%2c283.084375 304.118141%2c229.565 L15.882172%2c229.565 Z' id='Path' fill='%23496E2D'%3e%3c/path%3e %3cpath d='M15.882172%2c90.435 L304.118141%2c90.435 C278.239416%2c36.915625 223.433844%2c0 160.000156%2c0 C96.5664682%2c0 41.7608967%2c36.915625 15.882172%2c90.435 Z' id='Path' fill='black'%3e%3c/path%3e %3cg id='Group' transform='translate(0.000000%2c 46.862500)' fill='%23D80027'%3e %3cpath d='M46.8627667%2c8.8817842e-15 C-15.6209222%2c62.48375 -15.6209222%2c163.790625 46.8627667%2c226.275 C72.6833665%2c200.454375 97.5164673%2c175.62125 160.000156%2c113.1375 L46.8627667%2c8.8817842e-15 Z' id='Path'%3e%3c/path%3e %3cpath d='M201.73949%2c113.1375 C201.73949%2c89.82625 218.122599%2c70.351875 240.000078%2c65.574375 C236.637581%2c64.84 233.148835%2c64.441875 229.565088%2c64.441875 C202.67074%2c64.441875 180.869511%2c86.243125 180.869511%2c113.1375 C180.869511%2c140.031875 202.67074%2c161.833125 229.565088%2c161.833125 C233.14821%2c161.833125 236.636956%2c161.435 240.000078%2c160.700625 C218.122599%2c155.923125 201.73949%2c136.44875 201.73949%2c113.1375 Z' id='Path'%3e%3c/path%3e %3cpolygon id='Path' points='242.045701 81.833125 248.953819 103.091875 271.304423 103.091875 253.22194 116.228125 260.129433 137.485625 242.045701 124.348125 223.963844 137.485625 230.871962 116.228125 212.78823 103.091875 235.138833 103.091875'%3e%3c/polygon%3e %3c/g%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$2 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/yemen%3c/title%3e %3cg id='flags/yemen' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-yemen' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M160%2c320 C228.794375%2c320 287.44125%2c276.58 310.048125%2c215.651875 L9.951875%2c215.651875 C32.55875%2c276.58 91.205625%2c320 160%2c320 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M160%2c0 C91.205625%2c0 32.55875%2c43.42 9.951875%2c104.348125 L310.04875%2c104.348125 C287.44125%2c43.42 228.794375%2c0 160%2c0 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img$1 = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/zambia%3c/title%3e %3cg id='flags/zambia' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-zambia' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23496E2D' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cpath d='M222.60875%2c160 L160%2c160 L160%2c320 C178.7025%2c320 196.650625%2c316.780625 213.333125%2c310.88375 L222.60875%2c160 Z' id='Path' fill='%23D80027'%3e%3c/path%3e %3cpath d='M266.66625%2c279.245625 C299.39625%2c249.949375 320%2c207.383125 320%2c160 L257.39125%2c160 L266.66625%2c279.245625 Z' id='Path' fill='%23FF9811'%3e%3c/path%3e %3cpath d='M213.333125%2c160 L213.333125%2c310.88375 C233.20625%2c303.858125 251.2775%2c293.02125 266.666875%2c279.24625 L266.666875%2c160 L213.333125%2c160 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M295.651875%2c104.348125 L253.9125%2c104.348125 C253.9125%2c96.664375 247.683125%2c90.435 239.999375%2c90.435 C232.315625%2c90.435 226.08625%2c96.664375 226.08625%2c104.348125 L184.346875%2c104.348125 C184.346875%2c112.0325 191.04%2c118.26125 198.723125%2c118.26125 L198.26%2c118.26125 C198.26%2c125.945625 204.488125%2c132.174375 212.173125%2c132.174375 C212.173125%2c139.85875 218.40125%2c146.0875 226.08625%2c146.0875 L253.9125%2c146.0875 C261.59625%2c146.0875 267.825625%2c139.85875 267.825625%2c132.174375 C275.509375%2c132.174375 281.73875%2c125.945625 281.73875%2c118.26125 L281.275625%2c118.26125 C288.959375%2c118.260625 295.651875%2c112.031875 295.651875%2c104.348125 Z' id='Path' fill='%23FF9811'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var img = "data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8'%3f%3e%3csvg width='320px' height='320px' viewBox='0 0 320 320' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e %3ctitle%3eflags/zimbabwe%3c/title%3e %3cg id='flags/zimbabwe' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3e %3cg id='-zimbabwe' fill-rule='nonzero'%3e %3ccircle id='Oval' fill='%23F0F0F0' cx='160' cy='160' r='160'%3e%3c/circle%3e %3cg id='Group' transform='translate(46.875625%2c 34.782500)' fill='%23FFDA44'%3e %3cpath d='M257.81%2c56.844375 C249.68125%2c39.673125 238.586875%2c24.18375 225.186875%2c11.030625 L113.124375%2c8.8817842e-15 L1.061875%2c11.03125 C0.704375%2c11.381875 0.355625%2c11.740625 0.001875%2c12.095 L44.751875%2c56.845 L113.124375%2c58.933125 L257.81%2c56.844375 Z' id='Path'%3e%3c/path%3e %3cpath d='M-3.55271368e-14%2c238.341875 C0.58875%2c238.930625 1.17625%2c239.52 1.77375%2c240.1 L113.124375%2c250.435 L224.47375%2c240.1 C238.011875%2c226.975 249.241875%2c211.484375 257.485%2c194.28625 L50.515%2c187.82625 C32.706875%2c205.635 12.166875%2c226.17375 -3.55271368e-14%2c238.341875 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M318.40875%2c137.440625 L132.17375%2c132.17375 L160%2c160 C151.758125%2c168.241875 139.454375%2c180.545625 132.17375%2c187.82625 L318.31125%2c183.255 C319.4175%2c175.661875 320%2c167.899375 320%2c160 C320%2c152.34125 319.45%2c144.8125 318.40875%2c137.440625 Z' id='Path' fill='black'%3e%3c/path%3e %3cpath d='M160%2c0 C116.3575%2c0 76.80375%2c17.48125 47.9375%2c45.81375 L272.0625%2c45.81375 C243.19625%2c17.48125 203.6425%2c0 160%2c0 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cg id='Group' transform='translate(90.931250%2c 91.626875)' fill='%23D80027'%3e %3cpath d='M46.509375%2c45.81375 L227.4775%2c45.81375 C225.194375%2c29.639375 220.496875%2c14.243125 213.754375%2c-1.77635684e-14 L0.695625%2c-1.77635684e-14 L46.509375%2c45.81375 Z' id='Path'%3e%3c/path%3e %3cpath d='M0%2c137.441875 L213.43%2c137.441875 C220.25125%2c123.209375 225.02375%2c107.81125 227.380625%2c91.628125 L45.81375%2c91.628125 C28.071875%2c109.37 13.035625%2c124.40625 0%2c137.441875 Z' id='Path'%3e%3c/path%3e %3c/g%3e %3cpath d='M160%2c320 C203.284375%2c320 242.546875%2c302.805 271.349375%2c274.881875 L48.650625%2c274.881875 C77.453125%2c302.805 116.715625%2c320 160%2c320 Z' id='Path' fill='%236DA544'%3e%3c/path%3e %3cpath d='M57.134375%2c37.45875 C53.5775%2c40.4475 50.145625%2c43.580625 46.8625%2c46.8625 L160%2c160 L46.8625%2c273.1375 C50.145%2c276.42 53.5775%2c279.5525 57.134375%2c282.54125 L179.675625%2c160 L57.134375%2c37.45875 Z' id='Path' fill='black'%3e%3c/path%3e %3cpolygon id='Path' fill='%23D80027' points='64.328125 118.260625 74.6875 150.145625 108.215625 150.145625 81.091875 169.853125 91.451875 201.739375 64.328125 182.0325 37.20375 201.739375 47.565 169.853125 20.441875 150.145625 53.968125 150.145625'%3e%3c/polygon%3e %3cpath d='M92.824375%2c162.60875 L65.825625%2c153.04375 C65.825625%2c153.04375 63.830625%2c134.329375 63.71%2c133.695 C62.79375%2c128.868125 58.551875%2c125.2175 53.458125%2c125.2175 C47.695625%2c125.2175 43.023125%2c129.889375 43.023125%2c135.6525 C43.023125%2c136.608125 43.1625%2c137.52875 43.403125%2c138.40875 L35.833125%2c146.029375 C35.833125%2c146.029375 44.824375%2c146.029375 49.293125%2c146.029375 C49.293125%2c160 38.868125%2c160 38.868125%2c173.913125 L44.65125%2c187.82625 L79.43375%2c187.82625 L85.23125%2c173.913125 L85.22875%2c173.913125 C85.809375%2c172.578125 86.161875%2c171.20125 86.3075%2c169.825625 C91.305%2c167.804375 92.824375%2c162.60875 92.824375%2c162.60875 Z' id='Path' fill='%23FFDA44'%3e%3c/path%3e %3c/g%3e %3c/g%3e%3c/svg%3e";

var countries = [
    {
        name: "Afghanistan",
        phoneCode: "+93",
        alpha2code: "AF",
        alpha3code: "AFG",
        flagName: "afghanistan",
    },
    {
        name: "Albania",
        phoneCode: "+355",
        alpha2code: "AL",
        alpha3code: "ALB",
        flagName: "albania",
    },
    {
        name: "Algeria",
        phoneCode: "+213",
        alpha2code: "DZ",
        alpha3code: "DZA",
        flagName: "algeria",
    },
    {
        name: "American Samoa",
        phoneCode: "+1",
        alpha2code: "AS",
        alpha3code: "ASM",
        flagName: "samoa",
    },
    {
        name: "Andorra",
        phoneCode: "+376",
        alpha2code: "AD",
        alpha3code: "AND",
        flagName: "andorra",
    },
    {
        name: "Angola",
        phoneCode: "+244",
        alpha2code: "AO",
        alpha3code: "AGO",
        flagName: "angola",
    },
    {
        name: "Anguilla",
        phoneCode: "+1",
        alpha2code: "AI",
        alpha3code: "AIA",
        flagName: "anguilla",
    },
    {
        name: "Antigua and Barbuda",
        phoneCode: "+1",
        alpha2code: "AG",
        alpha3code: "ATG",
        flagName: "antiguaAndBarbuda",
    },
    {
        name: "Argentina",
        phoneCode: "+54",
        alpha2code: "AR",
        alpha3code: "ARG",
        flagName: "argentina",
    },
    {
        name: "Armenia",
        phoneCode: "+374",
        alpha2code: "AM",
        alpha3code: "ARM",
        flagName: "armenia",
    },
    {
        name: "Aruba",
        phoneCode: "+297",
        alpha2code: "AW",
        alpha3code: "ABW",
        flagName: "aruba",
    },
    {
        name: "Australia",
        phoneCode: "+61",
        alpha2code: "AU",
        alpha3code: "AUS",
        flagName: "australia",
    },
    {
        name: "Austria",
        phoneCode: "+43",
        alpha2code: "AT",
        alpha3code: "AUT",
        flagName: "austria",
    },
    {
        name: "Azerbaijan",
        phoneCode: "+994",
        alpha2code: "AZ",
        alpha3code: "AZE",
        flagName: "azerbaijan",
    },
    {
        name: "Bahrain",
        phoneCode: "+973",
        alpha2code: "BH",
        alpha3code: "BHR",
        flagName: "bahrain",
    },
    {
        name: "Bangladesh",
        phoneCode: "+880",
        alpha2code: "BD",
        alpha3code: "BGD",
        flagName: "bangladesh",
    },
    {
        name: "Barbados",
        phoneCode: "+1",
        alpha2code: "BB",
        alpha3code: "BRB",
        flagName: "barbados",
    },
    {
        name: "Belarus",
        phoneCode: "+375",
        alpha2code: "BY",
        alpha3code: "BLR",
        flagName: "belarus",
    },
    {
        name: "Belgium",
        phoneCode: "+32",
        alpha2code: "BE",
        alpha3code: "BEL",
        flagName: "Belgium",
    },
    {
        name: "Belize",
        phoneCode: "+501",
        alpha2code: "BZ",
        alpha3code: "BLZ",
        flagName: "belize",
    },
    {
        name: "Benin",
        phoneCode: "+229",
        alpha2code: "BJ",
        alpha3code: "BEN",
        flagName: "benin",
    },
    {
        name: "Bermuda",
        phoneCode: "+1",
        alpha2code: "BM",
        alpha3code: "BMU",
        flagName: "bermuda",
    },
    {
        name: "Bhutan",
        phoneCode: "+975",
        alpha2code: "BT",
        alpha3code: "BTN",
        flagName: "bhutan1",
    },
    {
        name: "Bolivia",
        phoneCode: "+591",
        alpha2code: "BO",
        alpha3code: "BOL",
        flagName: "bolivia",
    },
    {
        name: "Bonaire, Sint Eustatius and Saba",
        phoneCode: "+599",
        alpha2code: "BQ",
        alpha3code: "BES",
        flagName: "bonaire",
    },
    {
        name: "Bosnia and Herzegovina",
        phoneCode: "+387",
        alpha2code: "BA",
        alpha3code: "BIH",
        flagName: "bosniaAndHerzegovina",
    },
    {
        name: "Botswana",
        phoneCode: "+267",
        alpha2code: "BW",
        alpha3code: "BWA",
        flagName: "botswana",
    },
    {
        name: "Brazil",
        phoneCode: "+55",
        alpha2code: "BR",
        alpha3code: "BRA",
        flagName: "brazil",
    },
    {
        name: "British Indian Ocean Territory",
        phoneCode: "+246",
        alpha2code: "IO",
        alpha3code: "IOT",
        flagName: "britishIndianOceanTerritory",
    },
    {
        name: "British Virgin Islands",
        phoneCode: "+1",
        alpha2code: "VG",
        alpha3code: "VGB",
        flagName: "britishVirginIslands",
    },
    {
        name: "Brunei Darussalam",
        phoneCode: "+673",
        alpha2code: "BN",
        alpha3code: "BRN",
        flagName: "brunei",
    },
    {
        name: "Bulgaria",
        phoneCode: "+359",
        alpha2code: "BG",
        alpha3code: "BGR",
        flagName: "bulgaria",
    },
    {
        name: "Burkina Faso",
        phoneCode: "+226",
        alpha2code: "BF",
        alpha3code: "BFA",
        flagName: "burkinaFaso",
    },
    {
        name: "Myanmar",
        phoneCode: "+95",
        alpha2code: "MM",
        alpha3code: "MMR",
        flagName: "myanmar",
    },
    {
        name: "Burundi",
        phoneCode: "+257",
        alpha2code: "BI",
        alpha3code: "BDI",
        flagName: "burundi",
    },
    {
        name: "Cambodia",
        phoneCode: "+855",
        alpha2code: "KH",
        alpha3code: "KHM",
        flagName: "cambodia",
    },
    {
        name: "Cameroon",
        phoneCode: "+237",
        alpha2code: "CM",
        alpha3code: "CMR",
        flagName: "cameroon",
    },
    {
        name: "Canada",
        phoneCode: "+1",
        alpha2code: "CA",
        alpha3code: "CAN",
        flagName: "canada",
    },
    {
        name: "Cabo Verde",
        phoneCode: "+238",
        alpha2code: "CV",
        alpha3code: "CPV",
        flagName: "capeVerde",
    },
    {
        name: "Cayman Islands",
        phoneCode: "+1",
        alpha2code: "KY",
        alpha3code: "CYM",
        flagName: "caymanIslands",
    },
    {
        name: "Central African Republic",
        phoneCode: "+236",
        alpha2code: "CF",
        alpha3code: "CAF",
        flagName: "centralAfricanRepublic",
    },
    {
        name: "Chad",
        phoneCode: "+235",
        alpha2code: "ID",
        alpha3code: "TCD",
        flagName: "chad",
    },
    {
        name: "Chile",
        phoneCode: "+56",
        alpha2code: "CL",
        alpha3code: "CHL",
        flagName: "chile",
    },
    {
        name: "China",
        phoneCode: "+86",
        alpha2code: "CN",
        alpha3code: "CHN",
        flagName: "china",
    },
    {
        name: "Colombia",
        phoneCode: "+57",
        alpha2code: "CO",
        alpha3code: "COL",
        flagName: "colombia",
    },
    {
        name: "Comoros",
        phoneCode: "+269",
        alpha2code: "KM",
        alpha3code: "COM",
        flagName: "comoros",
    },
    {
        name: "Cook Islands",
        phoneCode: "+682",
        alpha2code: "CK",
        alpha3code: "COK",
        flagName: "cookIslands",
    },
    {
        name: "Costa Rica",
        phoneCode: "+506",
        alpha2code: "CR",
        alpha3code: "CRI",
        flagName: "costaRica",
    },
    {
        name: "Côte d'Ivoire",
        phoneCode: "+225",
        alpha2code: "CI",
        alpha3code: "CIV",
        flagName: "ivoryCoast",
    },
    {
        name: "Croatia",
        phoneCode: "+385",
        alpha2code: "HR",
        alpha3code: "HRV",
        flagName: "croatia",
    },
    {
        name: "Cuba",
        phoneCode: "+53",
        alpha2code: "CU",
        alpha3code: "CUB",
        flagName: "cuba",
    },
    {
        name: "Curaçao",
        phoneCode: "+599",
        alpha2code: "CW",
        alpha3code: "CUW",
        flagName: "curacao",
    },
    {
        name: "Cyprus",
        phoneCode: "+357",
        alpha2code: "CY",
        alpha3code: "CYP",
        flagName: "cyprus",
    },
    {
        name: "Czechia",
        phoneCode: "+420",
        alpha2code: "CZ",
        alpha3code: "CZE",
        flagName: "czechRepublic",
    },
    {
        name: "Denmark",
        phoneCode: "+45",
        alpha2code: "DK",
        alpha3code: "DNK",
        flagName: "denmark",
    },
    {
        name: "Djibouti",
        phoneCode: "+253",
        alpha2code: "DJ",
        alpha3code: "DJI",
        flagName: "djibouti",
    },
    {
        name: "Dominica",
        phoneCode: "+1",
        alpha2code: "DM",
        alpha3code: "DMA",
        flagName: "dominica",
    },
    {
        name: "Dominican Republic",
        phoneCode: "+1",
        alpha2code: "DO",
        alpha3code: "DOM",
        flagName: "dominicanRepublic",
    },
    {
        name: "Ecuador",
        phoneCode: "+593",
        alpha2code: "EC",
        alpha3code: "ECU",
        flagName: "ecuador",
    },
    {
        name: "Egypt",
        phoneCode: "+20",
        alpha2code: "EG",
        alpha3code: "EGY",
        flagName: "egypt",
    },
    {
        name: "El Salvador",
        phoneCode: "+503",
        alpha2code: "SV",
        alpha3code: "SLV",
        flagName: "salvador",
    },
    {
        name: "Equatorial Guinea",
        phoneCode: "+240",
        alpha2code: "GQ",
        alpha3code: "GNQ",
        flagName: "equatorialGuinea",
    },
    {
        name: "Eritrea",
        phoneCode: "+291",
        alpha2code: "ER",
        alpha3code: "ERI",
        flagName: "eritrea",
    },
    {
        name: "Estonia",
        phoneCode: "+372",
        alpha2code: "EE",
        alpha3code: "EST",
        flagName: "estonia",
    },
    {
        name: "Ethiopia",
        phoneCode: "+251",
        alpha2code: "ET",
        alpha3code: "ETH",
        flagName: "ethiopia",
    },
    {
        name: "Falkland Islands",
        phoneCode: "+500",
        alpha2code: "FK",
        alpha3code: "FLK",
        flagName: "falklandIslands",
    },
    {
        name: "Faroe Islands",
        phoneCode: "+298",
        alpha2code: "FO",
        alpha3code: "FRO",
        flagName: "faroeIslands",
    },
    {
        name: "Federated States of Micronesia",
        phoneCode: "+691",
        alpha2code: "FM",
        alpha3code: "FSM",
        flagName: "micronesia",
    },
    {
        name: "Fiji",
        phoneCode: "+679",
        alpha2code: "FJ",
        alpha3code: "FJI",
        flagName: "fiji",
    },
    {
        name: "Finland",
        phoneCode: "+358",
        alpha2code: "FI",
        alpha3code: "FIN",
        flagName: "finland",
    },
    {
        name: "France",
        phoneCode: "+33",
        alpha2code: "FR",
        alpha3code: "FRA",
        flagName: "france",
    },
    {
        name: "French Guiana",
        phoneCode: "+594",
        alpha2code: "GF",
        alpha3code: "GUF",
        flagName: "france",
    },
    {
        name: "French Polynesia",
        phoneCode: "+689",
        alpha2code: "PF",
        alpha3code: "PYF",
        flagName: "frenchPolynesia",
    },
    {
        name: "Gabon",
        phoneCode: "+241",
        alpha2code: "GA",
        alpha3code: "GAB",
        flagName: "gabon",
    },
    {
        name: "Georgia",
        phoneCode: "+995",
        alpha2code: "GE",
        alpha3code: "GEO",
        flagName: "georgia",
    },
    {
        name: "Germany",
        phoneCode: "+49",
        alpha2code: "DE",
        alpha3code: "DEU",
        flagName: "germany",
    },
    {
        name: "Ghana",
        phoneCode: "+233",
        alpha2code: "GH",
        alpha3code: "GHA",
        flagName: "ghana",
    },
    {
        name: "Gibraltar",
        phoneCode: "+350",
        alpha2code: "GI",
        alpha3code: "GIB",
        flagName: "gibraltar",
    },
    {
        name: "Greece",
        phoneCode: "+30",
        alpha2code: "GR",
        alpha3code: "GRC",
        flagName: "greece",
    },
    {
        name: "Greenland",
        phoneCode: "+299",
        alpha2code: "GL",
        alpha3code: "GRL",
        flagName: "greenland",
    },
    {
        name: "Grenada",
        phoneCode: "+1",
        alpha2code: "GD",
        alpha3code: "GRD",
        flagName: "grenada",
    },
    {
        name: "Guadeloupe",
        phoneCode: "+590",
        alpha2code: "GP",
        alpha3code: "GLP",
        flagName: "france",
    },
    {
        name: "Guam",
        phoneCode: "+1",
        alpha2code: "GU",
        alpha3code: "GUM",
        flagName: "guam",
    },
    {
        name: "Guatemala",
        phoneCode: "+502",
        alpha2code: "GT",
        alpha3code: "GTM",
        flagName: "guatemala",
    },
    {
        name: "Guinea",
        phoneCode: "+224",
        alpha2code: "GN",
        alpha3code: "GIN",
        flagName: "guinea",
    },
    {
        name: "Guinea-Bissau",
        phoneCode: "+245",
        alpha2code: "GW",
        alpha3code: "GNB",
        flagName: "guineaBissau",
    },
    {
        name: "Guyana",
        phoneCode: "+592",
        alpha2code: "GY",
        alpha3code: "GUY",
        flagName: "guyana",
    },
    {
        name: "Haiti",
        phoneCode: "+509",
        alpha2code: "HT",
        alpha3code: "HTI",
        flagName: "haiti",
    },
    {
        name: "Honduras",
        phoneCode: "+504",
        alpha2code: "HN",
        alpha3code: "HND",
        flagName: "honduras",
    },
    {
        name: "Hong Kong",
        phoneCode: "+852",
        alpha2code: "HK",
        alpha3code: "HKG",
        flagName: "hongKong",
    },
    {
        name: "Hungary",
        phoneCode: "+36",
        alpha2code: "HU",
        alpha3code: "HUN",
        flagName: "hungary",
    },
    {
        name: "Iceland",
        phoneCode: "+354",
        alpha2code: "IS",
        alpha3code: "ISL",
        flagName: "iceland",
    },
    {
        name: "India",
        phoneCode: "+91",
        alpha2code: "IN",
        alpha3code: "IND",
        flagName: "india",
    },
    {
        name: "Indonesia",
        phoneCode: "+62",
        alpha2code: "ID",
        alpha3code: "IDN",
        flagName: "indonesia",
    },
    {
        name: "Iran",
        phoneCode: "+98",
        alpha2code: "IR",
        alpha3code: "IRN",
        flagName: "iran",
    },
    {
        name: "Iraq",
        phoneCode: "+964",
        alpha2code: "IQ",
        alpha3code: "IRQ",
        flagName: "iraq",
    },
    {
        name: "Ireland",
        phoneCode: "+353",
        alpha2code: "IE",
        alpha3code: "IRL",
        flagName: "ireland",
    },
    {
        name: "Israel",
        phoneCode: "+972",
        alpha2code: "IL",
        alpha3code: "ISR",
        flagName: "israel",
    },
    {
        name: "Italy",
        phoneCode: "+39",
        alpha2code: "IT",
        alpha3code: "ITA",
        flagName: "italy",
    },
    {
        name: "Jamaica",
        phoneCode: "+1",
        alpha2code: "JM",
        alpha3code: "JAM",
        flagName: "jamaica",
    },
    {
        name: "Japan",
        phoneCode: "+81",
        alpha2code: "JP",
        alpha3code: "JPN",
        flagName: "japan",
    },
    {
        name: "Jordan",
        phoneCode: "+962",
        alpha2code: "JO",
        alpha3code: "JOR",
        flagName: "jordan",
    },
    {
        name: "Kazakhstan",
        phoneCode: "+7",
        alpha2code: "KZ",
        alpha3code: "KAZ",
        flagName: "kazakhstan",
    },
    {
        name: "Kenya",
        phoneCode: "+254",
        alpha2code: "KE",
        alpha3code: "KEN",
        flagName: "kenya",
    },
    {
        name: "Kiribati",
        phoneCode: "+686",
        alpha2code: "KI",
        alpha3code: "KIR",
        flagName: "kiribati",
    },
    {
        name: "Kuwait",
        phoneCode: "+965",
        alpha2code: "KW",
        alpha3code: "KWT",
        flagName: "kuwait",
    },
    {
        name: "Kyrgyzstan",
        phoneCode: "+996",
        alpha2code: "KG",
        alpha3code: "KGZ",
        flagName: "kyrgyzstan",
    },
    {
        name: "Laos",
        phoneCode: "+856",
        alpha2code: "LA",
        alpha3code: "LAO",
        flagName: "laos",
    },
    {
        name: "Latvia",
        phoneCode: "+371",
        alpha2code: "LV",
        alpha3code: "LVA",
        flagName: "latvia",
    },
    {
        name: "Lebanon",
        phoneCode: "+961",
        alpha2code: "LB",
        alpha3code: "LBN",
        flagName: "lebanon",
    },
    {
        name: "Lesotho",
        phoneCode: "+266",
        alpha2code: "LS",
        alpha3code: "LSO",
        flagName: "lesotho",
    },
    {
        name: "Liberia",
        phoneCode: "+231",
        alpha2code: "LR",
        alpha3code: "LBR",
        flagName: "liberia",
    },
    {
        name: "Libya",
        phoneCode: "+218",
        alpha2code: "LY",
        alpha3code: "LBY",
        flagName: "libya",
    },
    {
        name: "Liechtenstein",
        phoneCode: "+423",
        alpha2code: "LI",
        alpha3code: "LIE",
        flagName: "liechtenstein",
    },
    {
        name: "Lithuania",
        phoneCode: "+370",
        alpha2code: "LT",
        alpha3code: "LTU",
        flagName: "lithuania",
    },
    {
        name: "Luxembourg",
        phoneCode: "+352",
        alpha2code: "LU",
        alpha3code: "LUX",
        flagName: "luxembourg",
    },
    {
        name: "Macao",
        phoneCode: "+853",
        alpha2code: "MO",
        alpha3code: "MAC",
        flagName: "macao",
    },
    {
        name: "Macedonia",
        phoneCode: "+389",
        alpha2code: "MK",
        alpha3code: "MKD",
        flagName: "republicOfMacedonia",
    },
    {
        name: "Madagascar",
        phoneCode: "+261",
        alpha2code: "MG",
        alpha3code: "MDG",
        flagName: "madagascar",
    },
    {
        name: "Malawi",
        phoneCode: "+265",
        alpha2code: "MW",
        alpha3code: "MWI",
        flagName: "malawi",
    },
    {
        name: "Malaysia",
        phoneCode: "+60",
        alpha2code: "MY",
        alpha3code: "MYS",
        flagName: "malaysia",
    },
    {
        name: "Maldives",
        phoneCode: "+960",
        alpha2code: "MV",
        alpha3code: "MDV",
        flagName: "maldives",
    },
    {
        name: "Mali",
        phoneCode: "+223",
        alpha2code: "ML",
        alpha3code: "MLI",
        flagName: "mali",
    },
    {
        name: "Malta",
        phoneCode: "+356",
        alpha2code: "MT",
        alpha3code: "MLT",
        flagName: "malta",
    },
    {
        name: "Marshall Islands",
        phoneCode: "+692",
        alpha2code: "MH",
        alpha3code: "MHL",
        flagName: "marshallIsland",
    },
    {
        name: "Martinique",
        phoneCode: "+596",
        alpha2code: "MQ",
        alpha3code: "MTQ",
        flagName: "martinique",
    },
    {
        name: "Mauritania",
        phoneCode: "+222",
        alpha2code: "MR",
        alpha3code: "MRT",
        flagName: "mauritania",
    },
    {
        name: "Mauritius",
        phoneCode: "+230",
        alpha2code: "MU",
        alpha3code: "MUS",
        flagName: "mauritius",
    },
    {
        name: "Mayotte",
        phoneCode: "+262",
        alpha2code: "YT",
        alpha3code: "MYT",
        flagName: "france",
    },
    {
        name: "Mexico",
        phoneCode: "+52",
        alpha2code: "MX",
        alpha3code: "MEX",
        flagName: "mexico",
    },
    {
        name: "Moldova",
        phoneCode: "+373",
        alpha2code: "MD",
        alpha3code: "MDA",
        flagName: "moldova",
    },
    {
        name: "Monaco",
        phoneCode: "+377",
        alpha2code: "MC",
        alpha3code: "MCO",
        flagName: "monaco",
    },
    {
        name: "Mongolia",
        phoneCode: "+976",
        alpha2code: "MN",
        alpha3code: "MNG",
        flagName: "mongolia",
    },
    {
        name: "Montenegro",
        phoneCode: "+382",
        alpha2code: "ME",
        alpha3code: "MNE",
        flagName: "montenegro",
    },
    {
        name: "Montserrat",
        phoneCode: "+1",
        alpha2code: "MS",
        alpha3code: "MSR",
        flagName: "montserrat",
    },
    {
        name: "Morocco",
        phoneCode: "+212",
        alpha2code: "MA",
        alpha3code: "MAR",
        flagName: "morocco",
    },
    {
        name: "Mozambique",
        phoneCode: "+258",
        alpha2code: "MZ",
        alpha3code: "MOZ",
        flagName: "mozambique",
    },
    {
        name: "Namibia",
        phoneCode: "+264",
        alpha2code: "NA",
        alpha3code: "NAM",
        flagName: "namibia",
    },
    {
        name: "Nauru",
        phoneCode: "+674",
        alpha2code: "NR",
        alpha3code: "NRU",
        flagName: "nauru",
    },
    {
        name: "Nepal",
        phoneCode: "+977",
        alpha2code: "NP",
        alpha3code: "NPL",
        flagName: "nepal",
    },
    {
        name: "Netherlands",
        phoneCode: "+31",
        alpha2code: "NL",
        alpha3code: "NLD",
        flagName: "netherlands",
    },
    {
        name: "Netherlands Antilles",
        phoneCode: "+599",
        alpha2code: "AN",
        alpha3code: "ANT",
        flagName: "netherlands",
    },
    {
        name: "New Caledonia",
        phoneCode: "+687",
        alpha2code: "NC",
        alpha3code: "NCL",
        flagName: "france",
    },
    {
        name: "New Zealand",
        phoneCode: "+64",
        alpha2code: "NZ",
        alpha3code: "NZL",
        flagName: "newZealand",
    },
    {
        name: "Nicaragua",
        phoneCode: "+505",
        alpha2code: "NI",
        alpha3code: "NIC",
        flagName: "nicaragua",
    },
    {
        name: "Niger",
        phoneCode: "+227",
        alpha2code: "NE",
        alpha3code: "NER",
        flagName: "niger",
    },
    {
        name: "Nigeria",
        phoneCode: "+234",
        alpha2code: "NG",
        alpha3code: "NGA",
        flagName: "nigeria",
    },
    {
        name: "Niue",
        phoneCode: "+683",
        alpha2code: "NU",
        alpha3code: "NIU",
        flagName: "niue",
    },
    {
        name: "Norfolk Island",
        phoneCode: "+672",
        alpha2code: "NF",
        alpha3code: "NFK",
        flagName: "norfolkIsland",
    },
    {
        name: "North Korea",
        phoneCode: "+850",
        alpha2code: "KP",
        alpha3code: "PRK",
        flagName: "northKorea",
    },
    {
        name: "Northern Mariana Islands",
        phoneCode: "+1",
        alpha2code: "MP",
        alpha3code: "MNP",
        flagName: "northernMarianasIslands",
    },
    {
        name: "Norway",
        phoneCode: "+47",
        alpha2code: "NO",
        alpha3code: "NOR",
        flagName: "norway",
    },
    {
        name: "Oman",
        phoneCode: "+968",
        alpha2code: "OM",
        alpha3code: "OMN",
        flagName: "oman",
    },
    {
        name: "Pakistan",
        phoneCode: "+92",
        alpha2code: "PK",
        alpha3code: "PAK",
        flagName: "pakistan",
    },
    {
        name: "Palau",
        phoneCode: "+680",
        alpha2code: "PW",
        alpha3code: "PLW",
        flagName: "palau",
    },
    {
        name: "Palestine",
        phoneCode: "+970",
        alpha2code: "PS",
        alpha3code: "PSE",
        flagName: "palestine",
    },
    {
        name: "Panama",
        phoneCode: "+507",
        alpha2code: "PA",
        alpha3code: "PAN",
        flagName: "panama",
    },
    {
        name: "Papua New Guinea",
        phoneCode: "+675",
        alpha2code: "PG",
        alpha3code: "PNG",
        flagName: "papuaNewGuinea",
    },
    {
        name: "Paraguay",
        phoneCode: "+595",
        alpha2code: "PY",
        alpha3code: "PRY",
        flagName: "paraguay",
    },
    {
        name: "Peru",
        phoneCode: "+51",
        alpha2code: "PE",
        alpha3code: "PER",
        flagName: "peru",
    },
    {
        name: "Philippines",
        phoneCode: "+63",
        alpha2code: "PH",
        alpha3code: "PHL",
        flagName: "philippines",
    },
    {
        name: "Poland",
        phoneCode: "+48",
        alpha2code: "PL",
        alpha3code: "POL",
        flagName: "republicOfPoland",
    },
    {
        name: "Portugal",
        phoneCode: "+351",
        alpha2code: "PT",
        alpha3code: "PRT",
        flagName: "portugal",
    },
    {
        name: "Puerto Rico",
        phoneCode: "+1",
        alpha2code: "PR",
        alpha3code: "PRI",
        flagName: "puertoRico",
    },
    {
        name: "Qatar",
        phoneCode: "+974",
        alpha2code: "QA",
        alpha3code: "QAT",
        flagName: "qatar",
    },
    {
        name: "Congo",
        phoneCode: "+242",
        alpha2code: "CG",
        alpha3code: "COG",
        flagName: "republicOfTheCongo",
    },
    {
        name: "Congo, Democratic Republic of the",
        phoneCode: "+243",
        alpha2code: "CD",
        alpha3code: "COD",
        flagName: "republicOfTheCongo",
    },
    {
        name: "Réunion",
        phoneCode: "+262",
        alpha2code: "RE",
        alpha3code: "REU",
        flagName: "france",
    },
    {
        name: "Romania",
        phoneCode: "+40",
        alpha2code: "RO",
        alpha3code: "ROU",
        flagName: "romania",
    },
    {
        name: "Russia",
        phoneCode: "+7",
        alpha2code: "RU",
        alpha3code: "RUS",
        flagName: "russia",
    },
    {
        name: "Rwanda",
        phoneCode: "+250",
        alpha2code: "RW",
        alpha3code: "RWA",
        flagName: "rwanda",
    },
    {
        name: "Saint Barthélemy",
        phoneCode: "+590",
        alpha2code: "BL",
        alpha3code: "BLM",
        flagName: "stBarts",
    },
    {
        name: "Saint Helena",
        phoneCode: "+290",
        alpha2code: "SH",
        alpha3code: "SHN",
        flagName: "unitedKingdom",
    },
    {
        name: "Saint Kitts and Nevis",
        phoneCode: "+1",
        alpha2code: "KN",
        alpha3code: "KNA",
        flagName: "saintKittsAndNevis",
    },
    {
        name: "Saint Martin",
        phoneCode: "+590",
        alpha2code: "MF",
        alpha3code: "MAF",
        flagName: "france",
    },
    {
        name: "Saint Pierre and Miquelon",
        phoneCode: "+508",
        alpha2code: "PM",
        alpha3code: "SPM",
        flagName: "france",
    },
    {
        name: "Saint Vincent and the Grenadines",
        phoneCode: "+1",
        alpha2code: "VC",
        alpha3code: "VCT",
        flagName: "stVincentAndTheGrenadines",
    },
    {
        name: "Samoa",
        phoneCode: "+685",
        alpha2code: "WS",
        alpha3code: "WSM",
        flagName: "samoa",
    },
    {
        name: "San Marino",
        phoneCode: "+378",
        alpha2code: "SM",
        alpha3code: "SMR",
        flagName: "sanMarino",
    },
    {
        name: "São Tomé and Príncipe",
        phoneCode: "+239",
        alpha2code: "ST",
        alpha3code: "STP",
        flagName: "saoTomeAndPrincipe",
    },
    {
        name: "Saudi Arabia",
        phoneCode: "+966",
        alpha2code: "SA",
        alpha3code: "SAU",
        flagName: "saudiArabia",
    },
    {
        name: "Senegal",
        phoneCode: "+221",
        alpha2code: "SN",
        alpha3code: "SEN",
        flagName: "senegal",
    },
    {
        name: "Serbia",
        phoneCode: "+381",
        alpha2code: "RS",
        alpha3code: "SRB",
        flagName: "serbia",
    },
    {
        name: "Seychelles",
        phoneCode: "+248",
        alpha2code: "SC",
        alpha3code: "SYC",
        flagName: "seychelles",
    },
    {
        name: "Sierra Leone",
        phoneCode: "+232",
        alpha2code: "SL",
        alpha3code: "SLE",
        flagName: "sierraLeone",
    },
    {
        name: "Singapore",
        phoneCode: "+65",
        alpha2code: "SG",
        alpha3code: "SGP",
        flagName: "singapore",
    },
    {
        name: "Sint Maarten (Dutch part)",
        phoneCode: "+1",
        alpha2code: "SX",
        alpha3code: "SXM",
        flagName: "sintMaarten",
    },
    {
        name: "Slovakia",
        phoneCode: "+421",
        alpha2code: "SK",
        alpha3code: "SVK",
        flagName: "slovakia",
    },
    {
        name: "Slovenia",
        phoneCode: "+386",
        alpha2code: "SI",
        alpha3code: "SVN",
        flagName: "slovenia",
    },
    {
        name: "Solomon Islands",
        phoneCode: "+677",
        alpha2code: "SB",
        alpha3code: "SLB",
        flagName: "solomonIslands",
    },
    {
        name: "Somalia",
        phoneCode: "+252",
        alpha2code: "SO",
        alpha3code: "SOM",
        flagName: "somalia",
    },
    {
        name: "South Africa",
        phoneCode: "+27",
        alpha2code: "ZA",
        alpha3code: "ZAF",
        flagName: "southAfrica",
    },
    {
        name: "South Korea",
        phoneCode: "+82",
        alpha2code: "KR",
        alpha3code: "KOR",
        flagName: "southKorea",
    },
    {
        name: "South Sudan",
        phoneCode: "+211",
        alpha2code: "SS",
        alpha3code: "SDS",
        flagName: "southSudan",
    },
    {
        name: "Spain",
        phoneCode: "+34",
        alpha2code: "ES",
        alpha3code: "ESP",
        flagName: "spain",
    },
    {
        name: "Sri Lanka",
        phoneCode: "+94",
        alpha2code: "LK",
        alpha3code: "LKA",
        flagName: "sriLanka",
    },
    {
        name: "Saint Lucia",
        phoneCode: "+1",
        alpha2code: "LC",
        alpha3code: "LCA",
        flagName: "stLucia",
    },
    {
        name: "Sudan",
        phoneCode: "+249",
        alpha2code: "SD",
        alpha3code: "SDN",
        flagName: "sudan",
    },
    {
        name: "Suriname",
        phoneCode: "+597",
        alpha2code: "SR",
        alpha3code: "SUR",
        flagName: "suriname",
    },
    {
        name: "Swaziland",
        phoneCode: "+268",
        alpha2code: "SZ",
        alpha3code: "SWZ",
        flagName: "swaziland",
    },
    {
        name: "Sweden",
        phoneCode: "+46",
        alpha2code: "SE",
        alpha3code: "SWE",
        flagName: "sweden",
    },
    {
        name: "Switzerland",
        phoneCode: "+41",
        alpha2code: "CH",
        alpha3code: "CHE",
        flagName: "switzerland",
    },
    {
        name: "Syrian Arab Republic",
        phoneCode: "+963",
        alpha2code: "SY",
        alpha3code: "SYR",
        flagName: "syria",
    },
    {
        name: "Taiwan",
        phoneCode: "+886",
        alpha2code: "TW",
        alpha3code: "TWN",
        flagName: "taiwan",
    },
    {
        name: "Tajikistan",
        phoneCode: "+992",
        alpha2code: "TJ",
        alpha3code: "TJK",
        flagName: "tajikistan",
    },
    {
        name: "Tanzania",
        phoneCode: "+255",
        alpha2code: "TZ",
        alpha3code: "TZA",
        flagName: "tanzania",
    },
    {
        name: "Thailand",
        phoneCode: "+66",
        alpha2code: "TH",
        alpha3code: "THA",
        flagName: "thailand",
    },
    {
        name: "Bahamas",
        phoneCode: "+1",
        alpha2code: "BS",
        alpha3code: "BHS",
        flagName: "bahamas",
    },
    {
        name: "Gambia",
        phoneCode: "+220",
        alpha2code: "GM",
        alpha3code: "GMB",
        flagName: "gambia",
    },
    {
        name: "Timor-Leste",
        phoneCode: "+670",
        alpha2code: "TL",
        alpha3code: "TLS",
        flagName: "eastTimor",
    },
    {
        name: "Togo",
        phoneCode: "+228",
        alpha2code: "TG",
        alpha3code: "TGO",
        flagName: "togo",
    },
    {
        name: "Tokelau",
        phoneCode: "+690",
        alpha2code: "TK",
        alpha3code: "TKL",
        flagName: "tokelau",
    },
    {
        name: "Tonga",
        phoneCode: "+676",
        alpha2code: "TO",
        alpha3code: "TON",
        flagName: "tonga",
    },
    {
        name: "Trinidad and Tobago",
        phoneCode: "+1",
        alpha2code: "TT",
        alpha3code: "TTO",
        flagName: "trinidadAndTobago",
    },
    {
        name: "Tunisia",
        phoneCode: "+216",
        alpha2code: "TN",
        alpha3code: "TUN",
        flagName: "tunisia",
    },
    {
        name: "Turkey",
        phoneCode: "+90",
        alpha2code: "TR",
        alpha3code: "TUR",
        flagName: "turkey",
    },
    {
        name: "Turkmenistan",
        phoneCode: "+993",
        alpha2code: "TM",
        alpha3code: "TKM",
        flagName: "turkmenistan",
    },
    {
        name: "Turks and Caicos Islands",
        phoneCode: "+1",
        alpha2code: "TC",
        alpha3code: "TCA",
        flagName: "turksAndCaicos",
    },
    {
        name: "Tuvalu",
        phoneCode: "+688",
        alpha2code: "TV",
        alpha3code: "TUV",
        flagName: "tuvalu",
    },
    {
        name: "Uganda",
        phoneCode: "+256",
        alpha2code: "UG",
        alpha3code: "UGA",
        flagName: "uganda",
    },
    {
        name: "Ukraine",
        phoneCode: "+380",
        alpha2code: "UA",
        alpha3code: "UKR",
        flagName: "ukraine",
    },
    {
        name: "United Arab Emirates",
        phoneCode: "+971",
        alpha2code: "AE",
        alpha3code: "ARE",
        flagName: "unitedArabEmirates",
    },
    {
        name: "United Kingdom",
        phoneCode: "+44",
        alpha2code: "GB",
        alpha3code: "GBR",
        flagName: "unitedKingdom",
    },
    {
        name: "United States",
        phoneCode: "+1",
        alpha2code: "US",
        alpha3code: "USA",
        flagName: "unitedStatesOfAmerica",
    },
    {
        name: "Uruguay",
        phoneCode: "+598",
        alpha2code: "UY",
        alpha3code: "URY",
        flagName: "uruguay",
    },
    {
        name: "U.S. Virgin Islands",
        phoneCode: "+1",
        alpha2code: "VI",
        alpha3code: "VIR",
        flagName: "virginIslands",
    },
    {
        name: "Uzbekistan",
        phoneCode: "+998",
        alpha2code: "UZ",
        alpha3code: "UZB",
        flagName: "uzbekistn",
    },
    {
        name: "Vanuatu",
        phoneCode: "+678",
        alpha2code: "VU",
        alpha3code: "VUT",
        flagName: "vanuatu",
    },
    {
        name: "Vatican City",
        phoneCode: "+39",
        alpha2code: "VA",
        alpha3code: "VAT",
        flagName: "vaticanCity",
    },
    {
        name: "Venezuela",
        phoneCode: "+58",
        alpha2code: "VE",
        alpha3code: "VEN",
        flagName: "venezuela",
    },
    {
        name: "Vietnam",
        phoneCode: "+84",
        alpha2code: "VN",
        alpha3code: "VNM",
        flagName: "vietnam",
    },
    {
        name: "Wallis and Futuna",
        phoneCode: "+681",
        alpha2code: "WF",
        alpha3code: "WLF",
        flagName: "france",
    },
    {
        name: "Yemen",
        phoneCode: "+967",
        alpha2code: "YE",
        alpha3code: "YEM",
        flagName: "yemen",
    },
    {
        name: "Zambia",
        phoneCode: "+260",
        alpha2code: "ZM",
        alpha3code: "ZMB",
        flagName: "zambia",
    },
    {
        name: "Zimbabwe",
        phoneCode: "+263",
        alpha2code: "ZW",
        alpha3code: "ZWE",
        flagName: "zimbabwe",
    },
];
var countriesByAlpha2 = countries.reduce(function (obj, c) {
    obj[c.alpha2code] = c;
    return obj;
}, {});
var countriesByAlpha3 = countries.reduce(function (obj, c) {
    obj[c.alpha3code] = c;
    return obj;
}, {});

var imageMap = {
    abkhazia: img$45,
    afghanistan: img$44,
    alandIslands: img$43,
    albania: img$42,
    algeria: img$41,
    andorra: img$40,
    angola: img$3$,
    anguilla: img$3_,
    antiguaAndBarbuda: img$3Z,
    argentina: img$3Y,
    armenia: img$3X,
    aruba: img$3W,
    australia: img$3V,
    austria: img$3U,
    azerbaijan: img$3T,
    azoresIslands: img$3S,
    bahamas: img$3R,
    bahrain: img$3Q,
    balearicIslands: img$3P,
    bangladesh: img$3O,
    barbados: img$3N,
    basqueCountry: img$3M,
    belarus: img$3L,
    belgium: img$3K,
    belize: img$3J,
    benin: img$3I,
    bermuda: img$3H,
    bhutan1: img$3G,
    bhutan: img$3F,
    bolivia: img$3E,
    bonaire: img$3D,
    bosniaAndHerzegovina: img$3C,
    botswana: img$3B,
    brazil: img$3A,
    britishColumbia: img$3z,
    britishIndianOceanTerritory: img$3y,
    britishVirginIslands: img$3x,
    brunei: img$3w,
    bulgaria: img$3v,
    burkinaFaso: img$3u,
    burundi: img$3t,
    cambodia: img$3s,
    cameroon: img$3r,
    canada: img$3q,
    canaryIslands: img$3p,
    capeVerde: img$3o,
    caymanIslands: img$3n,
    centralAfricanRepublic: img$3m,
    ceuta: img$3l,
    chad: img$3k,
    chile: img$3j,
    china: img$3i,
    christmasIsland: img$3h,
    cocosIsland: img$3g,
    colombia: img$3f,
    comoros: img$3e,
    cookIslands: img$3d,
    corsica: img$3c,
    costaRica: img$3b,
    croatia: img$3a,
    cuba: img$39,
    curacao: img$38,
    cyprus: img$37,
    czechRepublic: img$36,
    democraticRepublicOfCongo: img$35,
    denmark: img$34,
    djibouti: img$33,
    dominica: img$32,
    dominicanRepublic: img$31,
    eastTimor: img$30,
    ecuador: img$2$,
    egypt: img$2_,
    england: img$2Z,
    equatorialGuinea: img$2Y,
    eritrea: img$2X,
    estonia: img$2W,
    ethiopia: img$2V,
    europeanUnion: img$2U,
    falklandIslands: img$2T,
    faroeIslands: img$2S,
    fiji: img$2R,
    finland: img$2Q,
    france: img$2P,
    frenchPolynesia: img$2O,
    gabon: img$2N,
    galapagosIslands: img$2M,
    gambia: img$2L,
    georgia: img$2K,
    germany: img$2J,
    ghana: img$2I,
    gibraltar: img$2H,
    greece: img$2G,
    greenland: img$2F,
    grenada: img$2E,
    guam: img$2D,
    guatemala: img$2C,
    guernsey: img$2B,
    guineaBissau: img$2A,
    guinea: img$2z,
    guyana: img$2y,
    haiti: img$2x,
    hawaii: img$2w,
    honduras: img$2v,
    hongKong: img$2u,
    hungary: img$2t,
    iceland: img$2s,
    india: img$2r,
    indonesia: img$2q,
    iran: img$2p,
    iraq: img$2o,
    ireland: img$2n,
    isleOfMan: img$2m,
    israel: img$2l,
    italy: img$2k,
    ivoryCoast: img$2j,
    jamaica: img$2i,
    japan: img$2h,
    jersey: img$2g,
    jordan: img$2f,
    kazakhstan: img$2e,
    kenya: img$2d,
    kiribati: img$2c,
    kosovo: img$2b,
    kuwait: img$2a,
    kyrgyzstan: img$29,
    laos: img$28,
    latvia: img$27,
    lebanon: img$26,
    lesotho: img$25,
    liberia: img$24,
    libya: img$23,
    liechtenstein: img$22,
    lithuania: img$21,
    luxembourg: img$20,
    macao: img$1$,
    madagascar: img$1_,
    madeira: img$1Z,
    malawi: img$1Y,
    malaysia: img$1X,
    maldives: img$1W,
    mali: img$1V,
    malta: img$1U,
    marshallIsland: img$1T,
    martinique: img$1S,
    mauritania: img$1R,
    mauritius: img$1Q,
    melilla: img$1P,
    mexico: img$1O,
    micronesia: img$1N,
    moldova: img$1M,
    monaco: img$1L,
    mongolia: img$1K,
    montenegro: img$1J,
    montserrat: img$1I,
    morocco: img$1H,
    mozambique: img$1G,
    myanmar: img$1F,
    namibia: img$1E,
    nato: img$1D,
    nauru: img$1C,
    nepal: img$1B,
    netherlands: img$1A,
    newZealand: img$1z,
    nicaragua: img$1y,
    niger: img$1x,
    nigeria: img$1w,
    niue: img$1v,
    norfolkIsland: img$1u,
    northKorea: img$1t,
    northenCyprus: img$1s,
    northernMarianasIslands: img$1r,
    norway: img$1q,
    oman: img$1p,
    orkneyIslands: img$1o,
    ossetia: img$1n,
    pakistan: img$1m,
    palau: img$1l,
    palestine: img$1k,
    panama: img$1j,
    papuaNewGuinea: img$1i,
    paraguay: img$1h,
    peru: img$1g,
    philippines: img$1f,
    pitcairnIslands: img$1e,
    portugal: img$1d,
    puertoRico: img$1c,
    qatar: img$1b,
    rapaNui: img$1a,
    republicOfMacedonia: img$19,
    republicOfPoland: img$18,
    republicOfTheCongo: img$17,
    romania: img$16,
    russia: img$15,
    rwanda: img$14,
    sabaIsland: img$13,
    saintKittsAndNevis: img$12,
    salvador: img$11,
    samoa: img$10,
    sanMarino: img$$,
    saoTomeAndPrincipe: img$_,
    sardinia: img$Z,
    saudiArabia: img$Y,
    scotland: img$X,
    senegal: img$W,
    serbia: img$V,
    seychelles: img$U,
    sierraLeone: img$T,
    singapore: img$S,
    sintEustatius: img$R,
    sintMaarten: img$Q,
    slovakia: img$P,
    slovenia: img$O,
    solomonIslands: img$N,
    somalia: img$M,
    somaliland: img$L,
    southAfrica: img$K,
    southKorea: img$J,
    southSudan: img$I,
    spain: img$H,
    sriLanka: img$G,
    stBarts: img$F,
    stLucia: img$E,
    stVincentAndTheGrenadines: img$D,
    sudan: img$C,
    suriname: img$B,
    swaziland: img$A,
    sweden: img$z,
    switzerland: img$y,
    syria: img$x,
    taiwan: img$w,
    tajikistan: img$v,
    tanzania: img$u,
    thailand: img$t,
    tibet: img$s,
    togo: img$r,
    tokelau: img$q,
    tonga: img$p,
    transnistria: img$o,
    trinidadAndTobago: img$n,
    tunisia: img$m,
    turkey: img$l,
    turkmenistan: img$k,
    turksAndCaicos: img$j,
    tuvalu: img$i,
    uganda: img$h,
    ukraine: img$g,
    unitedArabEmirates: img$f,
    unitedKingdom: img$e,
    unitedNations: img$d,
    unitedStatesOfAmerica: img$c,
    uruguay: img$b,
    uzbekistn: img$a,
    vanuatu: img$9,
    vaticanCity: img$8,
    venezuela: img$7,
    vietnam: img$6,
    virginIslands: img$5,
    wales: img$4,
    westernSahara: img$3,
    yemen: img$2,
    zambia: img$1,
    zimbabwe: img,
};
function getFlagImage(country) {
    if (country in imageMap) {
        return imageMap[country];
    }
    else if (country in countriesByAlpha2) {
        return imageMap[countriesByAlpha2[country].flagName];
    }
    else if (country in countriesByAlpha3) {
        return imageMap[countriesByAlpha3[country].flagName];
    }
}
var FlagImage = function (_a) {
    var className = _a.className, isSkeleton = _a.isSkeleton, src = _a.src, error = _a.error;
    return !isSkeleton && src && !error ? (React__namespace.createElement("img", { className: classnames(styles$B.flag, className), src: src, alt: "Flag icon" })) : (React__namespace.createElement("div", { "data-testid": "flag-skeleton", className: classnames(skeletonStyles.skeleton, styles$B.flag, styles$B.skeleton, className) }));
};
var FlagIcon = function (_a) {
    var className = _a.className, isSkeleton = _a.isSkeleton, country = _a.country;
    var _b = React__namespace.useState(""), imageSrc = _b[0], setImageSrc = _b[1];
    var _c = React__namespace.useState(false), imageError = _c[0], setImageError = _c[1];
    React__namespace.useEffect(function () {
        setImageError(false);
        var image = new Image();
        var domImageSrc = getFlagImage(country);
        if (domImageSrc) {
            image.src = domImageSrc;
        }
        image.onload = function () {
            setImageSrc(image.src);
        };
        image.onerror = function () {
            setImageError(true);
        };
        if (image.complete) {
            setImageSrc(image.src);
        }
        return function () {
            image.onload = null;
            image.onerror = null;
        };
    }, [country]);
    return React__namespace.createElement(FlagImage, { className: className, isSkeleton: isSkeleton, src: imageSrc, error: !!imageError });
};

var FlashIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M20.7 10.6l-9.9 13c-.2.2-.5.4-.8.4h-.2c-.7 0-1.1-.6-1-1.2L11 14H5c-.8 0-1.3-.9-.8-1.6l9-12c.2-.3.5-.4.8-.4h.2c.6 0 1.1.6 1 1.2L13.4 9h6.5c.8 0 1.3.9.8 1.6z", fill: fillColor, fillRule: "evenodd" })));
};

function InfoIcon(_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__default['default'].createElement("svg", __assign({ xmlns: "http://www.w3.org/2000/svg", width: "16", height: "17", viewBox: "0 0 16 17" }, props),
        React__default['default'].createElement("path", { fill: fillColor, fillRule: "nonzero", d: "M9.933 3.733l-.2 1.334c0 .133-.133.266-.333.266H7.733c-.2 0-.333-.2-.333-.4L7.6 3.6c0-.133.133-.267.333-.267H9.6c.2 0 .4.2.333.4zM16 8c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8zm-2 0c0-3.333-2.667-6-6-6S2 4.667 2 8s2.667 6 6 6 6-2.667 6-6zM8.667 6H6.6c-.133 0-.267.133-.333.267l-.134.666c-.066.2.134.4.334.4H7L5.8 11.4c-.2.733.2 1.267.933 1.267h2.4c.134 0 .267-.134.334-.267l.133-.667c.067-.2-.133-.4-.333-.4H8.4l1.2-4.066C9.8 6.6 9.4 6 8.667 6z" })));
}

function InvoiceIcon(_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__default['default'].createElement("svg", __assign({ xmlns: "http://www.w3.org/2000/svg", width: "22", height: "24" }, props),
        React__default['default'].createElement("g", { fill: "none", fillRule: "evenodd" },
            React__default['default'].createElement("g", { fill: fillColor, fillRule: "nonzero" },
                React__default['default'].createElement("path", { d: "M441 521.5v-1c0-.3.2-.5.5-.5h5c.3 0 .5.2.5.5v1c0 .3-.2.5-.5.5h-5c-.3 0-.5-.2-.5-.5zm0 4v-1c0-.3.2-.5.5-.5h5c.3 0 .5.2.5.5v1c0 .3-.2.5-.5.5h-5c-.3 0-.5-.2-.5-.5zm0 4v-1c0-.3.2-.5.5-.5h5c.3 0 .5.2.5.5v1c0 .3-.2.5-.5.5h-5c-.3 0-.5-.2-.5-.5zm0 4v-1c0-.3.2-.5.5-.5h5c.3 0 .5.2.5.5v1c0 .3-.2.5-.5.5h-5c-.3 0-.5-.2-.5-.5zm8-5c0-1.2.9-2.2 2-2.4v-.6c0-.6.4-1 1-1s1 .4 1 1v.5c.6 0 1 .4 1 1s-.4 1-1 1h-1.5c-.3 0-.5.2-.5.5s.2.5.5.5h.5c1.4 0 2.5 1.1 2.5 2.5 0 1-.6 1.9-1.5 2.3v.7c0 .6-.4 1-1 1s-1-.4-1-1v-.5h-.5c-.6 0-1-.4-1-1s.4-1 1-1h1.5c.3 0 .5-.2.5-.5s-.2-.5-.5-.5h-.5c-1.4 0-2.5-1.1-2.5-2.5zm8 11.5h-18c-1.1 0-2-.9-2-2v-20c0-1.1.9-2 2-2h18c1.1 0 2 .9 2 2v20c0 1.1-.9 2-2 2zm-18-22v20h18v-20h-18z", transform: "translate(-437 -516)" })))));
}

function LeftArrowIcon(_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__default['default'].createElement("svg", __assign({ xmlns: "http://www.w3.org/2000/svg", width: 16, height: 12, viewBox: "0 0 16 12" }, props),
        React__default['default'].createElement("g", { fill: "none", fillRule: "evenodd" },
            React__default['default'].createElement("g", { transform: "translate(-1031 -266) translate(1031 256)" },
                React__default['default'].createElement("path", { fill: fillColor, fillRule: "nonzero", d: "M15.667 5.167V6.5c0 .4-.267.667-.667.667H4.867l2.4 2.4c.133.133.133.333 0 .466l-1.4 1.4c-.134.134-.334.134-.467 0l-5.2-5.2c-.267-.266-.267-.666 0-.933L5.4.1c.133-.133.333-.133.467 0l1.4 1.4c.133.133.133.333 0 .467l-2.4 2.4H15c.4.133.667.4.667.8z", transform: "translate(0 10)" })))));
}

var LinkIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M24 9.5v5c0 2.5-2 4.5-4.5 4.5h-7C10 19 8 17 8 14.5V11c0-.6.4-1 1-1h1c.6 0 1 .4 1 1v3.5c0 .8.7 1.5 1.5 1.5h7c.8 0 1.5-.7 1.5-1.5v-5c0-.8-.7-1.5-1.5-1.5h-1.6c-.2 0-.4-.1-.5-.3l-.7-2c-.1-.3.1-.7.5-.7h2.3C22 5 24 7 24 9.5zM6.6 16.3c-.1-.2-.3-.3-.5-.3H4.5c-.8 0-1.5-.7-1.5-1.5v-5C3 8.7 3.7 8 4.5 8h7c.8 0 1.5.7 1.5 1.5V13c0 .6.4 1 1 1h1c.6 0 1-.4 1-1V9.5C16 7 14 5 11.5 5h-7C2 5 0 7 0 9.5v5C0 17 2 19 4.5 19h2.3c.3 0 .6-.3.5-.7l-.7-2z", fill: fillColor, fillRule: "evenodd" })));
};

var ListIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M24 21v1c0 .6-.4 1-1 1H7c-.6 0-1-.4-1-1v-1c0-.6.4-1 1-1h16c.6 0 1 .4 1 1zm-1-7H7c-.6 0-1 .4-1 1v1c0 .6.4 1 1 1h16c.6 0 1-.4 1-1v-1c0-.6-.4-1-1-1zm0-6H7c-.6 0-1 .4-1 1v1c0 .6.4 1 1 1h16c.6 0 1-.4 1-1V9c0-.6-.4-1-1-1zm0-6H7c-.6 0-1 .4-1 1v1c0 .6.4 1 1 1h16c.6 0 1-.4 1-1V3c0-.6-.4-1-1-1zM2 20H1c-.6 0-1 .4-1 1v1c0 .6.4 1 1 1h1c.6 0 1-.4 1-1v-1c0-.6-.4-1-1-1zm0-6H1c-.6 0-1 .4-1 1v1c0 .6.4 1 1 1h1c.6 0 1-.4 1-1v-1c0-.6-.4-1-1-1zm0-6H1c-.6 0-1 .4-1 1v1c0 .6.4 1 1 1h1c.6 0 1-.4 1-1V9c0-.6-.4-1-1-1zm0-6H1c-.6 0-1 .4-1 1v1c0 .6.4 1 1 1h1c.6 0 1-.4 1-1V3c0-.6-.4-1-1-1z", fill: fillColor, fillRule: "evenodd" })));
};

var LogOutIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M17.7 18.5l2.3-1.6v3.6c0 1.9-1.6 3.5-3.5 3.5h-12C2.6 24 1 22.4 1 20.5v-17C1 1.6 2.6 0 4.5 0h12C18.4 0 20 1.6 20 3.5v3.6l-2.3-1.6c-.2-.2-.5-.3-.7-.4V3.4c0-.3-.2-.5-.5-.5h-12c-.3 0-.5.2-.5.5v17c0 .3.2.5.5.5h12c.3 0 .5-.2.5-.5v-1.7c.2 0 .5-.1.7-.2zm4.6-7.3l-5.7-4A1 1 0 0015 8v2H8c-.6 0-1 .4-1 1v2c0 .6.4 1 1 1h7v2a1 1 0 001.6.8l5.7-4c.6-.4.6-1.2 0-1.6z", fill: fillColor, fillRule: "evenodd" })));
};

var PencilIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 15 14" }, props),
        React__namespace.createElement("path", { d: "M10.6666667,13.3333333 C9.84609333,15.5646712 8.95720444,16.6803401 8,16.6803401 C7.04279556,16.6803401 6.15390667,15.5646712 5.33333333,13.3333333 L10.6666667,13.3333333 Z M10.6666667,4.66666667 L10.6666667,12 L5.33333333,12 L5.33333333,4.66666667 L10.6666667,4.66666667 Z M7.33333333,5.33333333 L6.66666667,5.33333333 L6.66666667,11.3333333 L7.33333333,11.3333333 L7.33333333,5.33333333 Z M9.33333333,5.33333333 L8.66666667,5.33333333 L8.66666667,11.3333333 L9.33333333,11.3333333 L9.33333333,5.33333333 Z M8.27306557,-0.655731883 C9.60959466,-0.655731883 10.6930656,0.427739022 10.6930656,1.76426812 L10.6930656,3.34426812 L5.35973224,3.34426812 L5.35973224,1.76426812 C5.35973224,0.427739022 6.44320314,-0.655731883 7.77973224,-0.655731883 L8.27306557,-0.655731883 Z", id: "Combined-Shape", fill: fillColor, transform: "translate(8.013199, 8.012304) rotate(-315.000000) translate(-8.013199, -8.012304) " })));
};

var PlusIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M24 9.818v4.364c0 .654-.436 1.09-1.09 1.09h-7.637v7.637c0 .655-.437 1.091-1.091 1.091H9.818c-.654 0-1.09-.436-1.09-1.09v-7.637H1.09C.436 15.273 0 14.836 0 14.182V9.818c0-.654.436-1.09 1.09-1.09h7.637V1.09C8.727.436 9.164 0 9.818 0h4.364c.654 0 1.09.436 1.09 1.09v7.637h7.637c.655 0 1.091.437 1.091 1.091z", fill: fillColor, fillRule: "evenodd" })));
};

var PowerCordPlugIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M20 7.5V12c0 3.5-2.6 6.4-6 6.9V24h-4v-5.1c-3.4-.5-6-3.4-6-6.9V7.5C4 6.7 4.7 6 5.5 6H7V1.5C7 .7 7.7 0 8.5 0S10 .7 10 1.5V6h4V1.5c0-.8.7-1.5 1.5-1.5S17 .7 17 1.5V6h1.5c.8 0 1.5.7 1.5 1.5z", fill: fillColor, fillRule: "evenodd" })));
};

function RightArrowIcon(_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__default['default'].createElement("svg", __assign({ xmlns: "http://www.w3.org/2000/svg", width: 16, height: 12, viewBox: "0 0 16 12" }, props),
        React__default['default'].createElement("g", { transform: "rotate(180 8 6)" },
            React__default['default'].createElement("path", { fill: fillColor, fillRule: "nonzero", d: "M15.667 5.167V6.5c0 .4-.267.667-.667.667H4.867l2.4 2.4c.133.133.133.333 0 .466l-1.4 1.4c-.134.134-.334.134-.467 0l-5.2-5.2c-.267-.266-.267-.666 0-.933L5.4.1c.133-.133.333-.133.467 0l1.4 1.4c.133.133.133.333 0 .467l-2.4 2.4H15c.4.133.667.4.667.8z" }))));
}

function SendIcon(_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__default['default'].createElement("svg", __assign({ viewBox: "0 0 56 48", height: 16, width: 16 }, props),
        React__default['default'].createElement("path", { fill: fillColor, d: "M55.947 1.36l-6.752 44.37c0 .724-.965 1.207-1.688.965l-18.81-7.957-8.923 8.922c-.723.724-2.17.241-2.17-.965V34.638l20.739-17.122c.964-.964 1.206-2.411.241-3.376-.965-.964-2.411-1.206-3.376-.24L13.263 31.985.723 26.68c-.964-.482-.964-1.688 0-2.17L54.018.154c.964-.483 1.929.24 1.929 1.205z" })));
}

var SetDownIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M23.733 6.069L13.067 19.515c-.534.647-1.6.647-2.134 0L.267 6.07C-.4 5.164.267 4 1.334 4h21.332c1.067 0 1.734 1.293 1.067 2.069z", fill: fillColor, fillRule: "evenodd" })));
};

var SettingsIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M23.9 10.8c0-.2-.2-.4-.4-.4l-2.8-.7c-.2-.8-.5-1.5-.9-2.2L21.3 5c.1-.2.1-.4 0-.6-.5-.6-1.1-1.2-1.7-1.7-.2-.1-.4-.1-.6 0l-2.5 1.5c-.7-.4-1.4-.7-2.2-.9L13.6.5c-.1-.2-.2-.4-.4-.4-.4 0-.8-.1-1.2-.1-.4 0-.8 0-1.2.1-.2 0-.4.2-.4.4l-.7 2.8c-.8.2-1.5.5-2.2.9L5 2.7c-.2-.1-.4-.1-.6 0-.6.5-1.2 1.1-1.7 1.7-.1.2-.1.4 0 .6l1.5 2.5c-.4.7-.7 1.4-.9 2.2l-2.8.7c-.2.1-.4.2-.4.4 0 .4-.1.8-.1 1.2 0 .4 0 .8.1 1.2 0 .2.2.4.4.4l2.8.7c.2.8.5 1.5.9 2.2L2.7 19c-.1.2-.1.4 0 .6.5.6 1.1 1.2 1.7 1.7.2.1.4.1.6 0l2.5-1.5c.7.4 1.4.7 2.2.9l.7 2.8c.1.2.2.4.4.4.4 0 .8.1 1.2.1.4 0 .8 0 1.2-.1.2 0 .4-.2.4-.4l.7-2.8c.8-.2 1.5-.5 2.2-.9l2.5 1.5c.2.1.4.1.6 0 .6-.5 1.2-1.1 1.7-1.7.1-.2.1-.4 0-.6l-1.5-2.5c.4-.7.7-1.4.9-2.2l2.8-.7c.2-.1.4-.2.4-.4 0-.4.1-.8.1-1.2 0-.4 0-.8-.1-1.2zm-11.8 5.3c-2.3 0-4.2-1.9-4.2-4.2 0-2.3 1.9-4.2 4.2-4.2 2.3 0 4.2 1.9 4.2 4.2 0 2.3-1.9 4.2-4.2 4.2z", fill: fillColor, fillRule: "evenodd" })));
};

function ShieldCheckIcon(_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__default['default'].createElement("svg", __assign({ viewBox: "0 0 24 24", width: 16, height: 16 }, props),
        React__default['default'].createElement("g", { transform: "translate(-1045.000000, -660.000000)", fill: fillColor, fillRule: "nonzero" },
            React__default['default'].createElement("path", { d: "M1064.30682,663.513944 C1063.59091,663.195219 1060.80682,662 1056.75,662 C1052.69318,662 1049.90909,663.115538 1049.19318,663.513944 C1048.47727,663.832669 1048,664.549801 1048,665.346614 L1048,671.243028 C1048,677.458167 1055.875,681.681275 1056.19318,681.840637 C1056.35227,681.920319 1056.59091,682 1056.75,682 C1056.90909,682 1057.14773,681.920319 1057.30682,681.840637 C1057.625,681.681275 1065.5,677.458167 1065.5,671.243028 L1065.5,665.346614 C1065.5,664.47012 1065.02273,663.832669 1064.30682,663.513944 Z M1061.63782,668.225163 L1056.62714,674.232412 C1056.32799,674.548583 1055.80449,674.627626 1055.50534,674.232412 L1053.11218,671.544959 C1052.96261,671.386873 1052.96261,671.149745 1053.11218,670.991659 L1053.48611,670.517403 C1053.5609,670.359317 1053.78526,670.359317 1053.93483,670.43836 L1055.87927,671.465916 L1060.6656,667.118564 C1060.81517,666.960479 1061.03953,666.960479 1061.1891,667.118564 L1061.63782,667.592821 C1061.78739,667.829949 1061.78739,668.067077 1061.63782,668.225163 Z" }))));
}

var SquareNewWindowIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M19.896 12.052l3.141 3.145v5.135c0 1.991-1.675 3.668-3.665 3.668H3.665C1.675 24 0 22.323 0 20.332V4.612C0 2.62 1.675.942 3.665.942h5.131l3.141 3.144H3.665c-.314 0-.524.21-.524.524v15.72c0 .315.21.525.524.525h15.707c.314 0 .524-.21.524-.524v-8.28zm-4.398-7.336l-7.226 9.642c-.209.21-.104.524 0 .734l.733.733c.21.21.524.21.733 0l9.634-7.231 2.2 2.2c.313.315.837.106.837-.314L23.979.63C24.085.314 23.77 0 23.352 0l-9.843 1.572c-.419.105-.628.629-.314.838l2.304 2.306z", fill: fillColor, fillRule: "evenodd" })));
};

var StarEmptyIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M23.328 8.288h-8.136L12.721.518C12.618.208 12.309 0 12.103 0c-.206 0-.515.207-.618.518l-2.471 7.77H.672c-.618 0-.927.83-.412 1.244l6.59 4.765-2.47 7.77c-.104.519.205.933.617.933.103 0 .31 0 .412-.104L12 18.131l6.59 4.765c.104.104.31.104.413.104.412 0 .824-.414.618-.932l-2.472-7.77 6.591-4.766c.515-.415.206-1.244-.412-1.244zm-7.62 4.144l-1.442 1.036.515 1.658.926 2.797-2.368-1.76-1.442-1.037-1.442 1.036-2.368 1.761.927-2.797.514-1.658-1.441-1.036-2.369-1.76h4.634l.515-1.658.927-2.798.927 2.798.515 1.657h4.634l-2.163 1.761z", fill: fillColor, fillRule: "evenodd" })));
};

var StarHalfIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M23.328 8.288h-8.136L12.721.518C12.618.208 12.309 0 12.103 0c-.206 0-.515.207-.618.518l-2.471 7.77H.672c-.618 0-.927.83-.412 1.244l6.59 4.765-2.47 7.77c-.104.519.205.933.617.933.103 0 .31 0 .412-.104L12 18.131l6.59 4.765c.104.104.31.104.413.104.412 0 .824-.414.618-.932l-2.472-7.77 6.591-4.766c.515-.415.206-1.244-.412-1.244zm-7.62 4.144l-1.442 1.036.515 1.658.926 2.797-2.368-1.76-1.442-1.037v-8.91l.927 2.798.515 1.657h4.634l-2.266 1.761z", fill: fillColor, fillRule: "evenodd" })));
};

var StarIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M23.68 9.946l-6.575 4.973 2.466 8.108c.102.54-.206.973-.617.973-.102 0-.308 0-.41-.108l-6.575-4.973-6.574 4.973c-.102.108-.308.108-.41.108a.696.696 0 01-.617-.973l2.465-8.108L.26 9.946C-.254 9.514.054 8.649.67 8.649h8.115L11.25.54c.103-.325.411-.541.617-.541.205 0 .513.216.616.54l2.465 8.109h8.115c.925 0 1.233.865.616 1.297z", fill: fillColor, fillRule: "evenodd" })));
};

var StatsCircleIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M13.4 11.9l7.4-7.4c.7.8 1.2 1.6 1.7 2.5l-4.9 4.9h-4.2zm3.5-10.5L12 6.3v4.2l7.4-7.4c-.7-.7-1.6-1.3-2.5-1.7zm7 10.5c-.1-1-.3-2-.6-2.9l-2.9 2.9h3.5zM12 0v3.5L14.9.6C14 .2 13 0 12 0zm8.9 21.4c1.7-2 2.9-4.6 3.1-7.5H13.5l7.4 7.5zM10 12.9V2C4.4 2.5 0 7.2 0 12.9c0 6.1 4.9 11 11 11 2.7 0 5.1-1 7-2.5l-7.7-7.7c-.2-.3-.3-.5-.3-.8z", fill: fillColor, fillRule: "evenodd" })));
};

var StopwatchIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M22.87 5.914L21.561 7.2c-.61-.857-1.22-1.629-2.004-2.314l1.133-1.115a.426.426 0 01.61 0l1.568 1.543c.175.086.175.429 0 .6zm-9.672-4.028V.857c0-.514-.348-.857-.871-.857h-1.743c-.523 0-.871.343-.871.857v1.029c.61-.086 1.133-.172 1.742-.172.61 0 1.133.086 1.743.172zm8.713 11.828C21.91 19.371 17.206 24 11.455 24 5.705 24 1 19.371 1 13.714S5.705 3.43 11.455 3.43s10.456 4.628 10.456 10.285zm-2.614 0C19.297 9.43 15.812 6 11.455 6 7.1 6 3.614 9.429 3.614 13.714c0 4.286 3.485 7.715 7.841 7.715 4.357 0 7.842-3.429 7.842-7.715zm-6.97-1.457V8.571c0-.514-.349-.857-.872-.857-.522 0-.87.343-.87.857v3.686c-.524.257-.872.857-.872 1.457 0 .6.348 1.2.871 1.457v.258c0 .514.349.857.871.857.523 0 .872-.343.872-.857v-.258c.523-.257.871-.857.871-1.457 0-.6-.348-1.2-.871-1.457z", fill: fillColor, fillRule: "evenodd" })));
};

var SyncIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M23.872 13.155l-3.275 4.912c-.328.492-.983.492-1.147 0l-3.274-4.912c-.328-.491 0-1.146.654-1.146h1.638v-.328c-.164-1.637-.819-3.11-1.965-4.257l-.327-.327c-1.31-1.147-2.948-1.802-4.75-1.638-.818 0-1.473.328-2.292.491-.327.164-.818 0-.982-.327L7.17 4.149c-.328-.327-.164-.982.327-1.146 1.146-.491 2.456-.983 3.766-.983 2.62-.163 5.076.655 7.041 2.457 1.965 1.8 3.111 4.093 3.275 6.713v.655h1.638c.655.164.982.819.655 1.31zm-8.188 5.076c-.163-.327-.655-.491-.982-.327-.655.327-1.474.491-2.293.491-1.8.164-3.438-.491-4.748-1.637-1.31-1.147-2.129-2.784-2.129-4.585v-.328H7.17c.654 0 .982-.655.654-1.146L4.55 5.787c-.328-.492-.983-.492-1.147 0L.128 10.699c-.327.491 0 1.146.655 1.146h1.638v.655c.164 2.456 1.146 4.585 2.784 6.386l.163.164c1.638 1.637 3.93 2.62 6.223 2.784 1.8.163 3.438-.328 4.912-.983.491-.164.491-.819.327-1.146l-1.146-1.474z", fill: fillColor, fillRule: "evenodd" })));
};

var ThumbnailsIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M24 1.09v8.728c0 .655-.436 1.091-1.09 1.091h-8.728c-.655 0-1.091-.436-1.091-1.09V1.09C13.09.436 13.527 0 14.18 0h8.728C23.564 0 24 .436 24 1.09zm-14.182 12H1.091C.436 13.09 0 13.528 0 14.183v8.727C0 23.564.436 24 1.09 24h8.728c.655 0 1.091-.436 1.091-1.09v-8.728c0-.655-.436-1.091-1.09-1.091zm0-13.09H1.091C.436 0 0 .436 0 1.09v8.728c0 .655.436 1.091 1.09 1.091h8.728c.655 0 1.091-.436 1.091-1.09V1.09C10.91.436 10.473 0 9.82 0zM22.91 13.09h-8.727c-.655 0-1.091.437-1.091 1.092v8.727c0 .655.436 1.091 1.09 1.091h8.728c.655 0 1.091-.436 1.091-1.09v-8.728c0-.655-.436-1.091-1.09-1.091z", fill: fillColor, fillRule: "evenodd" })));
};

var UserIcon = function (_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { d: "M24 20.2V23c0 .6-.417 1-1.043 1H1.043C.417 24 0 23.6 0 23v-2.8c0-.6.417-1.2.94-1.4l5.32-2.7c.836 1.7 2.714 2.8 4.697 2.8h1.982c1.983 0 3.861-1.1 4.696-2.8l5.322 2.7c.626.3 1.043.9 1.043 1.4zM5.843 10.1c.21.6.73 1.1 1.357 1.5l.73 3.1a3.086 3.086 0 003.027 2.4h1.982c1.461 0 2.713-1 3.026-2.4l.73-3.1c.627-.3 1.148-.9 1.357-1.5l.313-.8c.313-.8 0-1.5-.626-1.7V5c0-3-2.087-5-5.739-5-3.652 0-5.74 2-5.74 5v2.6c-.625.3-.938 1-.625 1.7l.208.8z", fill: fillColor, fillRule: "evenodd" })));
};

function ArrowUpDownIcon(_a) {
    var _b = _a.fillColor, fillColor = _b === void 0 ? "currentColor" : _b, props = __rest(_a, ["fillColor"]);
    return (React__namespace.createElement("svg", __assign({ width: "1em", height: "1em", viewBox: "0 0 24 24" }, props),
        React__namespace.createElement("path", { fill: fillColor, d: "M21.0097 8.17533H18.9306V12.9562C18.9306 13.5299 18.5345 13.9123 17.9405 13.9123H14.9702C14.3762 13.9123 13.9802 13.5299 13.9802 12.9562V8.17533H11.901C11.1089 8.17533 10.6139 7.31468 11.1089 6.64537L15.6633 0.430276C16.0593 -0.143425 16.8514 -0.143425 17.2474 0.430276L21.8018 6.64537C22.2968 7.31468 21.8018 8.17533 21.0097 8.17533ZM12.099 15.8247H10.0198V11.0438C10.0198 10.4701 9.62381 10.0877 9.02976 10.0877H6.05952C5.46547 10.0877 5.06944 10.4701 5.06944 11.0438V15.8247H2.99027C2.19821 15.8247 1.70316 16.6853 2.1982 17.3546L6.75257 23.5697C7.1486 24.1434 7.94067 24.1434 8.33671 23.5697L12.8911 17.3546C13.3861 16.6853 12.8911 15.8247 12.099 15.8247Z" })));
}

var ActionTypes;
(function (ActionTypes) {
    ActionTypes[ActionTypes["ADD_TOAST"] = 0] = "ADD_TOAST";
    ActionTypes[ActionTypes["REMOVE_TOAST"] = 1] = "REMOVE_TOAST";
    ActionTypes[ActionTypes["REGISTER_HEIGHT"] = 2] = "REGISTER_HEIGHT";
})(ActionTypes || (ActionTypes = {}));
var defaultState = {
    toasts: [],
    heights: {},
};
var reducer = function (state, action) {
    var _a;
    var newHeights = __assign({}, state.heights);
    switch (action.type) {
        case ActionTypes.ADD_TOAST:
            if (action.payload.combine) {
                var existingToast = state.toasts.find(function (t) { var _a, _b; return ((_a = t.combine) === null || _a === void 0 ? void 0 : _a.type) === ((_b = action.payload.combine) === null || _b === void 0 ? void 0 : _b.type); });
                if (existingToast) {
                    existingToast.combinationToasts = __spreadArray(__spreadArray([], existingToast.combinationToasts), [action.payload]);
                    return __assign(__assign({}, state), { toasts: __spreadArray([], state.toasts) });
                }
            }
            return __assign(__assign({}, state), { toasts: __spreadArray(__spreadArray([], state.toasts), [action.payload]) });
        case ActionTypes.REMOVE_TOAST:
            delete newHeights[action.payload];
            return __assign(__assign({}, state), { toasts: state.toasts.filter(function (toast) { return toast.id !== action.payload; }), heights: newHeights });
        case ActionTypes.REGISTER_HEIGHT:
            return __assign(__assign({}, state), { heights: __assign(__assign({}, state.heights), (_a = {}, _a[action.payload.id] = action.payload.height, _a)) });
        default:
            return state;
    }
};

var ToastContainer = function (_a) {
    var children = _a.children, portalId = _a.portalId;
    var Portal = usePortal({
        bindTo: (document && portalId && document.getElementById(portalId)) || undefined,
    }).Portal;
    return (React__namespace.createElement(Portal, null,
        React__namespace.createElement("div", { className: styles$C.container }, children)));
};

var ToastContext = React__namespace.createContext(null);
var toastCount = 0;
function createToast(info) {
    return __assign({ id: "toast-" + toastCount++, combinationToasts: [] }, info);
}
function ToastProvider(_a) {
    var children = _a.children, portalId = _a.portalId;
    var Provider = ToastContext.Provider;
    var _b = React__namespace.useReducer(reducer, defaultState), state = _b[0], dispatch = _b[1];
    var addToast = React__namespace.useCallback(function (payload) {
        var info = typeof payload === "string" ? { message: payload, variant: "info" } : payload;
        var toastItem = createToast(info);
        dispatch({
            type: ActionTypes.ADD_TOAST,
            payload: toastItem,
        });
    }, [dispatch]);
    var removeToast = React__namespace.useCallback(function (id) {
        dispatch({
            type: ActionTypes.REMOVE_TOAST,
            payload: id,
        });
    }, [dispatch]);
    var registerHeight = React__namespace.useCallback(function (id, height) {
        if (!state.heights[id]) {
            dispatch({
                type: ActionTypes.REGISTER_HEIGHT,
                payload: { id: id, height: height },
            });
        }
    }, [dispatch, state.heights]);
    var transitions = useTransition(state.toasts, {
        from: {
            transform: "translateX(110%)",
        },
        enter: {
            transform: "translateX(0%)",
        },
        leave: {
            transform: "translateX(110%)",
        },
    });
    return (React__namespace.createElement(Provider, { value: { addToast: addToast, removeToast: removeToast, registerHeight: registerHeight } },
        children,
        React__namespace.createElement(ToastContainer, { portalId: portalId }, transitions(function (transition, toast) {
            var keys = Object.keys(state.heights);
            var toastIndex = keys.indexOf(toast.id);
            var stackKeys = toastIndex === -1 ? keys : keys.slice(0, toastIndex);
            var stackHeight = Object.entries(state.heights).reduce(function (value, entry) {
                if (stackKeys.includes(entry[0])) {
                    value += entry[1];
                }
                return value;
            }, 0);
            return (React__namespace.createElement(Toast, __assign({ key: toast.id, transition: transition, removeToast: removeToast, stackHeight: stackHeight, removed: toastIndex === -1, combination: toast.combine, combinations: toast.combinationToasts }, toast)));
        }))));
}
function useToast() {
    var context = React__namespace.useContext(ToastContext);
    if (!context) {
        throw new Error("useToast must be a child of ToastProvider");
    }
    return context;
}

function Toast(_a) {
    var className = _a.className, contentClassName = _a.contentClassName, message = _a.message, id = _a.id, subText = _a.subText, ctas = _a.ctas, removeDelayProp = _a.removeDelay, combination = _a.combination, combinations = _a.combinations, removeToast = _a.removeToast, _b = _a.variant, variant = _b === void 0 ? "info" : _b, transition = _a.transition, stackHeight = _a.stackHeight, removed = _a.removed;
    var registerHeight = useToast().registerHeight;
    var toastRef = React.useRef(null);
    var _c = React.useState(), removeCallback = _c[0], setRemoveCallback = _c[1];
    var prevRemoveCallback = React.useRef();
    var _d = React.useState(stackHeight), constantStackHeight = _d[0], setConstantStackHeight = _d[1];
    var removeDelay = React.useMemo(function () {
        if (removeDelayProp)
            return removeDelayProp;
        return (ctas === null || ctas === void 0 ? void 0 : ctas.length) ? 6000 : 4000;
    }, [ctas === null || ctas === void 0 ? void 0 : ctas.length, removeDelayProp]);
    React.useEffect(function () {
        if (!removed) {
            setConstantStackHeight(stackHeight);
        }
    }, [stackHeight, removed]);
    React.useLayoutEffect(function () {
        if (toastRef.current) {
            var rect = toastRef.current.getBoundingClientRect();
            registerHeight(id, rect.bottom - rect.top + 16);
        }
        // This ensure this is only ever run once to avoid multiplying heights
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);
    React.useEffect(function () {
        if (!(ctas === null || ctas === void 0 ? void 0 : ctas.length) || (!(ctas === null || ctas === void 0 ? void 0 : ctas.length) && (combinations === null || combinations === void 0 ? void 0 : combinations.length))) {
            var timeout_1 = window.setTimeout(function () {
                removeToast(id);
            }, removeDelay);
            setRemoveCallback(timeout_1);
            return function () { return window.clearTimeout(timeout_1); };
        }
    }, [id, ctas === null || ctas === void 0 ? void 0 : ctas.length, removeToast, combinations === null || combinations === void 0 ? void 0 : combinations.length, removeDelay]);
    React.useEffect(function () {
        if (prevRemoveCallback.current) {
            window.clearTimeout(prevRemoveCallback.current);
        }
        prevRemoveCallback.current = removeCallback;
    }, [removeCallback]);
    var size = React.useMemo(function () {
        var accumSize = 1;
        if (subText)
            accumSize += 1;
        if (ctas === null || ctas === void 0 ? void 0 : ctas.length)
            accumSize += 1;
        switch (accumSize) {
            case 3:
                return "large";
            case 2:
                return "medium";
            default:
                return "small";
        }
    }, [ctas === null || ctas === void 0 ? void 0 : ctas.length, subText]);
    var onCtaClick = React.useCallback(function (cb) {
        if (!cb || (cb && cb())) {
            removeToast(id);
        }
    }, [id, removeToast]);
    var onMouseEnter = React.useCallback(function () {
        window.clearTimeout(removeCallback);
    }, [removeCallback]);
    var onMouseLeave = React.useCallback(function () {
        var timeout = window.setTimeout(function () {
            removeToast(id);
        }, removeDelay);
        setRemoveCallback(timeout);
    }, [id, removeDelay, removeToast]);
    return (React__default['default'].createElement("div", { className: classnames(styles$C.toastWrapper, className, styles$C[size], styles$C[variant]), style: {
            transform: "translateY(" + constantStackHeight + "px)",
        }, ref: toastRef },
        React__default['default'].createElement(animated.div, { className: styles$C.toast, style: transition, role: "alert" },
            React__default['default'].createElement("div", { className: classnames(styles$C.content, contentClassName), onMouseEnter: onMouseEnter, onMouseLeave: onMouseLeave },
                React__default['default'].createElement("div", { className: styles$C.body },
                    React__default['default'].createElement(InfoIcon, { className: styles$C.infoIcon }),
                    React__default['default'].createElement("strong", { className: styles$C.title }, combination && (combinations === null || combinations === void 0 ? void 0 : combinations.length) ? combination.message(combinations.length + 1) : message),
                    subText && (React__default['default'].createElement(Typography, { variant: "small", className: styles$C.subText }, combination && (combinations === null || combinations === void 0 ? void 0 : combinations.length)
                        ? __spreadArray([subText], combinations.map(function (c) { return c.subText; })).join(combination.subTextSeperator || " & ")
                        : subText)),
                    (ctas === null || ctas === void 0 ? void 0 : ctas.length) && (React__default['default'].createElement("div", { className: styles$C.ctasContainer }, ctas.map(function (cta, ctaIndex) {
                        var _a;
                        return (React__default['default'].createElement("button", { key: ctaIndex, className: classnames(textLinkStyles, styles$C.cta, (_a = {}, _a[styles$C.primary] = cta.primary, _a)), onClick: function () { return onCtaClick(cta.onClick); } }, cta.text));
                    }))))),
            React__default['default'].createElement("span", { "data-testid": "toast-close-btn", onClick: function () { return removeToast(id); }, className: styles$C.icon },
                React__default['default'].createElement(CloseIcon, null)))));
}

var resizeObservers = [];

var hasActiveObservations = function () {
    return resizeObservers.some(function (ro) { return ro.activeTargets.length > 0; });
};

var hasSkippedObservations = function () {
    return resizeObservers.some(function (ro) { return ro.skippedTargets.length > 0; });
};

var msg = 'ResizeObserver loop completed with undelivered notifications.';
var deliverResizeLoopError = function () {
    var event;
    if (typeof ErrorEvent === 'function') {
        event = new ErrorEvent('error', {
            message: msg
        });
    }
    else {
        event = document.createEvent('Event');
        event.initEvent('error', false, false);
        event.message = msg;
    }
    window.dispatchEvent(event);
};

var ResizeObserverBoxOptions;
(function (ResizeObserverBoxOptions) {
    ResizeObserverBoxOptions["BORDER_BOX"] = "border-box";
    ResizeObserverBoxOptions["CONTENT_BOX"] = "content-box";
    ResizeObserverBoxOptions["DEVICE_PIXEL_CONTENT_BOX"] = "device-pixel-content-box";
})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));

var freeze = function (obj) { return Object.freeze(obj); };

var ResizeObserverSize = (function () {
    function ResizeObserverSize(inlineSize, blockSize) {
        this.inlineSize = inlineSize;
        this.blockSize = blockSize;
        freeze(this);
    }
    return ResizeObserverSize;
}());

var DOMRectReadOnly$1 = (function () {
    function DOMRectReadOnly(x, y, width, height) {
        this.x = x;
        this.y = y;
        this.width = width;
        this.height = height;
        this.top = this.y;
        this.left = this.x;
        this.bottom = this.top + this.height;
        this.right = this.left + this.width;
        return freeze(this);
    }
    DOMRectReadOnly.prototype.toJSON = function () {
        var _a = this, x = _a.x, y = _a.y, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;
        return { x: x, y: y, top: top, right: right, bottom: bottom, left: left, width: width, height: height };
    };
    DOMRectReadOnly.fromRect = function (rectangle) {
        return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);
    };
    return DOMRectReadOnly;
}());

var isSVG = function (target) { return target instanceof SVGElement && 'getBBox' in target; };
var isHidden = function (target) {
    if (isSVG(target)) {
        var _a = target.getBBox(), width = _a.width, height = _a.height;
        return !width && !height;
    }
    var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;
    return !(offsetWidth || offsetHeight || target.getClientRects().length);
};
var isElement = function (obj) {
    var _a, _b;
    if (obj instanceof Element) {
        return true;
    }
    var scope = (_b = (_a = obj) === null || _a === void 0 ? void 0 : _a.ownerDocument) === null || _b === void 0 ? void 0 : _b.defaultView;
    return !!(scope && obj instanceof scope.Element);
};
var isReplacedElement = function (target) {
    switch (target.tagName) {
        case 'INPUT':
            if (target.type !== 'image') {
                break;
            }
        case 'VIDEO':
        case 'AUDIO':
        case 'EMBED':
        case 'OBJECT':
        case 'CANVAS':
        case 'IFRAME':
        case 'IMG':
            return true;
    }
    return false;
};

var global$2 = typeof window !== 'undefined' ? window : {};

var cache = new WeakMap();
var scrollRegexp = /auto|scroll/;
var verticalRegexp = /^tb|vertical/;
var IE = (/msie|trident/i).test(global$2.navigator && global$2.navigator.userAgent);
var parseDimension = function (pixel) { return parseFloat(pixel || '0'); };
var size = function (inlineSize, blockSize, switchSizes) {
    if (inlineSize === void 0) { inlineSize = 0; }
    if (blockSize === void 0) { blockSize = 0; }
    if (switchSizes === void 0) { switchSizes = false; }
    return new ResizeObserverSize((switchSizes ? blockSize : inlineSize) || 0, (switchSizes ? inlineSize : blockSize) || 0);
};
var zeroBoxes = freeze({
    devicePixelContentBoxSize: size(),
    borderBoxSize: size(),
    contentBoxSize: size(),
    contentRect: new DOMRectReadOnly$1(0, 0, 0, 0)
});
var calculateBoxSizes = function (target, forceRecalculation) {
    if (forceRecalculation === void 0) { forceRecalculation = false; }
    if (cache.has(target) && !forceRecalculation) {
        return cache.get(target);
    }
    if (isHidden(target)) {
        cache.set(target, zeroBoxes);
        return zeroBoxes;
    }
    var cs = getComputedStyle(target);
    var svg = isSVG(target) && target.ownerSVGElement && target.getBBox();
    var removePadding = !IE && cs.boxSizing === 'border-box';
    var switchSizes = verticalRegexp.test(cs.writingMode || '');
    var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');
    var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');
    var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);
    var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);
    var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);
    var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);
    var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);
    var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);
    var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);
    var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);
    var horizontalPadding = paddingLeft + paddingRight;
    var verticalPadding = paddingTop + paddingBottom;
    var horizontalBorderArea = borderLeft + borderRight;
    var verticalBorderArea = borderTop + borderBottom;
    var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;
    var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;
    var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;
    var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;
    var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;
    var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;
    var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;
    var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;
    var boxes = freeze({
        devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),
        borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),
        contentBoxSize: size(contentWidth, contentHeight, switchSizes),
        contentRect: new DOMRectReadOnly$1(paddingLeft, paddingTop, contentWidth, contentHeight)
    });
    cache.set(target, boxes);
    return boxes;
};
var calculateBoxSize = function (target, observedBox, forceRecalculation) {
    var _a = calculateBoxSizes(target, forceRecalculation), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize, devicePixelContentBoxSize = _a.devicePixelContentBoxSize;
    switch (observedBox) {
        case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:
            return devicePixelContentBoxSize;
        case ResizeObserverBoxOptions.BORDER_BOX:
            return borderBoxSize;
        default:
            return contentBoxSize;
    }
};

var ResizeObserverEntry$1 = (function () {
    function ResizeObserverEntry(target) {
        var boxes = calculateBoxSizes(target);
        this.target = target;
        this.contentRect = boxes.contentRect;
        this.borderBoxSize = freeze([boxes.borderBoxSize]);
        this.contentBoxSize = freeze([boxes.contentBoxSize]);
        this.devicePixelContentBoxSize = freeze([boxes.devicePixelContentBoxSize]);
    }
    return ResizeObserverEntry;
}());

var calculateDepthForNode = function (node) {
    if (isHidden(node)) {
        return Infinity;
    }
    var depth = 0;
    var parent = node.parentNode;
    while (parent) {
        depth += 1;
        parent = parent.parentNode;
    }
    return depth;
};

var broadcastActiveObservations = function () {
    var shallowestDepth = Infinity;
    var callbacks = [];
    resizeObservers.forEach(function processObserver(ro) {
        if (ro.activeTargets.length === 0) {
            return;
        }
        var entries = [];
        ro.activeTargets.forEach(function processTarget(ot) {
            var entry = new ResizeObserverEntry$1(ot.target);
            var targetDepth = calculateDepthForNode(ot.target);
            entries.push(entry);
            ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox);
            if (targetDepth < shallowestDepth) {
                shallowestDepth = targetDepth;
            }
        });
        callbacks.push(function resizeObserverCallback() {
            ro.callback.call(ro.observer, entries, ro.observer);
        });
        ro.activeTargets.splice(0, ro.activeTargets.length);
    });
    for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {
        var callback = callbacks_1[_i];
        callback();
    }
    return shallowestDepth;
};

var gatherActiveObservationsAtDepth = function (depth) {
    resizeObservers.forEach(function processObserver(ro) {
        ro.activeTargets.splice(0, ro.activeTargets.length);
        ro.skippedTargets.splice(0, ro.skippedTargets.length);
        ro.observationTargets.forEach(function processTarget(ot) {
            if (ot.isActive()) {
                if (calculateDepthForNode(ot.target) > depth) {
                    ro.activeTargets.push(ot);
                }
                else {
                    ro.skippedTargets.push(ot);
                }
            }
        });
    });
};

var process$1 = function () {
    var depth = 0;
    gatherActiveObservationsAtDepth(depth);
    while (hasActiveObservations()) {
        depth = broadcastActiveObservations();
        gatherActiveObservationsAtDepth(depth);
    }
    if (hasSkippedObservations()) {
        deliverResizeLoopError();
    }
    return depth > 0;
};

var trigger;
var callbacks = [];
var notify = function () { return callbacks.splice(0).forEach(function (cb) { return cb(); }); };
var queueMicroTask = function (callback) {
    if (!trigger) {
        var toggle_1 = 0;
        var el_1 = document.createTextNode('');
        var config = { characterData: true };
        new MutationObserver(function () { return notify(); }).observe(el_1, config);
        trigger = function () { el_1.textContent = "" + (toggle_1 ? toggle_1-- : toggle_1++); };
    }
    callbacks.push(callback);
    trigger();
};

var queueResizeObserver = function (cb) {
    queueMicroTask(function ResizeObserver() {
        requestAnimationFrame(cb);
    });
};

var watching = 0;
var isWatching = function () { return !!watching; };
var CATCH_PERIOD = 250;
var observerConfig = { attributes: true, characterData: true, childList: true, subtree: true };
var events = [
    'resize',
    'load',
    'transitionend',
    'animationend',
    'animationstart',
    'animationiteration',
    'keyup',
    'keydown',
    'mouseup',
    'mousedown',
    'mouseover',
    'mouseout',
    'blur',
    'focus'
];
var time$1 = function (timeout) {
    if (timeout === void 0) { timeout = 0; }
    return Date.now() + timeout;
};
var scheduled = false;
var Scheduler = (function () {
    function Scheduler() {
        var _this = this;
        this.stopped = true;
        this.listener = function () { return _this.schedule(); };
    }
    Scheduler.prototype.run = function (timeout) {
        var _this = this;
        if (timeout === void 0) { timeout = CATCH_PERIOD; }
        if (scheduled) {
            return;
        }
        scheduled = true;
        var until = time$1(timeout);
        queueResizeObserver(function () {
            var elementsHaveResized = false;
            try {
                elementsHaveResized = process$1();
            }
            finally {
                scheduled = false;
                timeout = until - time$1();
                if (!isWatching()) {
                    return;
                }
                if (elementsHaveResized) {
                    _this.run(1000);
                }
                else if (timeout > 0) {
                    _this.run(timeout);
                }
                else {
                    _this.start();
                }
            }
        });
    };
    Scheduler.prototype.schedule = function () {
        this.stop();
        this.run();
    };
    Scheduler.prototype.observe = function () {
        var _this = this;
        var cb = function () { return _this.observer && _this.observer.observe(document.body, observerConfig); };
        document.body ? cb() : global$2.addEventListener('DOMContentLoaded', cb);
    };
    Scheduler.prototype.start = function () {
        var _this = this;
        if (this.stopped) {
            this.stopped = false;
            this.observer = new MutationObserver(this.listener);
            this.observe();
            events.forEach(function (name) { return global$2.addEventListener(name, _this.listener, true); });
        }
    };
    Scheduler.prototype.stop = function () {
        var _this = this;
        if (!this.stopped) {
            this.observer && this.observer.disconnect();
            events.forEach(function (name) { return global$2.removeEventListener(name, _this.listener, true); });
            this.stopped = true;
        }
    };
    return Scheduler;
}());
var scheduler = new Scheduler();
var updateCount = function (n) {
    !watching && n > 0 && scheduler.start();
    watching += n;
    !watching && scheduler.stop();
};

var skipNotifyOnElement = function (target) {
    return !isSVG(target)
        && !isReplacedElement(target)
        && getComputedStyle(target).display === 'inline';
};
var ResizeObservation$1 = (function () {
    function ResizeObservation(target, observedBox) {
        this.target = target;
        this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;
        this.lastReportedSize = {
            inlineSize: 0,
            blockSize: 0
        };
    }
    ResizeObservation.prototype.isActive = function () {
        var size = calculateBoxSize(this.target, this.observedBox, true);
        if (skipNotifyOnElement(this.target)) {
            this.lastReportedSize = size;
        }
        if (this.lastReportedSize.inlineSize !== size.inlineSize
            || this.lastReportedSize.blockSize !== size.blockSize) {
            return true;
        }
        return false;
    };
    return ResizeObservation;
}());

var ResizeObserverDetail = (function () {
    function ResizeObserverDetail(resizeObserver, callback) {
        this.activeTargets = [];
        this.skippedTargets = [];
        this.observationTargets = [];
        this.observer = resizeObserver;
        this.callback = callback;
    }
    return ResizeObserverDetail;
}());

var observerMap = new WeakMap();
var getObservationIndex = function (observationTargets, target) {
    for (var i = 0; i < observationTargets.length; i += 1) {
        if (observationTargets[i].target === target) {
            return i;
        }
    }
    return -1;
};
var ResizeObserverController$1 = (function () {
    function ResizeObserverController() {
    }
    ResizeObserverController.connect = function (resizeObserver, callback) {
        var detail = new ResizeObserverDetail(resizeObserver, callback);
        observerMap.set(resizeObserver, detail);
    };
    ResizeObserverController.observe = function (resizeObserver, target, options) {
        var detail = observerMap.get(resizeObserver);
        var firstObservation = detail.observationTargets.length === 0;
        if (getObservationIndex(detail.observationTargets, target) < 0) {
            firstObservation && resizeObservers.push(detail);
            detail.observationTargets.push(new ResizeObservation$1(target, options && options.box));
            updateCount(1);
            scheduler.schedule();
        }
    };
    ResizeObserverController.unobserve = function (resizeObserver, target) {
        var detail = observerMap.get(resizeObserver);
        var index = getObservationIndex(detail.observationTargets, target);
        var lastObservation = detail.observationTargets.length === 1;
        if (index >= 0) {
            lastObservation && resizeObservers.splice(resizeObservers.indexOf(detail), 1);
            detail.observationTargets.splice(index, 1);
            updateCount(-1);
        }
    };
    ResizeObserverController.disconnect = function (resizeObserver) {
        var _this = this;
        var detail = observerMap.get(resizeObserver);
        detail.observationTargets.slice().forEach(function (ot) { return _this.unobserve(resizeObserver, ot.target); });
        detail.activeTargets.splice(0, detail.activeTargets.length);
    };
    return ResizeObserverController;
}());

var ResizeObserver$1 = (function () {
    function ResizeObserver(callback) {
        if (arguments.length === 0) {
            throw new TypeError("Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.");
        }
        if (typeof callback !== 'function') {
            throw new TypeError("Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.");
        }
        ResizeObserverController$1.connect(this, callback);
    }
    ResizeObserver.prototype.observe = function (target, options) {
        if (arguments.length === 0) {
            throw new TypeError("Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.");
        }
        if (!isElement(target)) {
            throw new TypeError("Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element");
        }
        ResizeObserverController$1.observe(this, target, options);
    };
    ResizeObserver.prototype.unobserve = function (target) {
        if (arguments.length === 0) {
            throw new TypeError("Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.");
        }
        if (!isElement(target)) {
            throw new TypeError("Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element");
        }
        ResizeObserverController$1.unobserve(this, target);
    };
    ResizeObserver.prototype.disconnect = function () {
        ResizeObserverController$1.disconnect(this);
    };
    ResizeObserver.toString = function () {
        return 'function ResizeObserver () { [polyfill code] }';
    };
    return ResizeObserver;
}());

var styles$A = {"color-blue":"#482DEB","color-blue-hsl":"249, 83%, 55%","color-red":"#EE3355","color-red-hsl":"349, 85%, 57%","color-orange":"#ffaa33","color-orange-hsl":"35, 100%, 60%","color-green":"#2AA24F","color-green-hsl":"139, 59%, 40%","color-light-blue":"#4499EE","color-light-blue-hsl":"210, 83%, 60%","color-grey-blue":"#556680","color-grey-blue-hsl":"216, 20%, 42%","color-primary-navy":"hsl(228.3, 83.6%, 21.6%)","color-primary-navy-light":"hsl(228, 67%, 35%)","color-primary-teal":"color-primary-blue","color-primary-magenta":"hsl(321.9, 86.7%, 47.1%)","color-primary-violet":"hsl(268.6, 85.5%, 70.2%)","color-grey-black":"#1A1B23","color-grey-black-hsl":"233, 15%, 12%","color-grey-slate":"#6f749a","color-grey-slate-hsl":"233, 17.6%, 52%","color-grey-slate-40":"hsla(233, 17.6%, 52%, 40%)","color-grey-light":"hsl(232.5, 100%, 98.4%)","color-grey-white":"hsl(0, 0%, 100%)","color-grey-white-80":"hsla(0, 0%, 100%, 80%)","color-ui-action":"#482DEB","color-ui-action-mid":"#2F1BA6","color-ui-action-dark":"#15095D","color-ui-action-80":"hsla(249, 83%, 55%, 80%)","color-ui-action-60":"hsla(249, 83%, 55%, 60%)","color-ui-action-40":"hsla(249, 83%, 55%, 40%)","color-ui-action-20":"hsla(249, 83%, 55%, 20%)","color-ui-action-10":"hsla(249, 83%, 55%, 10%)","color-ui-action-5":"hsla(249, 83%, 55%, 5%)","color-ui-warning":"#ffaa33","color-ui-warning-mid":"#CC6633","color-ui-warning-dark":"#704100","color-ui-warning-80":"hsla(35, 100%, 60%, 80%)","color-ui-warning-60":"hsla(35, 100%, 60%, 60%)","color-ui-warning-40":"hsla(35, 100%, 60%, 40%)","color-ui-warning-20":"hsla(35, 100%, 60%, 20%)","color-ui-warning-10":"hsla(35, 100%, 60%, 10%)","color-ui-negative":"#EE3355","color-ui-negative-mid":"#A91E36","color-ui-negative-dark":"#6D0E1E","color-ui-negative-80":"hsla(349, 85%, 57%, 80%)","color-ui-negative-60":"hsla(349, 85%, 57%, 60%)","color-ui-negative-40":"hsla(349, 85%, 57%, 40%)","color-ui-negative-20":"hsla(349, 85%, 57%, 20%)","color-ui-negative-10":"hsla(349, 85%, 57%, 10%)","color-ui-positive":"#2AA24F","color-ui-positive-mid":"#26732E","color-ui-positive-dark":"#204A12","color-ui-positive-80":"hsla(139, 59%, 40%, 80%)","color-ui-positive-60":"hsla(139, 59%, 40%, 60%)","color-ui-positive-40":"hsla(139, 59%, 40%, 40%)","color-ui-positive-20":"hsla(139, 59%, 40%, 20%)","color-ui-positive-10":"hsla(139, 59%, 40%, 10%)","color-ui-neutral":"#4499EE","color-ui-neutral-mid":"#1A6FB6","color-ui-neutral-dark":"#02457E","color-ui-neutral-80":"hsla(210, 83%, 60%, 80%)","color-ui-neutral-60":"hsla(210, 83%, 60%, 60%)","color-ui-neutral-40":"hsla(210, 83%, 60%, 40%)","color-ui-neutral-20":"hsla(210, 83%, 60%, 20%)","color-ui-neutral-10":"hsla(210, 83%, 60%, 10%)","color-ui-interface":"#556680","color-ui-interface-80":"hsla(216, 20%, 42%, 80%)","color-ui-interface-60":"hsla(216, 20%, 42%, 60%)","color-ui-interface-40":"hsla(216, 20%, 42%, 40%)","color-ui-interface-20":"hsla(216, 20%, 42%, 20%)","color-ui-interface-10":"hsla(216, 20%, 42%, 10%)","color-ui-blue":"hsl(222.4, 60.4%, 61.4%)","color-ui-steel-blue":"hsl(220, 67%, 61%)","color-ui-inactive":"hsl(212.3,26%,80.4%)","noscroll":"Modal_noscroll___1BMs5","modal":"Modal_modal___D8SjB","background":"Modal_background___3jpsa","content":"Modal_content___ocM9x","pinned":"Modal_pinned___39JkR","transparent":"Modal_transparent___1S7Vn"};

var MODAL_ID = "orc-portal-modal";
var TOAST_ID = "orc-portal-toast";
var OrchardContext = React__default['default'].createContext(null);
function OrchardProvider(_a) {
    var children = _a.children;
    var Provider = OrchardContext.Provider;
    React.useEffect(function () {
        var modalEl = document.getElementById(MODAL_ID);
        if (!modalEl) {
            modalEl = document.createElement("div");
            modalEl.id = MODAL_ID;
            document.body.appendChild(modalEl);
        }
        var toastEl = document.getElementById(TOAST_ID);
        if (!toastEl) {
            toastEl = document.createElement("div");
            toastEl.id = TOAST_ID;
            document.body.appendChild(toastEl);
        }
        return function () {
            var modalElem = document.getElementById(MODAL_ID);
            if (modalElem)
                modalElem.remove();
            var toastElem = document.getElementById(TOAST_ID);
            if (toastElem)
                toastElem.remove();
        };
    });
    return (React__default['default'].createElement(Provider, { value: { modalPortalId: MODAL_ID, toastPortalId: TOAST_ID } },
        React__default['default'].createElement(ToastProvider, { portalId: TOAST_ID }, children)));
}
var useOrchard = function () {
    var context = React.useContext(OrchardContext);
    if (!context) {
        throw new Error("You must initialise an `OrchardProvider` before using Orchard modals or toasts");
    }
    return context;
};

var noScrollClassName = "orc-modal--noscroll";
function measureScrollBarWidth(entries, isOpen) {
    var result;
    // Skip scroll bar width measurement if modal is open
    if (isOpen)
        return;
    // Measure scroll bar width
    for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
        var entry = entries_1[_i];
        var measuredWidth = self.innerWidth - entry.borderBoxSize[0].inlineSize;
        var cs = window.getComputedStyle(entry.target);
        var paddingRight = parseInt(cs.paddingRight, 10);
        result = measuredWidth;
        if (!isNaN(paddingRight)) {
            result += paddingRight;
        }
    }
    return result;
}
function Modal(_a) {
    var className = _a.className, children = _a.children, isHideBackgroundOverlay = _a.isHideBackgroundOverlay, isPinned = _a.isPinned, onClose = _a.onClose, otherProps = __rest(_a, ["className", "children", "isHideBackgroundOverlay", "isPinned", "onClose"]);
    var _b = React__namespace.useState(0), scrollBarWidth = _b[0], setScrollBarWidth = _b[1];
    var modalPortalId = useOrchard().modalPortalId;
    var Portal = usePortal({ bindTo: (document && document.getElementById(modalPortalId)) || undefined }).Portal;
    var child = children ? React__namespace.Children.only(children) : null;
    var isOpen = Boolean(child);
    var removeBodyStyle = function () {
        document.body.classList.remove(styles$A.noscroll);
        document.body.classList.remove(noScrollClassName);
        document.body.style.removeProperty("padding-right");
    };
    var handleRest = React__namespace.useCallback(function () { return !isOpen && removeBodyStyle(); }, [isOpen]);
    var transition = useTransition(children, {
        key: function (item) { return item === null || item === void 0 ? void 0 : item.key; },
        from: {
            opacity: 0,
        },
        enter: {
            opacity: 1,
        },
        leave: {
            opacity: 0,
            position: "absolute",
            left: 0,
            top: 0,
            overflow: "hidden",
        },
        onRest: handleRest
    });
    React__namespace.useEffect(function () {
        var resizeObserver = new ResizeObserver$1(function (entries) {
            var scrollBarWidthResult = measureScrollBarWidth(entries, isOpen);
            if (scrollBarWidthResult) {
                setScrollBarWidth(scrollBarWidthResult);
            }
        });
        resizeObserver.observe(document.body);
        return function () {
            resizeObserver.unobserve(document.body);
        };
    }, [isOpen]);
    // On unmount
    React__namespace.useEffect(function () { return function () { return removeBodyStyle(); }; }, []);
    React__namespace.useEffect(function () {
        if (isOpen) {
            document.body.classList.add(styles$A.noscroll);
            document.body.classList.add(noScrollClassName);
            document.body.style.paddingRight = scrollBarWidth + "px";
        }
    }, [isOpen, scrollBarWidth]);
    var handleMouseDown = function (event) {
        if (event.target === event.currentTarget) {
            onClose(event);
        }
    };
    return (React__namespace.createElement(Portal, null,
        React__namespace.createElement("div", { style: { pointerEvents: isOpen ? "auto" : "none" }, className: classnames(styles$A.modal, className) }, transition(function (style, item) {
            var _a, _b;
            return item && (React__namespace.createElement(animated.div, __assign({ role: "document", className: classnames(styles$A.content, (_a = {}, _a[styles$A.transparent] = isHideBackgroundOverlay, _a), (_b = {}, _b[styles$A.pinned] = isPinned, _b)), style: style, onMouseDown: handleMouseDown }, otherProps), item));
        }))));
}

var SelectInput = React__namespace.forwardRef(function SelectInput(props, ref) {
    var _a, _b, _c;
    var items = props.items, className = props.className, labelClassName = props.labelClassName, label = props.label, id = props.id, error = props.error, errorMessage = props.errorMessage, _d = props.variant, variant = _d === void 0 ? "default" : _d, _e = props.popoverSize, popoverSize = _e === void 0 ? "full" : _e, placeholder = props.placeholder, initialSelectedItem = props.initialSelectedItem, handleSelectedItemChange = props.handleSelectedItemChange, isSkeleton = props.isSkeleton, disabled = props.disabled, _f = props.popperOptions, popperOptions = _f === void 0 ? {
        modifiers: [
            {
                name: "offset",
                options: {
                    offset: [0, 2],
                },
            },
        ],
    } : _f, buttonProps = __rest(props, ["items", "className", "labelClassName", "label", "id", "error", "errorMessage", "variant", "popoverSize", "placeholder", "initialSelectedItem", "handleSelectedItemChange", "isSkeleton", "disabled", "popperOptions"]);
    var _g = useSelect({
        items: items,
        initialSelectedItem: initialSelectedItem,
        onSelectedItemChange: function (_a) {
            var selected = _a.selectedItem;
            handleSelectedItemChange && handleSelectedItemChange(selected);
        },
    }), isOpen = _g.isOpen, closeMenu = _g.closeMenu, selectedItem = _g.selectedItem, getToggleButtonProps = _g.getToggleButtonProps, getLabelProps = _g.getLabelProps, getMenuProps = _g.getMenuProps, highlightedIndex = _g.highlightedIndex, getItemProps = _g.getItemProps;
    var _h = React__namespace.useState(null), referenceElement = _h[0], setReferenceElement = _h[1];
    var contentScrolls = useContentScrolls(getMenuProps().ref).contentScrolls;
    var isDisabled = disabled || isSkeleton;
    var isErrorMessage = error && errorMessage !== undefined;
    return (React__namespace.createElement("div", { "aria-busy": isSkeleton, className: classnames(styles$H.container, (_a = {}, _a[textInputStyles.group] = variant === "default", _a), className) },
        isErrorMessage && (React__namespace.createElement(Typography, { variant: "small", className: textInputStyles.errorMessage, role: "alert" }, errorMessage)),
        label && (React__namespace.createElement("label", __assign({ htmlFor: id, className: classnames(textInputStyles.label, labelClassName, (_b = {},
                _b[skeletonStyles.skeleton] = isSkeleton,
                _b[styles$H.skeletonLabel] = isSkeleton,
                _b)) }, getLabelProps()),
            React__namespace.createElement("span", { className: styles$H.labelText }, label))),
        React__namespace.createElement("div", { className: classnames(textInputStyles.wrapper) },
            React__namespace.createElement("button", __assign({ type: "button", ref: ref, id: id, className: classnames(textInputStyles.input, styles$H.button, (_c = {},
                    _c[textInputStyles.error] = error,
                    _c[styles$H.small] = variant === "small",
                    _c[skeletonStyles.skeleton] = isSkeleton,
                    _c[styles$H.skeletonButton] = isSkeleton,
                    _c)) }, getToggleButtonProps({ ref: setReferenceElement }), { disabled: isDisabled ? "disabled" : undefined }, buttonProps),
                React__namespace.createElement("span", { className: styles$H.buttonLabel }, (selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.label) || placeholder),
                React__namespace.createElement("span", { className: styles$H.icon },
                    React__namespace.createElement(ChevronDownIcon, null))),
            React__namespace.createElement(Popover, { className: styles$H.selectInputPopper, popoverClassName: styles$H.selectInputPopover, isOpen: isOpen, anchorElement: referenceElement || undefined, onClose: closeMenu, popperOptions: __assign({ placement: "bottom" }, popperOptions), size: popoverSize === "fixed" && contentScrolls ? "large" : popoverSize },
                React__namespace.createElement("ul", __assign({ className: styles$H.menu }, getMenuProps()), items.map(function (item, index) {
                    var _a, _b;
                    return (React__namespace.createElement("li", __assign({ className: classnames(styles$H.item, (_a = {}, _a[styles$H.highlight] = highlightedIndex === index, _a), (_b = {},
                            _b[styles$H.selected] = (selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.value) === item.value,
                            _b)), key: "" + item + index }, getItemProps({ item: item, index: index })), item.label));
                }))))));
});

var styles$z = {"container":"IndicatorLabel_container___1eUWx","skeleton":"IndicatorLabel_skeleton___2BU2X","label":"IndicatorLabel_label___3-fYE","dot":"IndicatorLabel_dot___2mMyc"};

var IndicatorLabel = React__namespace.forwardRef(function IndicatorLabel(props, ref) {
    var _a, _b;
    var className = props.className, label = props.label, color = props.color, isSkeleton = props.isSkeleton, dotColor = props.dotColor, otherProps = __rest(props, ["className", "label", "color", "isSkeleton", "dotColor"]);
    return (React__namespace.createElement("div", __assign({ ref: ref, "aria-busy": isSkeleton, className: classnames(styles$z.container, (_a = {}, _a[skeletonStyles.skeleton] = isSkeleton, _a[styles$z.skeleton] = isSkeleton, _a), className), style: { color: isSkeleton ? undefined : color } }, otherProps),
        React__namespace.createElement("span", { className: styles$z.label }, label),
        dotColor && (React__namespace.createElement("span", { className: classnames(styles$z.dot, (_b = {}, _b[styles$z.skeleton] = isSkeleton, _b)), style: { backgroundColor: isSkeleton ? undefined : dotColor } }))));
});

var styles$y = {"container":"IndicatorPill_container___3FPFY","label":"IndicatorPill_label___UjB7t","withLeftIcon":"IndicatorPill_withLeftIcon___2IqSa","skeleton":"IndicatorPill_skeleton___2egu5"};

var IndicatorPill = React__namespace.forwardRef(function IndicatorPill(props, ref) {
    var _a, _b;
    var className = props.className, label = props.label, color = props.color, isSkeleton = props.isSkeleton, leftIcon = props.leftIcon, otherProps = __rest(props, ["className", "label", "color", "isSkeleton", "leftIcon"]);
    return (React__namespace.createElement("div", __assign({ ref: ref, "aria-busy": isSkeleton, className: classnames(styles$y.container, (_a = {}, _a[skeletonStyles.skeleton] = isSkeleton, _a[styles$y.skeleton] = isSkeleton, _a), className), style: { color: isSkeleton ? undefined : color } }, otherProps),
        React__namespace.createElement("div", { className: classnames(styles$y.label, (_b = {}, _b[styles$y.withLeftIcon] = leftIcon, _b)) },
            leftIcon,
            React__namespace.createElement("span", null, label))));
});

var styles$x = {"container":"Pill_container___3bStt","large":"Pill_large___2U3bC","small":"Pill_small___SqRoG","skeleton":"Pill_skeleton___Pq9Uq","header":"Pill_header___xqoIw","label":"Pill_label___K9dFy","content":"Pill_content___34iSg","arrow":"Pill_arrow___yq8tZ","rightIcon":"Pill_rightIcon___M4Awp"};

var Pill = React__namespace.forwardRef(function Pill(props, ref) {
    var _a;
    var _b = props.variant, variant = _b === void 0 ? "default" : _b, label = props.label, content = props.content, onClick = props.onClick, onClickInfo = props.onClickInfo, className = props.className, isSkeleton = props.isSkeleton, onClickAlert = props.onClickAlert, indicatorRef = props.indicatorRef, otherProps = __rest(props, ["variant", "label", "content", "onClick", "onClickInfo", "className", "isSkeleton", "onClickAlert", "indicatorRef"]);
    return (React__namespace.createElement("div", __assign({ ref: ref, "aria-busy": isSkeleton, className: classnames(styles$x.container, (_a = {},
            _a[styles$x.large] = variant === "default" && !!onClick,
            _a[styles$x.small] = variant === "small",
            _a[skeletonStyles.skeleton] = isSkeleton,
            _a[styles$x.skeleton] = isSkeleton,
            _a), className) }, otherProps),
        React__namespace.createElement("header", { className: styles$x.header },
            React__namespace.createElement(Typography, { className: styles$x.label, variant: "small" }, label),
            onClickInfo && (React__namespace.createElement(IconButton, { label: label, onClick: onClickInfo, ref: indicatorRef, "data-testid": "pill-info-button" },
                React__namespace.createElement(InfoIcon, { fillColor: "var(--color-slate)", className: styles$x.rightIcon }))),
            onClickAlert && (React__namespace.createElement(IconButton, { label: label, onClick: onClickAlert, ref: indicatorRef, "data-testid": "pill-alert-button" },
                React__namespace.createElement(CircleAlertIcon, { fillColor: "var(--color-ui-negative)", className: styles$x.rightIcon })))),
        React__namespace.createElement(Typography, { className: styles$x.content, variant: variant === "default" ? "h2" : "h3" }, content),
        onClick && React__namespace.createElement(RightArrowIcon, { className: styles$x.arrow, fillColor: "var(--color-slate)" })));
});

var styles$w = {"container":"Grid_container___1DXjf","fullWidth":"Grid_fullWidth___1EVxA","debug":"Grid_debug___3pBFj","row":"Grid_row___3s1J9","col":"Grid_col___DDBcP","collapse":"Grid_collapse___19TCC","grow":"Grid_grow___3JaLU","col-1":"Grid_col-1___2vljZ","col-2":"Grid_col-2___3cQIe","col-3":"Grid_col-3___bmyLu","col-4":"Grid_col-4___2nzRq","col-5":"Grid_col-5____mBOK","col-6":"Grid_col-6___1AXrm","col-7":"Grid_col-7___3bZXU","col-8":"Grid_col-8___tCEb-","col-9":"Grid_col-9___16Win","col-10":"Grid_col-10___3iLst","col-11":"Grid_col-11___3YVG-","col-12":"Grid_col-12___2mQkt","offset-1":"Grid_offset-1___azZSd","offset-2":"Grid_offset-2___1L2bk","offset-3":"Grid_offset-3___1a0WZ","offset-4":"Grid_offset-4___3mRkE","offset-5":"Grid_offset-5___24LwU","offset-6":"Grid_offset-6___2ZDXS","offset-7":"Grid_offset-7___2Aj7W","offset-8":"Grid_offset-8___Ecz6n","offset-9":"Grid_offset-9___1Er45","offset-10":"Grid_offset-10___ETo90","offset-11":"Grid_offset-11___RGBFb"};

var Grid$1 = function (_a) {
    var _b;
    var className = _a.className, isDebug = _a.isDebug, fullWidth = _a.fullWidth, children = _a.children, otherProps = __rest(_a, ["className", "isDebug", "fullWidth", "children"]);
    return (React__namespace.createElement("div", __assign({ className: classnames(styles$w.container, className, (_b = {}, _b[styles$w.debug] = isDebug, _b[styles$w.fullWidth] = fullWidth, _b)) }, otherProps), children));
};

var Row = function (_a) {
    var _b;
    var className = _a.className, collapseMargin = _a.collapseMargin, children = _a.children, otherProps = __rest(_a, ["className", "collapseMargin", "children"]);
    return (React__namespace.createElement("div", __assign({ className: classnames(styles$w.row, (_b = {}, _b[styles$w.collapse] = collapseMargin, _b), className) }, otherProps), children));
};

var Col = function (_a) {
    var _b;
    var className = _a.className, offset = _a.offset, size = _a.size, children = _a.children, otherProps = __rest(_a, ["className", "offset", "size", "children"]);
    return (React__namespace.createElement("div", __assign({ className: classnames(styles$w.col, className, (_b = {},
            _b[styles$w["col-" + size]] = !!size,
            _b[styles$w["offset-" + offset]] = !!offset,
            _b[styles$w.grow] = !size,
            _b)) }, otherProps), children));
};

var styles$v = {"container":"IconLabel_container___200rE","icon":"IconLabel_icon___3bJwq","skeletonIcon":"IconLabel_skeletonIcon___3E3WX","clickable":"IconLabel_clickable___3WVml","labelContainer":"IconLabel_labelContainer___2maHI","label":"IconLabel_label___2XYDb","description":"IconLabel_description___1yu8j","skeleton":"IconLabel_skeleton___2DomP"};

var IconLabel = React__default['default'].forwardRef(function IconLabel(props, ref) {
    var _a, _b;
    var children = props.children, label = props.label, description = props.description, className = props.className, labelClassName = props.labelClassName, descriptionClassName = props.descriptionClassName, onClick = props.onClick, isSkeleton = props.isSkeleton, _c = props.labelSkeletonWidth, labelSkeletonWidth = _c === void 0 ? "2rem" : _c, _d = props.descSkeletonWidth, descSkeletonWidth = _d === void 0 ? "4rem" : _d, otherProps = __rest(props, ["children", "label", "description", "className", "labelClassName", "descriptionClassName", "onClick", "isSkeleton", "labelSkeletonWidth", "descSkeletonWidth"]);
    return (React__default['default'].createElement("div", __assign({ ref: ref, "aria-busy": isSkeleton, onClick: onClick, className: classnames(styles$v.container, (_a = {}, _a[styles$v.clickable] = onClick, _a[styles$v.skeleton] = isSkeleton, _a), className) }, otherProps),
        React__default['default'].createElement("div", { className: classnames(styles$v.icon, (_b = {}, _b[styles$v.skeletonIcon] = isSkeleton, _b)) }, children),
        React__default['default'].createElement("div", { className: styles$v.labelContainer },
            React__default['default'].createElement(Typography, { isSkeleton: isSkeleton, skeletonWidth: labelSkeletonWidth, skeletonHeight: "1rem", className: classnames(styles$v.label, labelClassName), variant: "p" }, label),
            React__default['default'].createElement(Typography, { isSkeleton: isSkeleton, skeletonWidth: descSkeletonWidth, skeletonHeight: "0.875rem", className: classnames(styles$v.description, descriptionClassName), variant: "extraSmall" }, description))));
});

var styles$u = {"container":"DashboardPill_container___1fKoN","content":"DashboardPill_content___25k7B","clickable":"DashboardPill_clickable___2rF38","arrow":"DashboardPill_arrow___1k1_h","gradient":"DashboardPill_gradient___quzoL","header":"DashboardPill_header___p4pcx","title":"DashboardPill_title___lBSOu","percentage":"DashboardPill_percentage___3he8d","up":"DashboardPill_up___3OVgk","down":"DashboardPill_down___3rb8C","body":"DashboardPill_body___1NRYm"};

var DashboardPillContent = function (_a) {
    var _b;
    var title = _a.title, percentage = _a.percentage, body = _a.body;
    return (React__namespace.createElement("div", { className: styles$u.content },
        React__namespace.createElement("header", { className: styles$u.header },
            React__namespace.createElement("h4", { className: styles$u.title }, title),
            percentage !== undefined && (React__namespace.createElement("div", { className: classnames(styles$u.percentage, (_b = {},
                    _b[styles$u.up] = percentage >= 0,
                    _b[styles$u.down] = percentage < 0,
                    _b)) },
                percentage * 100,
                "%"))),
        React__namespace.createElement("h2", { className: styles$u.body }, body),
        React__namespace.createElement(RightArrowIcon, { className: styles$u.arrow })));
};
var DashboardPill = React__namespace.forwardRef(function DashboardPill(props, ref) {
    var _a;
    var className = props.className, title = props.title, body = props.body, percentage = props.percentage, colorA = props.colorA, colorB = props.colorB, isSkeleton = props.isSkeleton, onClick = props.onClick, otherProps = __rest(props, ["className", "title", "body", "percentage", "colorA", "colorB", "isSkeleton", "onClick"]);
    var isClickable = onClick !== undefined;
    return (React__namespace.createElement("div", __assign({ onClick: onClick, ref: ref, "aria-busy": isSkeleton, "data-testid": "dashboard-pill", className: classnames(styles$u.container, className, (_a = {},
            _a[skeletonStyles.skeleton] = isSkeleton,
            _a[styles$u.gradient] = !isSkeleton,
            _a[styles$u.clickable] = !isSkeleton && isClickable,
            _a)), style: {
            "--color-a": colorA,
            "--color-b": colorB,
        } }, otherProps), !isSkeleton && React__namespace.createElement(DashboardPillContent, { title: title, body: body, percentage: percentage })));
});

var Skeleton = function (_a) {
    var className = _a.className, width = _a.width, height = _a.height, otherProps = __rest(_a, ["className", "width", "height"]);
    return (React__namespace.createElement("div", __assign({ "aria-busy": true, className: classnames(skeletonStyles.skeleton, className), style: { width: width, height: height } }, otherProps)));
};

var styles$t = {"container":"DataTable_container___22TeM","table":"DataTable_table___2Blr1","layoutAuto":"DataTable_layoutAuto___3t0wQ","cell":"DataTable_cell___2WrEr","label":"DataTable_label___3uMjC","row":"DataTable_row___1MmDD","clickable":"DataTable_clickable___3qO87","skeleton":"DataTable_skeleton___1g9AD","icon":"DataTable_icon___oKhb2","sortActive":"DataTable_sortActive___14gOI","tableHeaderButton":"DataTable_tableHeaderButton___1HYAO","tableHeaderLabel":"DataTable_tableHeaderLabel___gIYGA","sortable":"DataTable_sortable___1eezU","sortAscending":"DataTable_sortAscending___21gPL","sortDescending":"DataTable_sortDescending___3bKBx"};

function TableHeader(props) {
    var _a;
    var label = props.label, className = props.className, isSort = props.isSort, sortKey = props.sortKey, sortDirection = props.sortDirection, currentSortKey = props.currentSortKey, colWidth = props.colWidth, colSpan = props.colSpan, onClick = props.onClick;
    var isSorted = currentSortKey === sortKey;
    var ariaSortDirection = sortDirection === "asc" ? "ascending" : "descending";
    var ariaSort = isSorted ? ariaSortDirection : "none";
    var tableHeaderClassName = classnames(styles$t.cell, className, (_a = {},
        _a[styles$t.sortable] = isSort,
        _a[styles$t.sortActive] = currentSortKey === sortKey,
        _a[styles$t.sortAscending] = currentSortKey === sortKey && sortDirection === "asc",
        _a[styles$t.sortDescending] = sortKey === sortKey && sortDirection === "desc",
        _a));
    var tableHeaderStyle = colWidth ? { width: colWidth + "%" } : undefined;
    return (React__namespace.createElement("th", { style: tableHeaderStyle, className: tableHeaderClassName, "aria-sort": ariaSort, colSpan: colSpan, scope: "col" },
        React__namespace.createElement("button", { className: styles$t.tableHeaderButton, onClick: onClick, disabled: !isSort },
            React__namespace.createElement("div", { className: styles$t.label },
                React__namespace.createElement(Typography, { className: styles$t.tableHeaderLabel, variant: "small" }, label),
                React__namespace.createElement("span", { className: styles$t.icon },
                    isSort && isSorted && React__namespace.createElement(SetDownIcon, null),
                    isSort && !isSorted && React__namespace.createElement(ArrowUpDownIcon, null))))));
}

function createRow(rowData, columnDefs) {
    return columnDefs.map(function (def, index) {
        var Component = def.component;
        var item = rowData[index];
        return React__namespace.createElement(Component, __assign({ key: index }, item));
    });
}
function TableBody(props) {
    var rowsInfo = props.rowsInfo, columnDefs = props.columnDefs;
    return (React__namespace.createElement("tbody", null, rowsInfo.map(function (row, index) {
        var _a;
        var cells = createRow(row.data, columnDefs);
        return (React__namespace.createElement("tr", { key: index, className: classnames(styles$t.row, (_a = {}, _a[styles$t.clickable] = !!row.onClick, _a)), onClick: row.onClick }, cells.map(function (item) { return (React__namespace.createElement("td", { key: item.key, className: styles$t.cell }, item)); })));
    })));
}

var DEFAULT_ROW_HEIGHT = 56;
var DEFAULT_HEADER_HEIGHT = 51;
var DEFAULT_NUM_SKELETON_ROWS = 1;

function DataTable(props) {
    var _a;
    var className = props.className, rowsInfo = props.rowsInfo, columnDefs = props.columnDefs, sortKey = props.sortKey, sortDirection = props.sortDirection, onSort = props.onSort, isLayoutAuto = props.isLayoutAuto, isSkeleton = props.isSkeleton, _b = props.skeletonRows, skeletonRows = _b === void 0 ? DEFAULT_NUM_SKELETON_ROWS : _b, _c = props.skeletonRowHeight, skeletonRowHeight = _c === void 0 ? DEFAULT_ROW_HEIGHT : _c, _d = props.skeletonHeaderHeight, skeletonHeaderHeight = _d === void 0 ? DEFAULT_HEADER_HEIGHT : _d, otherProps = __rest(props, ["className", "rowsInfo", "columnDefs", "sortKey", "sortDirection", "onSort", "isLayoutAuto", "isSkeleton", "skeletonRows", "skeletonRowHeight", "skeletonHeaderHeight"]);
    var skeletonStyle = {
        height: skeletonRows * skeletonRowHeight + skeletonHeaderHeight
    };
    return (React__namespace.createElement("div", __assign({ "aria-busy": isSkeleton, className: classnames(styles$t.container, className, (_a = {},
            _a[skeletonStyles.skeleton] = isSkeleton,
            _a[styles$t.skeleton] = isSkeleton,
            _a[styles$t.layoutAuto] = isLayoutAuto,
            _a)) }, otherProps, { style: isSkeleton ? skeletonStyle : undefined }),
        React__namespace.createElement("table", { className: styles$t.table },
            React__namespace.createElement("thead", null,
                React__namespace.createElement("tr", { className: styles$t.row }, columnDefs.map(function (def, i) { return (React__namespace.createElement(TableHeader, { key: i, className: def.className, colWidth: def.colWidth, isSort: !!def.sortable, currentSortKey: sortKey, sortKey: def.key, sortDirection: sortDirection, label: def.label, onClick: function (e) {
                        e.preventDefault();
                        if (onSort && def.sortable) {
                            onSort(def.key);
                        }
                    } })); }))),
            React__namespace.createElement(TableBody, { rowsInfo: rowsInfo, columnDefs: columnDefs }))));
}

var styles$s = {"container":"Pagination_container___1L8Zl","count":"Pagination_count___1HsfU"};

var PaginationContent = function (_a) {
    var pageIndex = _a.pageIndex, total = _a.total, perPage = _a.perPage, perPageOptions = _a.perPageOptions, onSelectPerPage = _a.onSelectPerPage, onNext = _a.onNext, onPrev = _a.onPrev, className = _a.className, label = _a.label, isSkeleton = _a.isSkeleton, otherProps = __rest(_a, ["pageIndex", "total", "perPage", "perPageOptions", "onSelectPerPage", "onNext", "onPrev", "className", "label", "isSkeleton"]);
    var start = (pageIndex - 1) * perPage;
    var end = Math.min(total, start + perPage);
    var selectOptions = perPageOptions.map(function (option) { return ({ label: option, value: option }); });
    return (React__namespace.createElement("div", __assign({ role: "navigation", "aria-busy": isSkeleton, "aria-label": label ? label : "Pagination", className: classnames(styles$s.container, className) }, otherProps),
        React__namespace.createElement("div", { className: styles$s.count },
            React__namespace.createElement(Typography, { isSkeleton: isSkeleton, variant: "small" },
                start + 1,
                " - ",
                end,
                " of ",
                total)),
        React__namespace.createElement(IconButton, { hasBorder: true, isSkeleton: isSkeleton, label: "Previous page", onClick: function () { return onPrev(); } },
            React__namespace.createElement(ArrowThinRightIcon, { isFlip: true })),
        React__namespace.createElement(SelectInput, { id: "select-pagination-per-page", items: selectOptions, variant: "small", "aria-label": "Select per page", initialSelectedItem: { label: perPage + "", value: perPage + "" }, handleSelectedItemChange: function (selectedItem) { return selectedItem && onSelectPerPage(selectedItem.value); }, popperOptions: {
                modifiers: [
                    {
                        name: "offset",
                        options: {
                            offset: [0, 8],
                        },
                    },
                ]
            }, isSkeleton: isSkeleton }),
        React__namespace.createElement(IconButton, { hasBorder: true, isSkeleton: isSkeleton, label: "Next page", onClick: function () { return onNext(); } },
            React__namespace.createElement(ArrowThinRightIcon, null))));
};

/**
 * Clamp page index
 *
 * @param index - The desired page index
 * @param perPage - Amount of items per page
 * @param total - Total amount of items
 * @returns A valid page index between 0 and maximum page index
 */
function clampPageIndex(index, perPage, total) {
    var maxPage = Math.ceil(total / perPage);
    return Math.max(1, Math.min(maxPage, index));
}
var Pagination = function (_a) {
    var total = _a.total, perPage = _a.perPage, perPageOptions = _a.perPageOptions, pageIndex = _a.pageIndex, onUpdatePageIndex = _a.onUpdatePageIndex, onUpdatePerPage = _a.onUpdatePerPage, isSkeleton = _a.isSkeleton, label = _a.label;
    var handlePrev = function () {
        onUpdatePageIndex(clampPageIndex(pageIndex - 1, perPage, total));
    };
    var handleNext = function () {
        onUpdatePageIndex(clampPageIndex(pageIndex + 1, perPage, total));
    };
    var handleSelectPerPage = function (perPageValue) {
        onUpdatePerPage(+perPageValue);
        onUpdatePageIndex(clampPageIndex(pageIndex, +perPageValue, total));
    };
    return (React__namespace.createElement(PaginationContent, { onSelectPerPage: handleSelectPerPage, onPrev: handlePrev, onNext: handleNext, pageIndex: pageIndex, perPage: perPage, perPageOptions: perPageOptions.map(function (option) { return option + ""; }), total: total, isSkeleton: isSkeleton, label: label }));
};

var styles$r = {"container":"ClipboardCopy_container___2b36F","iconButton":"ClipboardCopy_iconButton___2YSoZ","skeleton":"ClipboardCopy_skeleton___1WmSI"};

var colors$1 = {"color-blue":"#482DEB","color-blue-hsl":"249, 83%, 55%","color-red":"#EE3355","color-red-hsl":"349, 85%, 57%","color-orange":"#ffaa33","color-orange-hsl":"35, 100%, 60%","color-green":"#2AA24F","color-green-hsl":"139, 59%, 40%","color-light-blue":"#4499EE","color-light-blue-hsl":"210, 83%, 60%","color-grey-blue":"#556680","color-grey-blue-hsl":"216, 20%, 42%","color-primary-navy":"hsl(228.3, 83.6%, 21.6%)","color-primary-navy-light":"hsl(228, 67%, 35%)","color-primary-teal":"color-primary-blue","color-primary-magenta":"hsl(321.9, 86.7%, 47.1%)","color-primary-violet":"hsl(268.6, 85.5%, 70.2%)","color-grey-black":"#1A1B23","color-grey-black-hsl":"233, 15%, 12%","color-grey-slate":"#6f749a","color-grey-slate-hsl":"233, 17.6%, 52%","color-grey-slate-40":"hsla(233, 17.6%, 52%, 40%)","color-grey-light":"hsl(232.5, 100%, 98.4%)","color-grey-white":"hsl(0, 0%, 100%)","color-grey-white-80":"hsla(0, 0%, 100%, 80%)","color-ui-action":"#482DEB","color-ui-action-mid":"#2F1BA6","color-ui-action-dark":"#15095D","color-ui-action-80":"hsla(249, 83%, 55%, 80%)","color-ui-action-60":"hsla(249, 83%, 55%, 60%)","color-ui-action-40":"hsla(249, 83%, 55%, 40%)","color-ui-action-20":"hsla(249, 83%, 55%, 20%)","color-ui-action-10":"hsla(249, 83%, 55%, 10%)","color-ui-action-5":"hsla(249, 83%, 55%, 5%)","color-ui-warning":"#ffaa33","color-ui-warning-mid":"#CC6633","color-ui-warning-dark":"#704100","color-ui-warning-80":"hsla(35, 100%, 60%, 80%)","color-ui-warning-60":"hsla(35, 100%, 60%, 60%)","color-ui-warning-40":"hsla(35, 100%, 60%, 40%)","color-ui-warning-20":"hsla(35, 100%, 60%, 20%)","color-ui-warning-10":"hsla(35, 100%, 60%, 10%)","color-ui-negative":"#EE3355","color-ui-negative-mid":"#A91E36","color-ui-negative-dark":"#6D0E1E","color-ui-negative-80":"hsla(349, 85%, 57%, 80%)","color-ui-negative-60":"hsla(349, 85%, 57%, 60%)","color-ui-negative-40":"hsla(349, 85%, 57%, 40%)","color-ui-negative-20":"hsla(349, 85%, 57%, 20%)","color-ui-negative-10":"hsla(349, 85%, 57%, 10%)","color-ui-positive":"#2AA24F","color-ui-positive-mid":"#26732E","color-ui-positive-dark":"#204A12","color-ui-positive-80":"hsla(139, 59%, 40%, 80%)","color-ui-positive-60":"hsla(139, 59%, 40%, 60%)","color-ui-positive-40":"hsla(139, 59%, 40%, 40%)","color-ui-positive-20":"hsla(139, 59%, 40%, 20%)","color-ui-positive-10":"hsla(139, 59%, 40%, 10%)","color-ui-neutral":"#4499EE","color-ui-neutral-mid":"#1A6FB6","color-ui-neutral-dark":"#02457E","color-ui-neutral-80":"hsla(210, 83%, 60%, 80%)","color-ui-neutral-60":"hsla(210, 83%, 60%, 60%)","color-ui-neutral-40":"hsla(210, 83%, 60%, 40%)","color-ui-neutral-20":"hsla(210, 83%, 60%, 20%)","color-ui-neutral-10":"hsla(210, 83%, 60%, 10%)","color-ui-interface":"#556680","color-ui-interface-80":"hsla(216, 20%, 42%, 80%)","color-ui-interface-60":"hsla(216, 20%, 42%, 60%)","color-ui-interface-40":"hsla(216, 20%, 42%, 40%)","color-ui-interface-20":"hsla(216, 20%, 42%, 20%)","color-ui-interface-10":"hsla(216, 20%, 42%, 10%)","color-ui-blue":"hsl(222.4, 60.4%, 61.4%)","color-ui-steel-blue":"hsl(220, 67%, 61%)","color-ui-inactive":"hsl(212.3,26%,80.4%)"};

var ClipboardCopy = React__namespace.forwardRef(function ClipboardCopy(props, ref) {
    var _a;
    var _this = this;
    var className = props.className, text = props.text, onCopy = props.onCopy, onError = props.onError, isSkeleton = props.isSkeleton, label = props.label, otherProps = __rest(props, ["className", "text", "onCopy", "onError", "isSkeleton", "label"]);
    var _b = React__namespace.useState(false), isWriting = _b[0], setIsWriting = _b[1];
    var handleClick = function () { return __awaiter(_this, void 0, void 0, function () {
        var e_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setIsWriting(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, 4, 5]);
                    return [4 /*yield*/, navigator.clipboard.writeText(text)];
                case 2:
                    _a.sent();
                    onCopy && onCopy(text);
                    return [3 /*break*/, 5];
                case 3:
                    e_1 = _a.sent();
                    onError && onError(e_1);
                    return [3 /*break*/, 5];
                case 4:
                    setIsWriting(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    return (React__namespace.createElement("div", __assign({ ref: ref, className: classnames(styles$r.container, (_a = {}, _a[styles$r.skeleton] = isSkeleton, _a), className) }, otherProps),
        React__namespace.createElement(IconButton, { disabled: isWriting, "aria-busy": isSkeleton, label: label ? label : "Copy to clipboard", className: styles$r.iconButton, onClick: handleClick, isSkeleton: isSkeleton },
            React__namespace.createElement(CopyIcon, { fillColor: colors$1["color-grey-white"] }))));
});

var styles$q = {"container":"ClipboardInput_container___3-sWQ","textContainer":"ClipboardInput_textContainer___2tmhz","textInput":"ClipboardInput_textInput___1cCbD"};

var ClipboardInput = React__namespace.forwardRef(function ClipboardInput(props, ref) {
    var className = props.className, _a = props.text, text = _a === void 0 ? "" : _a, onCopy = props.onCopy, onError = props.onError, isSkeleton = props.isSkeleton, otherProps = __rest(props, ["className", "text", "onCopy", "onError", "isSkeleton"]);
    return (React__namespace.createElement("div", { ref: ref, className: classnames(styles$q.container, className) },
        React__namespace.createElement(TextInput, __assign({ isSkeleton: isSkeleton, className: styles$q.textContainer, inputClassName: styles$q.textInput, value: text, variant: "small", readOnly: true }, otherProps)),
        React__namespace.createElement(ClipboardCopy, { isSkeleton: isSkeleton, text: text, onCopy: onCopy, onError: onError })));
});

var styles$p = {"title":"EntityInfo_title___lGY1s","subtitle":"EntityInfo_subtitle___2yBAl"};

var EntityInfo = React__namespace.forwardRef(function EntityInfo(props, ref) {
    var className = props.className, title = props.title, subtitle = props.subtitle, otherProps = __rest(props, ["className", "title", "subtitle"]);
    return (React__namespace.createElement("div", __assign({ ref: ref, className: className }, otherProps),
        React__namespace.createElement(Typography, { className: styles$p.title, variant: "p" }, title),
        React__namespace.createElement(Typography, { className: styles$p.subtitle, variant: "extraSmall" }, subtitle)));
});

var styles$o = {"button":"Tab_button___OVAJP","selected":"Tab_selected___2tcJW","label":"Tab_label___2qsvy"};

function Tab(props) {
    var _a;
    var className = props.className, label = props.label, id = props.id, isSelected = props.isSelected, onTabChange = props.onTabChange, otherProps = __rest(props, ["className", "label", "id", "isSelected", "onTabChange"]);
    var handleClick = function (e) {
        if (onTabChange && id) {
            onTabChange(e, id);
        }
    };
    return (React__namespace.createElement("button", __assign({ className: classnames(styles$o.button, (_a = {}, _a[styles$o.selected] = isSelected, _a), className), id: id, role: "tab", "aria-selected": isSelected, onClick: handleClick }, otherProps),
        React__namespace.createElement("span", { className: styles$o.label }, label)));
}

var styles$n = {"container":"Tabs_container___1HW1D","tablist":"Tabs_tablist___YYTxE"};

var Tabs = function (_a) {
    var label = _a.label, selectedTabId = _a.selectedTabId, onTabChange = _a.onTabChange, className = _a.className, children = _a.children, otherProps = __rest(_a, ["label", "selectedTabId", "onTabChange", "className", "children"]);
    var tabChildren = React__namespace.Children.map(children, function (child) {
        if (!React__namespace.isValidElement(child)) {
            return null;
        }
        var childTabId = child.props.id;
        return React__namespace.cloneElement(child, {
            onTabChange: onTabChange,
            isSelected: childTabId === selectedTabId,
        });
    });
    return (React__namespace.createElement("div", __assign({ className: classnames(styles$n.container, className) }, otherProps),
        React__namespace.createElement("div", { role: "tablist", "aria-label": label, className: styles$n.tablist }, tabChildren)));
};

var styles$m = {"container":"TabPanel_container___2PvAd"};

var TabPanel = function (_a) {
    var tabId = _a.tabId, selectedTabId = _a.selectedTabId, children = _a.children, className = _a.className, otherProps = __rest(_a, ["tabId", "selectedTabId", "children", "className"]);
    var isSelected = selectedTabId === tabId;
    return (React__namespace.createElement("div", __assign({ id: "tabpanel-" + tabId, "aria-labelledby": tabId, "aria-hidden": !isSelected, role: "tabpanel", className: classnames(styles$m.container, className) }, otherProps), isSelected && children));
};

var styles$l = {"container":"ErrorDialog_container___1ZnVP","content":"ErrorDialog_content___1Mc8o","header":"ErrorDialog_header___3eIXf","body":"ErrorDialog_body___1-5A7"};

var ERROR_404 = "Page doesn't exist";
var ERROR_GENERIC = "Something went wrong";
function getErrorTitle(statusCode) {
    if (statusCode === 404) {
        return ERROR_404;
    }
    return ERROR_GENERIC;
}
var ErrorDialog = function (_a) {
    var statusCode = _a.statusCode, correlationId = _a.correlationId, message = _a.message, className = _a.className, isCard = _a.isCard, otherProps = __rest(_a, ["statusCode", "correlationId", "message", "className", "isCard"]);
    var content = (React__namespace.createElement(React__namespace.Fragment, null,
        React__namespace.createElement("header", { className: styles$l.header },
            React__namespace.createElement(Typography, { id: "error-dialog-title", variant: "extraLarge" }, statusCode)),
        React__namespace.createElement("div", { className: styles$l.body },
            React__namespace.createElement(Typography, { id: "error-dialog-desc", variant: "h2" }, getErrorTitle(statusCode)),
            correlationId && React__namespace.createElement(Typography, { variant: "small" }, correlationId),
            message && React__namespace.createElement(Typography, null, message))));
    return (React__namespace.createElement("div", __assign({ role: "dialog", "aria-labelledby": "error-dialog-title", "aria-describedby": "error-dialog-desc", className: classnames(styles$l.container, className) }, otherProps), isCard ? React__namespace.createElement(Card, null, content) : content));
};

var styles$k = {"container":"Switch_container___3AnMw","button":"Switch_button___2DEsq","label":"Switch_label___qpZ1r","labelSkeleton":"Switch_labelSkeleton___2LMTb","skeleton":"Switch_skeleton___2iQhF"};

var Switch = React__namespace.forwardRef(function Switch(props, ref) {
    var _a, _b;
    var id = props.id, onClick = props.onClick, readonly = props.readonly, isChecked = props.isChecked, buttonClassName = props.buttonClassName, labelClassName = props.labelClassName, className = props.className, label = props.label, isSkeleton = props.isSkeleton, otherProps = __rest(props, ["id", "onClick", "readonly", "isChecked", "buttonClassName", "labelClassName", "className", "label", "isSkeleton"]);
    return (React__namespace.createElement("div", __assign({ "aria-busy": isSkeleton, ref: ref, className: classnames(styles$k.container, className) }, otherProps),
        React__namespace.createElement("button", { id: id, onClick: onClick, className: classnames(styles$k.button, buttonClassName, (_a = {},
                _a[skeletonStyles.skeleton] = isSkeleton,
                _a[styles$k.skeleton] = isSkeleton,
                _a)), type: "button", role: "switch", disabled: isSkeleton, "aria-checked": isChecked ? "true" : "false", "aria-readonly": readonly },
            React__namespace.createElement("span", null, isChecked ? "On" : "Off")),
        label && (React__namespace.createElement("label", { className: classnames(styles$k.label, labelClassName, (_b = {}, _b[skeletonStyles.skeleton] = isSkeleton, _b[styles$k.labelSkeleton] = isSkeleton, _b)), htmlFor: id }, label))));
});

var styles$j = {"container":"TextArea_container___TonnC","textarea":"TextArea_textarea___1wpC9","label":"TextArea_label___-Rt5R","skeletonLabel":"TextArea_skeletonLabel___I-4CW","skeletonTextarea":"TextArea_skeletonTextarea___3-3Fb"};

var TextArea = React__namespace.forwardRef(function TextArea(_a, ref) {
    var _b, _c, _d;
    var id = _a.id, label = _a.label, containerClassName = _a.containerClassName, className = _a.className, labelClassName = _a.labelClassName, value = _a.value, onChange = _a.onChange, error = _a.error, errorMessage = _a.errorMessage, isSkeleton = _a.isSkeleton, showCharacterCount = _a.showCharacterCount, _e = _a.characterCountAlign, characterCountAlign = _e === void 0 ? "right" : _e, textAreaProps = __rest(_a, ["id", "label", "containerClassName", "className", "labelClassName", "value", "onChange", "error", "errorMessage", "isSkeleton", "showCharacterCount", "characterCountAlign"]);
    var isErrorMessage = error && errorMessage !== undefined;
    var isCharacterCount = showCharacterCount && textAreaProps.maxLength !== 0;
    return (React__namespace.createElement("div", { "aria-busy": isSkeleton, className: classnames(styles$j.container, textInputStyles.group, containerClassName) },
        isErrorMessage && (React__namespace.createElement(Typography, { role: "alert", variant: "small", className: textInputStyles.errorMessage }, errorMessage)),
        label && (React__namespace.createElement("label", { htmlFor: id, className: classnames(textInputStyles.label, labelClassName, (_b = {},
                _b[skeletonStyles.skeleton] = isSkeleton,
                _b[styles$j.skeletonLabel] = isSkeleton,
                _b)) },
            React__namespace.createElement("span", { className: textInputStyles.labelText }, label))),
        React__namespace.createElement("textarea", __assign({ className: classnames(textInputStyles.control, styles$j.textarea, (_c = {},
                _c[textInputStyles.error] = error,
                _c[skeletonStyles.skeleton] = isSkeleton,
                _c[styles$j.skeletonTextarea] = isSkeleton,
                _c), className), id: id, ref: ref, value: value, onChange: onChange, "aria-hidden": isSkeleton ? "true" : undefined }, textAreaProps)),
        isCharacterCount && (React__namespace.createElement("div", { className: classnames(textInputStyles.characterCount, (_d = {},
                _d[textInputStyles.alignRight] = characterCountAlign === "right",
                _d[skeletonStyles.skeleton] = isSkeleton,
                _d[textInputStyles.characterCountSkeleton] = isSkeleton,
                _d)) },
            React__namespace.createElement(CharacterCount, { maxLen: textAreaProps.maxLength, valueLen: value === null || value === void 0 ? void 0 : value.toString().length, isSkeleton: isSkeleton })))));
});

var styles$i = {"container":"HighlightText_container___wbWRN"};

var HighlightText = React__namespace.forwardRef(function HighlightText(props, ref) {
    var className = props.className, search = props.search, children = props.children, otherProps = __rest(props, ["className", "search", "children"]);
    var highlighted = React__namespace.Children.map(children, function (child) {
        if (typeof child === "string" && search) {
            try {
                // Create regex from search text
                var searchRe = new RegExp(search, "ig");
                var res = null;
                var lastIndex = 0;
                var highlightChild = [];
                // Loop over matches and build jsx
                while ((res = searchRe.exec(child)) !== null) {
                    // Get first portion
                    highlightChild.push(child.slice(lastIndex, res.index));
                    // Wrap matched portion in <mark />
                    highlightChild.push(React__namespace.createElement("mark", null, child.slice(res.index, res.index + res[0].length)));
                    // Update last index for next iteration
                    lastIndex = searchRe.lastIndex;
                }
                // Remaining text
                highlightChild.push(child.slice(lastIndex));
                return highlightChild;
            }
            catch (err) {
                // If we can't create a regex from the search text, render the child as normal, without highlighting
                return child;
            }
        }
        return child;
    });
    return (React__namespace.createElement("span", __assign({ ref: ref, className: classnames(styles$i.container, className) }, otherProps), highlighted));
});

var styles$h = {"container":"CodeBlock_container___3l_qx","header":"CodeBlock_header___3WyLR","body":"CodeBlock_body___1I9cP","text":"CodeBlock_text___3XYyi","title":"CodeBlock_title___1tRjr"};

var CodeBlock = React__namespace.forwardRef(function CodeBlock(props, ref) {
    var title = props.title, text = props.text, className = props.className, otherProps = __rest(props, ["title", "text", "className"]);
    return (React__namespace.createElement("div", __assign({ ref: ref, className: classnames(styles$h.container, className) }, otherProps),
        React__namespace.createElement("div", { className: styles$h.header },
            React__namespace.createElement(Typography, { className: styles$h.title, variant: "h3" }, title)),
        React__namespace.createElement("div", { className: styles$h.body },
            React__namespace.createElement(Typography, { className: styles$h.text }, text))));
});

var styles$g = {"label":"CheckBox_label___2Tuk8","checkIcon":"CheckBox_checkIcon___2EYx2","checkSkeleton":"CheckBox_checkSkeleton___BAMgE","input":"CheckBox_input___3LTD-","labelTextSkeleton":"CheckBox_labelTextSkeleton___xNcef","wrapper":"CheckBox_wrapper___28T35","readonly":"CheckBox_readonly___3tUnm","labelSkeleton":"CheckBox_labelSkeleton___367WP"};

var Checkbox = React__default['default'].forwardRef(function Checkbox(props, ref) {
    var _a, _b, _c;
    var id = props.id, onChange = props.onChange, checked = props.checked, labelClassName = props.labelClassName, checkClassName = props.checkClassName, wrapperClassName = props.wrapperClassName, label = props.label, isSkeleton = props.isSkeleton, otherProps = __rest(props, ["id", "onChange", "checked", "labelClassName", "checkClassName", "wrapperClassName", "label", "isSkeleton"]);
    var readonly = !onChange;
    return (React__default['default'].createElement("div", { className: classnames(styles$g.wrapper, wrapperClassName) },
        React__default['default'].createElement("input", __assign({ className: styles$g.input, "aria-busy": isSkeleton, ref: ref, checked: checked, type: "checkbox", id: id, onChange: onChange, readOnly: readonly }, otherProps)),
        React__default['default'].createElement("label", { htmlFor: id, className: classnames(styles$g.label, labelClassName, (_a = {},
                _a[styles$g.readonly] = readonly,
                _a[styles$g.labelSkeleton] = isSkeleton,
                _a)) },
            React__default['default'].createElement(CheckIcon, { className: classnames(styles$g.checkIcon, checkClassName, (_b = {},
                    _b[skeletonStyles.skeleton] = isSkeleton,
                    _b[styles$g.checkSkeleton] = isSkeleton,
                    _b)) }),
            label && (React__default['default'].createElement("span", { className: classnames((_c = {},
                    _c[skeletonStyles.skeleton] = isSkeleton,
                    _c[styles$g.labelTextSkeleton] = isSkeleton,
                    _c)) }, label)))));
});

var styles$f = {"container":"ProgressBar_container___34uGx","progressBar":"ProgressBar_progressBar___3PmQ6"};

var ProgressBar = React__namespace.forwardRef(function ProgressBar(props, ref) {
    var className = props.className, progress = props.progress, color = props.color, otherProps = __rest(props, ["className", "progress", "color"]);
    var fracFilled = Math.min(1, Math.max(0, progress));
    return (React__namespace.createElement("div", __assign({ ref: ref, className: classnames(styles$f.container, className), style: { color: color } }, otherProps),
        React__namespace.createElement("div", { className: styles$f.progressBar, style: { width: fracFilled * 100 + "%" } })));
});

var styles$e = {"container":"ModalBody_container___2yvOs","small":"ModalBody_small___3upNe","medium":"ModalBody_medium___115Su","large":"ModalBody_large___3vGhg","headers":"ModalBody_headers___82vYg","divider":"ModalBody_divider___3PROc","content":"ModalBody_content___1wroa","scrolls":"ModalBody_scrolls___XESBd","withCta":"ModalBody_withCta___3sAAg","closeX":"ModalBody_closeX___3SIU1","header":"ModalBody_header___OC-8C","headerIcon":"ModalBody_headerIcon___XPPSs","subheader":"ModalBody_subheader___mjjxH","buttonsCtaSection":"ModalBody_buttonsCtaSection___1GEcS","centerAlign":"ModalBody_centerAlign___-cP6P","marginToPadding":"ModalBody_marginToPadding___1ZUia","checkboxButtonCtaSection":"ModalBody_checkboxButtonCtaSection___2aZLT","customCtaSection":"ModalBody_customCtaSection___-g3lv"};

var CtaSection = function (props) {
    var _a;
    var callToAction = props.callToAction;
    if (callToAction.type === "buttons") {
        var ctas = callToAction.buttons;
        var primaries = ctas.filter(function (c) { return c.variant === "primary"; });
        var secondaries = ctas.filter(function (c) { return c.variant === "secondary"; });
        var tertiaries = ctas.filter(function (c) { return c.variant === "tertiary"; });
        return (React__default['default'].createElement("div", { className: classnames(styles$e.buttonsCtaSection, (_a = {}, _a[styles$e.centerAlign] = callToAction.centerAlign, _a)) },
            tertiaries.map(function (_a, i) {
                var onClick = _a.onClick, label = _a.label, color = _a.color;
                return (React__default['default'].createElement("div", { key: i, className: textLinkStyles, onClick: onClick, style: { color: color } }, label));
            }),
            secondaries.map(function (_a, i) {
                var onClick = _a.onClick, label = _a.label, extraProps = __rest(_a, ["onClick", "label"]);
                return (React__default['default'].createElement(Button, __assign({ variant: "secondary", key: i, label: label, onClick: onClick }, extraProps)));
            }),
            primaries.map(function (_a, i) {
                var onClick = _a.onClick, label = _a.label, extraProps = __rest(_a, ["onClick", "label"]);
                return (React__default['default'].createElement(Button, __assign({ variant: "primary", key: i, label: label, onClick: onClick }, extraProps)));
            })));
    }
    else if (callToAction.type === "checkbox-button") {
        return (React__default['default'].createElement("div", { className: classnames(styles$e.checkboxButtonCtaSection, styles$e.marginToPadding) },
            React__default['default'].createElement(Checkbox, { id: "modal-cta", label: callToAction.checkboxLabel, checked: callToAction.isChecked, onChange: function (e) { return callToAction.setIsChecked(e.target.checked); } }),
            React__default['default'].createElement(Button, { label: callToAction.buttonLabel, disabled: callToAction.buttonDisabled, onClick: callToAction.onButtonClick })));
    }
    return null;
};

var ModalBody = React__default['default'].forwardRef(function ModalBody(props, ref) {
    var _a, _b;
    var title = props.title, subtitle = props.subtitle, size = props.size, onClose = props.onClose, callToAction = props.callToAction, includeHeaderDivider = props.includeHeaderDivider, headerIcon = props.headerIcon, headerIconColor = props.headerIconColor, centerAlign = props.centerAlign, className = props.className, children = props.children, otherProps = __rest(props, ["title", "subtitle", "size", "onClose", "callToAction", "includeHeaderDivider", "headerIcon", "headerIconColor", "centerAlign", "className", "children"]);
    var hasCta = !!callToAction;
    var showCloseX = !!onClose;
    var headerVariant = React.useMemo(function () {
        switch (size) {
            case "small":
                return "h3";
            case "medium":
                return "h2";
            case "large":
                return "h1";
        }
    }, [size]);
    var _c = useContentScrolls(), contentRef = _c.contentRef, contentScrolls = _c.contentScrolls;
    return (React__default['default'].createElement("div", __assign({ ref: ref, className: classnames(className, styles$e.container, styles$e[size], (_a = {},
            _a[styles$e.withCta] = hasCta,
            _a[styles$e.centerAlign] = centerAlign,
            _a)) }, otherProps),
        showCloseX && (React__default['default'].createElement(IconButton, { onClick: onClose, label: "Close", className: styles$e.closeX },
            React__default['default'].createElement(CloseIcon, { fillColor: "#bbc0e0" }))),
        React__default['default'].createElement("div", { className: styles$e.headers },
            headerIcon && React__default['default'].createElement(CircleIcon, { icon: headerIcon, className: styles$e.headerIcon, backgroundColor: headerIconColor }),
            React__default['default'].createElement("div", null,
                React__default['default'].createElement(Typography, { variant: headerVariant, className: styles$e.header }, title),
                subtitle && (React__default['default'].createElement(Typography, { variant: "h4", className: styles$e.subheader }, subtitle)))),
        includeHeaderDivider && React__default['default'].createElement("div", { className: styles$e.divider }),
        children && (React__default['default'].createElement("div", { ref: contentRef, className: classnames(styles$e.content, (_b = {},
                _b[styles$e.scrolls] = contentScrolls,
                _b)) }, children)),
        hasCta && callToAction && React__default['default'].createElement(CtaSection, { callToAction: callToAction })));
});

function _defineProperty$8(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

function ownKeys$7(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2$7(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$7(Object(source), true).forEach(function (key) {
        _defineProperty$8(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$7(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}

function _arrayWithHoles$7(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit$7(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;
  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }
  return _arr;
}

function _arrayLikeToArray$8(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}

function _unsupportedIterableToArray$8(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray$8(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$8(o, minLen);
}

function _nonIterableRest$7() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _slicedToArray$7(arr, i) {
  return _arrayWithHoles$7(arr) || _iterableToArrayLimit$7(arr, i) || _unsupportedIterableToArray$8(arr, i) || _nonIterableRest$7();
}

var TOOLTIP_OFFSET = 14;
var tooltipStyle = {
  pointerEvents: 'none',
  position: 'absolute',
  zIndex: 10,
  top: 0,
  left: 0
};

var translate = function translate(x, y) {
  return "translate(".concat(x, "px, ").concat(y, "px)");
};

var TooltipWrapper = React.memo(function (_ref) {
  var _animatedProps$transf;

  var position = _ref.position,
      anchor = _ref.anchor,
      children = _ref.children;
  var theme = useTheme();

  var _useMotionConfig = useMotionConfig(),
      animate = _useMotionConfig.animate,
      springConfig = _useMotionConfig.config;

  var _useMeasure = useMeasure(),
      _useMeasure2 = _slicedToArray$7(_useMeasure, 2),
      measureRef = _useMeasure2[0],
      bounds = _useMeasure2[1];

  var previousPosition = React.useRef(false);
  var to = undefined;
  var immediate = false;
  var hasDimension = bounds.width > 0 && bounds.height > 0;
  var x = Math.round(position[0]);
  var y = Math.round(position[1]);

  if (hasDimension) {
    if (anchor === 'top') {
      x -= bounds.width / 2;
      y -= bounds.height + TOOLTIP_OFFSET;
    } else if (anchor === 'right') {
      x += TOOLTIP_OFFSET;
      y -= bounds.height / 2;
    } else if (anchor === 'bottom') {
      x -= bounds.width / 2;
      y += TOOLTIP_OFFSET;
    } else if (anchor === 'left') {
      x -= bounds.width + TOOLTIP_OFFSET;
      y -= bounds.height / 2;
    } else if (anchor === 'center') {
      x -= bounds.width / 2;
      y -= bounds.height / 2;
    }

    to = {
      transform: translate(x, y)
    };

    if (!previousPosition.current) {
      immediate = true;
    }

    previousPosition.current = [x, y];
  }

  var animatedProps = useSpring({
    to: to,
    config: springConfig,
    immediate: !animate || immediate
  });

  var style = _objectSpread2$7(_objectSpread2$7(_objectSpread2$7({}, tooltipStyle), theme.tooltip), {}, {
    transform: (_animatedProps$transf = animatedProps.transform) !== null && _animatedProps$transf !== void 0 ? _animatedProps$transf : translate(x, y)
  });

  return jsxRuntime.jsx(animated.div, {
    ref: measureRef,
    style: style,
    children: children
  });
});
TooltipWrapper.displayName = 'TooltipWrapper';

var Chip = React.memo(function (_ref) {
  var _ref$size = _ref.size,
      size = _ref$size === void 0 ? 12 : _ref$size,
      color = _ref.color,
      _ref$style = _ref.style,
      style = _ref$style === void 0 ? {} : _ref$style;
  return jsxRuntime.jsx("span", {
    style: _objectSpread2$7({
      display: 'block',
      width: size,
      height: size,
      background: color
    }, style)
  });
});

var BasicTooltip = React.memo(function (_ref) {
  var id = _ref.id,
      _value = _ref.value,
      format = _ref.format,
      _ref$enableChip = _ref.enableChip,
      enableChip = _ref$enableChip === void 0 ? false : _ref$enableChip,
      color = _ref.color,
      renderContent = _ref.renderContent;
  var theme = useTheme();
  var formatValue = useValueFormatter(format);
  var content;

  if (typeof renderContent === 'function') {
    content = renderContent();
  } else {
    var value = _value;

    if (formatValue !== undefined && value !== undefined) {
      value = formatValue(value);
    }

    content = jsxRuntime.jsxs("div", {
      style: theme.tooltip.basic,
      children: [enableChip && jsxRuntime.jsx(Chip, {
        color: color,
        style: theme.tooltip.chip
      }), value !== undefined ? jsxRuntime.jsxs("span", {
        children: [id, ": ", jsxRuntime.jsx("strong", {
          children: "".concat(value)
        })]
      }) : id]
    });
  }

  return jsxRuntime.jsx("div", {
    style: theme.tooltip.container,
    children: content
  });
});

var tableStyle = {
  width: '100%',
  borderCollapse: 'collapse'
};
var TableTooltip = React.memo(function (_ref) {
  var title = _ref.title,
      _ref$rows = _ref.rows,
      rows = _ref$rows === void 0 ? [] : _ref$rows,
      renderContent = _ref.renderContent;
  var theme = useTheme();
  if (!rows.length) return null;
  var content;

  if (typeof renderContent === 'function') {
    content = renderContent();
  } else {
    content = jsxRuntime.jsxs("div", {
      children: [title && title, jsxRuntime.jsx("table", {
        style: _objectSpread2$7(_objectSpread2$7({}, tableStyle), theme.tooltip.table),
        children: jsxRuntime.jsx("tbody", {
          children: rows.map(function (row, i) {
            return jsxRuntime.jsx("tr", {
              children: row.map(function (column, j) {
                return jsxRuntime.jsx("td", {
                  style: theme.tooltip.tableCell,
                  children: column
                }, j);
              })
            }, i);
          })
        })
      })]
    });
  }

  return jsxRuntime.jsx("div", {
    style: theme.tooltip.container,
    children: content
  });
});
TableTooltip.displayName = 'TableTooltip';

var CrosshairLine = React.memo(function (_ref) {
  var x0 = _ref.x0,
      x1 = _ref.x1,
      y0 = _ref.y0,
      y1 = _ref.y1;
  var theme = useTheme();

  var _useMotionConfig = useMotionConfig(),
      animate = _useMotionConfig.animate,
      springConfig = _useMotionConfig.config;

  var style = React.useMemo(function () {
    return _objectSpread2$7(_objectSpread2$7({}, theme.crosshair.line), {}, {
      pointerEvents: 'none'
    });
  }, [theme.crosshair.line]);
  var animatedProps = useSpring({
    x1: x0,
    x2: x1,
    y1: y0,
    y2: y1,
    config: springConfig,
    immediate: !animate
  });
  return jsxRuntime.jsx(animated.line, _objectSpread2$7(_objectSpread2$7({}, animatedProps), {}, {
    fill: "none",
    style: style
  }));
});
CrosshairLine.displayName = 'CrosshairLine';

var Crosshair = React.memo(function (_ref) {
  var width = _ref.width,
      height = _ref.height,
      type = _ref.type,
      x = _ref.x,
      y = _ref.y;
  var xLine;
  var yLine;

  if (type === 'cross') {
    xLine = {
      x0: x,
      x1: x,
      y0: 0,
      y1: height
    };
    yLine = {
      x0: 0,
      x1: width,
      y0: y,
      y1: y
    };
  } else if (type === 'top-left') {
    xLine = {
      x0: x,
      x1: x,
      y0: 0,
      y1: y
    };
    yLine = {
      x0: 0,
      x1: x,
      y0: y,
      y1: y
    };
  } else if (type === 'top') {
    xLine = {
      x0: x,
      x1: x,
      y0: 0,
      y1: y
    };
  } else if (type === 'top-right') {
    xLine = {
      x0: x,
      x1: x,
      y0: 0,
      y1: y
    };
    yLine = {
      x0: x,
      x1: width,
      y0: y,
      y1: y
    };
  } else if (type === 'right') {
    yLine = {
      x0: x,
      x1: width,
      y0: y,
      y1: y
    };
  } else if (type === 'bottom-right') {
    xLine = {
      x0: x,
      x1: x,
      y0: y,
      y1: height
    };
    yLine = {
      x0: x,
      x1: width,
      y0: y,
      y1: y
    };
  } else if (type === 'bottom') {
    xLine = {
      x0: x,
      x1: x,
      y0: y,
      y1: height
    };
  } else if (type === 'bottom-left') {
    xLine = {
      x0: x,
      x1: x,
      y0: y,
      y1: height
    };
    yLine = {
      x0: 0,
      x1: x,
      y0: y,
      y1: y
    };
  } else if (type === 'left') {
    yLine = {
      x0: 0,
      x1: x,
      y0: y,
      y1: y
    };
  } else if (type === 'x') {
    xLine = {
      x0: x,
      x1: x,
      y0: 0,
      y1: height
    };
  } else if (type === 'y') {
    yLine = {
      x0: 0,
      x1: width,
      y0: y,
      y1: y
    };
  }

  return jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [xLine && jsxRuntime.jsx(CrosshairLine, {
      x0: xLine.x0,
      x1: xLine.x1,
      y0: xLine.y0,
      y1: xLine.y1
    }), yLine && jsxRuntime.jsx(CrosshairLine, {
      x0: yLine.x0,
      x1: yLine.x1,
      y0: yLine.y0,
      y1: yLine.y1
    })]
  });
});
Crosshair.displayName = 'Crosshair';

var defaultActions = {
  showTooltipAt: function showTooltipAt() {},
  showTooltipFromEvent: function showTooltipFromEvent() {},
  hideTooltip: function hideTooltip() {}
};
var TooltipActionsContext = React.createContext(defaultActions);
var hiddenTooltipState = {
  isVisible: false,
  position: [null, null],
  content: null,
  anchor: null
};
var TooltipStateContext = React.createContext(hiddenTooltipState);

var useTooltipHandlers = function useTooltipHandlers(container) {
  var _useState = React.useState(hiddenTooltipState),
      _useState2 = _slicedToArray$7(_useState, 2),
      state = _useState2[0],
      setState = _useState2[1];

  var showTooltipAt = React.useCallback(function (content, _ref) {
    var _ref2 = _slicedToArray$7(_ref, 2),
        x = _ref2[0],
        y = _ref2[1];

    var anchor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'top';
    setState({
      isVisible: true,
      position: [x, y],
      anchor: anchor,
      content: content
    });
  }, [setState]);
  var showTooltipFromEvent = React.useCallback(function (content, event) {
    var anchor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'top';
    var bounds = container.current.getBoundingClientRect();
    var x = event.clientX - bounds.left;
    var y = event.clientY - bounds.top;

    if (anchor === 'left' || anchor === 'right') {
      if (x < bounds.width / 2) anchor = 'right';else anchor = 'left';
    }

    setState({
      isVisible: true,
      position: [x, y],
      anchor: anchor,
      content: content
    });
  }, [container, setState]);
  var hideTooltip = React.useCallback(function () {
    setState(hiddenTooltipState);
  }, [setState]);
  var actions = React.useMemo(function () {
    return {
      showTooltipAt: showTooltipAt,
      showTooltipFromEvent: showTooltipFromEvent,
      hideTooltip: hideTooltip
    };
  }, [showTooltipAt, showTooltipFromEvent, hideTooltip]);
  return {
    actions: actions,
    state: state
  };
};
var useTooltip = function useTooltip() {
  var context = React.useContext(TooltipActionsContext);

  if (context === undefined) {
    throw new Error('useTooltip must be used within a TooltipProvider');
  }

  return context;
};
var useTooltipState = function useTooltipState() {
  var context = React.useContext(TooltipStateContext);

  if (context === undefined) {
    throw new Error('useTooltipState must be used within a TooltipProvider');
  }

  return context;
};

var isVisibleTooltipState = function isVisibleTooltipState(state) {
  return state.isVisible === true;
};
var Tooltip$1 = function Tooltip() {
  var state = useTooltipState();

  if (!isVisibleTooltipState(state)) {
    return null;
  }

  return jsxRuntime.jsx(TooltipWrapper, {
    position: state.position,
    anchor: state.anchor,
    children: state.content
  });
};

var TooltipProvider = function TooltipProvider(_ref) {
  var container = _ref.container,
      children = _ref.children;

  var _useTooltipHandlers = useTooltipHandlers(container),
      actions = _useTooltipHandlers.actions,
      state = _useTooltipHandlers.state;

  return jsxRuntime.jsx(TooltipActionsContext.Provider, {
    value: actions,
    children: jsxRuntime.jsx(TooltipStateContext.Provider, {
      value: state,
      children: children
    })
  });
};

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

var _listCacheClear = listCacheClear;

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

var eq_1 = eq;

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq_1(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

var _assocIndexOf = assocIndexOf;

/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = _assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

var _listCacheDelete = listCacheDelete;

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = _assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

var _listCacheGet = listCacheGet;

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return _assocIndexOf(this.__data__, key) > -1;
}

var _listCacheHas = listCacheHas;

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = _assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

var _listCacheSet = listCacheSet;

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = _listCacheClear;
ListCache.prototype['delete'] = _listCacheDelete;
ListCache.prototype.get = _listCacheGet;
ListCache.prototype.has = _listCacheHas;
ListCache.prototype.set = _listCacheSet;

var _ListCache = ListCache;

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new _ListCache;
  this.size = 0;
}

var _stackClear = stackClear;

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

var _stackDelete = stackDelete;

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

var _stackGet = stackGet;

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

var _stackHas = stackHas;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;

var _freeGlobal = freeGlobal;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root$1 = _freeGlobal || freeSelf || Function('return this')();

var _root = root$1;

/** Built-in value references. */
var Symbol$1 = _root.Symbol;

var _Symbol = Symbol$1;

/** Used for built-in method references. */
var objectProto$e = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$b = objectProto$e.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString$1 = objectProto$e.toString;

/** Built-in value references. */
var symToStringTag$1 = _Symbol ? _Symbol.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty$b.call(value, symToStringTag$1),
      tag = value[symToStringTag$1];

  try {
    value[symToStringTag$1] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString$1.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag$1] = tag;
    } else {
      delete value[symToStringTag$1];
    }
  }
  return result;
}

var _getRawTag = getRawTag;

/** Used for built-in method references. */
var objectProto$d = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto$d.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

var _objectToString = objectToString;

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? _getRawTag(value)
    : _objectToString(value);
}

var _baseGetTag = baseGetTag;

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject$1(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

var isObject_1 = isObject$1;

/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag$1 = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!isObject_1(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = _baseGetTag(value);
  return tag == funcTag$1 || tag == genTag || tag == asyncTag || tag == proxyTag;
}

var isFunction_1 = isFunction;

/** Used to detect overreaching core-js shims. */
var coreJsData = _root['__core-js_shared__'];

var _coreJsData = coreJsData;

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(_coreJsData && _coreJsData.keys && _coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

var _isMasked = isMasked;

/** Used for built-in method references. */
var funcProto$2 = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString$2 = funcProto$2.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString$2.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

var _toSource = toSource;

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var funcProto$1 = Function.prototype,
    objectProto$c = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString$1 = funcProto$1.toString;

/** Used to check objects for own properties. */
var hasOwnProperty$a = objectProto$c.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString$1.call(hasOwnProperty$a).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject_1(value) || _isMasked(value)) {
    return false;
  }
  var pattern = isFunction_1(value) ? reIsNative : reIsHostCtor;
  return pattern.test(_toSource(value));
}

var _baseIsNative = baseIsNative;

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

var _getValue = getValue;

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = _getValue(object, key);
  return _baseIsNative(value) ? value : undefined;
}

var _getNative = getNative;

/* Built-in method references that are verified to be native. */
var Map$1 = _getNative(_root, 'Map');

var _Map = Map$1;

/* Built-in method references that are verified to be native. */
var nativeCreate = _getNative(Object, 'create');

var _nativeCreate = nativeCreate;

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = _nativeCreate ? _nativeCreate(null) : {};
  this.size = 0;
}

var _hashClear = hashClear;

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

var _hashDelete = hashDelete;

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED$2 = '__lodash_hash_undefined__';

/** Used for built-in method references. */
var objectProto$b = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$9 = objectProto$b.hasOwnProperty;

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (_nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED$2 ? undefined : result;
  }
  return hasOwnProperty$9.call(data, key) ? data[key] : undefined;
}

var _hashGet = hashGet;

/** Used for built-in method references. */
var objectProto$a = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$8 = objectProto$a.hasOwnProperty;

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return _nativeCreate ? (data[key] !== undefined) : hasOwnProperty$8.call(data, key);
}

var _hashHas = hashHas;

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED$1 = '__lodash_hash_undefined__';

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (_nativeCreate && value === undefined) ? HASH_UNDEFINED$1 : value;
  return this;
}

var _hashSet = hashSet;

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `Hash`.
Hash.prototype.clear = _hashClear;
Hash.prototype['delete'] = _hashDelete;
Hash.prototype.get = _hashGet;
Hash.prototype.has = _hashHas;
Hash.prototype.set = _hashSet;

var _Hash = Hash;

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new _Hash,
    'map': new (_Map || _ListCache),
    'string': new _Hash
  };
}

var _mapCacheClear = mapCacheClear;

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

var _isKeyable = isKeyable;

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return _isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

var _getMapData = getMapData;

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = _getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

var _mapCacheDelete = mapCacheDelete;

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return _getMapData(this, key).get(key);
}

var _mapCacheGet = mapCacheGet;

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return _getMapData(this, key).has(key);
}

var _mapCacheHas = mapCacheHas;

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = _getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

var _mapCacheSet = mapCacheSet;

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `MapCache`.
MapCache.prototype.clear = _mapCacheClear;
MapCache.prototype['delete'] = _mapCacheDelete;
MapCache.prototype.get = _mapCacheGet;
MapCache.prototype.has = _mapCacheHas;
MapCache.prototype.set = _mapCacheSet;

var _MapCache = MapCache;

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE$2 = 200;

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof _ListCache) {
    var pairs = data.__data__;
    if (!_Map || (pairs.length < LARGE_ARRAY_SIZE$2 - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new _MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

var _stackSet = stackSet;

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new _ListCache(entries);
  this.size = data.size;
}

// Add methods to `Stack`.
Stack.prototype.clear = _stackClear;
Stack.prototype['delete'] = _stackDelete;
Stack.prototype.get = _stackGet;
Stack.prototype.has = _stackHas;
Stack.prototype.set = _stackSet;

var _Stack = Stack;

var defineProperty = (function() {
  try {
    var func = _getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

var _defineProperty$7 = defineProperty;

/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
  if (key == '__proto__' && _defineProperty$7) {
    _defineProperty$7(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

var _baseAssignValue = baseAssignValue;

/**
 * This function is like `assignValue` except that it doesn't assign
 * `undefined` values.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignMergeValue(object, key, value) {
  if ((value !== undefined && !eq_1(object[key], value)) ||
      (value === undefined && !(key in object))) {
    _baseAssignValue(object, key, value);
  }
}

var _assignMergeValue = assignMergeValue;

/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

var _createBaseFor = createBaseFor;

/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = _createBaseFor();

var _baseFor = baseFor;

var _cloneBuffer = createCommonjsModule(function (module, exports) {
/** Detect free variable `exports`. */
var freeExports = exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && 'object' == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? _root.Buffer : undefined,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

  buffer.copy(result);
  return result;
}

module.exports = cloneBuffer;
});

/** Built-in value references. */
var Uint8Array = _root.Uint8Array;

var _Uint8Array = Uint8Array;

/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new _Uint8Array(result).set(new _Uint8Array(arrayBuffer));
  return result;
}

var _cloneArrayBuffer = cloneArrayBuffer;

/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? _cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

var _cloneTypedArray = cloneTypedArray;

/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

var _copyArray = copyArray;

/** Built-in value references. */
var objectCreate = Object.create;

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */
var baseCreate = (function() {
  function object() {}
  return function(proto) {
    if (!isObject_1(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object;
    object.prototype = undefined;
    return result;
  };
}());

var _baseCreate = baseCreate;

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

var _overArg = overArg;

/** Built-in value references. */
var getPrototype = _overArg(Object.getPrototypeOf, Object);

var _getPrototype = getPrototype;

/** Used for built-in method references. */
var objectProto$9 = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto$9;

  return value === proto;
}

var _isPrototype = isPrototype;

/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
  return (typeof object.constructor == 'function' && !_isPrototype(object))
    ? _baseCreate(_getPrototype(object))
    : {};
}

var _initCloneObject = initCloneObject;

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

var isObjectLike_1 = isObjectLike;

/** `Object#toString` result references. */
var argsTag$2 = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return isObjectLike_1(value) && _baseGetTag(value) == argsTag$2;
}

var _baseIsArguments = baseIsArguments;

/** Used for built-in method references. */
var objectProto$8 = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$7 = objectProto$8.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable$1 = objectProto$8.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = _baseIsArguments(function() { return arguments; }()) ? _baseIsArguments : function(value) {
  return isObjectLike_1(value) && hasOwnProperty$7.call(value, 'callee') &&
    !propertyIsEnumerable$1.call(value, 'callee');
};

var isArguments_1 = isArguments;

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray$1 = Array.isArray;

var isArray_1 = isArray$1;

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER$1 = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER$1;
}

var isLength_1 = isLength;

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength_1(value.length) && !isFunction_1(value);
}

var isArrayLike_1 = isArrayLike;

/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return isObjectLike_1(value) && isArrayLike_1(value);
}

var isArrayLikeObject_1 = isArrayLikeObject;

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

var stubFalse_1 = stubFalse;

var isBuffer_1 = createCommonjsModule(function (module, exports) {
/** Detect free variable `exports`. */
var freeExports = exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && 'object' == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? _root.Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse_1;

module.exports = isBuffer;
});

/** `Object#toString` result references. */
var objectTag$3 = '[object Object]';

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto$7 = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty$6 = objectProto$7.hasOwnProperty;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!isObjectLike_1(value) || _baseGetTag(value) != objectTag$3) {
    return false;
  }
  var proto = _getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty$6.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
    funcToString.call(Ctor) == objectCtorString;
}

var isPlainObject_1 = isPlainObject;

/** `Object#toString` result references. */
var argsTag$1 = '[object Arguments]',
    arrayTag$1 = '[object Array]',
    boolTag$1 = '[object Boolean]',
    dateTag$2 = '[object Date]',
    errorTag$1 = '[object Error]',
    funcTag = '[object Function]',
    mapTag$2 = '[object Map]',
    numberTag$1 = '[object Number]',
    objectTag$2 = '[object Object]',
    regexpTag$1 = '[object RegExp]',
    setTag$2 = '[object Set]',
    stringTag$2 = '[object String]',
    weakMapTag$1 = '[object WeakMap]';

var arrayBufferTag$1 = '[object ArrayBuffer]',
    dataViewTag$2 = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag$1] = typedArrayTags[arrayTag$1] =
typedArrayTags[arrayBufferTag$1] = typedArrayTags[boolTag$1] =
typedArrayTags[dataViewTag$2] = typedArrayTags[dateTag$2] =
typedArrayTags[errorTag$1] = typedArrayTags[funcTag] =
typedArrayTags[mapTag$2] = typedArrayTags[numberTag$1] =
typedArrayTags[objectTag$2] = typedArrayTags[regexpTag$1] =
typedArrayTags[setTag$2] = typedArrayTags[stringTag$2] =
typedArrayTags[weakMapTag$1] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike_1(value) &&
    isLength_1(value.length) && !!typedArrayTags[_baseGetTag(value)];
}

var _baseIsTypedArray = baseIsTypedArray;

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

var _baseUnary = baseUnary;

var _nodeUtil = createCommonjsModule(function (module, exports) {
/** Detect free variable `exports`. */
var freeExports = exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && 'object' == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && _freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

module.exports = nodeUtil;
});

/* Node.js helper references. */
var nodeIsTypedArray = _nodeUtil && _nodeUtil.isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? _baseUnary(nodeIsTypedArray) : _baseIsTypedArray;

var isTypedArray_1 = isTypedArray;

/**
 * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function safeGet(object, key) {
  if (key === 'constructor' && typeof object[key] === 'function') {
    return;
  }

  if (key == '__proto__') {
    return;
  }

  return object[key];
}

var _safeGet = safeGet;

/** Used for built-in method references. */
var objectProto$6 = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$5 = objectProto$6.hasOwnProperty;

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty$5.call(object, key) && eq_1(objValue, value)) ||
      (value === undefined && !(key in object))) {
    _baseAssignValue(object, key, value);
  }
}

var _assignValue = assignValue;

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      _baseAssignValue(object, key, newValue);
    } else {
      _assignValue(object, key, newValue);
    }
  }
  return object;
}

var _copyObject = copyObject;

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

var _baseTimes = baseTimes;

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

var _isIndex = isIndex;

/** Used for built-in method references. */
var objectProto$5 = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$4 = objectProto$5.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = isArray_1(value),
      isArg = !isArr && isArguments_1(value),
      isBuff = !isArr && !isArg && isBuffer_1(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray_1(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? _baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty$4.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           _isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

var _arrayLikeKeys = arrayLikeKeys;

/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

var _nativeKeysIn = nativeKeysIn;

/** Used for built-in method references. */
var objectProto$4 = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$3 = objectProto$4.hasOwnProperty;

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
  if (!isObject_1(object)) {
    return _nativeKeysIn(object);
  }
  var isProto = _isPrototype(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty$3.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

var _baseKeysIn = baseKeysIn;

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  return isArrayLike_1(object) ? _arrayLikeKeys(object, true) : _baseKeysIn(object);
}

var keysIn_1 = keysIn;

/**
 * Converts `value` to a plain object flattening inherited enumerable string
 * keyed properties of `value` to own properties of the plain object.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {Object} Returns the converted plain object.
 * @example
 *
 * function Foo() {
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.assign({ 'a': 1 }, new Foo);
 * // => { 'a': 1, 'b': 2 }
 *
 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
 * // => { 'a': 1, 'b': 2, 'c': 3 }
 */
function toPlainObject(value) {
  return _copyObject(value, keysIn_1(value));
}

var toPlainObject_1 = toPlainObject;

/**
 * A specialized version of `baseMerge` for arrays and objects which performs
 * deep merges and tracks traversed objects enabling objects with circular
 * references to be merged.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {string} key The key of the value to merge.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} mergeFunc The function to merge values.
 * @param {Function} [customizer] The function to customize assigned values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
  var objValue = _safeGet(object, key),
      srcValue = _safeGet(source, key),
      stacked = stack.get(srcValue);

  if (stacked) {
    _assignMergeValue(object, key, stacked);
    return;
  }
  var newValue = customizer
    ? customizer(objValue, srcValue, (key + ''), object, source, stack)
    : undefined;

  var isCommon = newValue === undefined;

  if (isCommon) {
    var isArr = isArray_1(srcValue),
        isBuff = !isArr && isBuffer_1(srcValue),
        isTyped = !isArr && !isBuff && isTypedArray_1(srcValue);

    newValue = srcValue;
    if (isArr || isBuff || isTyped) {
      if (isArray_1(objValue)) {
        newValue = objValue;
      }
      else if (isArrayLikeObject_1(objValue)) {
        newValue = _copyArray(objValue);
      }
      else if (isBuff) {
        isCommon = false;
        newValue = _cloneBuffer(srcValue, true);
      }
      else if (isTyped) {
        isCommon = false;
        newValue = _cloneTypedArray(srcValue, true);
      }
      else {
        newValue = [];
      }
    }
    else if (isPlainObject_1(srcValue) || isArguments_1(srcValue)) {
      newValue = objValue;
      if (isArguments_1(objValue)) {
        newValue = toPlainObject_1(objValue);
      }
      else if (!isObject_1(objValue) || isFunction_1(objValue)) {
        newValue = _initCloneObject(srcValue);
      }
    }
    else {
      isCommon = false;
    }
  }
  if (isCommon) {
    // Recursively merge objects and arrays (susceptible to call stack limits).
    stack.set(srcValue, newValue);
    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
    stack['delete'](srcValue);
  }
  _assignMergeValue(object, key, newValue);
}

var _baseMergeDeep = baseMergeDeep;

/**
 * The base implementation of `_.merge` without support for multiple sources.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} [customizer] The function to customize merged values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMerge(object, source, srcIndex, customizer, stack) {
  if (object === source) {
    return;
  }
  _baseFor(source, function(srcValue, key) {
    stack || (stack = new _Stack);
    if (isObject_1(srcValue)) {
      _baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
    }
    else {
      var newValue = customizer
        ? customizer(_safeGet(object, key), srcValue, (key + ''), object, source, stack)
        : undefined;

      if (newValue === undefined) {
        newValue = srcValue;
      }
      _assignMergeValue(object, key, newValue);
    }
  }, keysIn_1);
}

var _baseMerge = baseMerge;

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity$4(value) {
  return value;
}

var identity_1 = identity$4;

/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

var _apply = apply;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return _apply(func, this, otherArgs);
  };
}

var _overRest = overRest;

/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant$2(value) {
  return function() {
    return value;
  };
}

var constant_1 = constant$2;

/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !_defineProperty$7 ? identity_1 : function(func, string) {
  return _defineProperty$7(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': constant_1(string),
    'writable': true
  });
};

var _baseSetToString = baseSetToString;

/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeNow = Date.now;

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function() {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

var _shortOut = shortOut;

/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString = _shortOut(_baseSetToString);

var _setToString = setToString;

/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  return _setToString(_overRest(func, start, identity_1), func + '');
}

var _baseRest = baseRest;

/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!isObject_1(object)) {
    return false;
  }
  var type = typeof index;
  if (type == 'number'
        ? (isArrayLike_1(object) && _isIndex(index, object.length))
        : (type == 'string' && index in object)
      ) {
    return eq_1(object[index], value);
  }
  return false;
}

var _isIterateeCall = isIterateeCall;

/**
 * Creates a function like `_.assign`.
 *
 * @private
 * @param {Function} assigner The function to assign values.
 * @returns {Function} Returns the new assigner function.
 */
function createAssigner(assigner) {
  return _baseRest(function(object, sources) {
    var index = -1,
        length = sources.length,
        customizer = length > 1 ? sources[length - 1] : undefined,
        guard = length > 2 ? sources[2] : undefined;

    customizer = (assigner.length > 3 && typeof customizer == 'function')
      ? (length--, customizer)
      : undefined;

    if (guard && _isIterateeCall(sources[0], sources[1], guard)) {
      customizer = length < 3 ? undefined : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, index, customizer);
      }
    }
    return object;
  });
}

var _createAssigner = createAssigner;

/**
 * This method is like `_.assign` except that it recursively merges own and
 * inherited enumerable string keyed properties of source objects into the
 * destination object. Source properties that resolve to `undefined` are
 * skipped if a destination value exists. Array and plain object properties
 * are merged recursively. Other objects and value types are overridden by
 * assignment. Source objects are applied from left to right. Subsequent
 * sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 0.5.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = {
 *   'a': [{ 'b': 2 }, { 'd': 4 }]
 * };
 *
 * var other = {
 *   'a': [{ 'c': 3 }, { 'e': 5 }]
 * };
 *
 * _.merge(object, other);
 * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
 */
var merge$1 = _createAssigner(function(object, source, srcIndex) {
  _baseMerge(object, source, srcIndex);
});

var merge_1 = merge$1;

/** `Object#toString` result references. */
var symbolTag$1 = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike_1(value) && _baseGetTag(value) == symbolTag$1);
}

var isSymbol_1 = isSymbol;

/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if (isArray_1(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || isSymbol_1(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

var _isKey = isKey;

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || _MapCache);
  return memoized;
}

// Expose `MapCache`.
memoize.Cache = _MapCache;

var memoize_1 = memoize;

/** Used as the maximum memoize cache size. */
var MAX_MEMOIZE_SIZE = 500;

/**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */
function memoizeCapped(func) {
  var result = memoize_1(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });

  var cache = result.cache;
  return result;
}

var _memoizeCapped = memoizeCapped;

/** Used to match property names within property paths. */
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = _memoizeCapped(function(string) {
  var result = [];
  if (string.charCodeAt(0) === 46 /* . */) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

var _stringToPath = stringToPath;

/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

var _arrayMap = arrayMap;

/** Used as references for various `Number` constants. */
var INFINITY$2 = 1 / 0;

/** Used to convert symbols to primitives and strings. */
var symbolProto$1 = _Symbol ? _Symbol.prototype : undefined,
    symbolToString = symbolProto$1 ? symbolProto$1.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isArray_1(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return _arrayMap(value, baseToString) + '';
  }
  if (isSymbol_1(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY$2) ? '-0' : result;
}

var _baseToString = baseToString;

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : _baseToString(value);
}

var toString_1 = toString;

/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value, object) {
  if (isArray_1(value)) {
    return value;
  }
  return _isKey(value, object) ? [value] : _stringToPath(toString_1(value));
}

var _castPath = castPath;

/** Used as references for various `Number` constants. */
var INFINITY$1 = 1 / 0;

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || isSymbol_1(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY$1) ? '-0' : result;
}

var _toKey = toKey;

/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = _castPath(path, object);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[_toKey(path[index++])];
  }
  return (index && index == length) ? object : undefined;
}

var _baseGet = baseGet;

/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get(object, path, defaultValue) {
  var result = object == null ? undefined : _baseGet(object, path);
  return result === undefined ? defaultValue : result;
}

var get_1 = get;

/**
 * The base implementation of `_.set`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {*} value The value to set.
 * @param {Function} [customizer] The function to customize path creation.
 * @returns {Object} Returns `object`.
 */
function baseSet(object, path, value, customizer) {
  if (!isObject_1(object)) {
    return object;
  }
  path = _castPath(path, object);

  var index = -1,
      length = path.length,
      lastIndex = length - 1,
      nested = object;

  while (nested != null && ++index < length) {
    var key = _toKey(path[index]),
        newValue = value;

    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {
      return object;
    }

    if (index != lastIndex) {
      var objValue = nested[key];
      newValue = customizer ? customizer(objValue, key, nested) : undefined;
      if (newValue === undefined) {
        newValue = isObject_1(objValue)
          ? objValue
          : (_isIndex(path[index + 1]) ? [] : {});
      }
    }
    _assignValue(nested, key, newValue);
    nested = nested[key];
  }
  return object;
}

var _baseSet = baseSet;

/**
 * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
 * it's created. Arrays are created for missing index properties while objects
 * are created for all other missing properties. Use `_.setWith` to customize
 * `path` creation.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.set(object, 'a[0].b.c', 4);
 * console.log(object.a[0].b.c);
 * // => 4
 *
 * _.set(object, ['x', '0', 'y', 'z'], 5);
 * console.log(object.x[0].y.z);
 * // => 5
 */
function set(object, path, value) {
  return object == null ? object : _baseSet(object, path, value);
}

var set_1 = set;

function define(constructor, factory, prototype) {
  constructor.prototype = factory.prototype = prototype;
  prototype.constructor = constructor;
}

function extend(parent, definition) {
  var prototype = Object.create(parent.prototype);
  for (var key in definition) prototype[key] = definition[key];
  return prototype;
}

function Color() {}

var darker = 0.7;
var brighter = 1 / darker;

var reI = "\\s*([+-]?\\d+)\\s*",
    reN = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",
    reP = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
    reHex = /^#([0-9a-f]{3,8})$/,
    reRgbInteger = new RegExp("^rgb\\(" + [reI, reI, reI] + "\\)$"),
    reRgbPercent = new RegExp("^rgb\\(" + [reP, reP, reP] + "\\)$"),
    reRgbaInteger = new RegExp("^rgba\\(" + [reI, reI, reI, reN] + "\\)$"),
    reRgbaPercent = new RegExp("^rgba\\(" + [reP, reP, reP, reN] + "\\)$"),
    reHslPercent = new RegExp("^hsl\\(" + [reN, reP, reP] + "\\)$"),
    reHslaPercent = new RegExp("^hsla\\(" + [reN, reP, reP, reN] + "\\)$");

var named = {
  aliceblue: 0xf0f8ff,
  antiquewhite: 0xfaebd7,
  aqua: 0x00ffff,
  aquamarine: 0x7fffd4,
  azure: 0xf0ffff,
  beige: 0xf5f5dc,
  bisque: 0xffe4c4,
  black: 0x000000,
  blanchedalmond: 0xffebcd,
  blue: 0x0000ff,
  blueviolet: 0x8a2be2,
  brown: 0xa52a2a,
  burlywood: 0xdeb887,
  cadetblue: 0x5f9ea0,
  chartreuse: 0x7fff00,
  chocolate: 0xd2691e,
  coral: 0xff7f50,
  cornflowerblue: 0x6495ed,
  cornsilk: 0xfff8dc,
  crimson: 0xdc143c,
  cyan: 0x00ffff,
  darkblue: 0x00008b,
  darkcyan: 0x008b8b,
  darkgoldenrod: 0xb8860b,
  darkgray: 0xa9a9a9,
  darkgreen: 0x006400,
  darkgrey: 0xa9a9a9,
  darkkhaki: 0xbdb76b,
  darkmagenta: 0x8b008b,
  darkolivegreen: 0x556b2f,
  darkorange: 0xff8c00,
  darkorchid: 0x9932cc,
  darkred: 0x8b0000,
  darksalmon: 0xe9967a,
  darkseagreen: 0x8fbc8f,
  darkslateblue: 0x483d8b,
  darkslategray: 0x2f4f4f,
  darkslategrey: 0x2f4f4f,
  darkturquoise: 0x00ced1,
  darkviolet: 0x9400d3,
  deeppink: 0xff1493,
  deepskyblue: 0x00bfff,
  dimgray: 0x696969,
  dimgrey: 0x696969,
  dodgerblue: 0x1e90ff,
  firebrick: 0xb22222,
  floralwhite: 0xfffaf0,
  forestgreen: 0x228b22,
  fuchsia: 0xff00ff,
  gainsboro: 0xdcdcdc,
  ghostwhite: 0xf8f8ff,
  gold: 0xffd700,
  goldenrod: 0xdaa520,
  gray: 0x808080,
  green: 0x008000,
  greenyellow: 0xadff2f,
  grey: 0x808080,
  honeydew: 0xf0fff0,
  hotpink: 0xff69b4,
  indianred: 0xcd5c5c,
  indigo: 0x4b0082,
  ivory: 0xfffff0,
  khaki: 0xf0e68c,
  lavender: 0xe6e6fa,
  lavenderblush: 0xfff0f5,
  lawngreen: 0x7cfc00,
  lemonchiffon: 0xfffacd,
  lightblue: 0xadd8e6,
  lightcoral: 0xf08080,
  lightcyan: 0xe0ffff,
  lightgoldenrodyellow: 0xfafad2,
  lightgray: 0xd3d3d3,
  lightgreen: 0x90ee90,
  lightgrey: 0xd3d3d3,
  lightpink: 0xffb6c1,
  lightsalmon: 0xffa07a,
  lightseagreen: 0x20b2aa,
  lightskyblue: 0x87cefa,
  lightslategray: 0x778899,
  lightslategrey: 0x778899,
  lightsteelblue: 0xb0c4de,
  lightyellow: 0xffffe0,
  lime: 0x00ff00,
  limegreen: 0x32cd32,
  linen: 0xfaf0e6,
  magenta: 0xff00ff,
  maroon: 0x800000,
  mediumaquamarine: 0x66cdaa,
  mediumblue: 0x0000cd,
  mediumorchid: 0xba55d3,
  mediumpurple: 0x9370db,
  mediumseagreen: 0x3cb371,
  mediumslateblue: 0x7b68ee,
  mediumspringgreen: 0x00fa9a,
  mediumturquoise: 0x48d1cc,
  mediumvioletred: 0xc71585,
  midnightblue: 0x191970,
  mintcream: 0xf5fffa,
  mistyrose: 0xffe4e1,
  moccasin: 0xffe4b5,
  navajowhite: 0xffdead,
  navy: 0x000080,
  oldlace: 0xfdf5e6,
  olive: 0x808000,
  olivedrab: 0x6b8e23,
  orange: 0xffa500,
  orangered: 0xff4500,
  orchid: 0xda70d6,
  palegoldenrod: 0xeee8aa,
  palegreen: 0x98fb98,
  paleturquoise: 0xafeeee,
  palevioletred: 0xdb7093,
  papayawhip: 0xffefd5,
  peachpuff: 0xffdab9,
  peru: 0xcd853f,
  pink: 0xffc0cb,
  plum: 0xdda0dd,
  powderblue: 0xb0e0e6,
  purple: 0x800080,
  rebeccapurple: 0x663399,
  red: 0xff0000,
  rosybrown: 0xbc8f8f,
  royalblue: 0x4169e1,
  saddlebrown: 0x8b4513,
  salmon: 0xfa8072,
  sandybrown: 0xf4a460,
  seagreen: 0x2e8b57,
  seashell: 0xfff5ee,
  sienna: 0xa0522d,
  silver: 0xc0c0c0,
  skyblue: 0x87ceeb,
  slateblue: 0x6a5acd,
  slategray: 0x708090,
  slategrey: 0x708090,
  snow: 0xfffafa,
  springgreen: 0x00ff7f,
  steelblue: 0x4682b4,
  tan: 0xd2b48c,
  teal: 0x008080,
  thistle: 0xd8bfd8,
  tomato: 0xff6347,
  turquoise: 0x40e0d0,
  violet: 0xee82ee,
  wheat: 0xf5deb3,
  white: 0xffffff,
  whitesmoke: 0xf5f5f5,
  yellow: 0xffff00,
  yellowgreen: 0x9acd32
};

define(Color, color, {
  copy: function(channels) {
    return Object.assign(new this.constructor, this, channels);
  },
  displayable: function() {
    return this.rgb().displayable();
  },
  hex: color_formatHex, // Deprecated! Use color.formatHex.
  formatHex: color_formatHex,
  formatHsl: color_formatHsl,
  formatRgb: color_formatRgb,
  toString: color_formatRgb
});

function color_formatHex() {
  return this.rgb().formatHex();
}

function color_formatHsl() {
  return hslConvert(this).formatHsl();
}

function color_formatRgb() {
  return this.rgb().formatRgb();
}

function color(format) {
  var m, l;
  format = (format + "").trim().toLowerCase();
  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000
      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00
      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000
      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000
      : null) // invalid hex
      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins
      : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0)
      : null;
}

function rgbn(n) {
  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
}

function rgba(r, g, b, a) {
  if (a <= 0) r = g = b = NaN;
  return new Rgb(r, g, b, a);
}

function rgbConvert(o) {
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Rgb;
  o = o.rgb();
  return new Rgb(o.r, o.g, o.b, o.opacity);
}

function rgb$1(r, g, b, opacity) {
  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
}

function Rgb(r, g, b, opacity) {
  this.r = +r;
  this.g = +g;
  this.b = +b;
  this.opacity = +opacity;
}

define(Rgb, rgb$1, extend(Color, {
  brighter: function(k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  darker: function(k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  rgb: function() {
    return this;
  },
  displayable: function() {
    return (-0.5 <= this.r && this.r < 255.5)
        && (-0.5 <= this.g && this.g < 255.5)
        && (-0.5 <= this.b && this.b < 255.5)
        && (0 <= this.opacity && this.opacity <= 1);
  },
  hex: rgb_formatHex, // Deprecated! Use color.formatHex.
  formatHex: rgb_formatHex,
  formatRgb: rgb_formatRgb,
  toString: rgb_formatRgb
}));

function rgb_formatHex() {
  return "#" + hex(this.r) + hex(this.g) + hex(this.b);
}

function rgb_formatRgb() {
  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
  return (a === 1 ? "rgb(" : "rgba(")
      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", "
      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", "
      + Math.max(0, Math.min(255, Math.round(this.b) || 0))
      + (a === 1 ? ")" : ", " + a + ")");
}

function hex(value) {
  value = Math.max(0, Math.min(255, Math.round(value) || 0));
  return (value < 16 ? "0" : "") + value.toString(16);
}

function hsla(h, s, l, a) {
  if (a <= 0) h = s = l = NaN;
  else if (l <= 0 || l >= 1) h = s = NaN;
  else if (s <= 0) h = NaN;
  return new Hsl(h, s, l, a);
}

function hslConvert(o) {
  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Hsl;
  if (o instanceof Hsl) return o;
  o = o.rgb();
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      min = Math.min(r, g, b),
      max = Math.max(r, g, b),
      h = NaN,
      s = max - min,
      l = (max + min) / 2;
  if (s) {
    if (r === max) h = (g - b) / s + (g < b) * 6;
    else if (g === max) h = (b - r) / s + 2;
    else h = (r - g) / s + 4;
    s /= l < 0.5 ? max + min : 2 - max - min;
    h *= 60;
  } else {
    s = l > 0 && l < 1 ? 0 : h;
  }
  return new Hsl(h, s, l, o.opacity);
}

function hsl(h, s, l, opacity) {
  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
}

function Hsl(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

define(Hsl, hsl, extend(Color, {
  brighter: function(k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function(k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function() {
    var h = this.h % 360 + (this.h < 0) * 360,
        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,
        l = this.l,
        m2 = l + (l < 0.5 ? l : 1 - l) * s,
        m1 = 2 * l - m2;
    return new Rgb(
      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),
      hsl2rgb(h, m1, m2),
      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),
      this.opacity
    );
  },
  displayable: function() {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s))
        && (0 <= this.l && this.l <= 1)
        && (0 <= this.opacity && this.opacity <= 1);
  },
  formatHsl: function() {
    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
    return (a === 1 ? "hsl(" : "hsla(")
        + (this.h || 0) + ", "
        + (this.s || 0) * 100 + "%, "
        + (this.l || 0) * 100 + "%"
        + (a === 1 ? ")" : ", " + a + ")");
  }
}));

/* From FvD 13.37, CSS Color Module Level 3 */
function hsl2rgb(h, m1, m2) {
  return (h < 60 ? m1 + (m2 - m1) * h / 60
      : h < 180 ? m2
      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60
      : m1) * 255;
}

const radians$1 = Math.PI / 180;
const degrees$1 = 180 / Math.PI;

var A$1 = -0.14861,
    B = +1.78277,
    C = -0.29227,
    D$1 = -0.90649,
    E = +1.97294,
    ED = E * D$1,
    EB = E * B,
    BC_DA = B * C - D$1 * A$1;

function cubehelixConvert(o) {
  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Rgb)) o = rgbConvert(o);
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),
      bl = b - l,
      k = (E * (g - l) - C * bl) / D$1,
      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1
      h = s ? Math.atan2(k, bl) * degrees$1 - 120 : NaN;
  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);
}

function cubehelix$1(h, s, l, opacity) {
  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);
}

function Cubehelix(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

define(Cubehelix, cubehelix$1, extend(Color, {
  brighter: function(k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function(k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function() {
    var h = isNaN(this.h) ? 0 : (this.h + 120) * radians$1,
        l = +this.l,
        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),
        cosh = Math.cos(h),
        sinh = Math.sin(h);
    return new Rgb(
      255 * (l + a * (A$1 * cosh + B * sinh)),
      255 * (l + a * (C * cosh + D$1 * sinh)),
      255 * (l + a * (E * cosh)),
      this.opacity
    );
  }
}));

function basis(t1, v0, v1, v2, v3) {
  var t2 = t1 * t1, t3 = t2 * t1;
  return ((1 - 3 * t1 + 3 * t2 - t3) * v0
      + (4 - 6 * t2 + 3 * t3) * v1
      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2
      + t3 * v3) / 6;
}

function basis$1(values) {
  var n = values.length - 1;
  return function(t) {
    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),
        v1 = values[i],
        v2 = values[i + 1],
        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,
        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
    return basis((t - i / n) * n, v0, v1, v2, v3);
  };
}

var constant$1 = x => () => x;

function linear$1(a, d) {
  return function(t) {
    return a + t * d;
  };
}

function exponential(a, b, y) {
  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {
    return Math.pow(a + t * b, y);
  };
}

function hue(a, b) {
  var d = b - a;
  return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$1(isNaN(a) ? b : a);
}

function gamma(y) {
  return (y = +y) === 1 ? nogamma : function(a, b) {
    return b - a ? exponential(a, b, y) : constant$1(isNaN(a) ? b : a);
  };
}

function nogamma(a, b) {
  var d = b - a;
  return d ? linear$1(a, d) : constant$1(isNaN(a) ? b : a);
}

var rgb = (function rgbGamma(y) {
  var color = gamma(y);

  function rgb(start, end) {
    var r = color((start = rgb$1(start)).r, (end = rgb$1(end)).r),
        g = color(start.g, end.g),
        b = color(start.b, end.b),
        opacity = nogamma(start.opacity, end.opacity);
    return function(t) {
      start.r = r(t);
      start.g = g(t);
      start.b = b(t);
      start.opacity = opacity(t);
      return start + "";
    };
  }

  rgb.gamma = rgbGamma;

  return rgb;
})(1);

function rgbSpline(spline) {
  return function(colors) {
    var n = colors.length,
        r = new Array(n),
        g = new Array(n),
        b = new Array(n),
        i, color;
    for (i = 0; i < n; ++i) {
      color = rgb$1(colors[i]);
      r[i] = color.r || 0;
      g[i] = color.g || 0;
      b[i] = color.b || 0;
    }
    r = spline(r);
    g = spline(g);
    b = spline(b);
    color.opacity = 1;
    return function(t) {
      color.r = r(t);
      color.g = g(t);
      color.b = b(t);
      return color + "";
    };
  };
}

var rgbBasis = rgbSpline(basis$1);

function numberArray(a, b) {
  if (!b) b = [];
  var n = a ? Math.min(b.length, a.length) : 0,
      c = b.slice(),
      i;
  return function(t) {
    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;
    return c;
  };
}

function isNumberArray(x) {
  return ArrayBuffer.isView(x) && !(x instanceof DataView);
}

function genericArray(a, b) {
  var nb = b ? b.length : 0,
      na = a ? Math.min(nb, a.length) : 0,
      x = new Array(na),
      c = new Array(nb),
      i;

  for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);
  for (; i < nb; ++i) c[i] = b[i];

  return function(t) {
    for (i = 0; i < na; ++i) c[i] = x[i](t);
    return c;
  };
}

function date$1(a, b) {
  var d = new Date;
  return a = +a, b = +b, function(t) {
    return d.setTime(a * (1 - t) + b * t), d;
  };
}

function interpolateNumber(a, b) {
  return a = +a, b = +b, function(t) {
    return a * (1 - t) + b * t;
  };
}

function object$1(a, b) {
  var i = {},
      c = {},
      k;

  if (a === null || typeof a !== "object") a = {};
  if (b === null || typeof b !== "object") b = {};

  for (k in b) {
    if (k in a) {
      i[k] = interpolate(a[k], b[k]);
    } else {
      c[k] = b[k];
    }
  }

  return function(t) {
    for (k in i) c[k] = i[k](t);
    return c;
  };
}

var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
    reB = new RegExp(reA.source, "g");

function zero(b) {
  return function() {
    return b;
  };
}

function one(b) {
  return function(t) {
    return b(t) + "";
  };
}

function interpolateString(a, b) {
  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b
      am, // current match in a
      bm, // current match in b
      bs, // string preceding current number in b, if any
      i = -1, // index in s
      s = [], // string constants and placeholders
      q = []; // number interpolators

  // Coerce inputs to strings.
  a = a + "", b = b + "";

  // Interpolate pairs of numbers in a & b.
  while ((am = reA.exec(a))
      && (bm = reB.exec(b))) {
    if ((bs = bm.index) > bi) { // a string precedes the next number in b
      bs = b.slice(bi, bs);
      if (s[i]) s[i] += bs; // coalesce with previous string
      else s[++i] = bs;
    }
    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match
      if (s[i]) s[i] += bm; // coalesce with previous string
      else s[++i] = bm;
    } else { // interpolate non-matching numbers
      s[++i] = null;
      q.push({i: i, x: interpolateNumber(am, bm)});
    }
    bi = reB.lastIndex;
  }

  // Add remains of b.
  if (bi < b.length) {
    bs = b.slice(bi);
    if (s[i]) s[i] += bs; // coalesce with previous string
    else s[++i] = bs;
  }

  // Special optimization for only a single match.
  // Otherwise, interpolate each of the numbers and rejoin the string.
  return s.length < 2 ? (q[0]
      ? one(q[0].x)
      : zero(b))
      : (b = q.length, function(t) {
          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);
          return s.join("");
        });
}

function interpolate(a, b) {
  var t = typeof b, c;
  return b == null || t === "boolean" ? constant$1(b)
      : (t === "number" ? interpolateNumber
      : t === "string" ? ((c = color(b)) ? (b = c, rgb) : interpolateString)
      : b instanceof color ? rgb
      : b instanceof Date ? date$1
      : isNumberArray(b) ? numberArray
      : Array.isArray(b) ? genericArray
      : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? object$1
      : interpolateNumber)(a, b);
}

function interpolateRound(a, b) {
  return a = +a, b = +b, function(t) {
    return Math.round(a * (1 - t) + b * t);
  };
}

function cubehelix(hue) {
  return (function cubehelixGamma(y) {
    y = +y;

    function cubehelix(start, end) {
      var h = hue((start = cubehelix$1(start)).h, (end = cubehelix$1(end)).h),
          s = nogamma(start.s, end.s),
          l = nogamma(start.l, end.l),
          opacity = nogamma(start.opacity, end.opacity);
      return function(t) {
        start.h = h(t);
        start.s = s(t);
        start.l = l(Math.pow(t, y));
        start.opacity = opacity(t);
        return start + "";
      };
    }

    cubehelix.gamma = cubehelixGamma;

    return cubehelix;
  })(1);
}

cubehelix(hue);
var cubehelixLong = cubehelix(nogamma);

/** `Object#toString` result references. */
var stringTag$1 = '[object String]';

/**
 * Checks if `value` is classified as a `String` primitive or object.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a string, else `false`.
 * @example
 *
 * _.isString('abc');
 * // => true
 *
 * _.isString(1);
 * // => false
 */
function isString(value) {
  return typeof value == 'string' ||
    (!isArray_1(value) && isObjectLike_1(value) && _baseGetTag(value) == stringTag$1);
}

var isString_1 = isString;

/**
 * Gets the last element of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to query.
 * @returns {*} Returns the last element of `array`.
 * @example
 *
 * _.last([1, 2, 3]);
 * // => 3
 */
function last$1(array) {
  var length = array == null ? 0 : array.length;
  return length ? array[length - 1] : undefined;
}

var last_1 = last$1;

function ascending$1(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}

function bisector$1(f) {
  let delta = f;
  let compare = f;

  if (f.length === 1) {
    delta = (d, x) => f(d) - x;
    compare = ascendingComparator$1(f);
  }

  function left(a, x, lo, hi) {
    if (lo == null) lo = 0;
    if (hi == null) hi = a.length;
    while (lo < hi) {
      const mid = (lo + hi) >>> 1;
      if (compare(a[mid], x) < 0) lo = mid + 1;
      else hi = mid;
    }
    return lo;
  }

  function right(a, x, lo, hi) {
    if (lo == null) lo = 0;
    if (hi == null) hi = a.length;
    while (lo < hi) {
      const mid = (lo + hi) >>> 1;
      if (compare(a[mid], x) > 0) hi = mid;
      else lo = mid + 1;
    }
    return lo;
  }

  function center(a, x, lo, hi) {
    if (lo == null) lo = 0;
    if (hi == null) hi = a.length;
    const i = left(a, x, lo, hi - 1);
    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;
  }

  return {left, center, right};
}

function ascendingComparator$1(f) {
  return (d, x) => ascending$1(f(d), x);
}

function number$2(x) {
  return x === null ? NaN : +x;
}

const ascendingBisect = bisector$1(ascending$1);
const bisectRight = ascendingBisect.right;
bisector$1(number$2).center;

var e10 = Math.sqrt(50),
    e5 = Math.sqrt(10),
    e2 = Math.sqrt(2);

function ticks(start, stop, count) {
  var reverse,
      i = -1,
      n,
      ticks,
      step;

  stop = +stop, start = +start, count = +count;
  if (start === stop && count > 0) return [start];
  if (reverse = stop < start) n = start, start = stop, stop = n;
  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];

  if (step > 0) {
    let r0 = Math.round(start / step), r1 = Math.round(stop / step);
    if (r0 * step < start) ++r0;
    if (r1 * step > stop) --r1;
    ticks = new Array(n = r1 - r0 + 1);
    while (++i < n) ticks[i] = (r0 + i) * step;
  } else {
    step = -step;
    let r0 = Math.round(start * step), r1 = Math.round(stop * step);
    if (r0 / step < start) ++r0;
    if (r1 / step > stop) --r1;
    ticks = new Array(n = r1 - r0 + 1);
    while (++i < n) ticks[i] = (r0 + i) / step;
  }

  if (reverse) ticks.reverse();

  return ticks;
}

function tickIncrement(start, stop, count) {
  var step = (stop - start) / Math.max(0, count),
      power = Math.floor(Math.log(step) / Math.LN10),
      error = step / Math.pow(10, power);
  return power >= 0
      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)
      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
}

function tickStep(start, stop, count) {
  var step0 = Math.abs(stop - start) / Math.max(0, count),
      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),
      error = step0 / step1;
  if (error >= e10) step1 *= 10;
  else if (error >= e5) step1 *= 5;
  else if (error >= e2) step1 *= 2;
  return stop < start ? -step1 : step1;
}

function sequence(start, stop, step) {
  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;

  var i = -1,
      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,
      range = new Array(n);

  while (++i < n) {
    range[i] = start + i * step;
  }

  return range;
}

function initRange(domain, range) {
  switch (arguments.length) {
    case 0: break;
    case 1: this.range(domain); break;
    default: this.range(range).domain(domain); break;
  }
  return this;
}

const implicit = Symbol("implicit");

function ordinal() {
  var index = new Map(),
      domain = [],
      range = [],
      unknown = implicit;

  function scale(d) {
    var key = d + "", i = index.get(key);
    if (!i) {
      if (unknown !== implicit) return unknown;
      index.set(key, i = domain.push(d));
    }
    return range[(i - 1) % range.length];
  }

  scale.domain = function(_) {
    if (!arguments.length) return domain.slice();
    domain = [], index = new Map();
    for (const value of _) {
      const key = value + "";
      if (index.has(key)) continue;
      index.set(key, domain.push(value));
    }
    return scale;
  };

  scale.range = function(_) {
    return arguments.length ? (range = Array.from(_), scale) : range.slice();
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function() {
    return ordinal(domain, range).unknown(unknown);
  };

  initRange.apply(scale, arguments);

  return scale;
}

function band() {
  var scale = ordinal().unknown(undefined),
      domain = scale.domain,
      ordinalRange = scale.range,
      r0 = 0,
      r1 = 1,
      step,
      bandwidth,
      round = false,
      paddingInner = 0,
      paddingOuter = 0,
      align = 0.5;

  delete scale.unknown;

  function rescale() {
    var n = domain().length,
        reverse = r1 < r0,
        start = reverse ? r1 : r0,
        stop = reverse ? r0 : r1;
    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);
    if (round) step = Math.floor(step);
    start += (stop - start - step * (n - paddingInner)) * align;
    bandwidth = step * (1 - paddingInner);
    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);
    var values = sequence(n).map(function(i) { return start + step * i; });
    return ordinalRange(reverse ? values.reverse() : values);
  }

  scale.domain = function(_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };

  scale.range = function(_) {
    return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];
  };

  scale.rangeRound = function(_) {
    return [r0, r1] = _, r0 = +r0, r1 = +r1, round = true, rescale();
  };

  scale.bandwidth = function() {
    return bandwidth;
  };

  scale.step = function() {
    return step;
  };

  scale.round = function(_) {
    return arguments.length ? (round = !!_, rescale()) : round;
  };

  scale.padding = function(_) {
    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;
  };

  scale.paddingInner = function(_) {
    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;
  };

  scale.paddingOuter = function(_) {
    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;
  };

  scale.align = function(_) {
    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
  };

  scale.copy = function() {
    return band(domain(), [r0, r1])
        .round(round)
        .paddingInner(paddingInner)
        .paddingOuter(paddingOuter)
        .align(align);
  };

  return initRange.apply(rescale(), arguments);
}

function pointish(scale) {
  var copy = scale.copy;

  scale.padding = scale.paddingOuter;
  delete scale.paddingInner;
  delete scale.paddingOuter;

  scale.copy = function() {
    return pointish(copy());
  };

  return scale;
}

function point$4() {
  return pointish(band.apply(null, arguments).paddingInner(1));
}

function constants(x) {
  return function() {
    return x;
  };
}

function number$1(x) {
  return +x;
}

var unit = [0, 1];

function identity$3(x) {
  return x;
}

function normalize(a, b) {
  return (b -= (a = +a))
      ? function(x) { return (x - a) / b; }
      : constants(isNaN(b) ? NaN : 0.5);
}

function clamper(a, b) {
  var t;
  if (a > b) t = a, a = b, b = t;
  return function(x) { return Math.max(a, Math.min(b, x)); };
}

// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].
// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].
function bimap(domain, range, interpolate) {
  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];
  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);
  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);
  return function(x) { return r0(d0(x)); };
}

function polymap(domain, range, interpolate) {
  var j = Math.min(domain.length, range.length) - 1,
      d = new Array(j),
      r = new Array(j),
      i = -1;

  // Reverse descending domains.
  if (domain[j] < domain[0]) {
    domain = domain.slice().reverse();
    range = range.slice().reverse();
  }

  while (++i < j) {
    d[i] = normalize(domain[i], domain[i + 1]);
    r[i] = interpolate(range[i], range[i + 1]);
  }

  return function(x) {
    var i = bisectRight(domain, x, 1, j) - 1;
    return r[i](d[i](x));
  };
}

function copy(source, target) {
  return target
      .domain(source.domain())
      .range(source.range())
      .interpolate(source.interpolate())
      .clamp(source.clamp())
      .unknown(source.unknown());
}

function transformer$1() {
  var domain = unit,
      range = unit,
      interpolate$1 = interpolate,
      transform,
      untransform,
      unknown,
      clamp = identity$3,
      piecewise,
      output,
      input;

  function rescale() {
    var n = Math.min(domain.length, range.length);
    if (clamp !== identity$3) clamp = clamper(domain[0], domain[n - 1]);
    piecewise = n > 2 ? polymap : bimap;
    output = input = null;
    return scale;
  }

  function scale(x) {
    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate$1)))(transform(clamp(x)));
  }

  scale.invert = function(y) {
    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));
  };

  scale.domain = function(_) {
    return arguments.length ? (domain = Array.from(_, number$1), rescale()) : domain.slice();
  };

  scale.range = function(_) {
    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();
  };

  scale.rangeRound = function(_) {
    return range = Array.from(_), interpolate$1 = interpolateRound, rescale();
  };

  scale.clamp = function(_) {
    return arguments.length ? (clamp = _ ? true : identity$3, rescale()) : clamp !== identity$3;
  };

  scale.interpolate = function(_) {
    return arguments.length ? (interpolate$1 = _, rescale()) : interpolate$1;
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function(t, u) {
    transform = t, untransform = u;
    return rescale();
  };
}

function continuous() {
  return transformer$1()(identity$3, identity$3);
}

function formatDecimal$1(x) {
  return Math.abs(x = Math.round(x)) >= 1e21
      ? x.toLocaleString("en").replace(/,/g, "")
      : x.toString(10);
}

// Computes the decimal coefficient and exponent of the specified number x with
// significant digits p, where x is positive and p is in [1, 21] or undefined.
// For example, formatDecimalParts(1.23) returns ["123", 0].
function formatDecimalParts$1(x, p) {
  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity
  var i, coefficient = x.slice(0, i);

  // The string returned by toExponential either has the form \d\.\d+e[-+]\d+
  // (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).
  return [
    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
    +x.slice(i + 1)
  ];
}

function exponent$1(x) {
  return x = formatDecimalParts$1(Math.abs(x)), x ? x[1] : NaN;
}

function formatGroup$1(grouping, thousands) {
  return function(value, width) {
    var i = value.length,
        t = [],
        j = 0,
        g = grouping[0],
        length = 0;

    while (i > 0 && g > 0) {
      if (length + g + 1 > width) g = Math.max(1, width - length);
      t.push(value.substring(i -= g, i + g));
      if ((length += g + 1) > width) break;
      g = grouping[j = (j + 1) % grouping.length];
    }

    return t.reverse().join(thousands);
  };
}

function formatNumerals$1(numerals) {
  return function(value) {
    return value.replace(/[0-9]/g, function(i) {
      return numerals[+i];
    });
  };
}

// [[fill]align][sign][symbol][0][width][,][.precision][~][type]
var re$1 = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;

function formatSpecifier$1(specifier) {
  if (!(match = re$1.exec(specifier))) throw new Error("invalid format: " + specifier);
  var match;
  return new FormatSpecifier$1({
    fill: match[1],
    align: match[2],
    sign: match[3],
    symbol: match[4],
    zero: match[5],
    width: match[6],
    comma: match[7],
    precision: match[8] && match[8].slice(1),
    trim: match[9],
    type: match[10]
  });
}

formatSpecifier$1.prototype = FormatSpecifier$1.prototype; // instanceof

function FormatSpecifier$1(specifier) {
  this.fill = specifier.fill === undefined ? " " : specifier.fill + "";
  this.align = specifier.align === undefined ? ">" : specifier.align + "";
  this.sign = specifier.sign === undefined ? "-" : specifier.sign + "";
  this.symbol = specifier.symbol === undefined ? "" : specifier.symbol + "";
  this.zero = !!specifier.zero;
  this.width = specifier.width === undefined ? undefined : +specifier.width;
  this.comma = !!specifier.comma;
  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;
  this.trim = !!specifier.trim;
  this.type = specifier.type === undefined ? "" : specifier.type + "";
}

FormatSpecifier$1.prototype.toString = function() {
  return this.fill
      + this.align
      + this.sign
      + this.symbol
      + (this.zero ? "0" : "")
      + (this.width === undefined ? "" : Math.max(1, this.width | 0))
      + (this.comma ? "," : "")
      + (this.precision === undefined ? "" : "." + Math.max(0, this.precision | 0))
      + (this.trim ? "~" : "")
      + this.type;
};

// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.
function formatTrim$1(s) {
  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {
    switch (s[i]) {
      case ".": i0 = i1 = i; break;
      case "0": if (i0 === 0) i0 = i; i1 = i; break;
      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;
    }
  }
  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;
}

var prefixExponent$1;

function formatPrefixAuto$1(x, p) {
  var d = formatDecimalParts$1(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1],
      i = exponent - (prefixExponent$1 = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,
      n = coefficient.length;
  return i === n ? coefficient
      : i > n ? coefficient + new Array(i - n + 1).join("0")
      : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i)
      : "0." + new Array(1 - i).join("0") + formatDecimalParts$1(x, Math.max(0, p + i - 1))[0]; // less than 1y!
}

function formatRounded$1(x, p) {
  var d = formatDecimalParts$1(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1];
  return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient
      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1)
      : coefficient + new Array(exponent - coefficient.length + 2).join("0");
}

var formatTypes$1 = {
  "%": (x, p) => (x * 100).toFixed(p),
  "b": (x) => Math.round(x).toString(2),
  "c": (x) => x + "",
  "d": formatDecimal$1,
  "e": (x, p) => x.toExponential(p),
  "f": (x, p) => x.toFixed(p),
  "g": (x, p) => x.toPrecision(p),
  "o": (x) => Math.round(x).toString(8),
  "p": (x, p) => formatRounded$1(x * 100, p),
  "r": formatRounded$1,
  "s": formatPrefixAuto$1,
  "X": (x) => Math.round(x).toString(16).toUpperCase(),
  "x": (x) => Math.round(x).toString(16)
};

function identity$2(x) {
  return x;
}

var map$1 = Array.prototype.map,
    prefixes$1 = ["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];

function formatLocale$2(locale) {
  var group = locale.grouping === undefined || locale.thousands === undefined ? identity$2 : formatGroup$1(map$1.call(locale.grouping, Number), locale.thousands + ""),
      currencyPrefix = locale.currency === undefined ? "" : locale.currency[0] + "",
      currencySuffix = locale.currency === undefined ? "" : locale.currency[1] + "",
      decimal = locale.decimal === undefined ? "." : locale.decimal + "",
      numerals = locale.numerals === undefined ? identity$2 : formatNumerals$1(map$1.call(locale.numerals, String)),
      percent = locale.percent === undefined ? "%" : locale.percent + "",
      minus = locale.minus === undefined ? "−" : locale.minus + "",
      nan = locale.nan === undefined ? "NaN" : locale.nan + "";

  function newFormat(specifier) {
    specifier = formatSpecifier$1(specifier);

    var fill = specifier.fill,
        align = specifier.align,
        sign = specifier.sign,
        symbol = specifier.symbol,
        zero = specifier.zero,
        width = specifier.width,
        comma = specifier.comma,
        precision = specifier.precision,
        trim = specifier.trim,
        type = specifier.type;

    // The "n" type is an alias for ",g".
    if (type === "n") comma = true, type = "g";

    // The "" type, and any invalid type, is an alias for ".12~g".
    else if (!formatTypes$1[type]) precision === undefined && (precision = 12), trim = true, type = "g";

    // If zero fill is specified, padding goes after sign and before digits.
    if (zero || (fill === "0" && align === "=")) zero = true, fill = "0", align = "=";

    // Compute the prefix and suffix.
    // For SI-prefix, the suffix is lazily computed.
    var prefix = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",
        suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type) ? percent : "";

    // What format function should we use?
    // Is this an integer type?
    // Can this type generate exponential notation?
    var formatType = formatTypes$1[type],
        maybeSuffix = /[defgprs%]/.test(type);

    // Set the default precision if not specified,
    // or clamp the specified precision to the supported range.
    // For significant precision, it must be in [1, 21].
    // For fixed precision, it must be in [0, 20].
    precision = precision === undefined ? 6
        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))
        : Math.max(0, Math.min(20, precision));

    function format(value) {
      var valuePrefix = prefix,
          valueSuffix = suffix,
          i, n, c;

      if (type === "c") {
        valueSuffix = formatType(value) + valueSuffix;
        value = "";
      } else {
        value = +value;

        // Determine the sign. -0 is not less than 0, but 1 / -0 is!
        var valueNegative = value < 0 || 1 / value < 0;

        // Perform the initial formatting.
        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);

        // Trim insignificant zeros.
        if (trim) value = formatTrim$1(value);

        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.
        if (valueNegative && +value === 0 && sign !== "+") valueNegative = false;

        // Compute the prefix and suffix.
        valuePrefix = (valueNegative ? (sign === "(" ? sign : minus) : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
        valueSuffix = (type === "s" ? prefixes$1[8 + prefixExponent$1 / 3] : "") + valueSuffix + (valueNegative && sign === "(" ? ")" : "");

        // Break the formatted value into the integer “value” part that can be
        // grouped, and fractional or exponential “suffix” part that is not.
        if (maybeSuffix) {
          i = -1, n = value.length;
          while (++i < n) {
            if (c = value.charCodeAt(i), 48 > c || c > 57) {
              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
              value = value.slice(0, i);
              break;
            }
          }
        }
      }

      // If the fill character is not "0", grouping is applied before padding.
      if (comma && !zero) value = group(value, Infinity);

      // Compute the padding.
      var length = valuePrefix.length + value.length + valueSuffix.length,
          padding = length < width ? new Array(width - length + 1).join(fill) : "";

      // If the fill character is "0", grouping is applied after padding.
      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";

      // Reconstruct the final output based on the desired alignment.
      switch (align) {
        case "<": value = valuePrefix + value + valueSuffix + padding; break;
        case "=": value = valuePrefix + padding + value + valueSuffix; break;
        case "^": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;
        default: value = padding + valuePrefix + value + valueSuffix; break;
      }

      return numerals(value);
    }

    format.toString = function() {
      return specifier + "";
    };

    return format;
  }

  function formatPrefix(specifier, value) {
    var f = newFormat((specifier = formatSpecifier$1(specifier), specifier.type = "f", specifier)),
        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,
        k = Math.pow(10, -e),
        prefix = prefixes$1[8 + e / 3];
    return function(value) {
      return f(k * value) + prefix;
    };
  }

  return {
    format: newFormat,
    formatPrefix: formatPrefix
  };
}

var locale$3;
var format$2;
var formatPrefix;

defaultLocale$2({
  thousands: ",",
  grouping: [3],
  currency: ["$", ""]
});

function defaultLocale$2(definition) {
  locale$3 = formatLocale$2(definition);
  format$2 = locale$3.format;
  formatPrefix = locale$3.formatPrefix;
  return locale$3;
}

function precisionFixed(step) {
  return Math.max(0, -exponent$1(Math.abs(step)));
}

function precisionPrefix(step, value) {
  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));
}

function precisionRound(step, max) {
  step = Math.abs(step), max = Math.abs(max) - step;
  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;
}

function tickFormat(start, stop, count, specifier) {
  var step = tickStep(start, stop, count),
      precision;
  specifier = formatSpecifier$1(specifier == null ? ",f" : specifier);
  switch (specifier.type) {
    case "s": {
      var value = Math.max(Math.abs(start), Math.abs(stop));
      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;
      return formatPrefix(specifier, value);
    }
    case "":
    case "e":
    case "g":
    case "p":
    case "r": {
      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");
      break;
    }
    case "f":
    case "%": {
      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === "%") * 2;
      break;
    }
  }
  return format$2(specifier);
}

function linearish(scale) {
  var domain = scale.domain;

  scale.ticks = function(count) {
    var d = domain();
    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);
  };

  scale.tickFormat = function(count, specifier) {
    var d = domain();
    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);
  };

  scale.nice = function(count) {
    if (count == null) count = 10;

    var d = domain();
    var i0 = 0;
    var i1 = d.length - 1;
    var start = d[i0];
    var stop = d[i1];
    var prestep;
    var step;
    var maxIter = 10;

    if (stop < start) {
      step = start, start = stop, stop = step;
      step = i0, i0 = i1, i1 = step;
    }
    
    while (maxIter-- > 0) {
      step = tickIncrement(start, stop, count);
      if (step === prestep) {
        d[i0] = start;
        d[i1] = stop;
        return domain(d);
      } else if (step > 0) {
        start = Math.floor(start / step) * step;
        stop = Math.ceil(stop / step) * step;
      } else if (step < 0) {
        start = Math.ceil(start * step) / step;
        stop = Math.floor(stop * step) / step;
      } else {
        break;
      }
      prestep = step;
    }

    return scale;
  };

  return scale;
}

function linear() {
  var scale = continuous();

  scale.copy = function() {
    return copy(scale, linear());
  };

  initRange.apply(scale, arguments);

  return linearish(scale);
}

function nice(domain, interval) {
  domain = domain.slice();

  var i0 = 0,
      i1 = domain.length - 1,
      x0 = domain[i0],
      x1 = domain[i1],
      t;

  if (x1 < x0) {
    t = i0, i0 = i1, i1 = t;
    t = x0, x0 = x1, x1 = t;
  }

  domain[i0] = interval.floor(x0);
  domain[i1] = interval.ceil(x1);
  return domain;
}

function transformLog(x) {
  return Math.log(x);
}

function transformExp(x) {
  return Math.exp(x);
}

function transformLogn(x) {
  return -Math.log(-x);
}

function transformExpn(x) {
  return -Math.exp(-x);
}

function pow10(x) {
  return isFinite(x) ? +("1e" + x) : x < 0 ? 0 : x;
}

function powp(base) {
  return base === 10 ? pow10
      : base === Math.E ? Math.exp
      : function(x) { return Math.pow(base, x); };
}

function logp(base) {
  return base === Math.E ? Math.log
      : base === 10 && Math.log10
      || base === 2 && Math.log2
      || (base = Math.log(base), function(x) { return Math.log(x) / base; });
}

function reflect(f) {
  return function(x) {
    return -f(-x);
  };
}

function loggish(transform) {
  var scale = transform(transformLog, transformExp),
      domain = scale.domain,
      base = 10,
      logs,
      pows;

  function rescale() {
    logs = logp(base), pows = powp(base);
    if (domain()[0] < 0) {
      logs = reflect(logs), pows = reflect(pows);
      transform(transformLogn, transformExpn);
    } else {
      transform(transformLog, transformExp);
    }
    return scale;
  }

  scale.base = function(_) {
    return arguments.length ? (base = +_, rescale()) : base;
  };

  scale.domain = function(_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };

  scale.ticks = function(count) {
    var d = domain(),
        u = d[0],
        v = d[d.length - 1],
        r;

    if (r = v < u) i = u, u = v, v = i;

    var i = logs(u),
        j = logs(v),
        p,
        k,
        t,
        n = count == null ? 10 : +count,
        z = [];

    if (!(base % 1) && j - i < n) {
      i = Math.floor(i), j = Math.ceil(j);
      if (u > 0) for (; i <= j; ++i) {
        for (k = 1, p = pows(i); k < base; ++k) {
          t = p * k;
          if (t < u) continue;
          if (t > v) break;
          z.push(t);
        }
      } else for (; i <= j; ++i) {
        for (k = base - 1, p = pows(i); k >= 1; --k) {
          t = p * k;
          if (t < u) continue;
          if (t > v) break;
          z.push(t);
        }
      }
      if (z.length * 2 < n) z = ticks(u, v, n);
    } else {
      z = ticks(i, j, Math.min(j - i, n)).map(pows);
    }

    return r ? z.reverse() : z;
  };

  scale.tickFormat = function(count, specifier) {
    if (specifier == null) specifier = base === 10 ? ".0e" : ",";
    if (typeof specifier !== "function") specifier = format$2(specifier);
    if (count === Infinity) return specifier;
    if (count == null) count = 10;
    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?
    return function(d) {
      var i = d / pows(Math.round(logs(d)));
      if (i * base < base - 0.5) i *= base;
      return i <= k ? specifier(d) : "";
    };
  };

  scale.nice = function() {
    return domain(nice(domain(), {
      floor: function(x) { return pows(Math.floor(logs(x))); },
      ceil: function(x) { return pows(Math.ceil(logs(x))); }
    }));
  };

  return scale;
}

function log$1() {
  var scale = loggish(transformer$1()).domain([1, 10]);

  scale.copy = function() {
    return copy(scale, log$1()).base(scale.base());
  };

  initRange.apply(scale, arguments);

  return scale;
}

function transformSymlog(c) {
  return function(x) {
    return Math.sign(x) * Math.log1p(Math.abs(x / c));
  };
}

function transformSymexp(c) {
  return function(x) {
    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;
  };
}

function symlogish(transform) {
  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));

  scale.constant = function(_) {
    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;
  };

  return linearish(scale);
}

function symlog() {
  var scale = symlogish(transformer$1());

  scale.copy = function() {
    return copy(scale, symlog()).constant(scale.constant());
  };

  return initRange.apply(scale, arguments);
}

function quantize() {
  var x0 = 0,
      x1 = 1,
      n = 1,
      domain = [0.5],
      range = [0, 1],
      unknown;

  function scale(x) {
    return x != null && x <= x ? range[bisectRight(domain, x, 0, n)] : unknown;
  }

  function rescale() {
    var i = -1;
    domain = new Array(n);
    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);
    return scale;
  }

  scale.domain = function(_) {
    return arguments.length ? ([x0, x1] = _, x0 = +x0, x1 = +x1, rescale()) : [x0, x1];
  };

  scale.range = function(_) {
    return arguments.length ? (n = (range = Array.from(_)).length - 1, rescale()) : range.slice();
  };

  scale.invertExtent = function(y) {
    var i = range.indexOf(y);
    return i < 0 ? [NaN, NaN]
        : i < 1 ? [x0, domain[0]]
        : i >= n ? [domain[n - 1], x1]
        : [domain[i - 1], domain[i]];
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : scale;
  };

  scale.thresholds = function() {
    return domain.slice();
  };

  scale.copy = function() {
    return quantize()
        .domain([x0, x1])
        .range(range)
        .unknown(unknown);
  };

  return initRange.apply(linearish(scale), arguments);
}

var t0$2 = new Date,
    t1$2 = new Date;

function newInterval$2(floori, offseti, count, field) {

  function interval(date) {
    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;
  }

  interval.floor = function(date) {
    return floori(date = new Date(+date)), date;
  };

  interval.ceil = function(date) {
    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
  };

  interval.round = function(date) {
    var d0 = interval(date),
        d1 = interval.ceil(date);
    return date - d0 < d1 - date ? d0 : d1;
  };

  interval.offset = function(date, step) {
    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;
  };

  interval.range = function(start, stop, step) {
    var range = [], previous;
    start = interval.ceil(start);
    step = step == null ? 1 : Math.floor(step);
    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date
    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);
    while (previous < start && start < stop);
    return range;
  };

  interval.filter = function(test) {
    return newInterval$2(function(date) {
      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);
    }, function(date, step) {
      if (date >= date) {
        if (step < 0) while (++step <= 0) {
          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty
        } else while (--step >= 0) {
          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty
        }
      }
    });
  };

  if (count) {
    interval.count = function(start, end) {
      t0$2.setTime(+start), t1$2.setTime(+end);
      floori(t0$2), floori(t1$2);
      return Math.floor(count(t0$2, t1$2));
    };

    interval.every = function(step) {
      step = Math.floor(step);
      return !isFinite(step) || !(step > 0) ? null
          : !(step > 1) ? interval
          : interval.filter(field
              ? function(d) { return field(d) % step === 0; }
              : function(d) { return interval.count(0, d) % step === 0; });
    };
  }

  return interval;
}

var millisecond$1 = newInterval$2(function() {
  // noop
}, function(date, step) {
  date.setTime(+date + step);
}, function(start, end) {
  return end - start;
});

// An optimized implementation for this simple case.
millisecond$1.every = function(k) {
  k = Math.floor(k);
  if (!isFinite(k) || !(k > 0)) return null;
  if (!(k > 1)) return millisecond$1;
  return newInterval$2(function(date) {
    date.setTime(Math.floor(date / k) * k);
  }, function(date, step) {
    date.setTime(+date + step * k);
  }, function(start, end) {
    return (end - start) / k;
  });
};

const durationSecond$2 = 1000;
const durationMinute$2 = durationSecond$2 * 60;
const durationHour$2 = durationMinute$2 * 60;
const durationDay$1 = durationHour$2 * 24;
const durationWeek$2 = durationDay$1 * 7;
const durationMonth = durationDay$1 * 30;
const durationYear = durationDay$1 * 365;

var second$1 = newInterval$2(function(date) {
  date.setTime(date - date.getMilliseconds());
}, function(date, step) {
  date.setTime(+date + step * durationSecond$2);
}, function(start, end) {
  return (end - start) / durationSecond$2;
}, function(date) {
  return date.getUTCSeconds();
});

var minute$1 = newInterval$2(function(date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond$2);
}, function(date, step) {
  date.setTime(+date + step * durationMinute$2);
}, function(start, end) {
  return (end - start) / durationMinute$2;
}, function(date) {
  return date.getMinutes();
});

var hour$1 = newInterval$2(function(date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond$2 - date.getMinutes() * durationMinute$2);
}, function(date, step) {
  date.setTime(+date + step * durationHour$2);
}, function(start, end) {
  return (end - start) / durationHour$2;
}, function(date) {
  return date.getHours();
});

var day$1 = newInterval$2(
  date => date.setHours(0, 0, 0, 0),
  (date, step) => date.setDate(date.getDate() + step),
  (start, end) => (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$2) / durationDay$1,
  date => date.getDate() - 1
);

function weekday$2(i) {
  return newInterval$2(function(date) {
    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);
    date.setHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setDate(date.getDate() + step * 7);
  }, function(start, end) {
    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$2) / durationWeek$2;
  });
}

var sunday$2 = weekday$2(0);
weekday$2(1);
weekday$2(2);
weekday$2(3);
weekday$2(4);
weekday$2(5);
weekday$2(6);

var month$1 = newInterval$2(function(date) {
  date.setDate(1);
  date.setHours(0, 0, 0, 0);
}, function(date, step) {
  date.setMonth(date.getMonth() + step);
}, function(start, end) {
  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
}, function(date) {
  return date.getMonth();
});

var year$2 = newInterval$2(function(date) {
  date.setMonth(0, 1);
  date.setHours(0, 0, 0, 0);
}, function(date, step) {
  date.setFullYear(date.getFullYear() + step);
}, function(start, end) {
  return end.getFullYear() - start.getFullYear();
}, function(date) {
  return date.getFullYear();
});

// An optimized implementation for this simple case.
year$2.every = function(k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval$2(function(date) {
    date.setFullYear(Math.floor(date.getFullYear() / k) * k);
    date.setMonth(0, 1);
    date.setHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setFullYear(date.getFullYear() + step * k);
  });
};

var utcMinute$1 = newInterval$2(function(date) {
  date.setUTCSeconds(0, 0);
}, function(date, step) {
  date.setTime(+date + step * durationMinute$2);
}, function(start, end) {
  return (end - start) / durationMinute$2;
}, function(date) {
  return date.getUTCMinutes();
});

var utcHour$1 = newInterval$2(function(date) {
  date.setUTCMinutes(0, 0, 0);
}, function(date, step) {
  date.setTime(+date + step * durationHour$2);
}, function(start, end) {
  return (end - start) / durationHour$2;
}, function(date) {
  return date.getUTCHours();
});

var utcDay$2 = newInterval$2(function(date) {
  date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
  date.setUTCDate(date.getUTCDate() + step);
}, function(start, end) {
  return (end - start) / durationDay$1;
}, function(date) {
  return date.getUTCDate() - 1;
});

function utcWeekday$2(i) {
  return newInterval$2(function(date) {
    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);
    date.setUTCHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setUTCDate(date.getUTCDate() + step * 7);
  }, function(start, end) {
    return (end - start) / durationWeek$2;
  });
}

var utcSunday$2 = utcWeekday$2(0);
utcWeekday$2(1);
utcWeekday$2(2);
utcWeekday$2(3);
utcWeekday$2(4);
utcWeekday$2(5);
utcWeekday$2(6);

var utcMonth$1 = newInterval$2(function(date) {
  date.setUTCDate(1);
  date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
  date.setUTCMonth(date.getUTCMonth() + step);
}, function(start, end) {
  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
}, function(date) {
  return date.getUTCMonth();
});

var utcYear$2 = newInterval$2(function(date) {
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
  date.setUTCFullYear(date.getUTCFullYear() + step);
}, function(start, end) {
  return end.getUTCFullYear() - start.getUTCFullYear();
}, function(date) {
  return date.getUTCFullYear();
});

// An optimized implementation for this simple case.
utcYear$2.every = function(k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval$2(function(date) {
    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);
    date.setUTCMonth(0, 1);
    date.setUTCHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setUTCFullYear(date.getUTCFullYear() + step * k);
  });
};

function ticker(year, month, week, day, hour, minute) {

  const tickIntervals = [
    [second$1,  1,      durationSecond$2],
    [second$1,  5,  5 * durationSecond$2],
    [second$1, 15, 15 * durationSecond$2],
    [second$1, 30, 30 * durationSecond$2],
    [minute,  1,      durationMinute$2],
    [minute,  5,  5 * durationMinute$2],
    [minute, 15, 15 * durationMinute$2],
    [minute, 30, 30 * durationMinute$2],
    [  hour,  1,      durationHour$2  ],
    [  hour,  3,  3 * durationHour$2  ],
    [  hour,  6,  6 * durationHour$2  ],
    [  hour, 12, 12 * durationHour$2  ],
    [   day,  1,      durationDay$1   ],
    [   day,  2,  2 * durationDay$1   ],
    [  week,  1,      durationWeek$2  ],
    [ month,  1,      durationMonth ],
    [ month,  3,  3 * durationMonth ],
    [  year,  1,      durationYear  ]
  ];

  function ticks(start, stop, count) {
    const reverse = stop < start;
    if (reverse) [start, stop] = [stop, start];
    const interval = count && typeof count.range === "function" ? count : tickInterval(start, stop, count);
    const ticks = interval ? interval.range(start, +stop + 1) : []; // inclusive stop
    return reverse ? ticks.reverse() : ticks;
  }

  function tickInterval(start, stop, count) {
    const target = Math.abs(stop - start) / count;
    const i = bisector$1(([,, step]) => step).right(tickIntervals, target);
    if (i === tickIntervals.length) return year.every(tickStep(start / durationYear, stop / durationYear, count));
    if (i === 0) return millisecond$1.every(Math.max(tickStep(start, stop, count), 1));
    const [t, step] = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
    return t.every(step);
  }

  return [ticks, tickInterval];
}

const [utcTicks, utcTickInterval] = ticker(utcYear$2, utcMonth$1, utcSunday$2, utcDay$2, utcHour$1, utcMinute$1);
const [timeTicks, timeTickInterval] = ticker(year$2, month$1, sunday$2, day$1, hour$1, minute$1);

var t0$1 = new Date,
    t1$1 = new Date;

function newInterval$1(floori, offseti, count, field) {

  function interval(date) {
    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;
  }

  interval.floor = function(date) {
    return floori(date = new Date(+date)), date;
  };

  interval.ceil = function(date) {
    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
  };

  interval.round = function(date) {
    var d0 = interval(date),
        d1 = interval.ceil(date);
    return date - d0 < d1 - date ? d0 : d1;
  };

  interval.offset = function(date, step) {
    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;
  };

  interval.range = function(start, stop, step) {
    var range = [], previous;
    start = interval.ceil(start);
    step = step == null ? 1 : Math.floor(step);
    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date
    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);
    while (previous < start && start < stop);
    return range;
  };

  interval.filter = function(test) {
    return newInterval$1(function(date) {
      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);
    }, function(date, step) {
      if (date >= date) {
        if (step < 0) while (++step <= 0) {
          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty
        } else while (--step >= 0) {
          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty
        }
      }
    });
  };

  if (count) {
    interval.count = function(start, end) {
      t0$1.setTime(+start), t1$1.setTime(+end);
      floori(t0$1), floori(t1$1);
      return Math.floor(count(t0$1, t1$1));
    };

    interval.every = function(step) {
      step = Math.floor(step);
      return !isFinite(step) || !(step > 0) ? null
          : !(step > 1) ? interval
          : interval.filter(field
              ? function(d) { return field(d) % step === 0; }
              : function(d) { return interval.count(0, d) % step === 0; });
    };
  }

  return interval;
}

const durationSecond$1 = 1000;
const durationMinute$1 = durationSecond$1 * 60;
const durationHour$1 = durationMinute$1 * 60;
const durationDay = durationHour$1 * 24;
const durationWeek$1 = durationDay * 7;

var day = newInterval$1(
  date => date.setHours(0, 0, 0, 0),
  (date, step) => date.setDate(date.getDate() + step),
  (start, end) => (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay,
  date => date.getDate() - 1
);

function weekday$1(i) {
  return newInterval$1(function(date) {
    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);
    date.setHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setDate(date.getDate() + step * 7);
  }, function(start, end) {
    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;
  });
}

var sunday$1 = weekday$1(0);
var monday$1 = weekday$1(1);
weekday$1(2);
weekday$1(3);
var thursday$1 = weekday$1(4);
weekday$1(5);
weekday$1(6);

var year$1 = newInterval$1(function(date) {
  date.setMonth(0, 1);
  date.setHours(0, 0, 0, 0);
}, function(date, step) {
  date.setFullYear(date.getFullYear() + step);
}, function(start, end) {
  return end.getFullYear() - start.getFullYear();
}, function(date) {
  return date.getFullYear();
});

// An optimized implementation for this simple case.
year$1.every = function(k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval$1(function(date) {
    date.setFullYear(Math.floor(date.getFullYear() / k) * k);
    date.setMonth(0, 1);
    date.setHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setFullYear(date.getFullYear() + step * k);
  });
};

var utcDay$1 = newInterval$1(function(date) {
  date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
  date.setUTCDate(date.getUTCDate() + step);
}, function(start, end) {
  return (end - start) / durationDay;
}, function(date) {
  return date.getUTCDate() - 1;
});

function utcWeekday$1(i) {
  return newInterval$1(function(date) {
    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);
    date.setUTCHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setUTCDate(date.getUTCDate() + step * 7);
  }, function(start, end) {
    return (end - start) / durationWeek$1;
  });
}

var utcSunday$1 = utcWeekday$1(0);
var utcMonday$1 = utcWeekday$1(1);
utcWeekday$1(2);
utcWeekday$1(3);
var utcThursday$1 = utcWeekday$1(4);
utcWeekday$1(5);
utcWeekday$1(6);

var utcYear$1 = newInterval$1(function(date) {
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
  date.setUTCFullYear(date.getUTCFullYear() + step);
}, function(start, end) {
  return end.getUTCFullYear() - start.getUTCFullYear();
}, function(date) {
  return date.getUTCFullYear();
});

// An optimized implementation for this simple case.
utcYear$1.every = function(k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval$1(function(date) {
    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);
    date.setUTCMonth(0, 1);
    date.setUTCHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setUTCFullYear(date.getUTCFullYear() + step * k);
  });
};

function localDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);
    date.setFullYear(d.y);
    return date;
  }
  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);
}

function utcDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));
    date.setUTCFullYear(d.y);
    return date;
  }
  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));
}

function newDate(y, m, d) {
  return {y: y, m: m, d: d, H: 0, M: 0, S: 0, L: 0};
}

function formatLocale$1(locale) {
  var locale_dateTime = locale.dateTime,
      locale_date = locale.date,
      locale_time = locale.time,
      locale_periods = locale.periods,
      locale_weekdays = locale.days,
      locale_shortWeekdays = locale.shortDays,
      locale_months = locale.months,
      locale_shortMonths = locale.shortMonths;

  var periodRe = formatRe(locale_periods),
      periodLookup = formatLookup(locale_periods),
      weekdayRe = formatRe(locale_weekdays),
      weekdayLookup = formatLookup(locale_weekdays),
      shortWeekdayRe = formatRe(locale_shortWeekdays),
      shortWeekdayLookup = formatLookup(locale_shortWeekdays),
      monthRe = formatRe(locale_months),
      monthLookup = formatLookup(locale_months),
      shortMonthRe = formatRe(locale_shortMonths),
      shortMonthLookup = formatLookup(locale_shortMonths);

  var formats = {
    "a": formatShortWeekday,
    "A": formatWeekday,
    "b": formatShortMonth,
    "B": formatMonth,
    "c": null,
    "d": formatDayOfMonth,
    "e": formatDayOfMonth,
    "f": formatMicroseconds,
    "g": formatYearISO,
    "G": formatFullYearISO,
    "H": formatHour24,
    "I": formatHour12,
    "j": formatDayOfYear,
    "L": formatMilliseconds,
    "m": formatMonthNumber,
    "M": formatMinutes,
    "p": formatPeriod,
    "q": formatQuarter,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatSeconds,
    "u": formatWeekdayNumberMonday,
    "U": formatWeekNumberSunday,
    "V": formatWeekNumberISO,
    "w": formatWeekdayNumberSunday,
    "W": formatWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatYear,
    "Y": formatFullYear,
    "Z": formatZone,
    "%": formatLiteralPercent
  };

  var utcFormats = {
    "a": formatUTCShortWeekday,
    "A": formatUTCWeekday,
    "b": formatUTCShortMonth,
    "B": formatUTCMonth,
    "c": null,
    "d": formatUTCDayOfMonth,
    "e": formatUTCDayOfMonth,
    "f": formatUTCMicroseconds,
    "g": formatUTCYearISO,
    "G": formatUTCFullYearISO,
    "H": formatUTCHour24,
    "I": formatUTCHour12,
    "j": formatUTCDayOfYear,
    "L": formatUTCMilliseconds,
    "m": formatUTCMonthNumber,
    "M": formatUTCMinutes,
    "p": formatUTCPeriod,
    "q": formatUTCQuarter,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatUTCSeconds,
    "u": formatUTCWeekdayNumberMonday,
    "U": formatUTCWeekNumberSunday,
    "V": formatUTCWeekNumberISO,
    "w": formatUTCWeekdayNumberSunday,
    "W": formatUTCWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatUTCYear,
    "Y": formatUTCFullYear,
    "Z": formatUTCZone,
    "%": formatLiteralPercent
  };

  var parses = {
    "a": parseShortWeekday,
    "A": parseWeekday,
    "b": parseShortMonth,
    "B": parseMonth,
    "c": parseLocaleDateTime,
    "d": parseDayOfMonth,
    "e": parseDayOfMonth,
    "f": parseMicroseconds,
    "g": parseYear,
    "G": parseFullYear,
    "H": parseHour24,
    "I": parseHour24,
    "j": parseDayOfYear,
    "L": parseMilliseconds,
    "m": parseMonthNumber,
    "M": parseMinutes,
    "p": parsePeriod,
    "q": parseQuarter,
    "Q": parseUnixTimestamp,
    "s": parseUnixTimestampSeconds,
    "S": parseSeconds,
    "u": parseWeekdayNumberMonday,
    "U": parseWeekNumberSunday,
    "V": parseWeekNumberISO,
    "w": parseWeekdayNumberSunday,
    "W": parseWeekNumberMonday,
    "x": parseLocaleDate,
    "X": parseLocaleTime,
    "y": parseYear,
    "Y": parseFullYear,
    "Z": parseZone,
    "%": parseLiteralPercent
  };

  // These recursive directive definitions must be deferred.
  formats.x = newFormat(locale_date, formats);
  formats.X = newFormat(locale_time, formats);
  formats.c = newFormat(locale_dateTime, formats);
  utcFormats.x = newFormat(locale_date, utcFormats);
  utcFormats.X = newFormat(locale_time, utcFormats);
  utcFormats.c = newFormat(locale_dateTime, utcFormats);

  function newFormat(specifier, formats) {
    return function(date) {
      var string = [],
          i = -1,
          j = 0,
          n = specifier.length,
          c,
          pad,
          format;

      if (!(date instanceof Date)) date = new Date(+date);

      while (++i < n) {
        if (specifier.charCodeAt(i) === 37) {
          string.push(specifier.slice(j, i));
          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);
          else pad = c === "e" ? " " : "0";
          if (format = formats[c]) c = format(date, pad);
          string.push(c);
          j = i + 1;
        }
      }

      string.push(specifier.slice(j, i));
      return string.join("");
    };
  }

  function newParse(specifier, Z) {
    return function(string) {
      var d = newDate(1900, undefined, 1),
          i = parseSpecifier(d, specifier, string += "", 0),
          week, day$1;
      if (i != string.length) return null;

      // If a UNIX timestamp is specified, return it.
      if ("Q" in d) return new Date(d.Q);
      if ("s" in d) return new Date(d.s * 1000 + ("L" in d ? d.L : 0));

      // If this is utcParse, never use the local timezone.
      if (Z && !("Z" in d)) d.Z = 0;

      // The am-pm flag is 0 for AM, and 1 for PM.
      if ("p" in d) d.H = d.H % 12 + d.p * 12;

      // If the month was not specified, inherit from the quarter.
      if (d.m === undefined) d.m = "q" in d ? d.q : 0;

      // Convert day-of-week and week-of-year to day-of-year.
      if ("V" in d) {
        if (d.V < 1 || d.V > 53) return null;
        if (!("w" in d)) d.w = 1;
        if ("Z" in d) {
          week = utcDate(newDate(d.y, 0, 1)), day$1 = week.getUTCDay();
          week = day$1 > 4 || day$1 === 0 ? utcMonday$1.ceil(week) : utcMonday$1(week);
          week = utcDay$1.offset(week, (d.V - 1) * 7);
          d.y = week.getUTCFullYear();
          d.m = week.getUTCMonth();
          d.d = week.getUTCDate() + (d.w + 6) % 7;
        } else {
          week = localDate(newDate(d.y, 0, 1)), day$1 = week.getDay();
          week = day$1 > 4 || day$1 === 0 ? monday$1.ceil(week) : monday$1(week);
          week = day.offset(week, (d.V - 1) * 7);
          d.y = week.getFullYear();
          d.m = week.getMonth();
          d.d = week.getDate() + (d.w + 6) % 7;
        }
      } else if ("W" in d || "U" in d) {
        if (!("w" in d)) d.w = "u" in d ? d.u % 7 : "W" in d ? 1 : 0;
        day$1 = "Z" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();
        d.m = 0;
        d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day$1 + 5) % 7 : d.w + d.U * 7 - (day$1 + 6) % 7;
      }

      // If a time zone is specified, all fields are interpreted as UTC and then
      // offset according to the specified time zone.
      if ("Z" in d) {
        d.H += d.Z / 100 | 0;
        d.M += d.Z % 100;
        return utcDate(d);
      }

      // Otherwise, all fields are in local time.
      return localDate(d);
    };
  }

  function parseSpecifier(d, specifier, string, j) {
    var i = 0,
        n = specifier.length,
        m = string.length,
        c,
        parse;

    while (i < n) {
      if (j >= m) return -1;
      c = specifier.charCodeAt(i++);
      if (c === 37) {
        c = specifier.charAt(i++);
        parse = parses[c in pads ? specifier.charAt(i++) : c];
        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;
      } else if (c != string.charCodeAt(j++)) {
        return -1;
      }
    }

    return j;
  }

  function parsePeriod(d, string, i) {
    var n = periodRe.exec(string.slice(i));
    return n ? (d.p = periodLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }

  function parseShortWeekday(d, string, i) {
    var n = shortWeekdayRe.exec(string.slice(i));
    return n ? (d.w = shortWeekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }

  function parseWeekday(d, string, i) {
    var n = weekdayRe.exec(string.slice(i));
    return n ? (d.w = weekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }

  function parseShortMonth(d, string, i) {
    var n = shortMonthRe.exec(string.slice(i));
    return n ? (d.m = shortMonthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }

  function parseMonth(d, string, i) {
    var n = monthRe.exec(string.slice(i));
    return n ? (d.m = monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }

  function parseLocaleDateTime(d, string, i) {
    return parseSpecifier(d, locale_dateTime, string, i);
  }

  function parseLocaleDate(d, string, i) {
    return parseSpecifier(d, locale_date, string, i);
  }

  function parseLocaleTime(d, string, i) {
    return parseSpecifier(d, locale_time, string, i);
  }

  function formatShortWeekday(d) {
    return locale_shortWeekdays[d.getDay()];
  }

  function formatWeekday(d) {
    return locale_weekdays[d.getDay()];
  }

  function formatShortMonth(d) {
    return locale_shortMonths[d.getMonth()];
  }

  function formatMonth(d) {
    return locale_months[d.getMonth()];
  }

  function formatPeriod(d) {
    return locale_periods[+(d.getHours() >= 12)];
  }

  function formatQuarter(d) {
    return 1 + ~~(d.getMonth() / 3);
  }

  function formatUTCShortWeekday(d) {
    return locale_shortWeekdays[d.getUTCDay()];
  }

  function formatUTCWeekday(d) {
    return locale_weekdays[d.getUTCDay()];
  }

  function formatUTCShortMonth(d) {
    return locale_shortMonths[d.getUTCMonth()];
  }

  function formatUTCMonth(d) {
    return locale_months[d.getUTCMonth()];
  }

  function formatUTCPeriod(d) {
    return locale_periods[+(d.getUTCHours() >= 12)];
  }

  function formatUTCQuarter(d) {
    return 1 + ~~(d.getUTCMonth() / 3);
  }

  return {
    format: function(specifier) {
      var f = newFormat(specifier += "", formats);
      f.toString = function() { return specifier; };
      return f;
    },
    parse: function(specifier) {
      var p = newParse(specifier += "", false);
      p.toString = function() { return specifier; };
      return p;
    },
    utcFormat: function(specifier) {
      var f = newFormat(specifier += "", utcFormats);
      f.toString = function() { return specifier; };
      return f;
    },
    utcParse: function(specifier) {
      var p = newParse(specifier += "", true);
      p.toString = function() { return specifier; };
      return p;
    }
  };
}

var pads = {"-": "", "_": " ", "0": "0"},
    numberRe = /^\s*\d+/, // note: ignores next directive
    percentRe = /^%/,
    requoteRe = /[\\^$*+?|[\]().{}]/g;

function pad(value, fill, width) {
  var sign = value < 0 ? "-" : "",
      string = (sign ? -value : value) + "",
      length = string.length;
  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
}

function requote(s) {
  return s.replace(requoteRe, "\\$&");
}

function formatRe(names) {
  return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
}

function formatLookup(names) {
  return new Map(names.map((name, i) => [name.toLowerCase(), i]));
}

function parseWeekdayNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.w = +n[0], i + n[0].length) : -1;
}

function parseWeekdayNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.u = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.U = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberISO(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.V = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.W = +n[0], i + n[0].length) : -1;
}

function parseFullYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 4));
  return n ? (d.y = +n[0], i + n[0].length) : -1;
}

function parseYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;
}

function parseZone(d, string, i) {
  var n = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string.slice(i, i + 6));
  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;
}

function parseQuarter(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;
}

function parseMonthNumber(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;
}

function parseDayOfMonth(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.d = +n[0], i + n[0].length) : -1;
}

function parseDayOfYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;
}

function parseHour24(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.H = +n[0], i + n[0].length) : -1;
}

function parseMinutes(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.M = +n[0], i + n[0].length) : -1;
}

function parseSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.S = +n[0], i + n[0].length) : -1;
}

function parseMilliseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.L = +n[0], i + n[0].length) : -1;
}

function parseMicroseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 6));
  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;
}

function parseLiteralPercent(d, string, i) {
  var n = percentRe.exec(string.slice(i, i + 1));
  return n ? i + n[0].length : -1;
}

function parseUnixTimestamp(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.Q = +n[0], i + n[0].length) : -1;
}

function parseUnixTimestampSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.s = +n[0], i + n[0].length) : -1;
}

function formatDayOfMonth(d, p) {
  return pad(d.getDate(), p, 2);
}

function formatHour24(d, p) {
  return pad(d.getHours(), p, 2);
}

function formatHour12(d, p) {
  return pad(d.getHours() % 12 || 12, p, 2);
}

function formatDayOfYear(d, p) {
  return pad(1 + day.count(year$1(d), d), p, 3);
}

function formatMilliseconds(d, p) {
  return pad(d.getMilliseconds(), p, 3);
}

function formatMicroseconds(d, p) {
  return formatMilliseconds(d, p) + "000";
}

function formatMonthNumber(d, p) {
  return pad(d.getMonth() + 1, p, 2);
}

function formatMinutes(d, p) {
  return pad(d.getMinutes(), p, 2);
}

function formatSeconds(d, p) {
  return pad(d.getSeconds(), p, 2);
}

function formatWeekdayNumberMonday(d) {
  var day = d.getDay();
  return day === 0 ? 7 : day;
}

function formatWeekNumberSunday(d, p) {
  return pad(sunday$1.count(year$1(d) - 1, d), p, 2);
}

function dISO(d) {
  var day = d.getDay();
  return (day >= 4 || day === 0) ? thursday$1(d) : thursday$1.ceil(d);
}

function formatWeekNumberISO(d, p) {
  d = dISO(d);
  return pad(thursday$1.count(year$1(d), d) + (year$1(d).getDay() === 4), p, 2);
}

function formatWeekdayNumberSunday(d) {
  return d.getDay();
}

function formatWeekNumberMonday(d, p) {
  return pad(monday$1.count(year$1(d) - 1, d), p, 2);
}

function formatYear(d, p) {
  return pad(d.getFullYear() % 100, p, 2);
}

function formatYearISO(d, p) {
  d = dISO(d);
  return pad(d.getFullYear() % 100, p, 2);
}

function formatFullYear(d, p) {
  return pad(d.getFullYear() % 10000, p, 4);
}

function formatFullYearISO(d, p) {
  var day = d.getDay();
  d = (day >= 4 || day === 0) ? thursday$1(d) : thursday$1.ceil(d);
  return pad(d.getFullYear() % 10000, p, 4);
}

function formatZone(d) {
  var z = d.getTimezoneOffset();
  return (z > 0 ? "-" : (z *= -1, "+"))
      + pad(z / 60 | 0, "0", 2)
      + pad(z % 60, "0", 2);
}

function formatUTCDayOfMonth(d, p) {
  return pad(d.getUTCDate(), p, 2);
}

function formatUTCHour24(d, p) {
  return pad(d.getUTCHours(), p, 2);
}

function formatUTCHour12(d, p) {
  return pad(d.getUTCHours() % 12 || 12, p, 2);
}

function formatUTCDayOfYear(d, p) {
  return pad(1 + utcDay$1.count(utcYear$1(d), d), p, 3);
}

function formatUTCMilliseconds(d, p) {
  return pad(d.getUTCMilliseconds(), p, 3);
}

function formatUTCMicroseconds(d, p) {
  return formatUTCMilliseconds(d, p) + "000";
}

function formatUTCMonthNumber(d, p) {
  return pad(d.getUTCMonth() + 1, p, 2);
}

function formatUTCMinutes(d, p) {
  return pad(d.getUTCMinutes(), p, 2);
}

function formatUTCSeconds(d, p) {
  return pad(d.getUTCSeconds(), p, 2);
}

function formatUTCWeekdayNumberMonday(d) {
  var dow = d.getUTCDay();
  return dow === 0 ? 7 : dow;
}

function formatUTCWeekNumberSunday(d, p) {
  return pad(utcSunday$1.count(utcYear$1(d) - 1, d), p, 2);
}

function UTCdISO(d) {
  var day = d.getUTCDay();
  return (day >= 4 || day === 0) ? utcThursday$1(d) : utcThursday$1.ceil(d);
}

function formatUTCWeekNumberISO(d, p) {
  d = UTCdISO(d);
  return pad(utcThursday$1.count(utcYear$1(d), d) + (utcYear$1(d).getUTCDay() === 4), p, 2);
}

function formatUTCWeekdayNumberSunday(d) {
  return d.getUTCDay();
}

function formatUTCWeekNumberMonday(d, p) {
  return pad(utcMonday$1.count(utcYear$1(d) - 1, d), p, 2);
}

function formatUTCYear(d, p) {
  return pad(d.getUTCFullYear() % 100, p, 2);
}

function formatUTCYearISO(d, p) {
  d = UTCdISO(d);
  return pad(d.getUTCFullYear() % 100, p, 2);
}

function formatUTCFullYear(d, p) {
  return pad(d.getUTCFullYear() % 10000, p, 4);
}

function formatUTCFullYearISO(d, p) {
  var day = d.getUTCDay();
  d = (day >= 4 || day === 0) ? utcThursday$1(d) : utcThursday$1.ceil(d);
  return pad(d.getUTCFullYear() % 10000, p, 4);
}

function formatUTCZone() {
  return "+0000";
}

function formatLiteralPercent() {
  return "%";
}

function formatUnixTimestamp(d) {
  return +d;
}

function formatUnixTimestampSeconds(d) {
  return Math.floor(+d / 1000);
}

var locale$2;
var timeFormat;
var timeParse;
var utcFormat;
var utcParse;

defaultLocale$1({
  dateTime: "%x, %X",
  date: "%-m/%-d/%Y",
  time: "%-I:%M:%S %p",
  periods: ["AM", "PM"],
  days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
  shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
  shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
});

function defaultLocale$1(definition) {
  locale$2 = formatLocale$1(definition);
  timeFormat = locale$2.format;
  timeParse = locale$2.parse;
  utcFormat = locale$2.utcFormat;
  utcParse = locale$2.utcParse;
  return locale$2;
}

function date(t) {
  return new Date(t);
}

function number(t) {
  return t instanceof Date ? +t : +new Date(+t);
}

function calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format) {
  var scale = continuous(),
      invert = scale.invert,
      domain = scale.domain;

  var formatMillisecond = format(".%L"),
      formatSecond = format(":%S"),
      formatMinute = format("%I:%M"),
      formatHour = format("%I %p"),
      formatDay = format("%a %d"),
      formatWeek = format("%b %d"),
      formatMonth = format("%B"),
      formatYear = format("%Y");

  function tickFormat(date) {
    return (second(date) < date ? formatMillisecond
        : minute(date) < date ? formatSecond
        : hour(date) < date ? formatMinute
        : day(date) < date ? formatHour
        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)
        : year(date) < date ? formatMonth
        : formatYear)(date);
  }

  scale.invert = function(y) {
    return new Date(invert(y));
  };

  scale.domain = function(_) {
    return arguments.length ? domain(Array.from(_, number)) : domain().map(date);
  };

  scale.ticks = function(interval) {
    var d = domain();
    return ticks(d[0], d[d.length - 1], interval == null ? 10 : interval);
  };

  scale.tickFormat = function(count, specifier) {
    return specifier == null ? tickFormat : format(specifier);
  };

  scale.nice = function(interval) {
    var d = domain();
    if (!interval || typeof interval.range !== "function") interval = tickInterval(d[0], d[d.length - 1], interval == null ? 10 : interval);
    return interval ? domain(nice(d, interval)) : scale;
  };

  scale.copy = function() {
    return copy(scale, calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format));
  };

  return scale;
}

function time() {
  return initRange.apply(calendar(timeTicks, timeTickInterval, year$2, month$1, sunday$2, day$1, hour$1, minute$1, second$1, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);
}

function utcTime() {
  return initRange.apply(calendar(utcTicks, utcTickInterval, utcYear$2, utcMonth$1, utcSunday$2, utcDay$2, utcHour$1, utcMinute$1, second$1, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);
}

function colors(specifier) {
  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;
  while (i < n) colors[i] = "#" + specifier.slice(i * 6, ++i * 6);
  return colors;
}

var schemeCategory10 = colors("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf");

var schemeAccent = colors("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666");

var schemeDark2 = colors("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666");

var schemePaired = colors("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928");

var schemePastel1 = colors("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2");

var schemePastel2 = colors("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc");

var schemeSet1 = colors("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999");

var schemeSet2 = colors("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3");

var schemeSet3 = colors("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f");

var ramp$1 = scheme => rgbBasis(scheme[scheme.length - 1]);

var scheme$q = new Array(3).concat(
  "d8b365f5f5f55ab4ac",
  "a6611adfc27d80cdc1018571",
  "a6611adfc27df5f5f580cdc1018571",
  "8c510ad8b365f6e8c3c7eae55ab4ac01665e",
  "8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e",
  "8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e",
  "8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e",
  "5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30",
  "5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30"
).map(colors);

var interpolateBrBG = ramp$1(scheme$q);

var scheme$p = new Array(3).concat(
  "af8dc3f7f7f77fbf7b",
  "7b3294c2a5cfa6dba0008837",
  "7b3294c2a5cff7f7f7a6dba0008837",
  "762a83af8dc3e7d4e8d9f0d37fbf7b1b7837",
  "762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837",
  "762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837",
  "762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837",
  "40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b",
  "40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b"
).map(colors);

var interpolatePRGn = ramp$1(scheme$p);

var scheme$o = new Array(3).concat(
  "e9a3c9f7f7f7a1d76a",
  "d01c8bf1b6dab8e1864dac26",
  "d01c8bf1b6daf7f7f7b8e1864dac26",
  "c51b7de9a3c9fde0efe6f5d0a1d76a4d9221",
  "c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221",
  "c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221",
  "c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221",
  "8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419",
  "8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419"
).map(colors);

var interpolatePiYG = ramp$1(scheme$o);

var scheme$n = new Array(3).concat(
  "998ec3f7f7f7f1a340",
  "5e3c99b2abd2fdb863e66101",
  "5e3c99b2abd2f7f7f7fdb863e66101",
  "542788998ec3d8daebfee0b6f1a340b35806",
  "542788998ec3d8daebf7f7f7fee0b6f1a340b35806",
  "5427888073acb2abd2d8daebfee0b6fdb863e08214b35806",
  "5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806",
  "2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08",
  "2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08"
).map(colors);

var interpolatePuOr = ramp$1(scheme$n);

var scheme$m = new Array(3).concat(
  "ef8a62f7f7f767a9cf",
  "ca0020f4a58292c5de0571b0",
  "ca0020f4a582f7f7f792c5de0571b0",
  "b2182bef8a62fddbc7d1e5f067a9cf2166ac",
  "b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac",
  "b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac",
  "b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac",
  "67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061",
  "67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061"
).map(colors);

var interpolateRdBu = ramp$1(scheme$m);

var scheme$l = new Array(3).concat(
  "ef8a62ffffff999999",
  "ca0020f4a582bababa404040",
  "ca0020f4a582ffffffbababa404040",
  "b2182bef8a62fddbc7e0e0e09999994d4d4d",
  "b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d",
  "b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d",
  "b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d",
  "67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a",
  "67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a"
).map(colors);

var interpolateRdGy = ramp$1(scheme$l);

var scheme$k = new Array(3).concat(
  "fc8d59ffffbf91bfdb",
  "d7191cfdae61abd9e92c7bb6",
  "d7191cfdae61ffffbfabd9e92c7bb6",
  "d73027fc8d59fee090e0f3f891bfdb4575b4",
  "d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4",
  "d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4",
  "d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4",
  "a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695",
  "a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695"
).map(colors);

var interpolateRdYlBu = ramp$1(scheme$k);

var scheme$j = new Array(3).concat(
  "fc8d59ffffbf91cf60",
  "d7191cfdae61a6d96a1a9641",
  "d7191cfdae61ffffbfa6d96a1a9641",
  "d73027fc8d59fee08bd9ef8b91cf601a9850",
  "d73027fc8d59fee08bffffbfd9ef8b91cf601a9850",
  "d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850",
  "d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850",
  "a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837",
  "a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837"
).map(colors);

var interpolateRdYlGn = ramp$1(scheme$j);

var scheme$i = new Array(3).concat(
  "fc8d59ffffbf99d594",
  "d7191cfdae61abdda42b83ba",
  "d7191cfdae61ffffbfabdda42b83ba",
  "d53e4ffc8d59fee08be6f59899d5943288bd",
  "d53e4ffc8d59fee08bffffbfe6f59899d5943288bd",
  "d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd",
  "d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd",
  "9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2",
  "9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2"
).map(colors);

var interpolateSpectral = ramp$1(scheme$i);

var scheme$h = new Array(3).concat(
  "e5f5f999d8c92ca25f",
  "edf8fbb2e2e266c2a4238b45",
  "edf8fbb2e2e266c2a42ca25f006d2c",
  "edf8fbccece699d8c966c2a42ca25f006d2c",
  "edf8fbccece699d8c966c2a441ae76238b45005824",
  "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824",
  "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b"
).map(colors);

var interpolateBuGn = ramp$1(scheme$h);

var scheme$g = new Array(3).concat(
  "e0ecf49ebcda8856a7",
  "edf8fbb3cde38c96c688419d",
  "edf8fbb3cde38c96c68856a7810f7c",
  "edf8fbbfd3e69ebcda8c96c68856a7810f7c",
  "edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b",
  "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b",
  "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b"
).map(colors);

var interpolateBuPu = ramp$1(scheme$g);

var scheme$f = new Array(3).concat(
  "e0f3dba8ddb543a2ca",
  "f0f9e8bae4bc7bccc42b8cbe",
  "f0f9e8bae4bc7bccc443a2ca0868ac",
  "f0f9e8ccebc5a8ddb57bccc443a2ca0868ac",
  "f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e",
  "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e",
  "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081"
).map(colors);

var interpolateGnBu = ramp$1(scheme$f);

var scheme$e = new Array(3).concat(
  "fee8c8fdbb84e34a33",
  "fef0d9fdcc8afc8d59d7301f",
  "fef0d9fdcc8afc8d59e34a33b30000",
  "fef0d9fdd49efdbb84fc8d59e34a33b30000",
  "fef0d9fdd49efdbb84fc8d59ef6548d7301f990000",
  "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000",
  "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000"
).map(colors);

var interpolateOrRd = ramp$1(scheme$e);

var scheme$d = new Array(3).concat(
  "ece2f0a6bddb1c9099",
  "f6eff7bdc9e167a9cf02818a",
  "f6eff7bdc9e167a9cf1c9099016c59",
  "f6eff7d0d1e6a6bddb67a9cf1c9099016c59",
  "f6eff7d0d1e6a6bddb67a9cf3690c002818a016450",
  "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450",
  "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636"
).map(colors);

var interpolatePuBuGn = ramp$1(scheme$d);

var scheme$c = new Array(3).concat(
  "ece7f2a6bddb2b8cbe",
  "f1eef6bdc9e174a9cf0570b0",
  "f1eef6bdc9e174a9cf2b8cbe045a8d",
  "f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d",
  "f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b",
  "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b",
  "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858"
).map(colors);

var interpolatePuBu = ramp$1(scheme$c);

var scheme$b = new Array(3).concat(
  "e7e1efc994c7dd1c77",
  "f1eef6d7b5d8df65b0ce1256",
  "f1eef6d7b5d8df65b0dd1c77980043",
  "f1eef6d4b9dac994c7df65b0dd1c77980043",
  "f1eef6d4b9dac994c7df65b0e7298ace125691003f",
  "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f",
  "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f"
).map(colors);

var interpolatePuRd = ramp$1(scheme$b);

var scheme$a = new Array(3).concat(
  "fde0ddfa9fb5c51b8a",
  "feebe2fbb4b9f768a1ae017e",
  "feebe2fbb4b9f768a1c51b8a7a0177",
  "feebe2fcc5c0fa9fb5f768a1c51b8a7a0177",
  "feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177",
  "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177",
  "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a"
).map(colors);

var interpolateRdPu = ramp$1(scheme$a);

var scheme$9 = new Array(3).concat(
  "edf8b17fcdbb2c7fb8",
  "ffffcca1dab441b6c4225ea8",
  "ffffcca1dab441b6c42c7fb8253494",
  "ffffccc7e9b47fcdbb41b6c42c7fb8253494",
  "ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84",
  "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84",
  "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58"
).map(colors);

var interpolateYlGnBu = ramp$1(scheme$9);

var scheme$8 = new Array(3).concat(
  "f7fcb9addd8e31a354",
  "ffffccc2e69978c679238443",
  "ffffccc2e69978c67931a354006837",
  "ffffccd9f0a3addd8e78c67931a354006837",
  "ffffccd9f0a3addd8e78c67941ab5d238443005a32",
  "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32",
  "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529"
).map(colors);

var interpolateYlGn = ramp$1(scheme$8);

var scheme$7 = new Array(3).concat(
  "fff7bcfec44fd95f0e",
  "ffffd4fed98efe9929cc4c02",
  "ffffd4fed98efe9929d95f0e993404",
  "ffffd4fee391fec44ffe9929d95f0e993404",
  "ffffd4fee391fec44ffe9929ec7014cc4c028c2d04",
  "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04",
  "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506"
).map(colors);

var interpolateYlOrBr = ramp$1(scheme$7);

var scheme$6 = new Array(3).concat(
  "ffeda0feb24cf03b20",
  "ffffb2fecc5cfd8d3ce31a1c",
  "ffffb2fecc5cfd8d3cf03b20bd0026",
  "ffffb2fed976feb24cfd8d3cf03b20bd0026",
  "ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026",
  "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026",
  "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026"
).map(colors);

var interpolateYlOrRd = ramp$1(scheme$6);

var scheme$5 = new Array(3).concat(
  "deebf79ecae13182bd",
  "eff3ffbdd7e76baed62171b5",
  "eff3ffbdd7e76baed63182bd08519c",
  "eff3ffc6dbef9ecae16baed63182bd08519c",
  "eff3ffc6dbef9ecae16baed64292c62171b5084594",
  "f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594",
  "f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b"
).map(colors);

var interpolateBlues = ramp$1(scheme$5);

var scheme$4 = new Array(3).concat(
  "e5f5e0a1d99b31a354",
  "edf8e9bae4b374c476238b45",
  "edf8e9bae4b374c47631a354006d2c",
  "edf8e9c7e9c0a1d99b74c47631a354006d2c",
  "edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32",
  "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32",
  "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b"
).map(colors);

var interpolateGreens = ramp$1(scheme$4);

var scheme$3 = new Array(3).concat(
  "f0f0f0bdbdbd636363",
  "f7f7f7cccccc969696525252",
  "f7f7f7cccccc969696636363252525",
  "f7f7f7d9d9d9bdbdbd969696636363252525",
  "f7f7f7d9d9d9bdbdbd969696737373525252252525",
  "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525",
  "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000"
).map(colors);

var interpolateGreys = ramp$1(scheme$3);

var scheme$2 = new Array(3).concat(
  "efedf5bcbddc756bb1",
  "f2f0f7cbc9e29e9ac86a51a3",
  "f2f0f7cbc9e29e9ac8756bb154278f",
  "f2f0f7dadaebbcbddc9e9ac8756bb154278f",
  "f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486",
  "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486",
  "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d"
).map(colors);

var interpolatePurples = ramp$1(scheme$2);

var scheme$1 = new Array(3).concat(
  "fee0d2fc9272de2d26",
  "fee5d9fcae91fb6a4acb181d",
  "fee5d9fcae91fb6a4ade2d26a50f15",
  "fee5d9fcbba1fc9272fb6a4ade2d26a50f15",
  "fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d",
  "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d",
  "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d"
).map(colors);

var interpolateReds = ramp$1(scheme$1);

var scheme = new Array(3).concat(
  "fee6cefdae6be6550d",
  "feeddefdbe85fd8d3cd94701",
  "feeddefdbe85fd8d3ce6550da63603",
  "feeddefdd0a2fdae6bfd8d3ce6550da63603",
  "feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04",
  "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04",
  "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704"
).map(colors);

var interpolateOranges = ramp$1(scheme);

function interpolateCividis(t) {
  t = Math.max(0, Math.min(1, t));
  return "rgb("
      + Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57))))))) + ", "
      + Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37))))))) + ", "
      + Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67)))))))
      + ")";
}

var interpolateCubehelixDefault = cubehelixLong(cubehelix$1(300, 0.5, 0.0), cubehelix$1(-240, 0.5, 1.0));

var warm = cubehelixLong(cubehelix$1(-100, 0.75, 0.35), cubehelix$1(80, 1.50, 0.8));

var cool = cubehelixLong(cubehelix$1(260, 0.75, 0.35), cubehelix$1(80, 1.50, 0.8));

var c$2 = cubehelix$1();

function interpolateRainbow(t) {
  if (t < 0 || t > 1) t -= Math.floor(t);
  var ts = Math.abs(t - 0.5);
  c$2.h = 360 * t - 100;
  c$2.s = 1.5 - 1.5 * ts;
  c$2.l = 0.8 - 0.9 * ts;
  return c$2 + "";
}

var c$1 = rgb$1(),
    pi_1_3 = Math.PI / 3,
    pi_2_3 = Math.PI * 2 / 3;

function interpolateSinebow(t) {
  var x;
  t = (0.5 - t) * Math.PI;
  c$1.r = 255 * (x = Math.sin(t)) * x;
  c$1.g = 255 * (x = Math.sin(t + pi_1_3)) * x;
  c$1.b = 255 * (x = Math.sin(t + pi_2_3)) * x;
  return c$1 + "";
}

function interpolateTurbo(t) {
  t = Math.max(0, Math.min(1, t));
  return "rgb("
      + Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05))))))) + ", "
      + Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56))))))) + ", "
      + Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66)))))))
      + ")";
}

function ramp(range) {
  var n = range.length;
  return function(t) {
    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
  };
}

var interpolateViridis = ramp(colors("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));

var magma = ramp(colors("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));

var inferno = ramp(colors("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));

var plasma = ramp(colors("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

var _setCacheAdd = setCacheAdd;

/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

var _setCacheHas = setCacheHas;

/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
  var index = -1,
      length = values == null ? 0 : values.length;

  this.__data__ = new _MapCache;
  while (++index < length) {
    this.add(values[index]);
  }
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = _setCacheAdd;
SetCache.prototype.has = _setCacheHas;

var _SetCache = SetCache;

/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length,
      index = fromIndex + (fromRight ? 1 : -1);

  while ((fromRight ? index-- : ++index < length)) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }
  return -1;
}

var _baseFindIndex = baseFindIndex;

/**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */
function baseIsNaN(value) {
  return value !== value;
}

var _baseIsNaN = baseIsNaN;

/**
 * A specialized version of `_.indexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function strictIndexOf(array, value, fromIndex) {
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }
  return -1;
}

var _strictIndexOf = strictIndexOf;

/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOf(array, value, fromIndex) {
  return value === value
    ? _strictIndexOf(array, value, fromIndex)
    : _baseFindIndex(array, _baseIsNaN, fromIndex);
}

var _baseIndexOf = baseIndexOf;

/**
 * A specialized version of `_.includes` for arrays without support for
 * specifying an index to search from.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludes(array, value) {
  var length = array == null ? 0 : array.length;
  return !!length && _baseIndexOf(array, value, 0) > -1;
}

var _arrayIncludes = arrayIncludes;

/**
 * This function is like `arrayIncludes` except that it accepts a comparator.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludesWith(array, value, comparator) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (comparator(value, array[index])) {
      return true;
    }
  }
  return false;
}

var _arrayIncludesWith = arrayIncludesWith;

/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

var _cacheHas = cacheHas;

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE$1 = 200;

/**
 * The base implementation of methods like `_.difference` without support
 * for excluding multiple arrays or iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Array} values The values to exclude.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of filtered values.
 */
function baseDifference(array, values, iteratee, comparator) {
  var index = -1,
      includes = _arrayIncludes,
      isCommon = true,
      length = array.length,
      result = [],
      valuesLength = values.length;

  if (!length) {
    return result;
  }
  if (iteratee) {
    values = _arrayMap(values, _baseUnary(iteratee));
  }
  if (comparator) {
    includes = _arrayIncludesWith;
    isCommon = false;
  }
  else if (values.length >= LARGE_ARRAY_SIZE$1) {
    includes = _cacheHas;
    isCommon = false;
    values = new _SetCache(values);
  }
  outer:
  while (++index < length) {
    var value = array[index],
        computed = iteratee == null ? value : iteratee(value);

    value = (comparator || value !== 0) ? value : 0;
    if (isCommon && computed === computed) {
      var valuesIndex = valuesLength;
      while (valuesIndex--) {
        if (values[valuesIndex] === computed) {
          continue outer;
        }
      }
      result.push(value);
    }
    else if (!includes(values, computed, comparator)) {
      result.push(value);
    }
  }
  return result;
}

var _baseDifference = baseDifference;

/**
 * Creates an array excluding all given values using
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * **Note:** Unlike `_.pull`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {...*} [values] The values to exclude.
 * @returns {Array} Returns the new array of filtered values.
 * @see _.difference, _.xor
 * @example
 *
 * _.without([2, 1, 2, 3], 1, 2);
 * // => [3]
 */
var without = _baseRest(function(array, values) {
  return isArrayLikeObject_1(array)
    ? _baseDifference(array, values)
    : [];
});

var without_1 = without;

var pi$1 = Math.PI,
    tau$2 = 2 * pi$1,
    epsilon$3 = 1e-6,
    tauEpsilon = tau$2 - epsilon$3;

function Path$1() {
  this._x0 = this._y0 = // start of current subpath
  this._x1 = this._y1 = null; // end of current subpath
  this._ = "";
}

function path() {
  return new Path$1;
}

Path$1.prototype = path.prototype = {
  constructor: Path$1,
  moveTo: function(x, y) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y);
  },
  closePath: function() {
    if (this._x1 !== null) {
      this._x1 = this._x0, this._y1 = this._y0;
      this._ += "Z";
    }
  },
  lineTo: function(x, y) {
    this._ += "L" + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  quadraticCurveTo: function(x1, y1, x, y) {
    this._ += "Q" + (+x1) + "," + (+y1) + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  bezierCurveTo: function(x1, y1, x2, y2, x, y) {
    this._ += "C" + (+x1) + "," + (+y1) + "," + (+x2) + "," + (+y2) + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  arcTo: function(x1, y1, x2, y2, r) {
    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
    var x0 = this._x1,
        y0 = this._y1,
        x21 = x2 - x1,
        y21 = y2 - y1,
        x01 = x0 - x1,
        y01 = y0 - y1,
        l01_2 = x01 * x01 + y01 * y01;

    // Is the radius negative? Error.
    if (r < 0) throw new Error("negative radius: " + r);

    // Is this path empty? Move to (x1,y1).
    if (this._x1 === null) {
      this._ += "M" + (this._x1 = x1) + "," + (this._y1 = y1);
    }

    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.
    else if (!(l01_2 > epsilon$3));

    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?
    // Equivalently, is (x1,y1) coincident with (x2,y2)?
    // Or, is the radius zero? Line to (x1,y1).
    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$3) || !r) {
      this._ += "L" + (this._x1 = x1) + "," + (this._y1 = y1);
    }

    // Otherwise, draw an arc!
    else {
      var x20 = x2 - x0,
          y20 = y2 - y0,
          l21_2 = x21 * x21 + y21 * y21,
          l20_2 = x20 * x20 + y20 * y20,
          l21 = Math.sqrt(l21_2),
          l01 = Math.sqrt(l01_2),
          l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),
          t01 = l / l01,
          t21 = l / l21;

      // If the start tangent is not coincident with (x0,y0), line to.
      if (Math.abs(t01 - 1) > epsilon$3) {
        this._ += "L" + (x1 + t01 * x01) + "," + (y1 + t01 * y01);
      }

      this._ += "A" + r + "," + r + ",0,0," + (+(y01 * x20 > x01 * y20)) + "," + (this._x1 = x1 + t21 * x21) + "," + (this._y1 = y1 + t21 * y21);
    }
  },
  arc: function(x, y, r, a0, a1, ccw) {
    x = +x, y = +y, r = +r, ccw = !!ccw;
    var dx = r * Math.cos(a0),
        dy = r * Math.sin(a0),
        x0 = x + dx,
        y0 = y + dy,
        cw = 1 ^ ccw,
        da = ccw ? a0 - a1 : a1 - a0;

    // Is the radius negative? Error.
    if (r < 0) throw new Error("negative radius: " + r);

    // Is this path empty? Move to (x0,y0).
    if (this._x1 === null) {
      this._ += "M" + x0 + "," + y0;
    }

    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).
    else if (Math.abs(this._x1 - x0) > epsilon$3 || Math.abs(this._y1 - y0) > epsilon$3) {
      this._ += "L" + x0 + "," + y0;
    }

    // Is this arc empty? We’re done.
    if (!r) return;

    // Does the angle go the wrong way? Flip the direction.
    if (da < 0) da = da % tau$2 + tau$2;

    // Is this a complete circle? Draw two arcs to complete the circle.
    if (da > tauEpsilon) {
      this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x - dx) + "," + (y - dy) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0);
    }

    // Is this arc non-empty? Draw an arc!
    else if (da > epsilon$3) {
      this._ += "A" + r + "," + r + ",0," + (+(da >= pi$1)) + "," + cw + "," + (this._x1 = x + r * Math.cos(a1)) + "," + (this._y1 = y + r * Math.sin(a1));
    }
  },
  rect: function(x, y, w, h) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y) + "h" + (+w) + "v" + (+h) + "h" + (-w) + "Z";
  },
  toString: function() {
    return this._;
  }
};

function constant(x) {
  return function constant() {
    return x;
  };
}

var epsilon$2 = 1e-12;

function Linear(context) {
  this._context = context;
}

Linear.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; // proceed
      default: this._context.lineTo(x, y); break;
    }
  }
};

function curveLinear(context) {
  return new Linear(context);
}

function x(p) {
  return p[0];
}

function y$1(p) {
  return p[1];
}

function line() {
  var x$1 = x,
      y = y$1,
      defined = constant(true),
      context = null,
      curve = curveLinear,
      output = null;

  function line(data) {
    var i,
        n = data.length,
        d,
        defined0 = false,
        buffer;

    if (context == null) output = curve(buffer = path());

    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) output.lineStart();
        else output.lineEnd();
      }
      if (defined0) output.point(+x$1(d, i, data), +y(d, i, data));
    }

    if (buffer) return output = null, buffer + "" || null;
  }

  line.x = function(_) {
    return arguments.length ? (x$1 = typeof _ === "function" ? _ : constant(+_), line) : x$1;
  };

  line.y = function(_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : constant(+_), line) : y;
  };

  line.defined = function(_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : constant(!!_), line) : defined;
  };

  line.curve = function(_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;
  };

  line.context = function(_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;
  };

  return line;
}

function area() {
  var x0 = x,
      x1 = null,
      y0 = constant(0),
      y1 = y$1,
      defined = constant(true),
      context = null,
      curve = curveLinear,
      output = null;

  function area(data) {
    var i,
        j,
        k,
        n = data.length,
        d,
        defined0 = false,
        buffer,
        x0z = new Array(n),
        y0z = new Array(n);

    if (context == null) output = curve(buffer = path());

    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) {
          j = i;
          output.areaStart();
          output.lineStart();
        } else {
          output.lineEnd();
          output.lineStart();
          for (k = i - 1; k >= j; --k) {
            output.point(x0z[k], y0z[k]);
          }
          output.lineEnd();
          output.areaEnd();
        }
      }
      if (defined0) {
        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);
        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);
      }
    }

    if (buffer) return output = null, buffer + "" || null;
  }

  function arealine() {
    return line().defined(defined).curve(curve).context(context);
  }

  area.x = function(_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : constant(+_), x1 = null, area) : x0;
  };

  area.x0 = function(_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : constant(+_), area) : x0;
  };

  area.x1 = function(_) {
    return arguments.length ? (x1 = _ == null ? null : typeof _ === "function" ? _ : constant(+_), area) : x1;
  };

  area.y = function(_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : constant(+_), y1 = null, area) : y0;
  };

  area.y0 = function(_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : constant(+_), area) : y0;
  };

  area.y1 = function(_) {
    return arguments.length ? (y1 = _ == null ? null : typeof _ === "function" ? _ : constant(+_), area) : y1;
  };

  area.lineX0 =
  area.lineY0 = function() {
    return arealine().x(x0).y(y0);
  };

  area.lineY1 = function() {
    return arealine().x(x0).y(y1);
  };

  area.lineX1 = function() {
    return arealine().x(x1).y(y0);
  };

  area.defined = function(_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : constant(!!_), area) : defined;
  };

  area.curve = function(_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;
  };

  area.context = function(_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;
  };

  return area;
}

function noop$2() {}

function point$3(that, x, y) {
  that._context.bezierCurveTo(
    (2 * that._x0 + that._x1) / 3,
    (2 * that._y0 + that._y1) / 3,
    (that._x0 + 2 * that._x1) / 3,
    (that._y0 + 2 * that._y1) / 3,
    (that._x0 + 4 * that._x1 + x) / 6,
    (that._y0 + 4 * that._y1 + y) / 6
  );
}

function Basis(context) {
  this._context = context;
}

Basis.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 =
    this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 3: point$3(this, this._x1, this._y1); // proceed
      case 2: this._context.lineTo(this._x1, this._y1); break;
    }
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; break;
      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed
      default: point$3(this, x, y); break;
    }
    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

function curveBasis(context) {
  return new Basis(context);
}

function BasisClosed(context) {
  this._context = context;
}

BasisClosed.prototype = {
  areaStart: noop$2,
  areaEnd: noop$2,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =
    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x2, this._y2);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);
        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x2, this._y2);
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        break;
      }
    }
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;
      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;
      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;
      default: point$3(this, x, y); break;
    }
    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

function curveBasisClosed(context) {
  return new BasisClosed(context);
}

function BasisOpen(context) {
  this._context = context;
}

BasisOpen.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 =
    this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; break;
      case 1: this._point = 2; break;
      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;
      case 3: this._point = 4; // proceed
      default: point$3(this, x, y); break;
    }
    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

function curveBasisOpen(context) {
  return new BasisOpen(context);
}

function Bundle(context, beta) {
  this._basis = new Basis(context);
  this._beta = beta;
}

Bundle.prototype = {
  lineStart: function() {
    this._x = [];
    this._y = [];
    this._basis.lineStart();
  },
  lineEnd: function() {
    var x = this._x,
        y = this._y,
        j = x.length - 1;

    if (j > 0) {
      var x0 = x[0],
          y0 = y[0],
          dx = x[j] - x0,
          dy = y[j] - y0,
          i = -1,
          t;

      while (++i <= j) {
        t = i / j;
        this._basis.point(
          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),
          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)
        );
      }
    }

    this._x = this._y = null;
    this._basis.lineEnd();
  },
  point: function(x, y) {
    this._x.push(+x);
    this._y.push(+y);
  }
};

var curveBundle = (function custom(beta) {

  function bundle(context) {
    return beta === 1 ? new Basis(context) : new Bundle(context, beta);
  }

  bundle.beta = function(beta) {
    return custom(+beta);
  };

  return bundle;
})(0.85);

function point$2(that, x, y) {
  that._context.bezierCurveTo(
    that._x1 + that._k * (that._x2 - that._x0),
    that._y1 + that._k * (that._y2 - that._y0),
    that._x2 + that._k * (that._x1 - x),
    that._y2 + that._k * (that._y1 - y),
    that._x2,
    that._y2
  );
}

function Cardinal(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

Cardinal.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 =
    this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2: this._context.lineTo(this._x2, this._y2); break;
      case 3: point$2(this, this._x1, this._y1); break;
    }
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;
      case 2: this._point = 3; // proceed
      default: point$2(this, x, y); break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var curveCardinal = (function custom(tension) {

  function cardinal(context) {
    return new Cardinal(context, tension);
  }

  cardinal.tension = function(tension) {
    return custom(+tension);
  };

  return cardinal;
})(0);

function CardinalClosed(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

CardinalClosed.prototype = {
  areaStart: noop$2,
  areaEnd: noop$2,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =
    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.lineTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        this.point(this._x5, this._y5);
        break;
      }
    }
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;
      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;
      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;
      default: point$2(this, x, y); break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var curveCardinalClosed = (function custom(tension) {

  function cardinal(context) {
    return new CardinalClosed(context, tension);
  }

  cardinal.tension = function(tension) {
    return custom(+tension);
  };

  return cardinal;
})(0);

function CardinalOpen(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

CardinalOpen.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 =
    this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; break;
      case 1: this._point = 2; break;
      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;
      case 3: this._point = 4; // proceed
      default: point$2(this, x, y); break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var curveCardinalOpen = (function custom(tension) {

  function cardinal(context) {
    return new CardinalOpen(context, tension);
  }

  cardinal.tension = function(tension) {
    return custom(+tension);
  };

  return cardinal;
})(0);

function point$1(that, x, y) {
  var x1 = that._x1,
      y1 = that._y1,
      x2 = that._x2,
      y2 = that._y2;

  if (that._l01_a > epsilon$2) {
    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,
        n = 3 * that._l01_a * (that._l01_a + that._l12_a);
    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;
    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;
  }

  if (that._l23_a > epsilon$2) {
    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,
        m = 3 * that._l23_a * (that._l23_a + that._l12_a);
    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;
    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;
  }

  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);
}

function CatmullRom(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRom.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 =
    this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a =
    this._l01_2a = this._l12_2a = this._l23_2a =
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2: this._context.lineTo(this._x2, this._y2); break;
      case 3: this.point(this._x2, this._y2); break;
    }
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; break;
      case 2: this._point = 3; // proceed
      default: point$1(this, x, y); break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var curveCatmullRom = (function custom(alpha) {

  function catmullRom(context) {
    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);
  }

  catmullRom.alpha = function(alpha) {
    return custom(+alpha);
  };

  return catmullRom;
})(0.5);

function CatmullRomClosed(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRomClosed.prototype = {
  areaStart: noop$2,
  areaEnd: noop$2,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =
    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._l01_a = this._l12_a = this._l23_a =
    this._l01_2a = this._l12_2a = this._l23_2a =
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.lineTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        this.point(this._x5, this._y5);
        break;
      }
    }
  },
  point: function(x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;
      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;
      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;
      default: point$1(this, x, y); break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var curveCatmullRomClosed = (function custom(alpha) {

  function catmullRom(context) {
    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);
  }

  catmullRom.alpha = function(alpha) {
    return custom(+alpha);
  };

  return catmullRom;
})(0.5);

function CatmullRomOpen(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRomOpen.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 =
    this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a =
    this._l01_2a = this._l12_2a = this._l23_2a =
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0: this._point = 1; break;
      case 1: this._point = 2; break;
      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;
      case 3: this._point = 4; // proceed
      default: point$1(this, x, y); break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var curveCatmullRomOpen = (function custom(alpha) {

  function catmullRom(context) {
    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);
  }

  catmullRom.alpha = function(alpha) {
    return custom(+alpha);
  };

  return catmullRom;
})(0.5);

function LinearClosed(context) {
  this._context = context;
}

LinearClosed.prototype = {
  areaStart: noop$2,
  areaEnd: noop$2,
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._point) this._context.closePath();
  },
  point: function(x, y) {
    x = +x, y = +y;
    if (this._point) this._context.lineTo(x, y);
    else this._point = 1, this._context.moveTo(x, y);
  }
};

function curveLinearClosed(context) {
  return new LinearClosed(context);
}

function sign$1(x) {
  return x < 0 ? -1 : 1;
}

// Calculate the slopes of the tangents (Hermite-type interpolation) based on
// the following paper: Steffen, M. 1990. A Simple Method for Monotonic
// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.
// NOV(II), P. 443, 1990.
function slope3(that, x2, y2) {
  var h0 = that._x1 - that._x0,
      h1 = x2 - that._x1,
      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),
      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),
      p = (s0 * h1 + s1 * h0) / (h0 + h1);
  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
}

// Calculate a one-sided slope.
function slope2(that, t) {
  var h = that._x1 - that._x0;
  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;
}

// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations
// "you can express cubic Hermite interpolation in terms of cubic Bézier curves
// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1".
function point(that, t0, t1) {
  var x0 = that._x0,
      y0 = that._y0,
      x1 = that._x1,
      y1 = that._y1,
      dx = (x1 - x0) / 3;
  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);
}

function MonotoneX(context) {
  this._context = context;
}

MonotoneX.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 =
    this._y0 = this._y1 =
    this._t0 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2: this._context.lineTo(this._x1, this._y1); break;
      case 3: point(this, this._t0, slope2(this, this._t0)); break;
    }
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    var t1 = NaN;

    x = +x, y = +y;
    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.
    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; break;
      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;
      default: point(this, this._t0, t1 = slope3(this, x, y)); break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
    this._t0 = t1;
  }
};

function MonotoneY(context) {
  this._context = new ReflectContext(context);
}

(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {
  MonotoneX.prototype.point.call(this, y, x);
};

function ReflectContext(context) {
  this._context = context;
}

ReflectContext.prototype = {
  moveTo: function(x, y) { this._context.moveTo(y, x); },
  closePath: function() { this._context.closePath(); },
  lineTo: function(x, y) { this._context.lineTo(y, x); },
  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }
};

function monotoneX(context) {
  return new MonotoneX(context);
}

function monotoneY(context) {
  return new MonotoneY(context);
}

function Natural(context) {
  this._context = context;
}

Natural.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x = [];
    this._y = [];
  },
  lineEnd: function() {
    var x = this._x,
        y = this._y,
        n = x.length;

    if (n) {
      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);
      if (n === 2) {
        this._context.lineTo(x[1], y[1]);
      } else {
        var px = controlPoints(x),
            py = controlPoints(y);
        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {
          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);
        }
      }
    }

    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();
    this._line = 1 - this._line;
    this._x = this._y = null;
  },
  point: function(x, y) {
    this._x.push(+x);
    this._y.push(+y);
  }
};

// See https://www.particleincell.com/2012/bezier-splines/ for derivation.
function controlPoints(x) {
  var i,
      n = x.length - 1,
      m,
      a = new Array(n),
      b = new Array(n),
      r = new Array(n);
  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];
  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];
  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];
  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];
  a[n - 1] = r[n - 1] / b[n - 1];
  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];
  b[n - 1] = (x[n] + a[n - 1]) / 2;
  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];
  return [a, b];
}

function curveNatural(context) {
  return new Natural(context);
}

function Step(context, t) {
  this._context = context;
  this._t = t;
}

Step.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x = this._y = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; // proceed
      default: {
        if (this._t <= 0) {
          this._context.lineTo(this._x, y);
          this._context.lineTo(x, y);
        } else {
          var x1 = this._x * (1 - this._t) + x * this._t;
          this._context.lineTo(x1, this._y);
          this._context.lineTo(x1, y);
        }
        break;
      }
    }
    this._x = x, this._y = y;
  }
};

function curveStep(context) {
  return new Step(context, 0.5);
}

function stepBefore(context) {
  return new Step(context, 0);
}

function stepAfter(context) {
  return new Step(context, 1);
}

function stackOffsetNone(series, order) {
  if (!((n = series.length) > 1)) return;
  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {
    s0 = s1, s1 = series[order[i]];
    for (j = 0; j < m; ++j) {
      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];
    }
  }
}

function stackOrderNone(series) {
  var n = series.length, o = new Array(n);
  while (--n >= 0) o[n] = n;
  return o;
}

function stackOffsetExpand(series, order) {
  if (!((n = series.length) > 0)) return;
  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {
    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;
    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;
  }
  stackOffsetNone(series, order);
}

function stackOffsetDiverging(series, order) {
  if (!((n = series.length) > 0)) return;
  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {
    for (yp = yn = 0, i = 0; i < n; ++i) {
      if ((dy = (d = series[order[i]][j])[1] - d[0]) > 0) {
        d[0] = yp, d[1] = yp += dy;
      } else if (dy < 0) {
        d[1] = yn, d[0] = yn += dy;
      } else {
        d[0] = 0, d[1] = dy;
      }
    }
  }
}

function stackOffsetSilhouette(series, order) {
  if (!((n = series.length) > 0)) return;
  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {
    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;
    s0[j][1] += s0[j][0] = -y / 2;
  }
  stackOffsetNone(series, order);
}

function stackOffsetWiggle(series, order) {
  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;
  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {
    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {
      var si = series[order[i]],
          sij0 = si[j][1] || 0,
          sij1 = si[j - 1][1] || 0,
          s3 = (sij0 - sij1) / 2;
      for (var k = 0; k < i; ++k) {
        var sk = series[order[k]],
            skj0 = sk[j][1] || 0,
            skj1 = sk[j - 1][1] || 0;
        s3 += skj0 - skj1;
      }
      s1 += sij0, s2 += s3 * sij0;
    }
    s0[j - 1][1] += s0[j - 1][0] = y;
    if (s1) y -= s2 / s1;
  }
  s0[j - 1][1] += s0[j - 1][0] = y;
  stackOffsetNone(series, order);
}

function appearance(series) {
  var peaks = series.map(peak);
  return stackOrderNone(series).sort(function(a, b) { return peaks[a] - peaks[b]; });
}

function peak(series) {
  var i = -1, j = 0, n = series.length, vi, vj = -Infinity;
  while (++i < n) if ((vi = +series[i][1]) > vj) vj = vi, j = i;
  return j;
}

function stackOrderAscending(series) {
  var sums = series.map(sum$1);
  return stackOrderNone(series).sort(function(a, b) { return sums[a] - sums[b]; });
}

function sum$1(series) {
  var s = 0, i = -1, n = series.length, v;
  while (++i < n) if (v = +series[i][1]) s += v;
  return s;
}

function stackOrderDescending(series) {
  return stackOrderAscending(series).reverse();
}

function stackOrderInsideOut(series) {
  var n = series.length,
      i,
      j,
      sums = series.map(sum$1),
      order = appearance(series),
      top = 0,
      bottom = 0,
      tops = [],
      bottoms = [];

  for (i = 0; i < n; ++i) {
    j = order[i];
    if (top < bottom) {
      top += sums[j];
      tops.push(j);
    } else {
      bottom += sums[j];
      bottoms.push(j);
    }
  }

  return bottoms.reverse().concat(tops);
}

function stackOrderReverse(series) {
  return stackOrderNone(series).reverse();
}

function treemapDice(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      node,
      i = -1,
      n = nodes.length,
      k = parent.value && (x1 - x0) / parent.value;

  while (++i < n) {
    node = nodes[i], node.y0 = y0, node.y1 = y1;
    node.x0 = x0, node.x1 = x0 += node.value * k;
  }
}

function treemapSlice(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      node,
      i = -1,
      n = nodes.length,
      k = parent.value && (y1 - y0) / parent.value;

  while (++i < n) {
    node = nodes[i], node.x0 = x0, node.x1 = x1;
    node.y0 = y0, node.y1 = y0 += node.value * k;
  }
}

var phi = (1 + Math.sqrt(5)) / 2;

function squarifyRatio(ratio, parent, x0, y0, x1, y1) {
  var rows = [],
      nodes = parent.children,
      row,
      nodeValue,
      i0 = 0,
      i1 = 0,
      n = nodes.length,
      dx, dy,
      value = parent.value,
      sumValue,
      minValue,
      maxValue,
      newRatio,
      minRatio,
      alpha,
      beta;

  while (i0 < n) {
    dx = x1 - x0, dy = y1 - y0;

    // Find the next non-empty node.
    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);
    minValue = maxValue = sumValue;
    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);
    beta = sumValue * sumValue * alpha;
    minRatio = Math.max(maxValue / beta, beta / minValue);

    // Keep adding nodes while the aspect ratio maintains or improves.
    for (; i1 < n; ++i1) {
      sumValue += nodeValue = nodes[i1].value;
      if (nodeValue < minValue) minValue = nodeValue;
      if (nodeValue > maxValue) maxValue = nodeValue;
      beta = sumValue * sumValue * alpha;
      newRatio = Math.max(maxValue / beta, beta / minValue);
      if (newRatio > minRatio) { sumValue -= nodeValue; break; }
      minRatio = newRatio;
    }

    // Position and record the row orientation.
    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});
    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);
    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);
    value -= sumValue, i0 = i1;
  }

  return rows;
}

var treemapSquarify = (function custom(ratio) {

  function squarify(parent, x0, y0, x1, y1) {
    squarifyRatio(ratio, parent, x0, y0, x1, y1);
  }

  squarify.ratio = function(x) {
    return custom((x = +x) > 1 ? x : 1);
  };

  return squarify;
})(phi);

function treemapBinary(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      i, n = nodes.length,
      sum, sums = new Array(n + 1);

  for (sums[0] = sum = i = 0; i < n; ++i) {
    sums[i + 1] = sum += nodes[i].value;
  }

  partition(0, n, parent.value, x0, y0, x1, y1);

  function partition(i, j, value, x0, y0, x1, y1) {
    if (i >= j - 1) {
      var node = nodes[i];
      node.x0 = x0, node.y0 = y0;
      node.x1 = x1, node.y1 = y1;
      return;
    }

    var valueOffset = sums[i],
        valueTarget = (value / 2) + valueOffset,
        k = i + 1,
        hi = j - 1;

    while (k < hi) {
      var mid = k + hi >>> 1;
      if (sums[mid] < valueTarget) k = mid + 1;
      else hi = mid;
    }

    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;

    var valueLeft = sums[k] - valueOffset,
        valueRight = value - valueLeft;

    if ((x1 - x0) > (y1 - y0)) {
      var xk = (x0 * valueRight + x1 * valueLeft) / value;
      partition(i, k, valueLeft, x0, y0, xk, y1);
      partition(k, j, valueRight, xk, y0, x1, y1);
    } else {
      var yk = (y0 * valueRight + y1 * valueLeft) / value;
      partition(i, k, valueLeft, x0, y0, x1, yk);
      partition(k, j, valueRight, x0, yk, x1, y1);
    }
  }
}

function treemapSliceDice(parent, x0, y0, x1, y1) {
  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);
}

var treemapResquarify = (function custom(ratio) {

  function resquarify(parent, x0, y0, x1, y1) {
    if ((rows = parent._squarify) && (rows.ratio === ratio)) {
      var rows,
          row,
          nodes,
          i,
          j = -1,
          n,
          m = rows.length,
          value = parent.value;

      while (++j < m) {
        row = rows[j], nodes = row.children;
        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;
        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);
        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);
        value -= row.value;
      }
    } else {
      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);
      rows.ratio = ratio;
    }
  }

  resquarify.ratio = function(x) {
    return custom((x = +x) > 1 ? x : 1);
  };

  return resquarify;
})(phi);

function formatDecimal(x) {
  return Math.abs(x = Math.round(x)) >= 1e21
      ? x.toLocaleString("en").replace(/,/g, "")
      : x.toString(10);
}

// Computes the decimal coefficient and exponent of the specified number x with
// significant digits p, where x is positive and p is in [1, 21] or undefined.
// For example, formatDecimalParts(1.23) returns ["123", 0].
function formatDecimalParts(x, p) {
  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity
  var i, coefficient = x.slice(0, i);

  // The string returned by toExponential either has the form \d\.\d+e[-+]\d+
  // (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).
  return [
    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
    +x.slice(i + 1)
  ];
}

function exponent(x) {
  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;
}

function formatGroup(grouping, thousands) {
  return function(value, width) {
    var i = value.length,
        t = [],
        j = 0,
        g = grouping[0],
        length = 0;

    while (i > 0 && g > 0) {
      if (length + g + 1 > width) g = Math.max(1, width - length);
      t.push(value.substring(i -= g, i + g));
      if ((length += g + 1) > width) break;
      g = grouping[j = (j + 1) % grouping.length];
    }

    return t.reverse().join(thousands);
  };
}

function formatNumerals(numerals) {
  return function(value) {
    return value.replace(/[0-9]/g, function(i) {
      return numerals[+i];
    });
  };
}

// [[fill]align][sign][symbol][0][width][,][.precision][~][type]
var re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;

function formatSpecifier(specifier) {
  if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);
  var match;
  return new FormatSpecifier({
    fill: match[1],
    align: match[2],
    sign: match[3],
    symbol: match[4],
    zero: match[5],
    width: match[6],
    comma: match[7],
    precision: match[8] && match[8].slice(1),
    trim: match[9],
    type: match[10]
  });
}

formatSpecifier.prototype = FormatSpecifier.prototype; // instanceof

function FormatSpecifier(specifier) {
  this.fill = specifier.fill === undefined ? " " : specifier.fill + "";
  this.align = specifier.align === undefined ? ">" : specifier.align + "";
  this.sign = specifier.sign === undefined ? "-" : specifier.sign + "";
  this.symbol = specifier.symbol === undefined ? "" : specifier.symbol + "";
  this.zero = !!specifier.zero;
  this.width = specifier.width === undefined ? undefined : +specifier.width;
  this.comma = !!specifier.comma;
  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;
  this.trim = !!specifier.trim;
  this.type = specifier.type === undefined ? "" : specifier.type + "";
}

FormatSpecifier.prototype.toString = function() {
  return this.fill
      + this.align
      + this.sign
      + this.symbol
      + (this.zero ? "0" : "")
      + (this.width === undefined ? "" : Math.max(1, this.width | 0))
      + (this.comma ? "," : "")
      + (this.precision === undefined ? "" : "." + Math.max(0, this.precision | 0))
      + (this.trim ? "~" : "")
      + this.type;
};

// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.
function formatTrim(s) {
  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {
    switch (s[i]) {
      case ".": i0 = i1 = i; break;
      case "0": if (i0 === 0) i0 = i; i1 = i; break;
      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;
    }
  }
  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;
}

var prefixExponent;

function formatPrefixAuto(x, p) {
  var d = formatDecimalParts(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1],
      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,
      n = coefficient.length;
  return i === n ? coefficient
      : i > n ? coefficient + new Array(i - n + 1).join("0")
      : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i)
      : "0." + new Array(1 - i).join("0") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!
}

function formatRounded(x, p) {
  var d = formatDecimalParts(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1];
  return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient
      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1)
      : coefficient + new Array(exponent - coefficient.length + 2).join("0");
}

var formatTypes = {
  "%": function(x, p) { return (x * 100).toFixed(p); },
  "b": function(x) { return Math.round(x).toString(2); },
  "c": function(x) { return x + ""; },
  "d": formatDecimal,
  "e": function(x, p) { return x.toExponential(p); },
  "f": function(x, p) { return x.toFixed(p); },
  "g": function(x, p) { return x.toPrecision(p); },
  "o": function(x) { return Math.round(x).toString(8); },
  "p": function(x, p) { return formatRounded(x * 100, p); },
  "r": formatRounded,
  "s": formatPrefixAuto,
  "X": function(x) { return Math.round(x).toString(16).toUpperCase(); },
  "x": function(x) { return Math.round(x).toString(16); }
};

function identity$1(x) {
  return x;
}

var map = Array.prototype.map,
    prefixes = ["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];

function formatLocale(locale) {
  var group = locale.grouping === undefined || locale.thousands === undefined ? identity$1 : formatGroup(map.call(locale.grouping, Number), locale.thousands + ""),
      currencyPrefix = locale.currency === undefined ? "" : locale.currency[0] + "",
      currencySuffix = locale.currency === undefined ? "" : locale.currency[1] + "",
      decimal = locale.decimal === undefined ? "." : locale.decimal + "",
      numerals = locale.numerals === undefined ? identity$1 : formatNumerals(map.call(locale.numerals, String)),
      percent = locale.percent === undefined ? "%" : locale.percent + "",
      minus = locale.minus === undefined ? "-" : locale.minus + "",
      nan = locale.nan === undefined ? "NaN" : locale.nan + "";

  function newFormat(specifier) {
    specifier = formatSpecifier(specifier);

    var fill = specifier.fill,
        align = specifier.align,
        sign = specifier.sign,
        symbol = specifier.symbol,
        zero = specifier.zero,
        width = specifier.width,
        comma = specifier.comma,
        precision = specifier.precision,
        trim = specifier.trim,
        type = specifier.type;

    // The "n" type is an alias for ",g".
    if (type === "n") comma = true, type = "g";

    // The "" type, and any invalid type, is an alias for ".12~g".
    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = "g";

    // If zero fill is specified, padding goes after sign and before digits.
    if (zero || (fill === "0" && align === "=")) zero = true, fill = "0", align = "=";

    // Compute the prefix and suffix.
    // For SI-prefix, the suffix is lazily computed.
    var prefix = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",
        suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type) ? percent : "";

    // What format function should we use?
    // Is this an integer type?
    // Can this type generate exponential notation?
    var formatType = formatTypes[type],
        maybeSuffix = /[defgprs%]/.test(type);

    // Set the default precision if not specified,
    // or clamp the specified precision to the supported range.
    // For significant precision, it must be in [1, 21].
    // For fixed precision, it must be in [0, 20].
    precision = precision === undefined ? 6
        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))
        : Math.max(0, Math.min(20, precision));

    function format(value) {
      var valuePrefix = prefix,
          valueSuffix = suffix,
          i, n, c;

      if (type === "c") {
        valueSuffix = formatType(value) + valueSuffix;
        value = "";
      } else {
        value = +value;

        // Determine the sign. -0 is not less than 0, but 1 / -0 is!
        var valueNegative = value < 0 || 1 / value < 0;

        // Perform the initial formatting.
        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);

        // Trim insignificant zeros.
        if (trim) value = formatTrim(value);

        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.
        if (valueNegative && +value === 0 && sign !== "+") valueNegative = false;

        // Compute the prefix and suffix.
        valuePrefix = (valueNegative ? (sign === "(" ? sign : minus) : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
        valueSuffix = (type === "s" ? prefixes[8 + prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign === "(" ? ")" : "");

        // Break the formatted value into the integer “value” part that can be
        // grouped, and fractional or exponential “suffix” part that is not.
        if (maybeSuffix) {
          i = -1, n = value.length;
          while (++i < n) {
            if (c = value.charCodeAt(i), 48 > c || c > 57) {
              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
              value = value.slice(0, i);
              break;
            }
          }
        }
      }

      // If the fill character is not "0", grouping is applied before padding.
      if (comma && !zero) value = group(value, Infinity);

      // Compute the padding.
      var length = valuePrefix.length + value.length + valueSuffix.length,
          padding = length < width ? new Array(width - length + 1).join(fill) : "";

      // If the fill character is "0", grouping is applied after padding.
      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";

      // Reconstruct the final output based on the desired alignment.
      switch (align) {
        case "<": value = valuePrefix + value + valueSuffix + padding; break;
        case "=": value = valuePrefix + padding + value + valueSuffix; break;
        case "^": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;
        default: value = padding + valuePrefix + value + valueSuffix; break;
      }

      return numerals(value);
    }

    format.toString = function() {
      return specifier + "";
    };

    return format;
  }

  function formatPrefix(specifier, value) {
    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = "f", specifier)),
        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,
        k = Math.pow(10, -e),
        prefix = prefixes[8 + e / 3];
    return function(value) {
      return f(k * value) + prefix;
    };
  }

  return {
    format: newFormat,
    formatPrefix: formatPrefix
  };
}

var locale$1;
var format$1;

defaultLocale({
  decimal: ".",
  thousands: ",",
  grouping: [3],
  currency: ["$", ""],
  minus: "-"
});

function defaultLocale(definition) {
  locale$1 = formatLocale(definition);
  format$1 = locale$1.format;
  return locale$1;
}

/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function arraySome(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}

var _arraySome = arraySome;

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG$5 = 1,
    COMPARE_UNORDERED_FLAG$3 = 2;

/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$5,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  // Check that cyclic values are equal.
  var arrStacked = stack.get(array);
  var othStacked = stack.get(other);
  if (arrStacked && othStacked) {
    return arrStacked == other && othStacked == array;
  }
  var index = -1,
      result = true,
      seen = (bitmask & COMPARE_UNORDERED_FLAG$3) ? new _SetCache : undefined;

  stack.set(array, other);
  stack.set(other, array);

  // Ignore non-index properties.
  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, arrValue, index, other, array, stack)
        : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== undefined) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    // Recursively compare arrays (susceptible to call stack limits).
    if (seen) {
      if (!_arraySome(other, function(othValue, othIndex) {
            if (!_cacheHas(seen, othIndex) &&
                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
        result = false;
        break;
      }
    } else if (!(
          arrValue === othValue ||
            equalFunc(arrValue, othValue, bitmask, customizer, stack)
        )) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}

var _equalArrays = equalArrays;

/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}

var _mapToArray = mapToArray;

/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

var _setToArray = setToArray;

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG$4 = 1,
    COMPARE_UNORDERED_FLAG$2 = 2;

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag$1 = '[object Date]',
    errorTag = '[object Error]',
    mapTag$1 = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag$1 = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag$1 = '[object DataView]';

/** Used to convert symbols to primitives and strings. */
var symbolProto = _Symbol ? _Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag$1:
      if ((object.byteLength != other.byteLength) ||
          (object.byteOffset != other.byteOffset)) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;

    case arrayBufferTag:
      if ((object.byteLength != other.byteLength) ||
          !equalFunc(new _Uint8Array(object), new _Uint8Array(other))) {
        return false;
      }
      return true;

    case boolTag:
    case dateTag$1:
    case numberTag:
      // Coerce booleans to `1` or `0` and dates to milliseconds.
      // Invalid dates are coerced to `NaN`.
      return eq_1(+object, +other);

    case errorTag:
      return object.name == other.name && object.message == other.message;

    case regexpTag:
    case stringTag:
      // Coerce regexes to strings and treat strings, primitives and objects,
      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
      // for more details.
      return object == (other + '');

    case mapTag$1:
      var convert = _mapToArray;

    case setTag$1:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG$4;
      convert || (convert = _setToArray);

      if (object.size != other.size && !isPartial) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG$2;

      // Recursively compare objects (susceptible to call stack limits).
      stack.set(object, other);
      var result = _equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;

    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}

var _equalByTag = equalByTag;

/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

var _arrayPush = arrayPush;

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray_1(object) ? result : _arrayPush(result, symbolsFunc(object));
}

var _baseGetAllKeys = baseGetAllKeys;

/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

var _arrayFilter = arrayFilter;

/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

var stubArray_1 = stubArray;

/** Used for built-in method references. */
var objectProto$3 = Object.prototype;

/** Built-in value references. */
var propertyIsEnumerable = objectProto$3.propertyIsEnumerable;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = !nativeGetSymbols ? stubArray_1 : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return _arrayFilter(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};

var _getSymbols = getSymbols;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = _overArg(Object.keys, Object);

var _nativeKeys = nativeKeys;

/** Used for built-in method references. */
var objectProto$2 = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$2 = objectProto$2.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!_isPrototype(object)) {
    return _nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty$2.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

var _baseKeys = baseKeys;

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike_1(object) ? _arrayLikeKeys(object) : _baseKeys(object);
}

var keys_1 = keys;

/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return _baseGetAllKeys(object, keys_1, _getSymbols);
}

var _getAllKeys = getAllKeys;

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG$3 = 1;

/** Used for built-in method references. */
var objectProto$1 = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$1 = objectProto$1.hasOwnProperty;

/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$3,
      objProps = _getAllKeys(object),
      objLength = objProps.length,
      othProps = _getAllKeys(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty$1.call(other, key))) {
      return false;
    }
  }
  // Check that cyclic values are equal.
  var objStacked = stack.get(object);
  var othStacked = stack.get(other);
  if (objStacked && othStacked) {
    return objStacked == other && othStacked == object;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);

  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, objValue, key, other, object, stack)
        : customizer(objValue, othValue, key, object, other, stack);
    }
    // Recursively compare objects (susceptible to call stack limits).
    if (!(compared === undefined
          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
          : compared
        )) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor;

    // Non `Object` object instances with different constructors are not equal.
    if (objCtor != othCtor &&
        ('constructor' in object && 'constructor' in other) &&
        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}

var _equalObjects = equalObjects;

/* Built-in method references that are verified to be native. */
var DataView$1 = _getNative(_root, 'DataView');

var _DataView = DataView$1;

/* Built-in method references that are verified to be native. */
var Promise$1 = _getNative(_root, 'Promise');

var _Promise = Promise$1;

/* Built-in method references that are verified to be native. */
var Set$1 = _getNative(_root, 'Set');

var _Set = Set$1;

/* Built-in method references that are verified to be native. */
var WeakMap$1 = _getNative(_root, 'WeakMap');

var _WeakMap = WeakMap$1;

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    objectTag$1 = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';

var dataViewTag = '[object DataView]';

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = _toSource(_DataView),
    mapCtorString = _toSource(_Map),
    promiseCtorString = _toSource(_Promise),
    setCtorString = _toSource(_Set),
    weakMapCtorString = _toSource(_WeakMap);

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = _baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if ((_DataView && getTag(new _DataView(new ArrayBuffer(1))) != dataViewTag) ||
    (_Map && getTag(new _Map) != mapTag) ||
    (_Promise && getTag(_Promise.resolve()) != promiseTag) ||
    (_Set && getTag(new _Set) != setTag) ||
    (_WeakMap && getTag(new _WeakMap) != weakMapTag)) {
  getTag = function(value) {
    var result = _baseGetTag(value),
        Ctor = result == objectTag$1 ? value.constructor : undefined,
        ctorString = Ctor ? _toSource(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

var _getTag = getTag;

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG$2 = 1;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    objectTag = '[object Object]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray_1(object),
      othIsArr = isArray_1(other),
      objTag = objIsArr ? arrayTag : _getTag(object),
      othTag = othIsArr ? arrayTag : _getTag(other);

  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;

  var objIsObj = objTag == objectTag,
      othIsObj = othTag == objectTag,
      isSameTag = objTag == othTag;

  if (isSameTag && isBuffer_1(object)) {
    if (!isBuffer_1(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new _Stack);
    return (objIsArr || isTypedArray_1(object))
      ? _equalArrays(object, other, bitmask, customizer, equalFunc, stack)
      : _equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG$2)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;

      stack || (stack = new _Stack);
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new _Stack);
  return _equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}

var _baseIsEqualDeep = baseIsEqualDeep;

/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || (!isObjectLike_1(value) && !isObjectLike_1(other))) {
    return value !== value && other !== other;
  }
  return _baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}

var _baseIsEqual = baseIsEqual;

/**
 * Performs a deep comparison between two values to determine if they are
 * equivalent.
 *
 * **Note:** This method supports comparing arrays, array buffers, booleans,
 * date objects, error objects, maps, numbers, `Object` objects, regexes,
 * sets, strings, symbols, and typed arrays. `Object` objects are compared
 * by their own, not inherited, enumerable properties. Functions and DOM
 * nodes are compared by strict equality, i.e. `===`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.isEqual(object, other);
 * // => true
 *
 * object === other;
 * // => false
 */
function isEqual(value, other) {
  return _baseIsEqual(value, other);
}

var isEqual_1 = isEqual;

/**
 * The base implementation of  `_.pickBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The source object.
 * @param {string[]} paths The property paths to pick.
 * @param {Function} predicate The function invoked per property.
 * @returns {Object} Returns the new object.
 */
function basePickBy(object, paths, predicate) {
  var index = -1,
      length = paths.length,
      result = {};

  while (++index < length) {
    var path = paths[index],
        value = _baseGet(object, path);

    if (predicate(value, path)) {
      _baseSet(result, _castPath(path, object), value);
    }
  }
  return result;
}

var _basePickBy = basePickBy;

/**
 * The base implementation of `_.hasIn` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}

var _baseHasIn = baseHasIn;

/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */
function hasPath(object, path, hasFunc) {
  path = _castPath(path, object);

  var index = -1,
      length = path.length,
      result = false;

  while (++index < length) {
    var key = _toKey(path[index]);
    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result || ++index != length) {
    return result;
  }
  length = object == null ? 0 : object.length;
  return !!length && isLength_1(length) && _isIndex(key, length) &&
    (isArray_1(object) || isArguments_1(object));
}

var _hasPath = hasPath;

/**
 * Checks if `path` is a direct or inherited property of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.hasIn(object, 'a');
 * // => true
 *
 * _.hasIn(object, 'a.b');
 * // => true
 *
 * _.hasIn(object, ['a', 'b']);
 * // => true
 *
 * _.hasIn(object, 'b');
 * // => false
 */
function hasIn(object, path) {
  return object != null && _hasPath(object, path, _baseHasIn);
}

var hasIn_1 = hasIn;

/**
 * The base implementation of `_.pick` without support for individual
 * property identifiers.
 *
 * @private
 * @param {Object} object The source object.
 * @param {string[]} paths The property paths to pick.
 * @returns {Object} Returns the new object.
 */
function basePick(object, paths) {
  return _basePickBy(object, paths, function(value, path) {
    return hasIn_1(object, path);
  });
}

var _basePick = basePick;

/** Built-in value references. */
var spreadableSymbol = _Symbol ? _Symbol.isConcatSpreadable : undefined;

/**
 * Checks if `value` is a flattenable `arguments` object or array.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
 */
function isFlattenable(value) {
  return isArray_1(value) || isArguments_1(value) ||
    !!(spreadableSymbol && value && value[spreadableSymbol]);
}

var _isFlattenable = isFlattenable;

/**
 * The base implementation of `_.flatten` with support for restricting flattening.
 *
 * @private
 * @param {Array} array The array to flatten.
 * @param {number} depth The maximum recursion depth.
 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
 * @param {Array} [result=[]] The initial result value.
 * @returns {Array} Returns the new flattened array.
 */
function baseFlatten(array, depth, predicate, isStrict, result) {
  var index = -1,
      length = array.length;

  predicate || (predicate = _isFlattenable);
  result || (result = []);

  while (++index < length) {
    var value = array[index];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        // Recursively flatten arrays (susceptible to call stack limits).
        baseFlatten(value, depth - 1, predicate, isStrict, result);
      } else {
        _arrayPush(result, value);
      }
    } else if (!isStrict) {
      result[result.length] = value;
    }
  }
  return result;
}

var _baseFlatten = baseFlatten;

/**
 * Flattens `array` a single level deep.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to flatten.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * _.flatten([1, [2, [3, [4]], 5]]);
 * // => [1, 2, [3, [4]], 5]
 */
function flatten(array) {
  var length = array == null ? 0 : array.length;
  return length ? _baseFlatten(array, 1) : [];
}

var flatten_1 = flatten;

/**
 * A specialized version of `baseRest` which flattens the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @returns {Function} Returns the new function.
 */
function flatRest(func) {
  return _setToString(_overRest(func, undefined, flatten_1), func + '');
}

var _flatRest = flatRest;

/**
 * Creates an object composed of the picked `object` properties.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The source object.
 * @param {...(string|string[])} [paths] The property paths to pick.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.pick(object, ['a', 'c']);
 * // => { 'a': 1, 'c': 3 }
 */
var pick = _flatRest(function(object, paths) {
  return object == null ? {} : _basePick(object, paths);
});

var pick_1 = pick;

function _defineProperty$6(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

function ownKeys$6(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2$6(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$6(Object(source), true).forEach(function (key) {
        _defineProperty$6(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$6(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}

var textProps = {
  fill: propTypes.string,
  fontSize: propTypes.number,
  fontFamily: propTypes.string
};
var axisThemePropType = propTypes.shape({
  domain: propTypes.shape({
    line: propTypes.shape({
      stroke: propTypes.string.isRequired,
      strokeWidth: propTypes.number.isRequired,
      strokeDasharray: propTypes.string
    }).isRequired
  }).isRequired,
  ticks: propTypes.shape({
    line: propTypes.shape({
      stroke: propTypes.string.isRequired,
      strokeWidth: propTypes.number.isRequired,
      strokeDasharray: propTypes.string
    }).isRequired,
    text: propTypes.shape(_objectSpread2$6({}, textProps)).isRequired
  }).isRequired,
  legend: propTypes.shape({
    text: propTypes.shape(_objectSpread2$6({}, textProps)).isRequired
  }).isRequired
});
var gridThemePropType = propTypes.shape({
  line: propTypes.shape({
    stroke: propTypes.string.isRequired,
    strokeWidth: propTypes.number.isRequired,
    strokeDasharray: propTypes.string
  }).isRequired
});
var legendsThemePropType = propTypes.shape({
  hidden: propTypes.shape({
    symbol: propTypes.shape({
      fill: propTypes.string.isRequired,
      opacity: propTypes.number
    }).isRequired,
    text: propTypes.shape(_objectSpread2$6(_objectSpread2$6({}, textProps), {}, {
      opacity: propTypes.number
    })).isRequired
  }).isRequired,
  text: propTypes.shape(_objectSpread2$6({}, textProps)).isRequired
});
var labelsThemePropType = propTypes.shape({
  text: propTypes.shape(_objectSpread2$6({}, textProps)).isRequired
});
var dotsThemePropType = propTypes.shape({
  text: propTypes.shape(_objectSpread2$6({}, textProps)).isRequired
});
var markersThemePropType = propTypes.shape({
  text: propTypes.shape(_objectSpread2$6({}, textProps)).isRequired
});
var crosshairPropType = propTypes.shape({
  line: propTypes.shape({
    stroke: propTypes.string.isRequired,
    strokeWidth: propTypes.number.isRequired,
    strokeDasharray: propTypes.string
  }).isRequired
});
var annotationsPropType = propTypes.shape({
  text: propTypes.shape(_objectSpread2$6(_objectSpread2$6({}, textProps), {}, {
    outlineWidth: propTypes.number.isRequired,
    outlineColor: propTypes.string.isRequired
  })).isRequired,
  link: propTypes.shape({
    stroke: propTypes.string.isRequired,
    strokeWidth: propTypes.number.isRequired,
    outlineWidth: propTypes.number.isRequired,
    outlineColor: propTypes.string.isRequired
  }).isRequired,
  outline: propTypes.shape({
    stroke: propTypes.string.isRequired,
    strokeWidth: propTypes.number.isRequired,
    outlineWidth: propTypes.number.isRequired,
    outlineColor: propTypes.string.isRequired
  }).isRequired,
  symbol: propTypes.shape({
    fill: propTypes.string.isRequired,
    outlineWidth: propTypes.number.isRequired,
    outlineColor: propTypes.string.isRequired
  }).isRequired
});
propTypes.shape({
  background: propTypes.string.isRequired,
  fontFamily: propTypes.string.isRequired,
  fontSize: propTypes.number.isRequired,
  textColor: propTypes.string.isRequired,
  axis: axisThemePropType.isRequired,
  grid: gridThemePropType.isRequired,
  legends: legendsThemePropType.isRequired,
  labels: labelsThemePropType.isRequired,
  dots: dotsThemePropType.isRequired,
  markers: markersThemePropType,
  crosshair: crosshairPropType.isRequired,
  annotations: annotationsPropType.isRequired
});

var defaultTheme = {
  background: 'transparent',
  fontFamily: 'sans-serif',
  fontSize: 11,
  textColor: '#333333',
  axis: {
    domain: {
      line: {
        stroke: 'transparent',
        strokeWidth: 1
      }
    },
    ticks: {
      line: {
        stroke: '#777777',
        strokeWidth: 1
      },
      text: {}
    },
    legend: {
      text: {
        fontSize: 12
      }
    }
  },
  grid: {
    line: {
      stroke: '#dddddd',
      strokeWidth: 1
    }
  },
  legends: {
    hidden: {
      symbol: {
        fill: '#333333',
        opacity: 0.6
      },
      text: {
        fill: '#333333',
        opacity: 0.6
      }
    },
    text: {}
  },
  labels: {
    text: {}
  },
  markers: {
    lineColor: '#000000',
    lineStrokeWidth: 1,
    text: {}
  },
  dots: {
    text: {}
  },
  tooltip: {
    container: {
      background: 'white',
      color: 'inherit',
      fontSize: 'inherit',
      borderRadius: '2px',
      boxShadow: '0 1px 2px rgba(0, 0, 0, 0.25)',
      padding: '5px 9px'
    },
    basic: {
      whiteSpace: 'pre',
      display: 'flex',
      alignItems: 'center'
    },
    chip: {
      marginRight: 7
    },
    table: {},
    tableCell: {
      padding: '3px 5px'
    },
    tableCellValue: {
      fontWeight: 'bold'
    }
  },
  crosshair: {
    line: {
      stroke: '#000000',
      strokeWidth: 1,
      strokeOpacity: 0.75,
      strokeDasharray: '6 6'
    }
  },
  annotations: {
    text: {
      fontSize: 13,
      outlineWidth: 2,
      outlineColor: '#ffffff'
    },
    link: {
      stroke: '#000000',
      strokeWidth: 1,
      outlineWidth: 2,
      outlineColor: '#ffffff'
    },
    outline: {
      fill: 'none',
      stroke: '#000000',
      strokeWidth: 2,
      outlineWidth: 2,
      outlineColor: '#ffffff'
    },
    symbol: {
      fill: '#000000',
      outlineWidth: 2,
      outlineColor: '#ffffff'
    }
  }
};

var fontProps = ['axis.ticks.text', 'axis.legend.text', 'legends.text', 'labels.text', 'dots.text', 'markers.text', 'annotations.text'];
var extendDefaultTheme = function extendDefaultTheme(defaultTheme, customTheme) {
  var theme = merge_1({}, defaultTheme, customTheme);
  fontProps.forEach(function (prop) {
    if (get_1(theme, "".concat(prop, ".fontFamily")) === undefined) {
      set_1(theme, "".concat(prop, ".fontFamily"), theme.fontFamily);
    }
    if (get_1(theme, "".concat(prop, ".fontSize")) === undefined) {
      set_1(theme, "".concat(prop, ".fontSize"), theme.fontSize);
    }
    if (get_1(theme, "".concat(prop, ".fill")) === undefined) {
      set_1(theme, "".concat(prop, ".fill"), theme.textColor);
    }
  });
  return theme;
};

var motionConfigContext = React.createContext();
var MotionConfigProvider = function MotionConfigProvider(_ref) {
  var children = _ref.children,
      animate = _ref.animate,
      stiffness = _ref.stiffness,
      damping = _ref.damping,
      config$1 = _ref.config;
  var value = React.useMemo(function () {
    var reactSpringConfig = isString_1(config$1) ? config[config$1] : config$1;
    return {
      animate: animate,
      springConfig: {
        stiffness: stiffness,
        damping: damping
      },
      config: reactSpringConfig
    };
  }, [animate, stiffness, damping, config$1]);
  return jsxRuntime.jsx(motionConfigContext.Provider, {
    value: value,
    children: children
  });
};
var motionPropTypes = {
  animate: propTypes.bool,
  motionStiffness: propTypes.number,
  motionDamping: propTypes.number,
  motionConfig: propTypes.oneOfType([propTypes.oneOf(Object.keys(config)), propTypes.shape({
    mass: propTypes.number,
    tension: propTypes.number,
    friction: propTypes.number,
    clamp: propTypes.bool,
    precision: propTypes.number,
    velocity: propTypes.number,
    duration: propTypes.number,
    easing: propTypes.func
  })])
};
var motionDefaultProps = {
  animate: true,
  stiffness: 90,
  damping: 15,
  config: 'default'
};
MotionConfigProvider.defaultProps = motionDefaultProps;

var useMotionConfig = function useMotionConfig() {
  return React.useContext(motionConfigContext);
};

var usePrevious = function usePrevious(value) {
  var ref = React.useRef();
  React.useEffect(function () {
    ref.current = value;
  }, [value]);
  return ref.current;
};
var useAnimatedPath = function useAnimatedPath(path) {
  var _useMotionConfig = useMotionConfig(),
      animate = _useMotionConfig.animate,
      springConfig = _useMotionConfig.config;
  var previousPath = usePrevious(path);
  var interpolator = React.useMemo(function () {
    return interpolateString(previousPath, path);
  }, [previousPath, path]);
  var _useSpring = useSpring({
    from: {
      value: 0
    },
    to: {
      value: 1
    },
    reset: true,
    config: springConfig,
    immediate: !animate
  }),
      value = _useSpring.value;
  return to(value, interpolator);
};

var quantizeColorScales = {
  nivo: ['#d76445', '#f47560', '#e8c1a0', '#97e3d5', '#61cdbb', '#00b0a7'],
  BrBG: last_1(scheme$q),
  PRGn: last_1(scheme$p),
  PiYG: last_1(scheme$o),
  PuOr: last_1(scheme$n),
  RdBu: last_1(scheme$m),
  RdGy: last_1(scheme$l),
  RdYlBu: last_1(scheme$k),
  RdYlGn: last_1(scheme$j),
  spectral: last_1(scheme$i),
  blues: last_1(scheme$5),
  greens: last_1(scheme$4),
  greys: last_1(scheme$3),
  oranges: last_1(scheme),
  purples: last_1(scheme$2),
  reds: last_1(scheme$1),
  BuGn: last_1(scheme$h),
  BuPu: last_1(scheme$g),
  GnBu: last_1(scheme$f),
  OrRd: last_1(scheme$e),
  PuBuGn: last_1(scheme$d),
  PuBu: last_1(scheme$c),
  PuRd: last_1(scheme$b),
  RdPu: last_1(scheme$a),
  YlGnBu: last_1(scheme$9),
  YlGn: last_1(scheme$8),
  YlOrBr: last_1(scheme$7),
  YlOrRd: last_1(scheme$6)
};
var quantizeColorScalesKeys = Object.keys(quantizeColorScales);
var guessQuantizeColorScale = function guessQuantizeColorScale(colors) {
  if (isFunction_1(colors)) {
    if (!isFunction_1(colors.domain)) {
      throw new Error("Provided colors should be a valid quantize scale providing a 'domain()' function");
    }
    return colors;
  }
  if (quantizeColorScales[colors]) {
    return quantize().range(quantizeColorScales[colors]);
  }
  if (isArray_1(colors)) return quantize().range(colors);
  throw new Error("Unable to guess quantize color scale from '".concat(colors, "',\nmust be a function or one of:\n'").concat(quantizeColorScalesKeys.join("', '"), "'"));
};

({
  nivo: ['#e8c1a0', '#f47560', '#f1e15b', '#e8a838', '#61cdbb', '#97e3d5'],
  category10: schemeCategory10,
  accent: schemeAccent,
  dark2: schemeDark2,
  paired: schemePaired,
  pastel1: schemePastel1,
  pastel2: schemePastel2,
  set1: schemeSet1,
  set2: schemeSet2,
  set3: schemeSet3,
  brown_blueGreen: last_1(scheme$q),
  purpleRed_green: last_1(scheme$p),
  pink_yellowGreen: last_1(scheme$o),
  purple_orange: last_1(scheme$n),
  red_blue: last_1(scheme$m),
  red_grey: last_1(scheme$l),
  red_yellow_blue: last_1(scheme$k),
  red_yellow_green: last_1(scheme$j),
  spectral: last_1(scheme$i),
  blues: last_1(scheme$5),
  greens: last_1(scheme$4),
  greys: last_1(scheme$3),
  oranges: last_1(scheme),
  purples: last_1(scheme$2),
  reds: last_1(scheme$1),
  blue_green: last_1(scheme$h),
  blue_purple: last_1(scheme$g),
  green_blue: last_1(scheme$f),
  orange_red: last_1(scheme$e),
  purple_blue_green: last_1(scheme$d),
  purple_blue: last_1(scheme$c),
  purple_red: last_1(scheme$b),
  red_purple: last_1(scheme$a),
  yellow_green_blue: last_1(scheme$9),
  yellow_green: last_1(scheme$8),
  yellow_orange_brown: last_1(scheme$7),
  yellow_orange_red: last_1(scheme$6)
});

var quantizeColorScalePropType = propTypes.oneOfType([propTypes.oneOf(quantizeColorScalesKeys), propTypes.func, propTypes.arrayOf(propTypes.string)]);

var curvePropMapping = {
  basis: curveBasis,
  basisClosed: curveBasisClosed,
  basisOpen: curveBasisOpen,
  bundle: curveBundle,
  cardinal: curveCardinal,
  cardinalClosed: curveCardinalClosed,
  cardinalOpen: curveCardinalOpen,
  catmullRom: curveCatmullRom,
  catmullRomClosed: curveCatmullRomClosed,
  catmullRomOpen: curveCatmullRomOpen,
  linear: curveLinear,
  linearClosed: curveLinearClosed,
  monotoneX: monotoneX,
  monotoneY: monotoneY,
  natural: curveNatural,
  step: curveStep,
  stepAfter: stepAfter,
  stepBefore: stepBefore
};
var curvePropKeys = Object.keys(curvePropMapping);
propTypes.oneOf(curvePropKeys);
var closedCurvePropKeys = curvePropKeys.filter(function (c) {
  return c.endsWith('Closed');
});
propTypes.oneOf(closedCurvePropKeys);
var areaCurvePropKeys = without_1(curvePropKeys, 'bundle', 'basisClosed', 'basisOpen', 'cardinalClosed', 'cardinalOpen', 'catmullRomClosed', 'catmullRomOpen', 'linearClosed');
propTypes.oneOf(areaCurvePropKeys);
var lineCurvePropKeys = without_1(curvePropKeys, 'bundle', 'basisClosed', 'basisOpen', 'cardinalClosed', 'cardinalOpen', 'catmullRomClosed', 'catmullRomOpen', 'linearClosed');
var lineCurvePropType = propTypes.oneOf(lineCurvePropKeys);
var curveFromProp = function curveFromProp(id) {
  var curveInterpolator = curvePropMapping[id];
  if (!curveInterpolator) {
    throw new TypeError("'".concat(id, "', is not a valid curve interpolator identifier."));
  }
  return curvePropMapping[id];
};

var defsPropTypes = {
  defs: propTypes.arrayOf(propTypes.shape({
    id: propTypes.string.isRequired
  })).isRequired,
  fill: propTypes.arrayOf(propTypes.shape({
    id: propTypes.string.isRequired,
    match: propTypes.oneOfType([propTypes.oneOf(['*']), propTypes.object, propTypes.func]).isRequired
  })).isRequired
};

var stackOrderPropMapping = {
  ascending: stackOrderAscending,
  descending: stackOrderDescending,
  insideOut: stackOrderInsideOut,
  none: stackOrderNone,
  reverse: stackOrderReverse
};
var stackOrderPropKeys = Object.keys(stackOrderPropMapping);
propTypes.oneOf(stackOrderPropKeys);
var stackOffsetPropMapping = {
  expand: stackOffsetExpand,
  diverging: stackOffsetDiverging,
  none: stackOffsetNone,
  silhouette: stackOffsetSilhouette,
  wiggle: stackOffsetWiggle
};
var stackOffsetPropKeys = Object.keys(stackOffsetPropMapping);
propTypes.oneOf(stackOffsetPropKeys);

var treeMapTilePropMapping = {
  binary: treemapBinary,
  dice: treemapDice,
  slice: treemapSlice,
  sliceDice: treemapSliceDice,
  squarify: treemapSquarify,
  resquarify: treemapResquarify
};
var treeMapTilePropKeys = Object.keys(treeMapTilePropMapping);
propTypes.oneOf(treeMapTilePropKeys);

propTypes.shape({
  top: propTypes.number,
  right: propTypes.number,
  bottom: propTypes.number,
  left: propTypes.number
}).isRequired;
var blendModes = ['normal', 'multiply', 'screen', 'overlay', 'darken', 'lighten', 'color-dodge', 'color-burn', 'hard-light', 'soft-light', 'difference', 'exclusion', 'hue', 'saturation', 'color', 'luminosity'];
var blendModePropType = propTypes.oneOf(blendModes);
ordinal(schemeSet3);
var defaultMargin = {
  top: 0,
  right: 0,
  bottom: 0,
  left: 0
};

var useDimensions = function useDimensions(width, height) {
  var partialMargin = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  return React.useMemo(function () {
    var margin = _objectSpread2$6(_objectSpread2$6({}, defaultMargin), partialMargin);
    return {
      margin: margin,
      innerWidth: width - margin.left - margin.right,
      innerHeight: height - margin.top - margin.bottom,
      outerWidth: width,
      outerHeight: height
    };
  }, [width, height, partialMargin.top, partialMargin.right, partialMargin.bottom, partialMargin.left]);
};

function _arrayWithHoles$6(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit$6(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;
  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }
  return _arr;
}

function _arrayLikeToArray$7(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}

function _unsupportedIterableToArray$7(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray$7(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$7(o, minLen);
}

function _nonIterableRest$6() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _slicedToArray$6(arr, i) {
  return _arrayWithHoles$6(arr) || _iterableToArrayLimit$6(arr, i) || _unsupportedIterableToArray$7(arr, i) || _nonIterableRest$6();
}

var MapShim = (function () {
    if (typeof Map !== 'undefined') {
        return Map;
    }
    function getIndex(arr, key) {
        var result = -1;
        arr.some(function (entry, index) {
            if (entry[0] === key) {
                result = index;
                return true;
            }
            return false;
        });
        return result;
    }
    return  (function () {
        function class_1() {
            this.__entries__ = [];
        }
        Object.defineProperty(class_1.prototype, "size", {
            get: function () {
                return this.__entries__.length;
            },
            enumerable: true,
            configurable: true
        });
        class_1.prototype.get = function (key) {
            var index = getIndex(this.__entries__, key);
            var entry = this.__entries__[index];
            return entry && entry[1];
        };
        class_1.prototype.set = function (key, value) {
            var index = getIndex(this.__entries__, key);
            if (~index) {
                this.__entries__[index][1] = value;
            }
            else {
                this.__entries__.push([key, value]);
            }
        };
        class_1.prototype.delete = function (key) {
            var entries = this.__entries__;
            var index = getIndex(entries, key);
            if (~index) {
                entries.splice(index, 1);
            }
        };
        class_1.prototype.has = function (key) {
            return !!~getIndex(this.__entries__, key);
        };
        class_1.prototype.clear = function () {
            this.__entries__.splice(0);
        };
        class_1.prototype.forEach = function (callback, ctx) {
            if (ctx === void 0) { ctx = null; }
            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {
                var entry = _a[_i];
                callback.call(ctx, entry[1], entry[0]);
            }
        };
        return class_1;
    }());
})();
var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;
var global$1 = (function () {
    if (typeof global !== 'undefined' && global.Math === Math) {
        return global;
    }
    if (typeof self !== 'undefined' && self.Math === Math) {
        return self;
    }
    if (typeof window !== 'undefined' && window.Math === Math) {
        return window;
    }
    return Function('return this')();
})();
var requestAnimationFrame$1 = (function () {
    if (typeof requestAnimationFrame === 'function') {
        return requestAnimationFrame.bind(global$1);
    }
    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };
})();
var trailingTimeout = 2;
function throttle (callback, delay) {
    var leadingCall = false, trailingCall = false, lastCallTime = 0;
    function resolvePending() {
        if (leadingCall) {
            leadingCall = false;
            callback();
        }
        if (trailingCall) {
            proxy();
        }
    }
    function timeoutCallback() {
        requestAnimationFrame$1(resolvePending);
    }
    function proxy() {
        var timeStamp = Date.now();
        if (leadingCall) {
            if (timeStamp - lastCallTime < trailingTimeout) {
                return;
            }
            trailingCall = true;
        }
        else {
            leadingCall = true;
            trailingCall = false;
            setTimeout(timeoutCallback, delay);
        }
        lastCallTime = timeStamp;
    }
    return proxy;
}
var REFRESH_DELAY = 20;
var transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];
var mutationObserverSupported = typeof MutationObserver !== 'undefined';
var ResizeObserverController =  (function () {
    function ResizeObserverController() {
        this.connected_ = false;
        this.mutationEventsAdded_ = false;
        this.mutationsObserver_ = null;
        this.observers_ = [];
        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);
    }
    ResizeObserverController.prototype.addObserver = function (observer) {
        if (!~this.observers_.indexOf(observer)) {
            this.observers_.push(observer);
        }
        if (!this.connected_) {
            this.connect_();
        }
    };
    ResizeObserverController.prototype.removeObserver = function (observer) {
        var observers = this.observers_;
        var index = observers.indexOf(observer);
        if (~index) {
            observers.splice(index, 1);
        }
        if (!observers.length && this.connected_) {
            this.disconnect_();
        }
    };
    ResizeObserverController.prototype.refresh = function () {
        var changesDetected = this.updateObservers_();
        if (changesDetected) {
            this.refresh();
        }
    };
    ResizeObserverController.prototype.updateObservers_ = function () {
        var activeObservers = this.observers_.filter(function (observer) {
            return observer.gatherActive(), observer.hasActive();
        });
        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });
        return activeObservers.length > 0;
    };
    ResizeObserverController.prototype.connect_ = function () {
        if (!isBrowser || this.connected_) {
            return;
        }
        document.addEventListener('transitionend', this.onTransitionEnd_);
        window.addEventListener('resize', this.refresh);
        if (mutationObserverSupported) {
            this.mutationsObserver_ = new MutationObserver(this.refresh);
            this.mutationsObserver_.observe(document, {
                attributes: true,
                childList: true,
                characterData: true,
                subtree: true
            });
        }
        else {
            document.addEventListener('DOMSubtreeModified', this.refresh);
            this.mutationEventsAdded_ = true;
        }
        this.connected_ = true;
    };
    ResizeObserverController.prototype.disconnect_ = function () {
        if (!isBrowser || !this.connected_) {
            return;
        }
        document.removeEventListener('transitionend', this.onTransitionEnd_);
        window.removeEventListener('resize', this.refresh);
        if (this.mutationsObserver_) {
            this.mutationsObserver_.disconnect();
        }
        if (this.mutationEventsAdded_) {
            document.removeEventListener('DOMSubtreeModified', this.refresh);
        }
        this.mutationsObserver_ = null;
        this.mutationEventsAdded_ = false;
        this.connected_ = false;
    };
    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {
        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;
        var isReflowProperty = transitionKeys.some(function (key) {
            return !!~propertyName.indexOf(key);
        });
        if (isReflowProperty) {
            this.refresh();
        }
    };
    ResizeObserverController.getInstance = function () {
        if (!this.instance_) {
            this.instance_ = new ResizeObserverController();
        }
        return this.instance_;
    };
    ResizeObserverController.instance_ = null;
    return ResizeObserverController;
}());
var defineConfigurable = (function (target, props) {
    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {
        var key = _a[_i];
        Object.defineProperty(target, key, {
            value: props[key],
            enumerable: false,
            writable: false,
            configurable: true
        });
    }
    return target;
});
var getWindowOf = (function (target) {
    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;
    return ownerGlobal || global$1;
});
var emptyRect = createRectInit(0, 0, 0, 0);
function toFloat(value) {
    return parseFloat(value) || 0;
}
function getBordersSize(styles) {
    var positions = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        positions[_i - 1] = arguments[_i];
    }
    return positions.reduce(function (size, position) {
        var value = styles['border-' + position + '-width'];
        return size + toFloat(value);
    }, 0);
}
function getPaddings(styles) {
    var positions = ['top', 'right', 'bottom', 'left'];
    var paddings = {};
    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {
        var position = positions_1[_i];
        var value = styles['padding-' + position];
        paddings[position] = toFloat(value);
    }
    return paddings;
}
function getSVGContentRect(target) {
    var bbox = target.getBBox();
    return createRectInit(0, 0, bbox.width, bbox.height);
}
function getHTMLElementContentRect(target) {
    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;
    if (!clientWidth && !clientHeight) {
        return emptyRect;
    }
    var styles = getWindowOf(target).getComputedStyle(target);
    var paddings = getPaddings(styles);
    var horizPad = paddings.left + paddings.right;
    var vertPad = paddings.top + paddings.bottom;
    var width = toFloat(styles.width), height = toFloat(styles.height);
    if (styles.boxSizing === 'border-box') {
        if (Math.round(width + horizPad) !== clientWidth) {
            width -= getBordersSize(styles, 'left', 'right') + horizPad;
        }
        if (Math.round(height + vertPad) !== clientHeight) {
            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;
        }
    }
    if (!isDocumentElement(target)) {
        var vertScrollbar = Math.round(width + horizPad) - clientWidth;
        var horizScrollbar = Math.round(height + vertPad) - clientHeight;
        if (Math.abs(vertScrollbar) !== 1) {
            width -= vertScrollbar;
        }
        if (Math.abs(horizScrollbar) !== 1) {
            height -= horizScrollbar;
        }
    }
    return createRectInit(paddings.left, paddings.top, width, height);
}
var isSVGGraphicsElement = (function () {
    if (typeof SVGGraphicsElement !== 'undefined') {
        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };
    }
    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&
        typeof target.getBBox === 'function'); };
})();
function isDocumentElement(target) {
    return target === getWindowOf(target).document.documentElement;
}
function getContentRect(target) {
    if (!isBrowser) {
        return emptyRect;
    }
    if (isSVGGraphicsElement(target)) {
        return getSVGContentRect(target);
    }
    return getHTMLElementContentRect(target);
}
function createReadOnlyRect(_a) {
    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;
    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;
    var rect = Object.create(Constr.prototype);
    defineConfigurable(rect, {
        x: x, y: y, width: width, height: height,
        top: y,
        right: x + width,
        bottom: height + y,
        left: x
    });
    return rect;
}
function createRectInit(x, y, width, height) {
    return { x: x, y: y, width: width, height: height };
}
var ResizeObservation =  (function () {
    function ResizeObservation(target) {
        this.broadcastWidth = 0;
        this.broadcastHeight = 0;
        this.contentRect_ = createRectInit(0, 0, 0, 0);
        this.target = target;
    }
    ResizeObservation.prototype.isActive = function () {
        var rect = getContentRect(this.target);
        this.contentRect_ = rect;
        return (rect.width !== this.broadcastWidth ||
            rect.height !== this.broadcastHeight);
    };
    ResizeObservation.prototype.broadcastRect = function () {
        var rect = this.contentRect_;
        this.broadcastWidth = rect.width;
        this.broadcastHeight = rect.height;
        return rect;
    };
    return ResizeObservation;
}());
var ResizeObserverEntry =  (function () {
    function ResizeObserverEntry(target, rectInit) {
        var contentRect = createReadOnlyRect(rectInit);
        defineConfigurable(this, { target: target, contentRect: contentRect });
    }
    return ResizeObserverEntry;
}());
var ResizeObserverSPI =  (function () {
    function ResizeObserverSPI(callback, controller, callbackCtx) {
        this.activeObservations_ = [];
        this.observations_ = new MapShim();
        if (typeof callback !== 'function') {
            throw new TypeError('The callback provided as parameter 1 is not a function.');
        }
        this.callback_ = callback;
        this.controller_ = controller;
        this.callbackCtx_ = callbackCtx;
    }
    ResizeObserverSPI.prototype.observe = function (target) {
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        if (typeof Element === 'undefined' || !(Element instanceof Object)) {
            return;
        }
        if (!(target instanceof getWindowOf(target).Element)) {
            throw new TypeError('parameter 1 is not of type "Element".');
        }
        var observations = this.observations_;
        if (observations.has(target)) {
            return;
        }
        observations.set(target, new ResizeObservation(target));
        this.controller_.addObserver(this);
        this.controller_.refresh();
    };
    ResizeObserverSPI.prototype.unobserve = function (target) {
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        if (typeof Element === 'undefined' || !(Element instanceof Object)) {
            return;
        }
        if (!(target instanceof getWindowOf(target).Element)) {
            throw new TypeError('parameter 1 is not of type "Element".');
        }
        var observations = this.observations_;
        if (!observations.has(target)) {
            return;
        }
        observations.delete(target);
        if (!observations.size) {
            this.controller_.removeObserver(this);
        }
    };
    ResizeObserverSPI.prototype.disconnect = function () {
        this.clearActive();
        this.observations_.clear();
        this.controller_.removeObserver(this);
    };
    ResizeObserverSPI.prototype.gatherActive = function () {
        var _this = this;
        this.clearActive();
        this.observations_.forEach(function (observation) {
            if (observation.isActive()) {
                _this.activeObservations_.push(observation);
            }
        });
    };
    ResizeObserverSPI.prototype.broadcastActive = function () {
        if (!this.hasActive()) {
            return;
        }
        var ctx = this.callbackCtx_;
        var entries = this.activeObservations_.map(function (observation) {
            return new ResizeObserverEntry(observation.target, observation.broadcastRect());
        });
        this.callback_.call(ctx, entries, ctx);
        this.clearActive();
    };
    ResizeObserverSPI.prototype.clearActive = function () {
        this.activeObservations_.splice(0);
    };
    ResizeObserverSPI.prototype.hasActive = function () {
        return this.activeObservations_.length > 0;
    };
    return ResizeObserverSPI;
}());
var observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();
var ResizeObserver =  (function () {
    function ResizeObserver(callback) {
        if (!(this instanceof ResizeObserver)) {
            throw new TypeError('Cannot call a class as a function.');
        }
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        var controller = ResizeObserverController.getInstance();
        var observer = new ResizeObserverSPI(callback, controller, this);
        observers.set(this, observer);
    }
    return ResizeObserver;
}());
[
    'observe',
    'unobserve',
    'disconnect'
].forEach(function (method) {
    ResizeObserver.prototype[method] = function () {
        var _a;
        return (_a = observers.get(this))[method].apply(_a, arguments);
    };
});
var index = (function () {
    if (typeof global$1.ResizeObserver !== 'undefined') {
        return global$1.ResizeObserver;
    }
    return ResizeObserver;
})();

var useMeasure = function useMeasure() {
  var measureRef = React.useRef(null);
  var _useState = React.useState({
    left: 0,
    top: 0,
    width: 0,
    height: 0
  }),
      _useState2 = _slicedToArray$6(_useState, 2),
      bounds = _useState2[0],
      setBounds = _useState2[1];
  var _useState3 = React.useState(function () {
    return new index(function (_ref) {
      var _ref2 = _slicedToArray$6(_ref, 1),
          entry = _ref2[0];
      return setBounds(entry.contentRect);
    });
  }),
      _useState4 = _slicedToArray$6(_useState3, 1),
      observer = _useState4[0];
  React.useEffect(function () {
    if (measureRef.current) {
      observer.observe(measureRef.current);
    }
    return function () {
      return observer.disconnect();
    };
  }, []);
  return [measureRef, bounds];
};

var usePartialTheme = function usePartialTheme(partialTheme) {
  return React.useMemo(function () {
    return extendDefaultTheme(defaultTheme, partialTheme);
  }, [partialTheme]);
};

var getValueFormatter = function getValueFormatter(format$1$1) {
  if (typeof format$1$1 === 'function') return format$1$1;
  if (typeof format$1$1 === 'string') {
    if (format$1$1.indexOf('time:') === 0) {
      return timeFormat(format$1$1.slice('5'));
    }
    return format$1(format$1$1);
  }
  return function (v) {
    return "".concat(v);
  };
};
var useValueFormatter = function useValueFormatter(format) {
  return React.useMemo(function () {
    return getValueFormatter(format);
  }, [format]);
};

var themeContext = React.createContext();
var defaultPartialTheme = {};
var ThemeProvider = function ThemeProvider(_ref) {
  var _ref$theme = _ref.theme,
      partialTheme = _ref$theme === void 0 ? defaultPartialTheme : _ref$theme,
      children = _ref.children;
  var theme = usePartialTheme(partialTheme);
  return jsxRuntime.jsx(themeContext.Provider, {
    value: theme,
    children: children
  });
};
var useTheme = function useTheme() {
  return React.useContext(themeContext);
};

var ConditionalWrapper = function ConditionalWrapper(_ref) {
  var children = _ref.children,
      condition = _ref.condition,
      wrapper = _ref.wrapper;
  if (!condition) return children;
  return React.cloneElement(wrapper, {}, children);
};

var containerStyle = {
  position: 'relative'
};
var Container = function Container(_ref) {
  var children = _ref.children,
      theme = _ref.theme,
      _ref$renderWrapper = _ref.renderWrapper,
      renderWrapper = _ref$renderWrapper === void 0 ? true : _ref$renderWrapper,
      _ref$isInteractive = _ref.isInteractive,
      isInteractive = _ref$isInteractive === void 0 ? true : _ref$isInteractive,
      animate = _ref.animate,
      motionStiffness = _ref.motionStiffness,
      motionDamping = _ref.motionDamping,
      motionConfig = _ref.motionConfig;
  var container = React.useRef(null);
  return jsxRuntime.jsx(ThemeProvider, {
    theme: theme,
    children: jsxRuntime.jsx(MotionConfigProvider, {
      animate: animate,
      stiffness: motionStiffness,
      damping: motionDamping,
      config: motionConfig,
      children: jsxRuntime.jsx(TooltipProvider, {
        container: container,
        children: jsxRuntime.jsxs(ConditionalWrapper, {
          condition: renderWrapper,
          wrapper: jsxRuntime.jsx("div", {
            style: containerStyle,
            ref: container
          }),
          children: [children, isInteractive && jsxRuntime.jsx(Tooltip$1, {})]
        })
      })
    })
  });
};

var ResponsiveWrapper = function ResponsiveWrapper(_ref) {
  var children = _ref.children;
  var _useMeasure = useMeasure(),
      _useMeasure2 = _slicedToArray$6(_useMeasure, 2),
      measureRef = _useMeasure2[0],
      bounds = _useMeasure2[1];
  var shouldRender = bounds.width > 0 && bounds.height > 0;
  return jsxRuntime.jsx("div", {
    ref: measureRef,
    style: {
      width: '100%',
      height: '100%'
    },
    children: shouldRender && children({
      width: bounds.width,
      height: bounds.height
    })
  });
};

var LinearGradient = function LinearGradient(_ref) {
  var id = _ref.id,
      colors = _ref.colors;
  return jsxRuntime.jsx("linearGradient", {
    id: id,
    x1: 0,
    x2: 0,
    y1: 0,
    y2: 1,
    children: colors.map(function (_ref2) {
      var offset = _ref2.offset,
          color = _ref2.color,
          opacity = _ref2.opacity;
      return jsxRuntime.jsx("stop", {
        offset: "".concat(offset, "%"),
        stopColor: color,
        stopOpacity: opacity !== undefined ? opacity : 1
      }, offset);
    })
  });
};

var gradientTypes = {
  linearGradient: LinearGradient
};

var PatternDots = React.memo(function (_ref) {
  var id = _ref.id,
      background = _ref.background,
      color = _ref.color,
      size = _ref.size,
      padding = _ref.padding,
      stagger = _ref.stagger;
  var fullSize = size + padding;
  var radius = size / 2;
  var halfPadding = padding / 2;
  if (stagger === true) {
    fullSize = size * 2 + padding * 2;
  }
  return jsxRuntime.jsxs("pattern", {
    id: id,
    width: fullSize,
    height: fullSize,
    patternUnits: "userSpaceOnUse",
    children: [jsxRuntime.jsx("rect", {
      width: fullSize,
      height: fullSize,
      fill: background
    }), jsxRuntime.jsx("circle", {
      cx: halfPadding + radius,
      cy: halfPadding + radius,
      r: radius,
      fill: color
    }), stagger && jsxRuntime.jsx("circle", {
      cx: padding * 1.5 + size + radius,
      cy: padding * 1.5 + size + radius,
      r: radius,
      fill: color
    })]
  });
});
PatternDots.displayName = 'PatternDots';
PatternDots.defaultProps = {
  color: '#000000',
  background: '#ffffff',
  size: 4,
  padding: 4,
  stagger: false
};
var degreesToRadians = function degreesToRadians(degrees) {
  return degrees * Math.PI / 180;
};

var textPropsByEngine = {
  svg: {
    align: {
      left: 'start',
      center: 'middle',
      right: 'end',
      start: 'start',
      middle: 'middle',
      end: 'end'
    },
    baseline: {
      top: 'text-before-edge',
      center: 'central',
      bottom: 'alphabetic'
    }
  },
  canvas: {
    align: {
      left: 'left',
      center: 'center',
      right: 'right',
      start: 'left',
      middle: 'center',
      end: 'right'
    },
    baseline: {
      top: 'top',
      center: 'middle',
      bottom: 'bottom'
    }
  }
};

var PatternLines = React.memo(function (_ref) {
  var id = _ref.id,
      _spacing = _ref.spacing,
      _rotation = _ref.rotation,
      background = _ref.background,
      color = _ref.color,
      lineWidth = _ref.lineWidth;
  var rotation = Math.round(_rotation) % 360;
  var spacing = Math.abs(_spacing);
  if (rotation > 180) rotation = rotation - 360;else if (rotation > 90) rotation = rotation - 180;else if (rotation < -180) rotation = rotation + 360;else if (rotation < -90) rotation = rotation + 180;
  var width = spacing;
  var height = spacing;
  var path;
  if (rotation === 0) {
    path = "\n                M 0 0 L ".concat(width, " 0\n                M 0 ").concat(height, " L ").concat(width, " ").concat(height, "\n            ");
  } else if (rotation === 90) {
    path = "\n                M 0 0 L 0 ".concat(height, "\n                M ").concat(width, " 0 L ").concat(width, " ").concat(height, "\n            ");
  } else {
    width = Math.abs(spacing / Math.sin(degreesToRadians(rotation)));
    height = spacing / Math.sin(degreesToRadians(90 - rotation));
    if (rotation > 0) {
      path = "\n                    M 0 ".concat(-height, " L ").concat(width * 2, " ").concat(height, "\n                    M ").concat(-width, " ").concat(-height, " L ").concat(width, " ").concat(height, "\n                    M ").concat(-width, " 0 L ").concat(width, " ").concat(height * 2, "\n                ");
    } else {
      path = "\n                    M ".concat(-width, " ").concat(height, " L ").concat(width, " ").concat(-height, "\n                    M ").concat(-width, " ").concat(height * 2, " L ").concat(width * 2, " ").concat(-height, "\n                    M 0 ").concat(height * 2, " L ").concat(width * 2, " 0\n                ");
    }
  }
  return jsxRuntime.jsxs("pattern", {
    id: id,
    width: width,
    height: height,
    patternUnits: "userSpaceOnUse",
    children: [jsxRuntime.jsx("rect", {
      width: width,
      height: height,
      fill: background,
      stroke: "rgba(255, 0, 0, 0.1)",
      strokeWidth: 0
    }), jsxRuntime.jsx("path", {
      d: path,
      strokeWidth: lineWidth,
      stroke: color,
      strokeLinecap: "square"
    })]
  });
});
PatternLines.displayName = 'PatternLines';
PatternLines.defaultProps = {
  spacing: 5,
  rotation: 0,
  color: '#000000',
  background: '#ffffff',
  lineWidth: 2
};

var PatternSquares = React.memo(function (_ref) {
  var id = _ref.id,
      background = _ref.background,
      color = _ref.color,
      size = _ref.size,
      padding = _ref.padding,
      stagger = _ref.stagger;
  var fullSize = size + padding;
  var halfPadding = padding / 2;
  if (stagger === true) {
    fullSize = size * 2 + padding * 2;
  }
  return jsxRuntime.jsxs("pattern", {
    id: id,
    width: fullSize,
    height: fullSize,
    patternUnits: "userSpaceOnUse",
    children: [jsxRuntime.jsx("rect", {
      width: fullSize,
      height: fullSize,
      fill: background
    }), jsxRuntime.jsx("rect", {
      x: halfPadding,
      y: halfPadding,
      width: size,
      height: size,
      fill: color
    }), stagger && jsxRuntime.jsx("rect", {
      x: padding * 1.5 + size,
      y: padding * 1.5 + size,
      width: size,
      height: size,
      fill: color
    })]
  });
});
PatternSquares.displayName = 'PatternSquares';
PatternSquares.defaultProps = {
  color: '#000000',
  background: '#ffffff',
  size: 4,
  padding: 4,
  stagger: false
};

var patternTypes = {
  patternDots: PatternDots,
  patternLines: PatternLines,
  patternSquares: PatternSquares
};

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }
  return target;
}

var defsMapping = _objectSpread2$6(_objectSpread2$6({}, gradientTypes), patternTypes);
var Defs = function Defs(_ref) {
  var definitions = _ref.defs;
  if (!definitions || definitions.length < 1) return null;
  return jsxRuntime.jsx("defs", {
    children: definitions.map(function (_ref2) {
      var type = _ref2.type,
          def = _objectWithoutProperties(_ref2, ["type"]);
      if (defsMapping[type]) return React.createElement(defsMapping[type], _objectSpread2$6({
        key: def.id
      }, def));
      return null;
    })
  });
};
var Defs$1 = React.memo(Defs);

var SvgWrapper = function SvgWrapper(_ref) {
  var width = _ref.width,
      height = _ref.height,
      margin = _ref.margin,
      defs = _ref.defs,
      children = _ref.children,
      role = _ref.role;
  var theme = useTheme();
  return jsxRuntime.jsxs("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    role: role,
    width: width,
    height: height,
    children: [jsxRuntime.jsx(Defs$1, {
      defs: defs
    }), jsxRuntime.jsx("rect", {
      width: width,
      height: height,
      fill: theme.background
    }), jsxRuntime.jsx("g", {
      transform: "translate(".concat(margin.left, ",").concat(margin.top, ")"),
      children: children
    })]
  });
};

var DotsItemSymbol = function DotsItemSymbol(_ref) {
  var size = _ref.size,
      color = _ref.color,
      borderWidth = _ref.borderWidth,
      borderColor = _ref.borderColor;
  return jsxRuntime.jsx("circle", {
    r: size / 2,
    fill: color,
    stroke: borderColor,
    strokeWidth: borderWidth,
    style: {
      pointerEvents: 'none'
    }
  });
};
var DotsItemSymbol$1 = React.memo(DotsItemSymbol);

var DotsItem = function DotsItem(_ref) {
  var x = _ref.x,
      y = _ref.y,
      symbol = _ref.symbol,
      size = _ref.size,
      datum = _ref.datum,
      color = _ref.color,
      borderWidth = _ref.borderWidth,
      borderColor = _ref.borderColor,
      label = _ref.label,
      labelTextAnchor = _ref.labelTextAnchor,
      labelYOffset = _ref.labelYOffset,
      theme = _ref.theme;
  var _useMotionConfig = useMotionConfig(),
      animate = _useMotionConfig.animate,
      springConfig = _useMotionConfig.config;
  var animatedProps = useSpring({
    transform: "translate(".concat(x, ", ").concat(y, ")"),
    config: springConfig,
    immediate: !animate
  });
  return jsxRuntime.jsxs(animated.g, {
    transform: animatedProps.transform,
    style: {
      pointerEvents: 'none'
    },
    children: [React.createElement(symbol, {
      size: size,
      color: color,
      datum: datum,
      borderWidth: borderWidth,
      borderColor: borderColor
    }), label && jsxRuntime.jsx("text", {
      textAnchor: labelTextAnchor,
      y: labelYOffset,
      style: theme.dots.text,
      children: label
    })]
  });
};
var DotsItemDefaultProps = {
  symbol: DotsItemSymbol$1,
  labelTextAnchor: 'middle',
  labelYOffset: -12
};
DotsItem.defaultProps = DotsItemDefaultProps;
var DotsItem$1 = React.memo(DotsItem);

var computeLabel = function computeLabel(_ref) {
  var axis = _ref.axis,
      width = _ref.width,
      height = _ref.height,
      position = _ref.position,
      offsetX = _ref.offsetX,
      offsetY = _ref.offsetY,
      orientation = _ref.orientation;
  var x = 0;
  var y = 0;
  var rotation = orientation === 'vertical' ? -90 : 0;
  var textAnchor = 'start';
  if (axis === 'x') {
    switch (position) {
      case 'top-left':
        x = -offsetX;
        y = offsetY;
        textAnchor = 'end';
        break;
      case 'top':
        y = -offsetY;
        if (orientation === 'horizontal') {
          textAnchor = 'middle';
        } else {
          textAnchor = 'start';
        }
        break;
      case 'top-right':
        x = offsetX;
        y = offsetY;
        if (orientation === 'horizontal') {
          textAnchor = 'start';
        } else {
          textAnchor = 'end';
        }
        break;
      case 'right':
        x = offsetX;
        y = height / 2;
        if (orientation === 'horizontal') {
          textAnchor = 'start';
        } else {
          textAnchor = 'middle';
        }
        break;
      case 'bottom-right':
        x = offsetX;
        y = height - offsetY;
        textAnchor = 'start';
        break;
      case 'bottom':
        y = height + offsetY;
        if (orientation === 'horizontal') {
          textAnchor = 'middle';
        } else {
          textAnchor = 'end';
        }
        break;
      case 'bottom-left':
        y = height - offsetY;
        x = -offsetX;
        if (orientation === 'horizontal') {
          textAnchor = 'end';
        } else {
          textAnchor = 'start';
        }
        break;
      case 'left':
        x = -offsetX;
        y = height / 2;
        if (orientation === 'horizontal') {
          textAnchor = 'end';
        } else {
          textAnchor = 'middle';
        }
        break;
    }
  } else {
    switch (position) {
      case 'top-left':
        x = offsetX;
        y = -offsetY;
        textAnchor = 'start';
        break;
      case 'top':
        x = width / 2;
        y = -offsetY;
        if (orientation === 'horizontal') {
          textAnchor = 'middle';
        } else {
          textAnchor = 'start';
        }
        break;
      case 'top-right':
        x = width - offsetX;
        y = -offsetY;
        if (orientation === 'horizontal') {
          textAnchor = 'end';
        } else {
          textAnchor = 'start';
        }
        break;
      case 'right':
        x = width + offsetX;
        if (orientation === 'horizontal') {
          textAnchor = 'start';
        } else {
          textAnchor = 'middle';
        }
        break;
      case 'bottom-right':
        x = width - offsetX;
        y = offsetY;
        textAnchor = 'end';
        break;
      case 'bottom':
        x = width / 2;
        y = offsetY;
        if (orientation === 'horizontal') {
          textAnchor = 'middle';
        } else {
          textAnchor = 'end';
        }
        break;
      case 'bottom-left':
        x = offsetX;
        y = offsetY;
        if (orientation === 'horizontal') {
          textAnchor = 'start';
        } else {
          textAnchor = 'end';
        }
        break;
      case 'left':
        x = -offsetX;
        if (orientation === 'horizontal') {
          textAnchor = 'end';
        } else {
          textAnchor = 'middle';
        }
        break;
    }
  }
  return {
    x: x,
    y: y,
    rotation: rotation,
    textAnchor: textAnchor
  };
};
var CartesianMarkersItem = function CartesianMarkersItem(_ref2) {
  var width = _ref2.width,
      height = _ref2.height,
      axis = _ref2.axis,
      scale = _ref2.scale,
      value = _ref2.value,
      lineStyle = _ref2.lineStyle,
      textStyle = _ref2.textStyle,
      legend = _ref2.legend,
      legendPosition = _ref2.legendPosition,
      legendOffsetX = _ref2.legendOffsetX,
      legendOffsetY = _ref2.legendOffsetY,
      legendOrientation = _ref2.legendOrientation;
  var theme = useTheme();
  var x = 0;
  var x2 = 0;
  var y = 0;
  var y2 = 0;
  if (axis === 'y') {
    y = scale(value);
    x2 = width;
  } else {
    x = scale(value);
    y2 = height;
  }
  var legendNode = null;
  if (legend) {
    var legendProps = computeLabel({
      axis: axis,
      width: width,
      height: height,
      position: legendPosition,
      offsetX: legendOffsetX,
      offsetY: legendOffsetY,
      orientation: legendOrientation
    });
    legendNode = jsxRuntime.jsx("text", {
      transform: "translate(".concat(legendProps.x, ", ").concat(legendProps.y, ") rotate(").concat(legendProps.rotation, ")"),
      textAnchor: legendProps.textAnchor,
      dominantBaseline: "central",
      style: textStyle,
      children: legend
    });
  }
  return jsxRuntime.jsxs("g", {
    transform: "translate(".concat(x, ", ").concat(y, ")"),
    children: [jsxRuntime.jsx("line", {
      x1: 0,
      x2: x2,
      y1: 0,
      y2: y2,
      stroke: theme.markers.lineColor,
      strokeWidth: theme.markers.lineStrokeWidth,
      style: lineStyle
    }), legendNode]
  });
};
CartesianMarkersItem.defaultProps = {
  legendPosition: 'top-right',
  legendOffsetX: 14,
  legendOffsetY: 14,
  legendOrientation: 'horizontal'
};
var CartesianMarkersItem$1 = React.memo(CartesianMarkersItem);

var CartesianMarkers = function CartesianMarkers(_ref) {
  var markers = _ref.markers,
      width = _ref.width,
      height = _ref.height,
      xScale = _ref.xScale,
      yScale = _ref.yScale;
  if (!markers || markers.length === 0) return null;
  return markers.map(function (marker, i) {
    return jsxRuntime.jsx(CartesianMarkersItem$1, _objectSpread2$6(_objectSpread2$6({}, marker), {}, {
      width: width,
      height: height,
      scale: marker.axis === 'y' ? yScale : xScale
    }), i);
  });
};
var CartesianMarkers$1 = React.memo(CartesianMarkers);

var getLabelGenerator = function getLabelGenerator(_label, labelFormat) {
  var getRawLabel = isFunction_1(_label) ? _label : function (d) {
    return get_1(d, _label);
  };
  var formatter;
  if (labelFormat) {
    formatter = isFunction_1(labelFormat) ? labelFormat : format$1(labelFormat);
  }
  if (formatter) return function (d) {
    return formatter(getRawLabel(d));
  };
  return getRawLabel;
};

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return _setPrototypeOf(o, p);
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _typeof(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return _typeof(obj);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized(self);
}

function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
        result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn(this, result);
  };
}

var withContainer = function withContainer(WrappedComponent) {
  return function (_Component) {
    _inherits(_class, _Component);
    var _super = _createSuper(_class);
    function _class() {
      _classCallCheck(this, _class);
      return _super.apply(this, arguments);
    }
    _createClass(_class, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            theme = _this$props.theme,
            renderWrapper = _this$props.renderWrapper,
            animate = _this$props.animate,
            motionStiffness = _this$props.motionStiffness,
            motionDamping = _this$props.motionDamping,
            motionConfig = _this$props.motionConfig,
            childProps = _objectWithoutProperties(_this$props, ["theme", "renderWrapper", "animate", "motionStiffness", "motionDamping", "motionConfig"]);
        return jsxRuntime.jsx(Container, {
          theme: theme,
          renderWrapper: renderWrapper,
          isInteractive: childProps.isInteractive,
          animate: animate,
          motionStiffness: motionStiffness,
          motionDamping: motionDamping,
          motionConfig: motionConfig,
          children: jsxRuntime.jsx(WrappedComponent, _objectSpread2$6({}, childProps))
        });
      }
    }]);
    return _class;
  }(React.Component);
};
var isCursorInRect = function isCursorInRect(x, y, width, height, cursorX, cursorY) {
  return x <= cursorX && cursorX <= x + width && y <= cursorY && cursorY <= y + height;
};

var getRelativeCursor = function getRelativeCursor(el, event) {
  var clientX = event.clientX,
      clientY = event.clientY;
  var bounds = el.getBoundingClientRect();
  return [clientX - bounds.left, clientY - bounds.top];
};

function _arrayWithoutHoles$2(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray$7(arr);
}

function _iterableToArray$2(iter) {
  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
}

function _nonIterableSpread$2() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _toConsumableArray$2(arr) {
  return _arrayWithoutHoles$2(arr) || _iterableToArray$2(arr) || _unsupportedIterableToArray$7(arr) || _nonIterableSpread$2();
}

var gradientKeys = Object.keys(gradientTypes);
var patternKeys = Object.keys(patternTypes);
var isMatchingDef = function isMatchingDef(predicate, node, dataKey) {
  if (predicate === '*') {
    return true;
  } else if (isFunction_1(predicate)) {
    return predicate(node);
  } else if (isPlainObject_1(predicate)) {
    var data = dataKey ? get_1(node, dataKey) : node;
    return isEqual_1(pick_1(data, Object.keys(predicate)), predicate);
  }
  return false;
};
var bindDefs = function bindDefs(defs, nodes, rules) {
  var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
      dataKey = _ref.dataKey,
      _ref$colorKey = _ref.colorKey,
      colorKey = _ref$colorKey === void 0 ? 'color' : _ref$colorKey,
      _ref$targetKey = _ref.targetKey,
      targetKey = _ref$targetKey === void 0 ? 'fill' : _ref$targetKey;
  var boundDefs = [];
  var generatedIds = {};
  if (defs.length && nodes.length) {
    boundDefs = _toConsumableArray$2(defs);
    nodes.forEach(function (node) {
      var _loop = function _loop(i) {
        var _rules$i = rules[i],
            id = _rules$i.id,
            match = _rules$i.match;
        if (isMatchingDef(match, node, dataKey)) {
          var def = defs.find(function (_ref2) {
            var defId = _ref2.id;
            return defId === id;
          });
          if (def) {
            if (patternKeys.includes(def.type)) {
              if (def.background === 'inherit' || def.color === 'inherit') {
                var nodeColor = get_1(node, colorKey);
                var background = def.background;
                var color = def.color;
                var inheritedId = id;
                if (def.background === 'inherit') {
                  inheritedId = "".concat(inheritedId, ".bg.").concat(nodeColor);
                  background = nodeColor;
                }
                if (def.color === 'inherit') {
                  inheritedId = "".concat(inheritedId, ".fg.").concat(nodeColor);
                  color = nodeColor;
                }
                set_1(node, targetKey, "url(#".concat(inheritedId, ")"));
                if (!generatedIds[inheritedId]) {
                  boundDefs.push(_objectSpread2$6(_objectSpread2$6({}, def), {}, {
                    id: inheritedId,
                    background: background,
                    color: color
                  }));
                  generatedIds[inheritedId] = 1;
                }
              } else {
                set_1(node, targetKey, "url(#".concat(id, ")"));
              }
            } else if (gradientKeys.includes(def.type)) {
              var allColors = def.colors.map(function (_ref3) {
                var color = _ref3.color;
                return color;
              });
              if (allColors.includes('inherit')) {
                var _nodeColor = get_1(node, colorKey);
                var _inheritedId = id;
                var inheritedDef = _objectSpread2$6(_objectSpread2$6({}, def), {}, {
                  colors: def.colors.map(function (colorStop, i) {
                    if (colorStop.color !== 'inherit') return colorStop;
                    _inheritedId = "".concat(_inheritedId, ".").concat(i, ".").concat(_nodeColor);
                    return _objectSpread2$6(_objectSpread2$6({}, colorStop), {}, {
                      color: colorStop.color === 'inherit' ? _nodeColor : colorStop.color
                    });
                  })
                });
                inheritedDef.id = _inheritedId;
                set_1(node, targetKey, "url(#".concat(_inheritedId, ")"));
                if (!generatedIds[_inheritedId]) {
                  boundDefs.push(inheritedDef);
                  generatedIds[_inheritedId] = 1;
                }
              } else {
                set_1(node, targetKey, "url(#".concat(id, ")"));
              }
            }
          }
          return "break";
        }
      };
      for (var i = 0; i < rules.length; i++) {
        var _ret = _loop(i);
        if (_ret === "break") break;
      }
    });
  }
  return boundDefs;
};

var mapToZero_1 = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports['default'] = mapToZero;

function mapToZero(obj) {
  var ret = {};
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      ret[key] = 0;
    }
  }
  return ret;
}

module.exports = exports['default'];
});

var stripStyle_1 = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports['default'] = stripStyle;

function stripStyle(style) {
  var ret = {};
  for (var key in style) {
    if (!Object.prototype.hasOwnProperty.call(style, key)) {
      continue;
    }
    ret[key] = typeof style[key] === 'number' ? style[key] : style[key].val;
  }
  return ret;
}

module.exports = exports['default'];
});

var stepper_1 = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports["default"] = stepper;

var reusedTuple = [0, 0];

function stepper(secondPerFrame, x, v, destX, k, b, precision) {
  // Spring stiffness, in kg / s^2

  // for animations, destX is really spring length (spring at rest). initial
  // position is considered as the stretched/compressed position of a spring
  var Fspring = -k * (x - destX);

  // Damping, in kg / s
  var Fdamper = -b * v;

  // usually we put mass here, but for animation purposes, specifying mass is a
  // bit redundant. you could simply adjust k and b accordingly
  // let a = (Fspring + Fdamper) / mass;
  var a = Fspring + Fdamper;

  var newV = v + a * secondPerFrame;
  var newX = x + newV * secondPerFrame;

  if (Math.abs(newV) < precision && Math.abs(newX - destX) < precision) {
    reusedTuple[0] = destX;
    reusedTuple[1] = 0;
    return reusedTuple;
  }

  reusedTuple[0] = newX;
  reusedTuple[1] = newV;
  return reusedTuple;
}

module.exports = exports["default"];
// array reference around.
});

var performanceNow$1 = createCommonjsModule(function (module) {
// Generated by CoffeeScript 1.7.1
(function() {
  var getNanoSeconds, hrtime, loadTime;

  if ((typeof performance !== "undefined" && performance !== null) && performance.now) {
    module.exports = function() {
      return performance.now();
    };
  } else if ((typeof process !== "undefined" && process !== null) && process.hrtime) {
    module.exports = function() {
      return (getNanoSeconds() - loadTime) / 1e6;
    };
    hrtime = process.hrtime;
    getNanoSeconds = function() {
      var hr;
      hr = hrtime();
      return hr[0] * 1e9 + hr[1];
    };
    loadTime = getNanoSeconds();
  } else if (Date.now) {
    module.exports = function() {
      return Date.now() - loadTime;
    };
    loadTime = Date.now();
  } else {
    module.exports = function() {
      return new Date().getTime() - loadTime;
    };
    loadTime = new Date().getTime();
  }

}).call(commonjsGlobal);
});

var performanceNow = createCommonjsModule(function (module) {
// Generated by CoffeeScript 1.12.2
(function() {
  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;

  if ((typeof performance !== "undefined" && performance !== null) && performance.now) {
    module.exports = function() {
      return performance.now();
    };
  } else if ((typeof process !== "undefined" && process !== null) && process.hrtime) {
    module.exports = function() {
      return (getNanoSeconds() - nodeLoadTime) / 1e6;
    };
    hrtime = process.hrtime;
    getNanoSeconds = function() {
      var hr;
      hr = hrtime();
      return hr[0] * 1e9 + hr[1];
    };
    moduleLoadTime = getNanoSeconds();
    upTime = process.uptime() * 1e9;
    nodeLoadTime = moduleLoadTime - upTime;
  } else if (Date.now) {
    module.exports = function() {
      return Date.now() - loadTime;
    };
    loadTime = Date.now();
  } else {
    module.exports = function() {
      return new Date().getTime() - loadTime;
    };
    loadTime = new Date().getTime();
  }

}).call(commonjsGlobal);


});

var root = typeof window === 'undefined' ? commonjsGlobal : window
  , vendors = ['moz', 'webkit']
  , suffix = 'AnimationFrame'
  , raf = root['request' + suffix]
  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix];

for(var i = 0; !raf && i < vendors.length; i++) {
  raf = root[vendors[i] + 'Request' + suffix];
  caf = root[vendors[i] + 'Cancel' + suffix]
      || root[vendors[i] + 'CancelRequest' + suffix];
}

// Some versions of FF have rAF but not cAF
if(!raf || !caf) {
  var last = 0
    , id = 0
    , queue = []
    , frameDuration = 1000 / 60;

  raf = function(callback) {
    if(queue.length === 0) {
      var _now = performanceNow()
        , next = Math.max(0, frameDuration - (_now - last));
      last = next + _now;
      setTimeout(function() {
        var cp = queue.slice(0);
        // Clear queue here to prevent
        // callbacks from appending listeners
        // to the current frame's queue
        queue.length = 0;
        for(var i = 0; i < cp.length; i++) {
          if(!cp[i].cancelled) {
            try{
              cp[i].callback(last);
            } catch(e) {
              setTimeout(function() { throw e }, 0);
            }
          }
        }
      }, Math.round(next));
    }
    queue.push({
      handle: ++id,
      callback: callback,
      cancelled: false
    });
    return id
  };

  caf = function(handle) {
    for(var i = 0; i < queue.length; i++) {
      if(queue[i].handle === handle) {
        queue[i].cancelled = true;
      }
    }
  };
}

var raf_1 = function(fn) {
  // Wrap in a new function to prevent
  // `cancel` potentially being assigned
  // to the native rAF function
  return raf.call(root, fn)
};
var cancel = function() {
  caf.apply(root, arguments);
};
var polyfill = function(object) {
  if (!object) {
    object = root;
  }
  object.requestAnimationFrame = raf;
  object.cancelAnimationFrame = caf;
};
raf_1.cancel = cancel;
raf_1.polyfill = polyfill;

var shouldStopAnimation_1 = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports['default'] = shouldStopAnimation;

function shouldStopAnimation(currentStyle, style, currentVelocity) {
  for (var key in style) {
    if (!Object.prototype.hasOwnProperty.call(style, key)) {
      continue;
    }

    if (currentVelocity[key] !== 0) {
      return false;
    }

    var styleValue = typeof style[key] === 'number' ? style[key] : style[key].val;
    // stepper will have already taken care of rounding precision errors, so
    // won't have such thing as 0.9999 !=== 1
    if (currentStyle[key] !== styleValue) {
      return false;
    }
  }

  return true;
}

module.exports = exports['default'];
});

var Motion_1 = createCommonjsModule(function (module, exports) {

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }



var _mapToZero2 = _interopRequireDefault(mapToZero_1);



var _stripStyle2 = _interopRequireDefault(stripStyle_1);



var _stepper4 = _interopRequireDefault(stepper_1);



var _performanceNow2 = _interopRequireDefault(performanceNow$1);



var _raf2 = _interopRequireDefault(raf_1);



var _shouldStopAnimation2 = _interopRequireDefault(shouldStopAnimation_1);



var _react2 = _interopRequireDefault(React__default['default']);



var _propTypes2 = _interopRequireDefault(propTypes);

var msPerFrame = 1000 / 60;

var Motion = (function (_React$Component) {
  _inherits(Motion, _React$Component);

  _createClass(Motion, null, [{
    key: 'propTypes',
    value: {
      // TOOD: warn against putting a config in here
      defaultStyle: _propTypes2['default'].objectOf(_propTypes2['default'].number),
      style: _propTypes2['default'].objectOf(_propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].object])).isRequired,
      children: _propTypes2['default'].func.isRequired,
      onRest: _propTypes2['default'].func
    },
    enumerable: true
  }]);

  function Motion(props) {
    var _this = this;

    _classCallCheck(this, Motion);

    _React$Component.call(this, props);
    this.wasAnimating = false;
    this.animationID = null;
    this.prevTime = 0;
    this.accumulatedTime = 0;
    this.unreadPropStyle = null;

    this.clearUnreadPropStyle = function (destStyle) {
      var dirty = false;
      var _state = _this.state;
      var currentStyle = _state.currentStyle;
      var currentVelocity = _state.currentVelocity;
      var lastIdealStyle = _state.lastIdealStyle;
      var lastIdealVelocity = _state.lastIdealVelocity;

      for (var key in destStyle) {
        if (!Object.prototype.hasOwnProperty.call(destStyle, key)) {
          continue;
        }

        var styleValue = destStyle[key];
        if (typeof styleValue === 'number') {
          if (!dirty) {
            dirty = true;
            currentStyle = _extends({}, currentStyle);
            currentVelocity = _extends({}, currentVelocity);
            lastIdealStyle = _extends({}, lastIdealStyle);
            lastIdealVelocity = _extends({}, lastIdealVelocity);
          }

          currentStyle[key] = styleValue;
          currentVelocity[key] = 0;
          lastIdealStyle[key] = styleValue;
          lastIdealVelocity[key] = 0;
        }
      }

      if (dirty) {
        _this.setState({ currentStyle: currentStyle, currentVelocity: currentVelocity, lastIdealStyle: lastIdealStyle, lastIdealVelocity: lastIdealVelocity });
      }
    };

    this.startAnimationIfNecessary = function () {
      // TODO: when config is {a: 10} and dest is {a: 10} do we raf once and
      // call cb? No, otherwise accidental parent rerender causes cb trigger
      _this.animationID = _raf2['default'](function (timestamp) {
        // check if we need to animate in the first place
        var propsStyle = _this.props.style;
        if (_shouldStopAnimation2['default'](_this.state.currentStyle, propsStyle, _this.state.currentVelocity)) {
          if (_this.wasAnimating && _this.props.onRest) {
            _this.props.onRest();
          }

          // no need to cancel animationID here; shouldn't have any in flight
          _this.animationID = null;
          _this.wasAnimating = false;
          _this.accumulatedTime = 0;
          return;
        }

        _this.wasAnimating = true;

        var currentTime = timestamp || _performanceNow2['default']();
        var timeDelta = currentTime - _this.prevTime;
        _this.prevTime = currentTime;
        _this.accumulatedTime = _this.accumulatedTime + timeDelta;
        // more than 10 frames? prolly switched browser tab. Restart
        if (_this.accumulatedTime > msPerFrame * 10) {
          _this.accumulatedTime = 0;
        }

        if (_this.accumulatedTime === 0) {
          // no need to cancel animationID here; shouldn't have any in flight
          _this.animationID = null;
          _this.startAnimationIfNecessary();
          return;
        }

        var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;
        var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);

        var newLastIdealStyle = {};
        var newLastIdealVelocity = {};
        var newCurrentStyle = {};
        var newCurrentVelocity = {};

        for (var key in propsStyle) {
          if (!Object.prototype.hasOwnProperty.call(propsStyle, key)) {
            continue;
          }

          var styleValue = propsStyle[key];
          if (typeof styleValue === 'number') {
            newCurrentStyle[key] = styleValue;
            newCurrentVelocity[key] = 0;
            newLastIdealStyle[key] = styleValue;
            newLastIdealVelocity[key] = 0;
          } else {
            var newLastIdealStyleValue = _this.state.lastIdealStyle[key];
            var newLastIdealVelocityValue = _this.state.lastIdealVelocity[key];
            for (var i = 0; i < framesToCatchUp; i++) {
              var _stepper = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);

              newLastIdealStyleValue = _stepper[0];
              newLastIdealVelocityValue = _stepper[1];
            }

            var _stepper2 = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);

            var nextIdealX = _stepper2[0];
            var nextIdealV = _stepper2[1];

            newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;
            newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;
            newLastIdealStyle[key] = newLastIdealStyleValue;
            newLastIdealVelocity[key] = newLastIdealVelocityValue;
          }
        }

        _this.animationID = null;
        // the amount we're looped over above
        _this.accumulatedTime -= framesToCatchUp * msPerFrame;

        _this.setState({
          currentStyle: newCurrentStyle,
          currentVelocity: newCurrentVelocity,
          lastIdealStyle: newLastIdealStyle,
          lastIdealVelocity: newLastIdealVelocity
        });

        _this.unreadPropStyle = null;

        _this.startAnimationIfNecessary();
      });
    };

    this.state = this.defaultState();
  }

  Motion.prototype.defaultState = function defaultState() {
    var _props = this.props;
    var defaultStyle = _props.defaultStyle;
    var style = _props.style;

    var currentStyle = defaultStyle || _stripStyle2['default'](style);
    var currentVelocity = _mapToZero2['default'](currentStyle);
    return {
      currentStyle: currentStyle,
      currentVelocity: currentVelocity,
      lastIdealStyle: currentStyle,
      lastIdealVelocity: currentVelocity
    };
  };

  // it's possible that currentStyle's value is stale: if props is immediately
  // changed from 0 to 400 to spring(0) again, the async currentStyle is still
  // at 0 (didn't have time to tick and interpolate even once). If we naively
  // compare currentStyle with destVal it'll be 0 === 0 (no animation, stop).
  // In reality currentStyle should be 400

  Motion.prototype.componentDidMount = function componentDidMount() {
    this.prevTime = _performanceNow2['default']();
    this.startAnimationIfNecessary();
  };

  Motion.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {
    if (this.unreadPropStyle != null) {
      // previous props haven't had the chance to be set yet; set them here
      this.clearUnreadPropStyle(this.unreadPropStyle);
    }

    this.unreadPropStyle = props.style;
    if (this.animationID == null) {
      this.prevTime = _performanceNow2['default']();
      this.startAnimationIfNecessary();
    }
  };

  Motion.prototype.componentWillUnmount = function componentWillUnmount() {
    if (this.animationID != null) {
      _raf2['default'].cancel(this.animationID);
      this.animationID = null;
    }
  };

  Motion.prototype.render = function render() {
    var renderedChildren = this.props.children(this.state.currentStyle);
    return renderedChildren && _react2['default'].Children.only(renderedChildren);
  };

  return Motion;
})(_react2['default'].Component);

exports['default'] = Motion;
module.exports = exports['default'];

// after checking for unreadPropStyle != null, we manually go set the
// non-interpolating values (those that are a number, without a spring
// config)
});

var StaggeredMotion_1 = createCommonjsModule(function (module, exports) {

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }



var _mapToZero2 = _interopRequireDefault(mapToZero_1);



var _stripStyle2 = _interopRequireDefault(stripStyle_1);



var _stepper4 = _interopRequireDefault(stepper_1);



var _performanceNow2 = _interopRequireDefault(performanceNow$1);



var _raf2 = _interopRequireDefault(raf_1);



var _shouldStopAnimation2 = _interopRequireDefault(shouldStopAnimation_1);



var _react2 = _interopRequireDefault(React__default['default']);



var _propTypes2 = _interopRequireDefault(propTypes);

var msPerFrame = 1000 / 60;

function shouldStopAnimationAll(currentStyles, styles, currentVelocities) {
  for (var i = 0; i < currentStyles.length; i++) {
    if (!_shouldStopAnimation2['default'](currentStyles[i], styles[i], currentVelocities[i])) {
      return false;
    }
  }
  return true;
}

var StaggeredMotion = (function (_React$Component) {
  _inherits(StaggeredMotion, _React$Component);

  _createClass(StaggeredMotion, null, [{
    key: 'propTypes',
    value: {
      // TOOD: warn against putting a config in here
      defaultStyles: _propTypes2['default'].arrayOf(_propTypes2['default'].objectOf(_propTypes2['default'].number)),
      styles: _propTypes2['default'].func.isRequired,
      children: _propTypes2['default'].func.isRequired
    },
    enumerable: true
  }]);

  function StaggeredMotion(props) {
    var _this = this;

    _classCallCheck(this, StaggeredMotion);

    _React$Component.call(this, props);
    this.animationID = null;
    this.prevTime = 0;
    this.accumulatedTime = 0;
    this.unreadPropStyles = null;

    this.clearUnreadPropStyle = function (unreadPropStyles) {
      var _state = _this.state;
      var currentStyles = _state.currentStyles;
      var currentVelocities = _state.currentVelocities;
      var lastIdealStyles = _state.lastIdealStyles;
      var lastIdealVelocities = _state.lastIdealVelocities;

      var someDirty = false;
      for (var i = 0; i < unreadPropStyles.length; i++) {
        var unreadPropStyle = unreadPropStyles[i];
        var dirty = false;

        for (var key in unreadPropStyle) {
          if (!Object.prototype.hasOwnProperty.call(unreadPropStyle, key)) {
            continue;
          }

          var styleValue = unreadPropStyle[key];
          if (typeof styleValue === 'number') {
            if (!dirty) {
              dirty = true;
              someDirty = true;
              currentStyles[i] = _extends({}, currentStyles[i]);
              currentVelocities[i] = _extends({}, currentVelocities[i]);
              lastIdealStyles[i] = _extends({}, lastIdealStyles[i]);
              lastIdealVelocities[i] = _extends({}, lastIdealVelocities[i]);
            }
            currentStyles[i][key] = styleValue;
            currentVelocities[i][key] = 0;
            lastIdealStyles[i][key] = styleValue;
            lastIdealVelocities[i][key] = 0;
          }
        }
      }

      if (someDirty) {
        _this.setState({ currentStyles: currentStyles, currentVelocities: currentVelocities, lastIdealStyles: lastIdealStyles, lastIdealVelocities: lastIdealVelocities });
      }
    };

    this.startAnimationIfNecessary = function () {
      // TODO: when config is {a: 10} and dest is {a: 10} do we raf once and
      // call cb? No, otherwise accidental parent rerender causes cb trigger
      _this.animationID = _raf2['default'](function (timestamp) {
        var destStyles = _this.props.styles(_this.state.lastIdealStyles);

        // check if we need to animate in the first place
        if (shouldStopAnimationAll(_this.state.currentStyles, destStyles, _this.state.currentVelocities)) {
          // no need to cancel animationID here; shouldn't have any in flight
          _this.animationID = null;
          _this.accumulatedTime = 0;
          return;
        }

        var currentTime = timestamp || _performanceNow2['default']();
        var timeDelta = currentTime - _this.prevTime;
        _this.prevTime = currentTime;
        _this.accumulatedTime = _this.accumulatedTime + timeDelta;
        // more than 10 frames? prolly switched browser tab. Restart
        if (_this.accumulatedTime > msPerFrame * 10) {
          _this.accumulatedTime = 0;
        }

        if (_this.accumulatedTime === 0) {
          // no need to cancel animationID here; shouldn't have any in flight
          _this.animationID = null;
          _this.startAnimationIfNecessary();
          return;
        }

        var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;
        var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);

        var newLastIdealStyles = [];
        var newLastIdealVelocities = [];
        var newCurrentStyles = [];
        var newCurrentVelocities = [];

        for (var i = 0; i < destStyles.length; i++) {
          var destStyle = destStyles[i];
          var newCurrentStyle = {};
          var newCurrentVelocity = {};
          var newLastIdealStyle = {};
          var newLastIdealVelocity = {};

          for (var key in destStyle) {
            if (!Object.prototype.hasOwnProperty.call(destStyle, key)) {
              continue;
            }

            var styleValue = destStyle[key];
            if (typeof styleValue === 'number') {
              newCurrentStyle[key] = styleValue;
              newCurrentVelocity[key] = 0;
              newLastIdealStyle[key] = styleValue;
              newLastIdealVelocity[key] = 0;
            } else {
              var newLastIdealStyleValue = _this.state.lastIdealStyles[i][key];
              var newLastIdealVelocityValue = _this.state.lastIdealVelocities[i][key];
              for (var j = 0; j < framesToCatchUp; j++) {
                var _stepper = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);

                newLastIdealStyleValue = _stepper[0];
                newLastIdealVelocityValue = _stepper[1];
              }

              var _stepper2 = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);

              var nextIdealX = _stepper2[0];
              var nextIdealV = _stepper2[1];

              newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;
              newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;
              newLastIdealStyle[key] = newLastIdealStyleValue;
              newLastIdealVelocity[key] = newLastIdealVelocityValue;
            }
          }

          newCurrentStyles[i] = newCurrentStyle;
          newCurrentVelocities[i] = newCurrentVelocity;
          newLastIdealStyles[i] = newLastIdealStyle;
          newLastIdealVelocities[i] = newLastIdealVelocity;
        }

        _this.animationID = null;
        // the amount we're looped over above
        _this.accumulatedTime -= framesToCatchUp * msPerFrame;

        _this.setState({
          currentStyles: newCurrentStyles,
          currentVelocities: newCurrentVelocities,
          lastIdealStyles: newLastIdealStyles,
          lastIdealVelocities: newLastIdealVelocities
        });

        _this.unreadPropStyles = null;

        _this.startAnimationIfNecessary();
      });
    };

    this.state = this.defaultState();
  }

  StaggeredMotion.prototype.defaultState = function defaultState() {
    var _props = this.props;
    var defaultStyles = _props.defaultStyles;
    var styles = _props.styles;

    var currentStyles = defaultStyles || styles().map(_stripStyle2['default']);
    var currentVelocities = currentStyles.map(function (currentStyle) {
      return _mapToZero2['default'](currentStyle);
    });
    return {
      currentStyles: currentStyles,
      currentVelocities: currentVelocities,
      lastIdealStyles: currentStyles,
      lastIdealVelocities: currentVelocities
    };
  };

  StaggeredMotion.prototype.componentDidMount = function componentDidMount() {
    this.prevTime = _performanceNow2['default']();
    this.startAnimationIfNecessary();
  };

  StaggeredMotion.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {
    if (this.unreadPropStyles != null) {
      // previous props haven't had the chance to be set yet; set them here
      this.clearUnreadPropStyle(this.unreadPropStyles);
    }

    this.unreadPropStyles = props.styles(this.state.lastIdealStyles);
    if (this.animationID == null) {
      this.prevTime = _performanceNow2['default']();
      this.startAnimationIfNecessary();
    }
  };

  StaggeredMotion.prototype.componentWillUnmount = function componentWillUnmount() {
    if (this.animationID != null) {
      _raf2['default'].cancel(this.animationID);
      this.animationID = null;
    }
  };

  StaggeredMotion.prototype.render = function render() {
    var renderedChildren = this.props.children(this.state.currentStyles);
    return renderedChildren && _react2['default'].Children.only(renderedChildren);
  };

  return StaggeredMotion;
})(_react2['default'].Component);

exports['default'] = StaggeredMotion;
module.exports = exports['default'];

// it's possible that currentStyle's value is stale: if props is immediately
// changed from 0 to 400 to spring(0) again, the async currentStyle is still
// at 0 (didn't have time to tick and interpolate even once). If we naively
// compare currentStyle with destVal it'll be 0 === 0 (no animation, stop).
// In reality currentStyle should be 400

// after checking for unreadPropStyles != null, we manually go set the
// non-interpolating values (those that are a number, without a spring
// config)
});

var mergeDiff_1 = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports['default'] = mergeDiff;

function mergeDiff(prev, next, onRemove) {
  // bookkeeping for easier access of a key's index below. This is 2 allocations +
  // potentially triggering chrome hash map mode for objs (so it might be faster

  var prevKeyIndex = {};
  for (var i = 0; i < prev.length; i++) {
    prevKeyIndex[prev[i].key] = i;
  }
  var nextKeyIndex = {};
  for (var i = 0; i < next.length; i++) {
    nextKeyIndex[next[i].key] = i;
  }

  // first, an overly elaborate way of merging prev and next, eliminating
  // duplicates (in terms of keys). If there's dupe, keep the item in next).
  // This way of writing it saves allocations
  var ret = [];
  for (var i = 0; i < next.length; i++) {
    ret[i] = next[i];
  }
  for (var i = 0; i < prev.length; i++) {
    if (!Object.prototype.hasOwnProperty.call(nextKeyIndex, prev[i].key)) {
      // this is called my TM's `mergeAndSync`, which calls willLeave. We don't
      // merge in keys that the user desires to kill
      var fill = onRemove(i, prev[i]);
      if (fill != null) {
        ret.push(fill);
      }
    }
  }

  // now all the items all present. Core sorting logic to have the right order
  return ret.sort(function (a, b) {
    var nextOrderA = nextKeyIndex[a.key];
    var nextOrderB = nextKeyIndex[b.key];
    var prevOrderA = prevKeyIndex[a.key];
    var prevOrderB = prevKeyIndex[b.key];

    if (nextOrderA != null && nextOrderB != null) {
      // both keys in next
      return nextKeyIndex[a.key] - nextKeyIndex[b.key];
    } else if (prevOrderA != null && prevOrderB != null) {
      // both keys in prev
      return prevKeyIndex[a.key] - prevKeyIndex[b.key];
    } else if (nextOrderA != null) {
      // key a in next, key b in prev

      // how to determine the order between a and b? We find a "pivot" (term
      // abuse), a key present in both prev and next, that is sandwiched between
      // a and b. In the context of our above example, if we're comparing a and
      // d, b's (the only) pivot
      for (var i = 0; i < next.length; i++) {
        var pivot = next[i].key;
        if (!Object.prototype.hasOwnProperty.call(prevKeyIndex, pivot)) {
          continue;
        }

        if (nextOrderA < nextKeyIndex[pivot] && prevOrderB > prevKeyIndex[pivot]) {
          return -1;
        } else if (nextOrderA > nextKeyIndex[pivot] && prevOrderB < prevKeyIndex[pivot]) {
          return 1;
        }
      }
      // pluggable. default to: next bigger than prev
      return 1;
    }
    // prevOrderA, nextOrderB
    for (var i = 0; i < next.length; i++) {
      var pivot = next[i].key;
      if (!Object.prototype.hasOwnProperty.call(prevKeyIndex, pivot)) {
        continue;
      }
      if (nextOrderB < nextKeyIndex[pivot] && prevOrderA > prevKeyIndex[pivot]) {
        return 1;
      } else if (nextOrderB > nextKeyIndex[pivot] && prevOrderA < prevKeyIndex[pivot]) {
        return -1;
      }
    }
    // pluggable. default to: next bigger than prev
    return -1;
  });
}

module.exports = exports['default'];
// to loop through and find a key's index each time), but I no longer care
});

var TransitionMotion_1 = createCommonjsModule(function (module, exports) {

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }



var _mapToZero2 = _interopRequireDefault(mapToZero_1);



var _stripStyle2 = _interopRequireDefault(stripStyle_1);



var _stepper4 = _interopRequireDefault(stepper_1);



var _mergeDiff2 = _interopRequireDefault(mergeDiff_1);



var _performanceNow2 = _interopRequireDefault(performanceNow$1);



var _raf2 = _interopRequireDefault(raf_1);



var _shouldStopAnimation2 = _interopRequireDefault(shouldStopAnimation_1);



var _react2 = _interopRequireDefault(React__default['default']);



var _propTypes2 = _interopRequireDefault(propTypes);

var msPerFrame = 1000 / 60;

// the children function & (potential) styles function asks as param an
// Array<TransitionPlainStyle>, where each TransitionPlainStyle is of the format
// {key: string, data?: any, style: PlainStyle}. However, the way we keep
// internal states doesn't contain such a data structure (check the state and
// TransitionMotionState). So when children function and others ask for such
// data we need to generate them on the fly by combining mergedPropsStyles and
// currentStyles/lastIdealStyles
function rehydrateStyles(mergedPropsStyles, unreadPropStyles, plainStyles) {
  // Copy the value to a `const` so that Flow understands that the const won't
  // change and will be non-nullable in the callback below.
  var cUnreadPropStyles = unreadPropStyles;
  if (cUnreadPropStyles == null) {
    return mergedPropsStyles.map(function (mergedPropsStyle, i) {
      return {
        key: mergedPropsStyle.key,
        data: mergedPropsStyle.data,
        style: plainStyles[i]
      };
    });
  }
  return mergedPropsStyles.map(function (mergedPropsStyle, i) {
    for (var j = 0; j < cUnreadPropStyles.length; j++) {
      if (cUnreadPropStyles[j].key === mergedPropsStyle.key) {
        return {
          key: cUnreadPropStyles[j].key,
          data: cUnreadPropStyles[j].data,
          style: plainStyles[i]
        };
      }
    }
    return { key: mergedPropsStyle.key, data: mergedPropsStyle.data, style: plainStyles[i] };
  });
}

function shouldStopAnimationAll(currentStyles, destStyles, currentVelocities, mergedPropsStyles) {
  if (mergedPropsStyles.length !== destStyles.length) {
    return false;
  }

  for (var i = 0; i < mergedPropsStyles.length; i++) {
    if (mergedPropsStyles[i].key !== destStyles[i].key) {
      return false;
    }
  }

  // we have the invariant that mergedPropsStyles and
  // currentStyles/currentVelocities/last* are synced in terms of cells, see
  // mergeAndSync comment for more info
  for (var i = 0; i < mergedPropsStyles.length; i++) {
    if (!_shouldStopAnimation2['default'](currentStyles[i], destStyles[i].style, currentVelocities[i])) {
      return false;
    }
  }

  return true;
}

// core key merging logic

// things to do: say previously merged style is {a, b}, dest style (prop) is {b,
// c}, previous current (interpolating) style is {a, b}
// **invariant**: current[i] corresponds to merged[i] in terms of key

// steps:
// turn merged style into {a?, b, c}
//    add c, value of c is destStyles.c
//    maybe remove a, aka call willLeave(a), then merged is either {b, c} or {a, b, c}
// turn current (interpolating) style from {a, b} into {a?, b, c}
//    maybe remove a
//    certainly add c, value of c is willEnter(c)
// loop over merged and construct new current
// dest doesn't change, that's owner's
function mergeAndSync(willEnter, willLeave, didLeave, oldMergedPropsStyles, destStyles, oldCurrentStyles, oldCurrentVelocities, oldLastIdealStyles, oldLastIdealVelocities) {
  var newMergedPropsStyles = _mergeDiff2['default'](oldMergedPropsStyles, destStyles, function (oldIndex, oldMergedPropsStyle) {
    var leavingStyle = willLeave(oldMergedPropsStyle);
    if (leavingStyle == null) {
      didLeave({ key: oldMergedPropsStyle.key, data: oldMergedPropsStyle.data });
      return null;
    }
    if (_shouldStopAnimation2['default'](oldCurrentStyles[oldIndex], leavingStyle, oldCurrentVelocities[oldIndex])) {
      didLeave({ key: oldMergedPropsStyle.key, data: oldMergedPropsStyle.data });
      return null;
    }
    return { key: oldMergedPropsStyle.key, data: oldMergedPropsStyle.data, style: leavingStyle };
  });

  var newCurrentStyles = [];
  var newCurrentVelocities = [];
  var newLastIdealStyles = [];
  var newLastIdealVelocities = [];
  for (var i = 0; i < newMergedPropsStyles.length; i++) {
    var newMergedPropsStyleCell = newMergedPropsStyles[i];
    var foundOldIndex = null;
    for (var j = 0; j < oldMergedPropsStyles.length; j++) {
      if (oldMergedPropsStyles[j].key === newMergedPropsStyleCell.key) {
        foundOldIndex = j;
        break;
      }
    }
    // TODO: key search code
    if (foundOldIndex == null) {
      var plainStyle = willEnter(newMergedPropsStyleCell);
      newCurrentStyles[i] = plainStyle;
      newLastIdealStyles[i] = plainStyle;

      var velocity = _mapToZero2['default'](newMergedPropsStyleCell.style);
      newCurrentVelocities[i] = velocity;
      newLastIdealVelocities[i] = velocity;
    } else {
      newCurrentStyles[i] = oldCurrentStyles[foundOldIndex];
      newLastIdealStyles[i] = oldLastIdealStyles[foundOldIndex];
      newCurrentVelocities[i] = oldCurrentVelocities[foundOldIndex];
      newLastIdealVelocities[i] = oldLastIdealVelocities[foundOldIndex];
    }
  }

  return [newMergedPropsStyles, newCurrentStyles, newCurrentVelocities, newLastIdealStyles, newLastIdealVelocities];
}

var TransitionMotion = (function (_React$Component) {
  _inherits(TransitionMotion, _React$Component);

  _createClass(TransitionMotion, null, [{
    key: 'propTypes',
    value: {
      defaultStyles: _propTypes2['default'].arrayOf(_propTypes2['default'].shape({
        key: _propTypes2['default'].string.isRequired,
        data: _propTypes2['default'].any,
        style: _propTypes2['default'].objectOf(_propTypes2['default'].number).isRequired
      })),
      styles: _propTypes2['default'].oneOfType([_propTypes2['default'].func, _propTypes2['default'].arrayOf(_propTypes2['default'].shape({
        key: _propTypes2['default'].string.isRequired,
        data: _propTypes2['default'].any,
        style: _propTypes2['default'].objectOf(_propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].object])).isRequired
      }))]).isRequired,
      children: _propTypes2['default'].func.isRequired,
      willEnter: _propTypes2['default'].func,
      willLeave: _propTypes2['default'].func,
      didLeave: _propTypes2['default'].func
    },
    enumerable: true
  }, {
    key: 'defaultProps',
    value: {
      willEnter: function willEnter(styleThatEntered) {
        return _stripStyle2['default'](styleThatEntered.style);
      },
      // recall: returning null makes the current unmounting TransitionStyle
      // disappear immediately
      willLeave: function willLeave() {
        return null;
      },
      didLeave: function didLeave() {}
    },
    enumerable: true
  }]);

  function TransitionMotion(props) {
    var _this = this;

    _classCallCheck(this, TransitionMotion);

    _React$Component.call(this, props);
    this.unmounting = false;
    this.animationID = null;
    this.prevTime = 0;
    this.accumulatedTime = 0;
    this.unreadPropStyles = null;

    this.clearUnreadPropStyle = function (unreadPropStyles) {
      var _mergeAndSync = mergeAndSync(_this.props.willEnter, _this.props.willLeave, _this.props.didLeave, _this.state.mergedPropsStyles, unreadPropStyles, _this.state.currentStyles, _this.state.currentVelocities, _this.state.lastIdealStyles, _this.state.lastIdealVelocities);

      var mergedPropsStyles = _mergeAndSync[0];
      var currentStyles = _mergeAndSync[1];
      var currentVelocities = _mergeAndSync[2];
      var lastIdealStyles = _mergeAndSync[3];
      var lastIdealVelocities = _mergeAndSync[4];

      for (var i = 0; i < unreadPropStyles.length; i++) {
        var unreadPropStyle = unreadPropStyles[i].style;
        var dirty = false;

        for (var key in unreadPropStyle) {
          if (!Object.prototype.hasOwnProperty.call(unreadPropStyle, key)) {
            continue;
          }

          var styleValue = unreadPropStyle[key];
          if (typeof styleValue === 'number') {
            if (!dirty) {
              dirty = true;
              currentStyles[i] = _extends({}, currentStyles[i]);
              currentVelocities[i] = _extends({}, currentVelocities[i]);
              lastIdealStyles[i] = _extends({}, lastIdealStyles[i]);
              lastIdealVelocities[i] = _extends({}, lastIdealVelocities[i]);
              mergedPropsStyles[i] = {
                key: mergedPropsStyles[i].key,
                data: mergedPropsStyles[i].data,
                style: _extends({}, mergedPropsStyles[i].style)
              };
            }
            currentStyles[i][key] = styleValue;
            currentVelocities[i][key] = 0;
            lastIdealStyles[i][key] = styleValue;
            lastIdealVelocities[i][key] = 0;
            mergedPropsStyles[i].style[key] = styleValue;
          }
        }
      }

      // unlike the other 2 components, we can't detect staleness and optionally
      // opt out of setState here. each style object's data might contain new
      // stuff we're not/cannot compare
      _this.setState({
        currentStyles: currentStyles,
        currentVelocities: currentVelocities,
        mergedPropsStyles: mergedPropsStyles,
        lastIdealStyles: lastIdealStyles,
        lastIdealVelocities: lastIdealVelocities
      });
    };

    this.startAnimationIfNecessary = function () {
      if (_this.unmounting) {
        return;
      }

      // TODO: when config is {a: 10} and dest is {a: 10} do we raf once and
      // call cb? No, otherwise accidental parent rerender causes cb trigger
      _this.animationID = _raf2['default'](function (timestamp) {
        // https://github.com/chenglou/react-motion/pull/420
        // > if execution passes the conditional if (this.unmounting), then
        // executes async defaultRaf and after that component unmounts and after
        // that the callback of defaultRaf is called, then setState will be called
        // on unmounted component.
        if (_this.unmounting) {
          return;
        }

        var propStyles = _this.props.styles;
        var destStyles = typeof propStyles === 'function' ? propStyles(rehydrateStyles(_this.state.mergedPropsStyles, _this.unreadPropStyles, _this.state.lastIdealStyles)) : propStyles;

        // check if we need to animate in the first place
        if (shouldStopAnimationAll(_this.state.currentStyles, destStyles, _this.state.currentVelocities, _this.state.mergedPropsStyles)) {
          // no need to cancel animationID here; shouldn't have any in flight
          _this.animationID = null;
          _this.accumulatedTime = 0;
          return;
        }

        var currentTime = timestamp || _performanceNow2['default']();
        var timeDelta = currentTime - _this.prevTime;
        _this.prevTime = currentTime;
        _this.accumulatedTime = _this.accumulatedTime + timeDelta;
        // more than 10 frames? prolly switched browser tab. Restart
        if (_this.accumulatedTime > msPerFrame * 10) {
          _this.accumulatedTime = 0;
        }

        if (_this.accumulatedTime === 0) {
          // no need to cancel animationID here; shouldn't have any in flight
          _this.animationID = null;
          _this.startAnimationIfNecessary();
          return;
        }

        var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;
        var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);

        var _mergeAndSync2 = mergeAndSync(_this.props.willEnter, _this.props.willLeave, _this.props.didLeave, _this.state.mergedPropsStyles, destStyles, _this.state.currentStyles, _this.state.currentVelocities, _this.state.lastIdealStyles, _this.state.lastIdealVelocities);

        var newMergedPropsStyles = _mergeAndSync2[0];
        var newCurrentStyles = _mergeAndSync2[1];
        var newCurrentVelocities = _mergeAndSync2[2];
        var newLastIdealStyles = _mergeAndSync2[3];
        var newLastIdealVelocities = _mergeAndSync2[4];

        for (var i = 0; i < newMergedPropsStyles.length; i++) {
          var newMergedPropsStyle = newMergedPropsStyles[i].style;
          var newCurrentStyle = {};
          var newCurrentVelocity = {};
          var newLastIdealStyle = {};
          var newLastIdealVelocity = {};

          for (var key in newMergedPropsStyle) {
            if (!Object.prototype.hasOwnProperty.call(newMergedPropsStyle, key)) {
              continue;
            }

            var styleValue = newMergedPropsStyle[key];
            if (typeof styleValue === 'number') {
              newCurrentStyle[key] = styleValue;
              newCurrentVelocity[key] = 0;
              newLastIdealStyle[key] = styleValue;
              newLastIdealVelocity[key] = 0;
            } else {
              var newLastIdealStyleValue = newLastIdealStyles[i][key];
              var newLastIdealVelocityValue = newLastIdealVelocities[i][key];
              for (var j = 0; j < framesToCatchUp; j++) {
                var _stepper = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);

                newLastIdealStyleValue = _stepper[0];
                newLastIdealVelocityValue = _stepper[1];
              }

              var _stepper2 = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);

              var nextIdealX = _stepper2[0];
              var nextIdealV = _stepper2[1];

              newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;
              newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;
              newLastIdealStyle[key] = newLastIdealStyleValue;
              newLastIdealVelocity[key] = newLastIdealVelocityValue;
            }
          }

          newLastIdealStyles[i] = newLastIdealStyle;
          newLastIdealVelocities[i] = newLastIdealVelocity;
          newCurrentStyles[i] = newCurrentStyle;
          newCurrentVelocities[i] = newCurrentVelocity;
        }

        _this.animationID = null;
        // the amount we're looped over above
        _this.accumulatedTime -= framesToCatchUp * msPerFrame;

        _this.setState({
          currentStyles: newCurrentStyles,
          currentVelocities: newCurrentVelocities,
          lastIdealStyles: newLastIdealStyles,
          lastIdealVelocities: newLastIdealVelocities,
          mergedPropsStyles: newMergedPropsStyles
        });

        _this.unreadPropStyles = null;

        _this.startAnimationIfNecessary();
      });
    };

    this.state = this.defaultState();
  }

  TransitionMotion.prototype.defaultState = function defaultState() {
    var _props = this.props;
    var defaultStyles = _props.defaultStyles;
    var styles = _props.styles;
    var willEnter = _props.willEnter;
    var willLeave = _props.willLeave;
    var didLeave = _props.didLeave;

    var destStyles = typeof styles === 'function' ? styles(defaultStyles) : styles;

    // this is special. for the first time around, we don't have a comparison
    // between last (no last) and current merged props. we'll compute last so:
    // say default is {a, b} and styles (dest style) is {b, c}, we'll
    // fabricate last as {a, b}
    var oldMergedPropsStyles = undefined;
    if (defaultStyles == null) {
      oldMergedPropsStyles = destStyles;
    } else {
      oldMergedPropsStyles = defaultStyles.map(function (defaultStyleCell) {
        // TODO: key search code
        for (var i = 0; i < destStyles.length; i++) {
          if (destStyles[i].key === defaultStyleCell.key) {
            return destStyles[i];
          }
        }
        return defaultStyleCell;
      });
    }
    var oldCurrentStyles = defaultStyles == null ? destStyles.map(function (s) {
      return _stripStyle2['default'](s.style);
    }) : defaultStyles.map(function (s) {
      return _stripStyle2['default'](s.style);
    });
    var oldCurrentVelocities = defaultStyles == null ? destStyles.map(function (s) {
      return _mapToZero2['default'](s.style);
    }) : defaultStyles.map(function (s) {
      return _mapToZero2['default'](s.style);
    });

    var _mergeAndSync3 = mergeAndSync(
    // Because this is an old-style createReactClass component, Flow doesn't
    // understand that the willEnter and willLeave props have default values
    // and will always be present.
    willEnter, willLeave, didLeave, oldMergedPropsStyles, destStyles, oldCurrentStyles, oldCurrentVelocities, oldCurrentStyles, // oldLastIdealStyles really
    oldCurrentVelocities);

    var mergedPropsStyles = _mergeAndSync3[0];
    var currentStyles = _mergeAndSync3[1];
    var currentVelocities = _mergeAndSync3[2];
    var lastIdealStyles = _mergeAndSync3[3];
    var lastIdealVelocities = _mergeAndSync3[4];
    // oldLastIdealVelocities really

    return {
      currentStyles: currentStyles,
      currentVelocities: currentVelocities,
      lastIdealStyles: lastIdealStyles,
      lastIdealVelocities: lastIdealVelocities,
      mergedPropsStyles: mergedPropsStyles
    };
  };

  // after checking for unreadPropStyles != null, we manually go set the
  // non-interpolating values (those that are a number, without a spring
  // config)

  TransitionMotion.prototype.componentDidMount = function componentDidMount() {
    this.prevTime = _performanceNow2['default']();
    this.startAnimationIfNecessary();
  };

  TransitionMotion.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {
    if (this.unreadPropStyles) {
      // previous props haven't had the chance to be set yet; set them here
      this.clearUnreadPropStyle(this.unreadPropStyles);
    }

    var styles = props.styles;
    if (typeof styles === 'function') {
      this.unreadPropStyles = styles(rehydrateStyles(this.state.mergedPropsStyles, this.unreadPropStyles, this.state.lastIdealStyles));
    } else {
      this.unreadPropStyles = styles;
    }

    if (this.animationID == null) {
      this.prevTime = _performanceNow2['default']();
      this.startAnimationIfNecessary();
    }
  };

  TransitionMotion.prototype.componentWillUnmount = function componentWillUnmount() {
    this.unmounting = true;
    if (this.animationID != null) {
      _raf2['default'].cancel(this.animationID);
      this.animationID = null;
    }
  };

  TransitionMotion.prototype.render = function render() {
    var hydratedStyles = rehydrateStyles(this.state.mergedPropsStyles, this.unreadPropStyles, this.state.currentStyles);
    var renderedChildren = this.props.children(hydratedStyles);
    return renderedChildren && _react2['default'].Children.only(renderedChildren);
  };

  return TransitionMotion;
})(_react2['default'].Component);

exports['default'] = TransitionMotion;
module.exports = exports['default'];

// list of styles, each containing interpolating values. Part of what's passed
// to children function. Notice that this is
// Array<ActualInterpolatingStyleObject>, without the wrapper that is {key: ...,
// data: ... style: ActualInterpolatingStyleObject}. Only mergedPropsStyles
// contains the key & data info (so that we only have a single source of truth
// for these, and to save space). Check the comment for `rehydrateStyles` to
// see how we regenerate the entirety of what's passed to children function

// the array that keeps track of currently rendered stuff! Including stuff
// that you've unmounted but that's still animating. This is where it lives

// it's possible that currentStyle's value is stale: if props is immediately
// changed from 0 to 400 to spring(0) again, the async currentStyle is still
// at 0 (didn't have time to tick and interpolate even once). If we naively
// compare currentStyle with destVal it'll be 0 === 0 (no animation, stop).
// In reality currentStyle should be 400
});

var presets = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports["default"] = {
  noWobble: { stiffness: 170, damping: 26 }, // the default, if nothing provided
  gentle: { stiffness: 120, damping: 14 },
  wobbly: { stiffness: 180, damping: 12 },
  stiff: { stiffness: 210, damping: 20 }
};
module.exports = exports["default"];
});

var spring_1 = createCommonjsModule(function (module, exports) {

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports['default'] = spring;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }



var _presets2 = _interopRequireDefault(presets);

var defaultConfig = _extends({}, _presets2['default'].noWobble, {
  precision: 0.01
});

function spring(val, config) {
  return _extends({}, defaultConfig, config, { val: val });
}

module.exports = exports['default'];
});

var reorderKeys_1 = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports['default'] = reorderKeys;

var hasWarned = false;

function reorderKeys() {
  if (process.env.NODE_ENV === 'development') {
    if (!hasWarned) {
      hasWarned = true;
      console.error('`reorderKeys` has been removed, since it is no longer needed for TransitionMotion\'s new styles array API.');
    }
  }
}

module.exports = exports['default'];
});

createCommonjsModule(function (module, exports) {

exports.__esModule = true;

function _interopRequire(obj) { return obj && obj.__esModule ? obj['default'] : obj; }



exports.Motion = _interopRequire(Motion_1);



exports.StaggeredMotion = _interopRequire(StaggeredMotion_1);



exports.TransitionMotion = _interopRequire(TransitionMotion_1);



exports.spring = _interopRequire(spring_1);



exports.presets = _interopRequire(presets);



exports.stripStyle = _interopRequire(stripStyle_1);

// deprecated, dummy warning function



exports.reorderKeys = _interopRequire(reorderKeys_1);
});

function _defineProperty$5(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

function ownKeys$5(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2$5(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$5(Object(source), true).forEach(function (key) {
        _defineProperty$5(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$5(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}

var categoricalColorSchemes = {
  nivo: ['#e8c1a0', '#f47560', '#f1e15b', '#e8a838', '#61cdbb', '#97e3d5'],
  category10: schemeCategory10,
  accent: schemeAccent,
  dark2: schemeDark2,
  paired: schemePaired,
  pastel1: schemePastel1,
  pastel2: schemePastel2,
  set1: schemeSet1,
  set2: schemeSet2,
  set3: schemeSet3
};
var categoricalColorSchemeIds = Object.keys(categoricalColorSchemes);

var divergingColorSchemes = {
  brown_blueGreen: scheme$q,
  purpleRed_green: scheme$p,
  pink_yellowGreen: scheme$o,
  purple_orange: scheme$n,
  red_blue: scheme$m,
  red_grey: scheme$l,
  red_yellow_blue: scheme$k,
  red_yellow_green: scheme$j,
  spectral: scheme$i
};
var divergingColorSchemeIds = Object.keys(divergingColorSchemes);
var divergingColorInterpolators = {
  brown_blueGreen: interpolateBrBG,
  purpleRed_green: interpolatePRGn,
  pink_yellowGreen: interpolatePiYG,
  purple_orange: interpolatePuOr,
  red_blue: interpolateRdBu,
  red_grey: interpolateRdGy,
  red_yellow_blue: interpolateRdYlBu,
  red_yellow_green: interpolateRdYlGn,
  spectral: interpolateSpectral
};

var sequentialColorSchemes = {
  blues: scheme$5,
  greens: scheme$4,
  greys: scheme$3,
  oranges: scheme,
  purples: scheme$2,
  reds: scheme$1,
  blue_green: scheme$h,
  blue_purple: scheme$g,
  green_blue: scheme$f,
  orange_red: scheme$e,
  purple_blue_green: scheme$d,
  purple_blue: scheme$c,
  purple_red: scheme$b,
  red_purple: scheme$a,
  yellow_green_blue: scheme$9,
  yellow_green: scheme$8,
  yellow_orange_brown: scheme$7,
  yellow_orange_red: scheme$6
};
var sequentialColorSchemeIds = Object.keys(sequentialColorSchemes);
var sequentialColorInterpolators = {
  blues: interpolateBlues,
  greens: interpolateGreens,
  greys: interpolateGreys,
  oranges: interpolateOranges,
  purples: interpolatePurples,
  reds: interpolateReds,
  turbo: interpolateTurbo,
  viridis: interpolateViridis,
  inferno: inferno,
  magma: magma,
  plasma: plasma,
  cividis: interpolateCividis,
  warm: warm,
  cool: cool,
  cubehelixDefault: interpolateCubehelixDefault,
  blue_green: interpolateBuGn,
  blue_purple: interpolateBuPu,
  green_blue: interpolateGnBu,
  orange_red: interpolateOrRd,
  purple_blue_green: interpolatePuBuGn,
  purple_blue: interpolatePuBu,
  purple_red: interpolatePuRd,
  red_purple: interpolateRdPu,
  yellow_green_blue: interpolateYlGnBu,
  yellow_green: interpolateYlGn,
  yellow_orange_brown: interpolateYlOrBr,
  yellow_orange_red: interpolateYlOrRd
};

var colorSchemes = _objectSpread2$5(_objectSpread2$5(_objectSpread2$5({}, categoricalColorSchemes), divergingColorSchemes), sequentialColorSchemes);
var colorSchemeIds = Object.keys(colorSchemes);
var isCategoricalColorScheme = function isCategoricalColorScheme(scheme) {
  return categoricalColorSchemeIds.includes(scheme);
};
var isDivergingColorScheme = function isDivergingColorScheme(scheme) {
  return divergingColorSchemeIds.includes(scheme);
};
var isSequentialColorScheme = function isSequentialColorScheme(scheme) {
  return sequentialColorSchemeIds.includes(scheme);
};

var cyclicalColorInterpolators = {
  rainbow: interpolateRainbow,
  sinebow: interpolateSinebow
};

_objectSpread2$5(_objectSpread2$5(_objectSpread2$5({}, divergingColorInterpolators), sequentialColorInterpolators), cyclicalColorInterpolators);

function _arrayWithHoles$5(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit$5(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;
  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }
  return _arr;
}

function _arrayLikeToArray$6(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}

function _unsupportedIterableToArray$6(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray$6(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$6(o, minLen);
}

function _nonIterableRest$5() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _slicedToArray$5(arr, i) {
  return _arrayWithHoles$5(arr) || _iterableToArrayLimit$5(arr, i) || _unsupportedIterableToArray$6(arr, i) || _nonIterableRest$5();
}

function _createForOfIteratorHelper(o, allowArrayLike) {
  var it;
  if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray$6(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F() {};
      return {
        s: F,
        n: function n() {
          if (i >= o.length) return {
            done: true
          };
          return {
            done: false,
            value: o[i++]
          };
        },
        e: function e(_e) {
          throw _e;
        },
        f: F
      };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true,
      didErr = false,
      err;
  return {
    s: function s() {
      it = o[Symbol.iterator]();
    },
    n: function n() {
      var step = it.next();
      normalCompletion = step.done;
      return step;
    },
    e: function e(_e2) {
      didErr = true;
      err = _e2;
    },
    f: function f() {
      try {
        if (!normalCompletion && it["return"] != null) it["return"]();
      } finally {
        if (didErr) throw err;
      }
    }
  };
}

var isInheritedColorConfigFromTheme = function isInheritedColorConfigFromTheme(config) {
  return config.theme !== undefined;
};

var isInheritedColorConfigFromContext = function isInheritedColorConfigFromContext(config) {
  return config.from !== undefined;
};

var getInheritedColorGenerator = function getInheritedColorGenerator(config, theme) {
  if (typeof config === 'function') {
    return config;
  }

  if (isPlainObject_1(config)) {
    if (isInheritedColorConfigFromTheme(config)) {
      if (theme === undefined) {
        throw new Error("Unable to use color from theme as no theme was provided");
      }

      var themeColor = get_1(theme, config.theme);

      if (themeColor === undefined) {
        throw new Error("Color from theme is undefined at path: '".concat(config.theme, "'"));
      }

      return function () {
        return themeColor;
      };
    }

    if (isInheritedColorConfigFromContext(config)) {
      var getColor = function getColor(d) {
        return get_1(d, config.from);
      };

      if (Array.isArray(config.modifiers)) {
        var modifiers = [];

        var _iterator = _createForOfIteratorHelper(config.modifiers),
            _step;

        try {
          var _loop = function _loop() {
            var modifier = _step.value;

            var _modifier = _slicedToArray$5(modifier, 2),
                modifierType = _modifier[0],
                amount = _modifier[1];

            if (modifierType === 'brighter') {
              modifiers.push(function (color) {
                return color.brighter(amount);
              });
            } else if (modifierType === 'darker') {
              modifiers.push(function (color) {
                return color.darker(amount);
              });
            } else if (modifierType === 'opacity') {
              modifiers.push(function (color) {
                color.opacity = amount;
                return color;
              });
            } else {
              throw new Error("Invalid color modifier: '".concat(modifierType, "', must be one of: 'brighter', 'darker', 'opacity'"));
            }
          };

          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            _loop();
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }

        if (modifiers.length === 0) return getColor;
        return function (datum) {
          return modifiers.reduce(function (color, modify) {
            return modify(color);
          }, rgb$1(getColor(datum))).toString();
        };
      }

      return getColor;
    }

    throw new Error("Invalid color spec, you should either specify 'theme' or 'from' when using a config object");
  }

  return function () {
    return config;
  };
};
var useInheritedColor = function useInheritedColor(config, theme) {
  return React.useMemo(function () {
    return getInheritedColorGenerator(config, theme);
  }, [config, theme]);
};

var isOrdinalColorScaleConfigScheme = function isOrdinalColorScaleConfigScheme(config) {
  return config.scheme !== undefined;
};

var isOrdinalColorScaleConfigDatumProperty = function isOrdinalColorScaleConfigDatumProperty(config) {
  return config.datum !== undefined;
};

var getOrdinalColorScale = function getOrdinalColorScale(config, identity) {
  if (typeof config === 'function') {
    return config;
  }

  var getIdentity = typeof identity === 'function' ? identity : function (datum) {
    return get_1(datum, identity);
  };

  if (Array.isArray(config)) {
    var scale = ordinal(config);

    var generator = function generator(datum) {
      return scale(getIdentity(datum));
    };

    generator.scale = scale;
    return generator;
  }

  if (isPlainObject_1(config)) {
    if (isOrdinalColorScaleConfigDatumProperty(config)) {
      return function (datum) {
        return get_1(datum, config.datum);
      };
    }

    if (isOrdinalColorScaleConfigScheme(config)) {
      if (isCategoricalColorScheme(config.scheme)) {
        var _scale = ordinal(colorSchemes[config.scheme]);

        var _generator = function _generator(datum) {
          return _scale(getIdentity(datum));
        };

        _generator.scale = _scale;
        return _generator;
      }

      if (isDivergingColorScheme(config.scheme)) {
        if (config.size !== undefined && (config.size < 3 || config.size > 11)) {
          throw new Error("Invalid size '".concat(config.size, "' for diverging color scheme '").concat(config.scheme, "', must be between 3~11"));
        }

        var _scale2 = ordinal(colorSchemes[config.scheme][config.size || 11]);

        var _generator2 = function _generator2(d) {
          return _scale2(getIdentity(d));
        };

        _generator2.scale = _scale2;
        return _generator2;
      }

      if (isSequentialColorScheme(config.scheme)) {
        if (config.size !== undefined && (config.size < 3 || config.size > 9)) {
          throw new Error("Invalid size '".concat(config.size, "' for sequential color scheme '").concat(config.scheme, "', must be between 3~9"));
        }

        var _scale3 = ordinal(colorSchemes[config.scheme][config.size || 9]);

        var _generator3 = function _generator3(d) {
          return _scale3(getIdentity(d));
        };

        _generator3.scale = _scale3;
        return _generator3;
      }
    }

    throw new Error("Invalid colors, when using an object, you should either pass a 'datum' or a 'scheme' property");
  }

  return function () {
    return config;
  };
};
var useOrdinalColorScale = function useOrdinalColorScale(config, identity) {
  return React.useMemo(function () {
    return getOrdinalColorScale(config, identity);
  }, [config, identity]);
};

var ordinalColorsPropType = propTypes.oneOfType([propTypes.func, propTypes.arrayOf(propTypes.string), propTypes.shape({
  scheme: propTypes.oneOf(colorSchemeIds).isRequired,
  size: propTypes.number
}), propTypes.shape({
  datum: propTypes.string.isRequired
}), propTypes.string]);
propTypes.oneOfType([propTypes.func, propTypes.string]);
var inheritedColorPropType = propTypes.oneOfType([propTypes.string, propTypes.func, propTypes.shape({
  theme: propTypes.string.isRequired
}), propTypes.shape({
  from: propTypes.string.isRequired,
  modifiers: propTypes.arrayOf(propTypes.array)
})]);

var t0 = new Date,
    t1 = new Date;

function newInterval(floori, offseti, count, field) {

  function interval(date) {
    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;
  }

  interval.floor = function(date) {
    return floori(date = new Date(+date)), date;
  };

  interval.ceil = function(date) {
    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
  };

  interval.round = function(date) {
    var d0 = interval(date),
        d1 = interval.ceil(date);
    return date - d0 < d1 - date ? d0 : d1;
  };

  interval.offset = function(date, step) {
    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;
  };

  interval.range = function(start, stop, step) {
    var range = [], previous;
    start = interval.ceil(start);
    step = step == null ? 1 : Math.floor(step);
    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date
    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);
    while (previous < start && start < stop);
    return range;
  };

  interval.filter = function(test) {
    return newInterval(function(date) {
      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);
    }, function(date, step) {
      if (date >= date) {
        if (step < 0) while (++step <= 0) {
          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty
        } else while (--step >= 0) {
          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty
        }
      }
    });
  };

  if (count) {
    interval.count = function(start, end) {
      t0.setTime(+start), t1.setTime(+end);
      floori(t0), floori(t1);
      return Math.floor(count(t0, t1));
    };

    interval.every = function(step) {
      step = Math.floor(step);
      return !isFinite(step) || !(step > 0) ? null
          : !(step > 1) ? interval
          : interval.filter(field
              ? function(d) { return field(d) % step === 0; }
              : function(d) { return interval.count(0, d) % step === 0; });
    };
  }

  return interval;
}

var millisecond = newInterval(function() {
  // noop
}, function(date, step) {
  date.setTime(+date + step);
}, function(start, end) {
  return end - start;
});

// An optimized implementation for this simple case.
millisecond.every = function(k) {
  k = Math.floor(k);
  if (!isFinite(k) || !(k > 0)) return null;
  if (!(k > 1)) return millisecond;
  return newInterval(function(date) {
    date.setTime(Math.floor(date / k) * k);
  }, function(date, step) {
    date.setTime(+date + step * k);
  }, function(start, end) {
    return (end - start) / k;
  });
};

var durationSecond = 1e3;
var durationMinute = 6e4;
var durationHour = 36e5;
var durationWeek = 6048e5;

var second = newInterval(function(date) {
  date.setTime(date - date.getMilliseconds());
}, function(date, step) {
  date.setTime(+date + step * durationSecond);
}, function(start, end) {
  return (end - start) / durationSecond;
}, function(date) {
  return date.getUTCSeconds();
});

var minute = newInterval(function(date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);
}, function(date, step) {
  date.setTime(+date + step * durationMinute);
}, function(start, end) {
  return (end - start) / durationMinute;
}, function(date) {
  return date.getMinutes();
});

var hour = newInterval(function(date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);
}, function(date, step) {
  date.setTime(+date + step * durationHour);
}, function(start, end) {
  return (end - start) / durationHour;
}, function(date) {
  return date.getHours();
});

function weekday(i) {
  return newInterval(function(date) {
    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);
    date.setHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setDate(date.getDate() + step * 7);
  }, function(start, end) {
    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;
  });
}

var sunday = weekday(0);
var monday = weekday(1);
var tuesday = weekday(2);
var wednesday = weekday(3);
var thursday = weekday(4);
var friday = weekday(5);
var saturday = weekday(6);

var month = newInterval(function(date) {
  date.setDate(1);
  date.setHours(0, 0, 0, 0);
}, function(date, step) {
  date.setMonth(date.getMonth() + step);
}, function(start, end) {
  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
}, function(date) {
  return date.getMonth();
});

var year = newInterval(function(date) {
  date.setMonth(0, 1);
  date.setHours(0, 0, 0, 0);
}, function(date, step) {
  date.setFullYear(date.getFullYear() + step);
}, function(start, end) {
  return end.getFullYear() - start.getFullYear();
}, function(date) {
  return date.getFullYear();
});

// An optimized implementation for this simple case.
year.every = function(k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {
    date.setFullYear(Math.floor(date.getFullYear() / k) * k);
    date.setMonth(0, 1);
    date.setHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setFullYear(date.getFullYear() + step * k);
  });
};

var utcMinute = newInterval(function(date) {
  date.setUTCSeconds(0, 0);
}, function(date, step) {
  date.setTime(+date + step * durationMinute);
}, function(start, end) {
  return (end - start) / durationMinute;
}, function(date) {
  return date.getUTCMinutes();
});

var utcHour = newInterval(function(date) {
  date.setUTCMinutes(0, 0, 0);
}, function(date, step) {
  date.setTime(+date + step * durationHour);
}, function(start, end) {
  return (end - start) / durationHour;
}, function(date) {
  return date.getUTCHours();
});

function utcWeekday(i) {
  return newInterval(function(date) {
    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);
    date.setUTCHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setUTCDate(date.getUTCDate() + step * 7);
  }, function(start, end) {
    return (end - start) / durationWeek;
  });
}

var utcSunday = utcWeekday(0);
var utcMonday = utcWeekday(1);
var utcTuesday = utcWeekday(2);
var utcWednesday = utcWeekday(3);
var utcThursday = utcWeekday(4);
var utcFriday = utcWeekday(5);
var utcSaturday = utcWeekday(6);

var utcMonth = newInterval(function(date) {
  date.setUTCDate(1);
  date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
  date.setUTCMonth(date.getUTCMonth() + step);
}, function(start, end) {
  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
}, function(date) {
  return date.getUTCMonth();
});

var utcYear = newInterval(function(date) {
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
  date.setUTCFullYear(date.getUTCFullYear() + step);
}, function(start, end) {
  return end.getUTCFullYear() - start.getUTCFullYear();
}, function(date) {
  return date.getUTCFullYear();
});

// An optimized implementation for this simple case.
utcYear.every = function(k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {
    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);
    date.setUTCMonth(0, 1);
    date.setUTCHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setUTCFullYear(date.getUTCFullYear() + step * k);
  });
};

function _defineProperty$4(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

function ownKeys$4(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2$4(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$4(Object(source), true).forEach(function (key) {
        _defineProperty$4(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$4(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}

function _arrayWithHoles$4(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit$4(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;
  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }
  return _arr;
}

function _arrayLikeToArray$5(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}

function _unsupportedIterableToArray$5(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray$5(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$5(o, minLen);
}

function _nonIterableRest$4() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _slicedToArray$4(arr, i) {
  return _arrayWithHoles$4(arr) || _iterableToArrayLimit$4(arr, i) || _unsupportedIterableToArray$5(arr, i) || _nonIterableRest$4();
}

var centerScale = function centerScale(scale) {
  var bandwidth = scale.bandwidth();
  if (bandwidth === 0) return scale;
  var offset = bandwidth / 2;

  if (scale.round()) {
    offset = Math.round(offset);
  }

  return function (d) {
    var _scale;

    return ((_scale = scale(d)) !== null && _scale !== void 0 ? _scale : 0) + offset;
  };
};
var timeDay = newInterval(function (date) {
  return date.setHours(0, 0, 0, 0);
}, function (date, step) {
  return date.setDate(date.getDate() + step);
}, function (start, end) {
  return (end.getTime() - start.getTime()) / 864e5;
}, function (date) {
  return Math.floor(date.getTime() / 864e5);
});
var utcDay = newInterval(function (date) {
  return date.setUTCHours(0, 0, 0, 0);
}, function (date, step) {
  return date.setUTCDate(date.getUTCDate() + step);
}, function (start, end) {
  return (end.getTime() - start.getTime()) / 864e5;
}, function (date) {
  return Math.floor(date.getTime() / 864e5);
});
var timeByType = {
  millisecond: [millisecond, millisecond],
  second: [second, second],
  minute: [minute, utcMinute],
  hour: [hour, utcHour],
  day: [timeDay, utcDay],
  week: [sunday, utcSunday],
  sunday: [sunday, utcSunday],
  monday: [monday, utcMonday],
  tuesday: [tuesday, utcTuesday],
  wednesday: [wednesday, utcWednesday],
  thursday: [thursday, utcThursday],
  friday: [friday, utcFriday],
  saturday: [saturday, utcSaturday],
  month: [month, utcMonth],
  year: [year, utcYear]
};
var timeTypes = Object.keys(timeByType);
var timeIntervalRegexp = new RegExp("^every\\s*(\\d+)?\\s*(".concat(timeTypes.join('|'), ")s?$"), 'i');

var isInteger = function isInteger(value) {
  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;
};

var isArray = function isArray(value) {
  return Array.isArray(value);
};

var getScaleTicks = function getScaleTicks(scale, spec) {
  if (Array.isArray(spec)) {
    return spec;
  }

  if (typeof spec === 'string' && 'useUTC' in scale) {
    var matches = spec.match(timeIntervalRegexp);

    if (matches) {
      var _matches = _slicedToArray$4(matches, 3),
          amount = _matches[1],
          type = _matches[2];

      var timeType = timeByType[type][scale.useUTC ? 1 : 0];

      if (type === 'day') {
        var _timeType$every$range, _timeType$every;

        var _scale$domain = scale.domain(),
            _scale$domain2 = _slicedToArray$4(_scale$domain, 2),
            start = _scale$domain2[0],
            originalStop = _scale$domain2[1];

        var stop = new Date(originalStop);
        stop.setDate(stop.getDate() + 1);
        return (_timeType$every$range = (_timeType$every = timeType.every(Number(amount !== null && amount !== void 0 ? amount : 1))) === null || _timeType$every === void 0 ? void 0 : _timeType$every.range(start, stop)) !== null && _timeType$every$range !== void 0 ? _timeType$every$range : [];
      }

      if (amount === undefined) {
        return scale.ticks(timeType);
      }

      var interval = timeType.every(Number(amount));

      if (interval) {
        return scale.ticks(interval);
      }
    }

    throw new Error("Invalid tickValues: ".concat(spec));
  }

  if ('ticks' in scale) {
    if (spec === undefined) {
      return scale.ticks();
    }

    if (isInteger(spec)) {
      return scale.ticks(spec);
    }
  }

  return scale.domain();
};
var computeCartesianTicks = function computeCartesianTicks(_ref) {
  var axis = _ref.axis,
      scale = _ref.scale,
      ticksPosition = _ref.ticksPosition,
      tickValues = _ref.tickValues,
      tickSize = _ref.tickSize,
      tickPadding = _ref.tickPadding,
      tickRotation = _ref.tickRotation,
      _ref$engine = _ref.engine,
      engine = _ref$engine === void 0 ? 'svg' : _ref$engine;
  var values = getScaleTicks(scale, tickValues);
  var textProps = textPropsByEngine[engine];
  var position = 'bandwidth' in scale ? centerScale(scale) : scale;
  var line = {
    lineX: 0,
    lineY: 0
  };
  var text = {
    textX: 0,
    textY: 0
  };
  var isRTL = typeof document === 'object' ? document.dir === 'rtl' : false;
  var translate;
  var textAlign = textProps.align.center;
  var textBaseline = textProps.baseline.center;

  if (axis === 'x') {
    translate = function translate(d) {
      var _position;

      return {
        x: (_position = position(d)) !== null && _position !== void 0 ? _position : 0,
        y: 0
      };
    };

    line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1);
    text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1);

    if (ticksPosition === 'after') {
      textBaseline = textProps.baseline.top;
    } else {
      textBaseline = textProps.baseline.bottom;
    }

    if (tickRotation === 0) {
      textAlign = textProps.align.center;
    } else if (ticksPosition === 'after' && tickRotation < 0 || ticksPosition === 'before' && tickRotation > 0) {
      textAlign = textProps.align[isRTL ? 'left' : 'right'];
      textBaseline = textProps.baseline.center;
    } else if (ticksPosition === 'after' && tickRotation > 0 || ticksPosition === 'before' && tickRotation < 0) {
      textAlign = textProps.align[isRTL ? 'right' : 'left'];
      textBaseline = textProps.baseline.center;
    }
  } else {
    translate = function translate(d) {
      var _position2;

      return {
        x: 0,
        y: (_position2 = position(d)) !== null && _position2 !== void 0 ? _position2 : 0
      };
    };

    line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1);
    text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1);

    if (ticksPosition === 'after') {
      textAlign = textProps.align.left;
    } else {
      textAlign = textProps.align.right;
    }
  }

  var ticks = values.map(function (value) {
    return _objectSpread2$4(_objectSpread2$4(_objectSpread2$4({
      key: typeof value === 'number' || typeof value === 'string' ? value : "".concat(value),
      value: value
    }, translate(value)), line), text);
  });
  return {
    ticks: ticks,
    textAlign: textAlign,
    textBaseline: textBaseline
  };
};
var getFormatter = function getFormatter(format$1$1, scale) {
  if (typeof format$1$1 === 'undefined' || typeof format$1$1 === 'function') return format$1$1;

  if (scale.type === 'time') {
    var formatter = timeFormat(format$1$1);
    return function (d) {
      return formatter(d instanceof Date ? d : new Date(d));
    };
  }

  return format$1(format$1$1);
};
var computeGridLines = function computeGridLines(_ref2) {
  var width = _ref2.width,
      height = _ref2.height,
      scale = _ref2.scale,
      axis = _ref2.axis,
      _values = _ref2.values;
  var lineValues = isArray(_values) ? _values : undefined;
  var values = lineValues || getScaleTicks(scale, _values);
  var position = 'bandwidth' in scale ? centerScale(scale) : scale;
  var lines = axis === 'x' ? values.map(function (value) {
    var _position3, _position4;

    return {
      key: "".concat(value),
      x1: (_position3 = position(value)) !== null && _position3 !== void 0 ? _position3 : 0,
      x2: (_position4 = position(value)) !== null && _position4 !== void 0 ? _position4 : 0,
      y1: 0,
      y2: height
    };
  }) : values.map(function (value) {
    var _position5, _position6;

    return {
      key: "".concat(value),
      x1: 0,
      x2: width,
      y1: (_position5 = position(value)) !== null && _position5 !== void 0 ? _position5 : 0,
      y2: (_position6 = position(value)) !== null && _position6 !== void 0 ? _position6 : 0
    };
  });
  return lines;
};

var AxisTick = function AxisTick(_ref) {
  var _format;

  var _value = _ref.value,
      format = _ref.format,
      lineX = _ref.lineX,
      lineY = _ref.lineY,
      _onClick = _ref.onClick,
      textBaseline = _ref.textBaseline,
      textAnchor = _ref.textAnchor,
      animatedProps = _ref.animatedProps;
  var theme = useTheme();
  var value = (_format = format === null || format === void 0 ? void 0 : format(_value)) !== null && _format !== void 0 ? _format : _value;
  var props = React.useMemo(function () {
    var style = {
      opacity: animatedProps.opacity
    };

    if (!_onClick) {
      return {
        style: style
      };
    }

    return {
      style: _objectSpread2$4(_objectSpread2$4({}, style), {}, {
        cursor: 'pointer'
      }),
      onClick: function onClick(event) {
        return _onClick(event, value);
      }
    };
  }, [animatedProps.opacity, _onClick, value]);
  return jsxRuntime.jsxs(animated.g, _objectSpread2$4(_objectSpread2$4({
    transform: animatedProps.transform
  }, props), {}, {
    children: [jsxRuntime.jsx("line", {
      x1: 0,
      x2: lineX,
      y1: 0,
      y2: lineY,
      style: theme.axis.ticks.line
    }), jsxRuntime.jsx(animated.text, {
      dominantBaseline: textBaseline,
      textAnchor: textAnchor,
      transform: animatedProps.textTransform,
      style: theme.axis.ticks.text,
      children: value
    })]
  }));
};

var memoizedAxisTick = React.memo(AxisTick);

var Axis = function Axis(_ref) {
  var axis = _ref.axis,
      scale = _ref.scale,
      _ref$x = _ref.x,
      x = _ref$x === void 0 ? 0 : _ref$x,
      _ref$y = _ref.y,
      y = _ref$y === void 0 ? 0 : _ref$y,
      length = _ref.length,
      ticksPosition = _ref.ticksPosition,
      tickValues = _ref.tickValues,
      _ref$tickSize = _ref.tickSize,
      tickSize = _ref$tickSize === void 0 ? 5 : _ref$tickSize,
      _ref$tickPadding = _ref.tickPadding,
      tickPadding = _ref$tickPadding === void 0 ? 5 : _ref$tickPadding,
      _ref$tickRotation = _ref.tickRotation,
      tickRotation = _ref$tickRotation === void 0 ? 0 : _ref$tickRotation,
      format = _ref.format,
      _ref$renderTick = _ref.renderTick,
      renderTick = _ref$renderTick === void 0 ? memoizedAxisTick : _ref$renderTick,
      legend = _ref.legend,
      _ref$legendPosition = _ref.legendPosition,
      legendPosition = _ref$legendPosition === void 0 ? 'end' : _ref$legendPosition,
      _ref$legendOffset = _ref.legendOffset,
      legendOffset = _ref$legendOffset === void 0 ? 0 : _ref$legendOffset,
      onClick = _ref.onClick,
      ariaHidden = _ref.ariaHidden;
  var theme = useTheme();
  var formatValue = React.useMemo(function () {
    return getFormatter(format, scale);
  }, [format, scale]);

  var _computeCartesianTick = computeCartesianTicks({
    axis: axis,
    scale: scale,
    ticksPosition: ticksPosition,
    tickValues: tickValues,
    tickSize: tickSize,
    tickPadding: tickPadding,
    tickRotation: tickRotation
  }),
      ticks = _computeCartesianTick.ticks,
      textAlign = _computeCartesianTick.textAlign,
      textBaseline = _computeCartesianTick.textBaseline;

  var legendNode = null;

  if (legend !== undefined) {
    var legendX = 0;
    var legendY = 0;
    var legendRotation = 0;
    var textAnchor;

    if (axis === 'y') {
      legendRotation = -90;
      legendX = legendOffset;

      if (legendPosition === 'start') {
        textAnchor = 'start';
        legendY = length;
      } else if (legendPosition === 'middle') {
        textAnchor = 'middle';
        legendY = length / 2;
      } else if (legendPosition === 'end') {
        textAnchor = 'end';
      }
    } else {
      legendY = legendOffset;

      if (legendPosition === 'start') {
        textAnchor = 'start';
      } else if (legendPosition === 'middle') {
        textAnchor = 'middle';
        legendX = length / 2;
      } else if (legendPosition === 'end') {
        textAnchor = 'end';
        legendX = length;
      }
    }

    legendNode = jsxRuntime.jsx("text", {
      transform: "translate(".concat(legendX, ", ").concat(legendY, ") rotate(").concat(legendRotation, ")"),
      textAnchor: textAnchor,
      style: _objectSpread2$4({
        dominantBaseline: 'central'
      }, theme.axis.legend.text),
      children: legend
    });
  }

  var _useMotionConfig = useMotionConfig(),
      animate = _useMotionConfig.animate,
      springConfig = _useMotionConfig.config;

  var animatedProps = useSpring({
    transform: "translate(".concat(x, ",").concat(y, ")"),
    lineX2: axis === 'x' ? length : 0,
    lineY2: axis === 'x' ? 0 : length,
    config: springConfig,
    immediate: !animate
  });
  var transition = useTransition(ticks, {
    keys: function keys(tick) {
      return tick.key;
    },
    initial: function initial(tick) {
      return {
        opacity: 1,
        transform: "translate(".concat(tick.x, ",").concat(tick.y, ")"),
        textTransform: "translate(".concat(tick.textX, ",").concat(tick.textY, ") rotate(").concat(tickRotation, ")")
      };
    },
    from: function from(tick) {
      return {
        opacity: 0,
        transform: "translate(".concat(tick.x, ",").concat(tick.y, ")"),
        textTransform: "translate(".concat(tick.textX, ",").concat(tick.textY, ") rotate(").concat(tickRotation, ")")
      };
    },
    enter: function enter(tick) {
      return {
        opacity: 1,
        transform: "translate(".concat(tick.x, ",").concat(tick.y, ")"),
        textTransform: "translate(".concat(tick.textX, ",").concat(tick.textY, ") rotate(").concat(tickRotation, ")")
      };
    },
    update: function update(tick) {
      return {
        opacity: 1,
        transform: "translate(".concat(tick.x, ",").concat(tick.y, ")"),
        textTransform: "translate(".concat(tick.textX, ",").concat(tick.textY, ") rotate(").concat(tickRotation, ")")
      };
    },
    leave: {
      opacity: 0
    },
    config: springConfig,
    immediate: !animate
  });
  return jsxRuntime.jsxs(animated.g, {
    transform: animatedProps.transform,
    "aria-hidden": ariaHidden,
    children: [transition(function (transitionProps, tick, _state, tickIndex) {
      return React.createElement(renderTick, _objectSpread2$4(_objectSpread2$4({
        tickIndex: tickIndex,
        format: formatValue,
        rotate: tickRotation,
        textBaseline: textBaseline,
        textAnchor: textAlign,
        animatedProps: transitionProps
      }, tick), onClick ? {
        onClick: onClick
      } : {}));
    }), jsxRuntime.jsx(animated.line, {
      style: theme.axis.domain.line,
      x1: 0,
      x2: animatedProps.lineX2,
      y1: 0,
      y2: animatedProps.lineY2
    }), legendNode]
  });
};

var memoizedAxis = React.memo(Axis);

var axisPropTypes = {
  ticksPosition: propTypes.oneOf(['before', 'after']),
  tickValues: propTypes.oneOfType([propTypes.number, propTypes.arrayOf(propTypes.oneOfType([propTypes.number, propTypes.string, propTypes.instanceOf(Date)])), propTypes.string]),
  tickSize: propTypes.number,
  tickPadding: propTypes.number,
  tickRotation: propTypes.number,
  format: propTypes.oneOfType([propTypes.func, propTypes.string]),
  renderTick: propTypes.func,
  legend: propTypes.node,
  legendPosition: propTypes.oneOf(['start', 'middle', 'end']),
  legendOffset: propTypes.number,
  ariaHidden: propTypes.bool
};
var axisPropType = propTypes.shape(axisPropTypes);
var positions = ['top', 'right', 'bottom', 'left'];

var Axes = React.memo(function (_ref) {
  var xScale = _ref.xScale,
      yScale = _ref.yScale,
      width = _ref.width,
      height = _ref.height,
      top = _ref.top,
      right = _ref.right,
      bottom = _ref.bottom,
      left = _ref.left;
  var axes = {
    top: top,
    right: right,
    bottom: bottom,
    left: left
  };
  return jsxRuntime.jsx(jsxRuntime.Fragment, {
    children: positions.map(function (position) {
      var axis = axes[position];
      if (!axis) return null;
      var isXAxis = position === 'top' || position === 'bottom';
      var ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after';
      return jsxRuntime.jsx(memoizedAxis, _objectSpread2$4(_objectSpread2$4({}, axis), {}, {
        axis: isXAxis ? 'x' : 'y',
        x: position === 'right' ? width : 0,
        y: position === 'bottom' ? height : 0,
        scale: isXAxis ? xScale : yScale,
        length: isXAxis ? width : height,
        ticksPosition: ticksPosition
      }), position);
    })
  });
});

var GridLine = React.memo(function (_ref) {
  var animatedProps = _ref.animatedProps;
  var theme = useTheme();
  return jsxRuntime.jsx(animated.line, _objectSpread2$4(_objectSpread2$4({}, animatedProps), theme.grid.line));
});

var GridLines = React.memo(function (_ref) {
  var lines = _ref.lines;

  var _useMotionConfig = useMotionConfig(),
      animate = _useMotionConfig.animate,
      springConfig = _useMotionConfig.config;

  var transition = useTransition(lines, {
    keys: function keys(line) {
      return line.key;
    },
    initial: function initial(line) {
      return {
        opacity: 1,
        x1: line.x1,
        x2: line.x2,
        y1: line.y1,
        y2: line.y2
      };
    },
    from: function from(line) {
      return {
        opacity: 0,
        x1: line.x1,
        x2: line.x2,
        y1: line.y1,
        y2: line.y2
      };
    },
    enter: function enter(line) {
      return {
        opacity: 1,
        x1: line.x1,
        x2: line.x2,
        y1: line.y1,
        y2: line.y2
      };
    },
    update: function update(line) {
      return {
        opacity: 1,
        x1: line.x1,
        x2: line.x2,
        y1: line.y1,
        y2: line.y2
      };
    },
    leave: {
      opacity: 0
    },
    config: springConfig,
    immediate: !animate
  });
  return jsxRuntime.jsx("g", {
    children: transition(function (animatedProps, line) {
      return React.createElement(GridLine, _objectSpread2$4(_objectSpread2$4({}, line), {}, {
        key: line.key,
        animatedProps: animatedProps
      }));
    })
  });
});

var Grid = React.memo(function (_ref) {
  var width = _ref.width,
      height = _ref.height,
      xScale = _ref.xScale,
      yScale = _ref.yScale,
      xValues = _ref.xValues,
      yValues = _ref.yValues;
  var xLines = React.useMemo(function () {
    if (!xScale) return false;
    return computeGridLines({
      width: width,
      height: height,
      scale: xScale,
      axis: 'x',
      values: xValues
    });
  }, [xScale, xValues, width, height]);
  var yLines = React.useMemo(function () {
    if (!yScale) return false;
    return computeGridLines({
      width: width,
      height: height,
      scale: yScale,
      axis: 'y',
      values: yValues
    });
  }, [height, width, yScale, yValues]);
  return jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [xLines && jsxRuntime.jsx(GridLines, {
      lines: xLines
    }), yLines && jsxRuntime.jsx(GridLines, {
      lines: yLines
    })]
  });
});

var renderAxisToCanvas = function renderAxisToCanvas(ctx, _ref) {
  var _theme$axis$domain$li;

  var axis = _ref.axis,
      scale = _ref.scale,
      _ref$x = _ref.x,
      x = _ref$x === void 0 ? 0 : _ref$x,
      _ref$y = _ref.y,
      y = _ref$y === void 0 ? 0 : _ref$y,
      length = _ref.length,
      ticksPosition = _ref.ticksPosition,
      tickValues = _ref.tickValues,
      _ref$tickSize = _ref.tickSize,
      tickSize = _ref$tickSize === void 0 ? 5 : _ref$tickSize,
      _ref$tickPadding = _ref.tickPadding,
      tickPadding = _ref$tickPadding === void 0 ? 5 : _ref$tickPadding,
      _ref$tickRotation = _ref.tickRotation,
      tickRotation = _ref$tickRotation === void 0 ? 0 : _ref$tickRotation,
      _format = _ref.format,
      legend = _ref.legend,
      _ref$legendPosition = _ref.legendPosition,
      legendPosition = _ref$legendPosition === void 0 ? 'end' : _ref$legendPosition,
      _ref$legendOffset = _ref.legendOffset,
      legendOffset = _ref$legendOffset === void 0 ? 0 : _ref$legendOffset,
      theme = _ref.theme;

  var _computeCartesianTick = computeCartesianTicks({
    axis: axis,
    scale: scale,
    ticksPosition: ticksPosition,
    tickValues: tickValues,
    tickSize: tickSize,
    tickPadding: tickPadding,
    tickRotation: tickRotation,
    engine: 'canvas'
  }),
      ticks = _computeCartesianTick.ticks,
      textAlign = _computeCartesianTick.textAlign,
      textBaseline = _computeCartesianTick.textBaseline;

  ctx.save();
  ctx.translate(x, y);
  ctx.textAlign = textAlign;
  ctx.textBaseline = textBaseline;
  ctx.font = "".concat(theme.axis.ticks.text.fontSize, "px ").concat(theme.axis.ticks.text.fontFamily);

  if (((_theme$axis$domain$li = theme.axis.domain.line.strokeWidth) !== null && _theme$axis$domain$li !== void 0 ? _theme$axis$domain$li : 0) > 0) {
    ctx.lineWidth = Number(theme.axis.domain.line.strokeWidth);
    ctx.lineCap = 'square';

    if (theme.axis.domain.line.stroke) {
      ctx.strokeStyle = theme.axis.domain.line.stroke;
    }

    ctx.beginPath();
    ctx.moveTo(0, 0);
    ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length);
    ctx.stroke();
  }

  var format = typeof _format === 'function' ? _format : function (value) {
    return "".concat(value);
  };
  ticks.forEach(function (tick) {
    var _theme$axis$ticks$lin;

    if (((_theme$axis$ticks$lin = theme.axis.ticks.line.strokeWidth) !== null && _theme$axis$ticks$lin !== void 0 ? _theme$axis$ticks$lin : 0) > 0) {
      ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth);
      ctx.lineCap = 'square';

      if (theme.axis.ticks.line.stroke) {
        ctx.strokeStyle = theme.axis.ticks.line.stroke;
      }

      ctx.beginPath();
      ctx.moveTo(tick.x, tick.y);
      ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY);
      ctx.stroke();
    }

    var value = format(tick.value);
    ctx.save();
    ctx.translate(tick.x + tick.textX, tick.y + tick.textY);
    ctx.rotate(degreesToRadians(tickRotation));

    if (theme.axis.ticks.text.fill) {
      ctx.fillStyle = theme.axis.ticks.text.fill;
    }

    ctx.fillText(String(value), 0, 0);
    ctx.restore();
  });

  if (legend !== undefined) {
    var legendX = 0;
    var legendY = 0;
    var legendRotation = 0;
    var _textAlign = 'center';

    if (axis === 'y') {
      legendRotation = -90;
      legendX = legendOffset;

      if (legendPosition === 'start') {
        _textAlign = 'start';
        legendY = length;
      } else if (legendPosition === 'middle') {
        _textAlign = 'center';
        legendY = length / 2;
      } else if (legendPosition === 'end') {
        _textAlign = 'end';
      }
    } else {
      legendY = legendOffset;

      if (legendPosition === 'start') {
        _textAlign = 'start';
      } else if (legendPosition === 'middle') {
        _textAlign = 'center';
        legendX = length / 2;
      } else if (legendPosition === 'end') {
        _textAlign = 'end';
        legendX = length;
      }
    }

    ctx.translate(legendX, legendY);
    ctx.rotate(degreesToRadians(legendRotation));
    ctx.font = "".concat(theme.axis.legend.text.fontWeight ? "".concat(theme.axis.legend.text.fontWeight, " ") : '').concat(theme.axis.legend.text.fontSize, "px ").concat(theme.axis.legend.text.fontFamily);

    if (theme.axis.legend.text.fill) {
      ctx.fillStyle = theme.axis.legend.text.fill;
    }

    ctx.textAlign = _textAlign;
    ctx.textBaseline = 'middle';
    ctx.fillText(legend, 0, 0);
  }

  ctx.restore();
};
var renderAxesToCanvas = function renderAxesToCanvas(ctx, _ref2) {
  var xScale = _ref2.xScale,
      yScale = _ref2.yScale,
      width = _ref2.width,
      height = _ref2.height,
      top = _ref2.top,
      right = _ref2.right,
      bottom = _ref2.bottom,
      left = _ref2.left,
      theme = _ref2.theme;
  var axes = {
    top: top,
    right: right,
    bottom: bottom,
    left: left
  };
  positions.forEach(function (position) {
    var axis = axes[position];
    if (!axis) return null;
    var isXAxis = position === 'top' || position === 'bottom';
    var ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after';
    var scale = isXAxis ? xScale : yScale;
    var format = getFormatter(axis.format, scale);
    renderAxisToCanvas(ctx, _objectSpread2$4(_objectSpread2$4({}, axis), {}, {
      axis: isXAxis ? 'x' : 'y',
      x: position === 'right' ? width : 0,
      y: position === 'bottom' ? height : 0,
      scale: scale,
      format: format,
      length: isXAxis ? width : height,
      ticksPosition: ticksPosition,
      theme: theme
    }));
  });
};
var renderGridLinesToCanvas = function renderGridLinesToCanvas(ctx, _ref3) {
  var width = _ref3.width,
      height = _ref3.height,
      scale = _ref3.scale,
      axis = _ref3.axis,
      values = _ref3.values;
  var lines = computeGridLines({
    width: width,
    height: height,
    scale: scale,
    axis: axis,
    values: values
  });
  lines.forEach(function (line) {
    ctx.beginPath();
    ctx.moveTo(line.x1, line.y1);
    ctx.lineTo(line.x2, line.y2);
    ctx.stroke();
  });
};

function _defineProperty$3(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

function ownKeys$3(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2$3(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$3(Object(source), true).forEach(function (key) {
        _defineProperty$3(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$3(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}

function _arrayWithHoles$3(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit$3(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;
  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }
  return _arr;
}

function _arrayLikeToArray$4(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}

function _unsupportedIterableToArray$4(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray$4(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$4(o, minLen);
}

function _nonIterableRest$3() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _slicedToArray$3(arr, i) {
  return _arrayWithHoles$3(arr) || _iterableToArrayLimit$3(arr, i) || _unsupportedIterableToArray$4(arr, i) || _nonIterableRest$3();
}

var isObject = function isObject(item) {
  return typeof item === 'object' && !Array.isArray(item) && item !== null;
};

var zeroPadding = {
  top: 0,
  right: 0,
  bottom: 0,
  left: 0
};
var computeDimensions = function computeDimensions(_ref) {
  var direction = _ref.direction,
      itemsSpacing = _ref.itemsSpacing,
      _padding = _ref.padding,
      itemCount = _ref.itemCount,
      itemWidth = _ref.itemWidth,
      itemHeight = _ref.itemHeight;

  if (typeof _padding !== 'number' && !isObject(_padding)) {
    throw new Error('Invalid property padding, must be one of: number, object');
  }

  var padding = typeof _padding === 'number' ? {
    top: _padding,
    right: _padding,
    bottom: _padding,
    left: _padding
  } : _objectSpread2$3(_objectSpread2$3({}, zeroPadding), _padding);
  var horizontalPadding = padding.left + padding.right;
  var verticalPadding = padding.top + padding.bottom;
  var width = itemWidth + horizontalPadding;
  var height = itemHeight + verticalPadding;
  var spacing = (itemCount - 1) * itemsSpacing;

  if (direction === 'row') {
    width = itemWidth * itemCount + spacing + horizontalPadding;
  } else if (direction === 'column') {
    height = itemHeight * itemCount + spacing + verticalPadding;
  }

  return {
    width: width,
    height: height,
    padding: padding
  };
};
var computePositionFromAnchor = function computePositionFromAnchor(_ref2) {
  var anchor = _ref2.anchor,
      translateX = _ref2.translateX,
      translateY = _ref2.translateY,
      containerWidth = _ref2.containerWidth,
      containerHeight = _ref2.containerHeight,
      width = _ref2.width,
      height = _ref2.height;
  var x = translateX;
  var y = translateY;

  switch (anchor) {
    case 'top':
      x += (containerWidth - width) / 2;
      break;

    case 'top-right':
      x += containerWidth - width;
      break;

    case 'right':
      x += containerWidth - width;
      y += (containerHeight - height) / 2;
      break;

    case 'bottom-right':
      x += containerWidth - width;
      y += containerHeight - height;
      break;

    case 'bottom':
      x += (containerWidth - width) / 2;
      y += containerHeight - height;
      break;

    case 'bottom-left':
      y += containerHeight - height;
      break;

    case 'left':
      y += (containerHeight - height) / 2;
      break;

    case 'center':
      x += (containerWidth - width) / 2;
      y += (containerHeight - height) / 2;
      break;
  }

  return {
    x: x,
    y: y
  };
};
var computeItemLayout = function computeItemLayout(_ref3) {
  var direction = _ref3.direction,
      justify = _ref3.justify,
      symbolSize = _ref3.symbolSize,
      symbolSpacing = _ref3.symbolSpacing,
      width = _ref3.width,
      height = _ref3.height;
  var symbolX;
  var symbolY;
  var labelX;
  var labelY;
  var labelAnchor;
  var labelAlignment;

  switch (direction) {
    case 'left-to-right':
      symbolX = 0;
      symbolY = (height - symbolSize) / 2;
      labelY = height / 2;
      labelAlignment = 'central';

      if (justify === true) {
        labelX = width;
        labelAnchor = 'end';
      } else {
        labelX = symbolSize + symbolSpacing;
        labelAnchor = 'start';
      }

      break;

    case 'right-to-left':
      symbolX = width - symbolSize;
      symbolY = (height - symbolSize) / 2;
      labelY = height / 2;
      labelAlignment = 'central';

      if (justify === true) {
        labelX = 0;
        labelAnchor = 'start';
      } else {
        labelX = width - symbolSize - symbolSpacing;
        labelAnchor = 'end';
      }

      break;

    case 'top-to-bottom':
      symbolX = (width - symbolSize) / 2;
      symbolY = 0;
      labelX = width / 2;
      labelAnchor = 'middle';

      if (justify === true) {
        labelY = height;
        labelAlignment = 'alphabetic';
      } else {
        labelY = symbolSize + symbolSpacing;
        labelAlignment = 'text-before-edge';
      }

      break;

    case 'bottom-to-top':
      symbolX = (width - symbolSize) / 2;
      symbolY = height - symbolSize;
      labelX = width / 2;
      labelAnchor = 'middle';

      if (justify === true) {
        labelY = 0;
        labelAlignment = 'text-before-edge';
      } else {
        labelY = height - symbolSize - symbolSpacing;
        labelAlignment = 'alphabetic';
      }

      break;
  }

  return {
    symbolX: symbolX,
    symbolY: symbolY,
    labelX: labelX,
    labelY: labelY,
    labelAnchor: labelAnchor,
    labelAlignment: labelAlignment
  };
};

var SymbolCircle = function SymbolCircle(_ref) {
  var x = _ref.x,
      y = _ref.y,
      size = _ref.size,
      fill = _ref.fill,
      _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,
      _ref$borderWidth = _ref.borderWidth,
      borderWidth = _ref$borderWidth === void 0 ? 0 : _ref$borderWidth,
      _ref$borderColor = _ref.borderColor,
      borderColor = _ref$borderColor === void 0 ? 'transparent' : _ref$borderColor;
  return jsxRuntime.jsx("circle", {
    r: size / 2,
    cx: x + size / 2,
    cy: y + size / 2,
    fill: fill,
    opacity: opacity,
    strokeWidth: borderWidth,
    stroke: borderColor,
    style: {
      pointerEvents: 'none'
    }
  });
};

var SymbolDiamond = function SymbolDiamond(_ref) {
  var x = _ref.x,
      y = _ref.y,
      size = _ref.size,
      fill = _ref.fill,
      _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,
      _ref$borderWidth = _ref.borderWidth,
      borderWidth = _ref$borderWidth === void 0 ? 0 : _ref$borderWidth,
      _ref$borderColor = _ref.borderColor,
      borderColor = _ref$borderColor === void 0 ? 'transparent' : _ref$borderColor;
  return jsxRuntime.jsx("g", {
    transform: "translate(".concat(x, ",").concat(y, ")"),
    children: jsxRuntime.jsx("path", {
      d: "\n                    M".concat(size / 2, " 0\n                    L").concat(size * 0.8, " ").concat(size / 2, "\n                    L").concat(size / 2, " ").concat(size, "\n                    L").concat(size * 0.2, " ").concat(size / 2, "\n                    L").concat(size / 2, " 0\n                "),
      fill: fill,
      opacity: opacity,
      strokeWidth: borderWidth,
      stroke: borderColor,
      style: {
        pointerEvents: 'none'
      }
    })
  });
};

var SymbolSquare = function SymbolSquare(_ref) {
  var x = _ref.x,
      y = _ref.y,
      size = _ref.size,
      fill = _ref.fill,
      _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,
      _ref$borderWidth = _ref.borderWidth,
      borderWidth = _ref$borderWidth === void 0 ? 0 : _ref$borderWidth,
      _ref$borderColor = _ref.borderColor,
      borderColor = _ref$borderColor === void 0 ? 'transparent' : _ref$borderColor;
  return jsxRuntime.jsx("rect", {
    x: x,
    y: y,
    fill: fill,
    opacity: opacity,
    strokeWidth: borderWidth,
    stroke: borderColor,
    width: size,
    height: size,
    style: {
      pointerEvents: 'none'
    }
  });
};

var SymbolTriangle = function SymbolTriangle(_ref) {
  var x = _ref.x,
      y = _ref.y,
      size = _ref.size,
      fill = _ref.fill,
      _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,
      _ref$borderWidth = _ref.borderWidth,
      borderWidth = _ref$borderWidth === void 0 ? 0 : _ref$borderWidth,
      _ref$borderColor = _ref.borderColor,
      borderColor = _ref$borderColor === void 0 ? 'transparent' : _ref$borderColor;
  return jsxRuntime.jsx("g", {
    transform: "translate(".concat(x, ",").concat(y, ")"),
    children: jsxRuntime.jsx("path", {
      d: "\n                M".concat(size / 2, " 0\n                L").concat(size, " ").concat(size, "\n                L0 ").concat(size, "\n                L").concat(size / 2, " 0\n            "),
      fill: fill,
      opacity: opacity,
      strokeWidth: borderWidth,
      stroke: borderColor,
      style: {
        pointerEvents: 'none'
      }
    })
  });
};

var symbolByShape = {
  circle: SymbolCircle,
  diamond: SymbolDiamond,
  square: SymbolSquare,
  triangle: SymbolTriangle
};
var LegendSvgItem = function LegendSvgItem(_ref) {
  var _style$symbolSize, _style$itemOpacity, _style$itemBackground, _style$symbolSize2, _ref4, _data$fill, _style$symbolBorderWi, _style$symbolBorderCo, _ref5, _ref6, _style$itemTextColor;

  var x = _ref.x,
      y = _ref.y,
      width = _ref.width,
      height = _ref.height,
      data = _ref.data,
      _ref$direction = _ref.direction,
      direction = _ref$direction === void 0 ? 'left-to-right' : _ref$direction,
      _ref$justify = _ref.justify,
      justify = _ref$justify === void 0 ? false : _ref$justify,
      textColor = _ref.textColor,
      _ref$background = _ref.background,
      background = _ref$background === void 0 ? 'transparent' : _ref$background,
      _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,
      _ref$symbolShape = _ref.symbolShape,
      symbolShape = _ref$symbolShape === void 0 ? 'square' : _ref$symbolShape,
      _ref$symbolSize = _ref.symbolSize,
      symbolSize = _ref$symbolSize === void 0 ? 16 : _ref$symbolSize,
      _ref$symbolSpacing = _ref.symbolSpacing,
      symbolSpacing = _ref$symbolSpacing === void 0 ? 8 : _ref$symbolSpacing,
      _ref$symbolBorderWidt = _ref.symbolBorderWidth,
      symbolBorderWidth = _ref$symbolBorderWidt === void 0 ? 0 : _ref$symbolBorderWidt,
      _ref$symbolBorderColo = _ref.symbolBorderColor,
      symbolBorderColor = _ref$symbolBorderColo === void 0 ? 'transparent' : _ref$symbolBorderColo,
      _onClick = _ref.onClick,
      onMouseEnter = _ref.onMouseEnter,
      onMouseLeave = _ref.onMouseLeave,
      toggleSerie = _ref.toggleSerie,
      effects = _ref.effects;

  var _useState = React.useState({}),
      _useState2 = _slicedToArray$3(_useState, 2),
      style = _useState2[0],
      setStyle = _useState2[1];

  var theme = useTheme();
  var handleMouseEnter = React.useCallback(function (event) {
    if (effects) {
      var applyEffects = effects.filter(function (_ref2) {
        var on = _ref2.on;
        return on === 'hover';
      });

      var _style = applyEffects.reduce(function (acc, effect) {
        return _objectSpread2$3(_objectSpread2$3({}, acc), effect.style);
      }, {});

      setStyle(_style);
    }

    onMouseEnter === null || onMouseEnter === void 0 ? void 0 : onMouseEnter(data, event);
  }, [onMouseEnter, data, effects]);
  var handleMouseLeave = React.useCallback(function (event) {
    if (effects) {
      var applyEffects = effects.filter(function (_ref3) {
        var on = _ref3.on;
        return on !== 'hover';
      });

      var _style2 = applyEffects.reduce(function (acc, effect) {
        return _objectSpread2$3(_objectSpread2$3({}, acc), effect.style);
      }, {});

      setStyle(_style2);
    }

    onMouseLeave === null || onMouseLeave === void 0 ? void 0 : onMouseLeave(data, event);
  }, [onMouseLeave, data, effects]);

  var _computeItemLayout = computeItemLayout({
    direction: direction,
    justify: justify,
    symbolSize: (_style$symbolSize = style.symbolSize) !== null && _style$symbolSize !== void 0 ? _style$symbolSize : symbolSize,
    symbolSpacing: symbolSpacing,
    width: width,
    height: height
  }),
      symbolX = _computeItemLayout.symbolX,
      symbolY = _computeItemLayout.symbolY,
      labelX = _computeItemLayout.labelX,
      labelY = _computeItemLayout.labelY,
      labelAnchor = _computeItemLayout.labelAnchor,
      labelAlignment = _computeItemLayout.labelAlignment;

  var isInteractive = [_onClick, onMouseEnter, onMouseLeave, toggleSerie].some(function (handler) {
    return handler !== undefined;
  });
  var SymbolShape = typeof symbolShape === 'function' ? symbolShape : symbolByShape[symbolShape];
  return jsxRuntime.jsxs("g", {
    transform: "translate(".concat(x, ",").concat(y, ")"),
    style: {
      opacity: (_style$itemOpacity = style.itemOpacity) !== null && _style$itemOpacity !== void 0 ? _style$itemOpacity : opacity
    },
    children: [jsxRuntime.jsx("rect", {
      width: width,
      height: height,
      fill: (_style$itemBackground = style.itemBackground) !== null && _style$itemBackground !== void 0 ? _style$itemBackground : background,
      style: {
        cursor: isInteractive ? 'pointer' : 'auto'
      },
      onClick: function onClick(event) {
        _onClick === null || _onClick === void 0 ? void 0 : _onClick(data, event);
        toggleSerie === null || toggleSerie === void 0 ? void 0 : toggleSerie(data.id);
      },
      onMouseEnter: handleMouseEnter,
      onMouseLeave: handleMouseLeave
    }), React.createElement(SymbolShape, _objectSpread2$3({
      id: data.id,
      x: symbolX,
      y: symbolY,
      size: (_style$symbolSize2 = style.symbolSize) !== null && _style$symbolSize2 !== void 0 ? _style$symbolSize2 : symbolSize,
      fill: (_ref4 = (_data$fill = data.fill) !== null && _data$fill !== void 0 ? _data$fill : data.color) !== null && _ref4 !== void 0 ? _ref4 : 'black',
      borderWidth: (_style$symbolBorderWi = style.symbolBorderWidth) !== null && _style$symbolBorderWi !== void 0 ? _style$symbolBorderWi : symbolBorderWidth,
      borderColor: (_style$symbolBorderCo = style.symbolBorderColor) !== null && _style$symbolBorderCo !== void 0 ? _style$symbolBorderCo : symbolBorderColor
    }, data.hidden ? theme.legends.hidden.symbol : undefined)), jsxRuntime.jsx("text", {
      textAnchor: labelAnchor,
      style: _objectSpread2$3(_objectSpread2$3({}, theme.legends.text), {}, {
        fill: (_ref5 = (_ref6 = (_style$itemTextColor = style.itemTextColor) !== null && _style$itemTextColor !== void 0 ? _style$itemTextColor : textColor) !== null && _ref6 !== void 0 ? _ref6 : theme.legends.text.fill) !== null && _ref5 !== void 0 ? _ref5 : 'black',
        dominantBaseline: labelAlignment,
        pointerEvents: 'none',
        userSelect: 'none'
      }, data.hidden ? theme.legends.hidden.text : undefined),
      x: labelX,
      y: labelY,
      children: data.label
    })]
  });
};

var LegendSvg = function LegendSvg(_ref) {
  var data = _ref.data,
      x = _ref.x,
      y = _ref.y,
      direction = _ref.direction,
      _ref$padding = _ref.padding,
      _padding = _ref$padding === void 0 ? 0 : _ref$padding,
      justify = _ref.justify,
      effects = _ref.effects,
      itemWidth = _ref.itemWidth,
      itemHeight = _ref.itemHeight,
      _ref$itemDirection = _ref.itemDirection,
      itemDirection = _ref$itemDirection === void 0 ? 'left-to-right' : _ref$itemDirection,
      _ref$itemsSpacing = _ref.itemsSpacing,
      itemsSpacing = _ref$itemsSpacing === void 0 ? 0 : _ref$itemsSpacing,
      itemTextColor = _ref.itemTextColor,
      _ref$itemBackground = _ref.itemBackground,
      itemBackground = _ref$itemBackground === void 0 ? 'transparent' : _ref$itemBackground,
      _ref$itemOpacity = _ref.itemOpacity,
      itemOpacity = _ref$itemOpacity === void 0 ? 1 : _ref$itemOpacity,
      symbolShape = _ref.symbolShape,
      symbolSize = _ref.symbolSize,
      symbolSpacing = _ref.symbolSpacing,
      symbolBorderWidth = _ref.symbolBorderWidth,
      symbolBorderColor = _ref.symbolBorderColor,
      onClick = _ref.onClick,
      onMouseEnter = _ref.onMouseEnter,
      onMouseLeave = _ref.onMouseLeave,
      toggleSerie = _ref.toggleSerie;

  var _computeDimensions = computeDimensions({
    itemCount: data.length,
    itemWidth: itemWidth,
    itemHeight: itemHeight,
    itemsSpacing: itemsSpacing,
    direction: direction,
    padding: _padding
  }),
      padding = _computeDimensions.padding;

  var xStep = direction === 'row' ? itemWidth + itemsSpacing : 0;
  var yStep = direction === 'column' ? itemHeight + itemsSpacing : 0;
  return jsxRuntime.jsx("g", {
    transform: "translate(".concat(x, ",").concat(y, ")"),
    children: data.map(function (data, i) {
      return jsxRuntime.jsx(LegendSvgItem, {
        data: data,
        x: i * xStep + padding.left,
        y: i * yStep + padding.top,
        width: itemWidth,
        height: itemHeight,
        direction: itemDirection,
        justify: justify,
        effects: effects,
        textColor: itemTextColor,
        background: itemBackground,
        opacity: itemOpacity,
        symbolShape: symbolShape,
        symbolSize: symbolSize,
        symbolSpacing: symbolSpacing,
        symbolBorderWidth: symbolBorderWidth,
        symbolBorderColor: symbolBorderColor,
        onClick: onClick,
        onMouseEnter: onMouseEnter,
        onMouseLeave: onMouseLeave,
        toggleSerie: toggleSerie
      }, i);
    })
  });
};

var BoxLegendSvg = function BoxLegendSvg(_ref) {
  var data = _ref.data,
      containerWidth = _ref.containerWidth,
      containerHeight = _ref.containerHeight,
      _ref$translateX = _ref.translateX,
      translateX = _ref$translateX === void 0 ? 0 : _ref$translateX,
      _ref$translateY = _ref.translateY,
      translateY = _ref$translateY === void 0 ? 0 : _ref$translateY,
      anchor = _ref.anchor,
      direction = _ref.direction,
      _ref$padding = _ref.padding,
      padding = _ref$padding === void 0 ? 0 : _ref$padding,
      justify = _ref.justify,
      _ref$itemsSpacing = _ref.itemsSpacing,
      itemsSpacing = _ref$itemsSpacing === void 0 ? 0 : _ref$itemsSpacing,
      itemWidth = _ref.itemWidth,
      itemHeight = _ref.itemHeight,
      itemDirection = _ref.itemDirection,
      itemTextColor = _ref.itemTextColor,
      itemBackground = _ref.itemBackground,
      itemOpacity = _ref.itemOpacity,
      symbolShape = _ref.symbolShape,
      symbolSize = _ref.symbolSize,
      symbolSpacing = _ref.symbolSpacing,
      symbolBorderWidth = _ref.symbolBorderWidth,
      symbolBorderColor = _ref.symbolBorderColor,
      onClick = _ref.onClick,
      onMouseEnter = _ref.onMouseEnter,
      onMouseLeave = _ref.onMouseLeave,
      toggleSerie = _ref.toggleSerie,
      effects = _ref.effects;

  var _computeDimensions = computeDimensions({
    itemCount: data.length,
    itemsSpacing: itemsSpacing,
    itemWidth: itemWidth,
    itemHeight: itemHeight,
    direction: direction,
    padding: padding
  }),
      width = _computeDimensions.width,
      height = _computeDimensions.height;

  var _computePositionFromA = computePositionFromAnchor({
    anchor: anchor,
    translateX: translateX,
    translateY: translateY,
    containerWidth: containerWidth,
    containerHeight: containerHeight,
    width: width,
    height: height
  }),
      x = _computePositionFromA.x,
      y = _computePositionFromA.y;

  return jsxRuntime.jsx(LegendSvg, {
    data: data,
    x: x,
    y: y,
    direction: direction,
    padding: padding,
    justify: justify,
    effects: effects,
    itemsSpacing: itemsSpacing,
    itemWidth: itemWidth,
    itemHeight: itemHeight,
    itemDirection: itemDirection,
    itemTextColor: itemTextColor,
    itemBackground: itemBackground,
    itemOpacity: itemOpacity,
    symbolShape: symbolShape,
    symbolSize: symbolSize,
    symbolSpacing: symbolSpacing,
    symbolBorderWidth: symbolBorderWidth,
    symbolBorderColor: symbolBorderColor,
    onClick: onClick,
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave,
    toggleSerie: typeof toggleSerie === 'boolean' ? undefined : toggleSerie
  });
};

var textAlignMapping = {
  start: 'left',
  middle: 'center',
  end: 'right'
};
var renderLegendToCanvas = function renderLegendToCanvas(ctx, _ref) {
  var data = _ref.data,
      containerWidth = _ref.containerWidth,
      containerHeight = _ref.containerHeight,
      _ref$translateX = _ref.translateX,
      translateX = _ref$translateX === void 0 ? 0 : _ref$translateX,
      _ref$translateY = _ref.translateY,
      translateY = _ref$translateY === void 0 ? 0 : _ref$translateY,
      anchor = _ref.anchor,
      direction = _ref.direction,
      _ref$padding = _ref.padding,
      _padding = _ref$padding === void 0 ? 0 : _ref$padding,
      _ref$justify = _ref.justify,
      justify = _ref$justify === void 0 ? false : _ref$justify,
      _ref$itemsSpacing = _ref.itemsSpacing,
      itemsSpacing = _ref$itemsSpacing === void 0 ? 0 : _ref$itemsSpacing,
      itemWidth = _ref.itemWidth,
      itemHeight = _ref.itemHeight,
      _ref$itemDirection = _ref.itemDirection,
      itemDirection = _ref$itemDirection === void 0 ? 'left-to-right' : _ref$itemDirection,
      itemTextColor = _ref.itemTextColor,
      _ref$symbolSize = _ref.symbolSize,
      symbolSize = _ref$symbolSize === void 0 ? 16 : _ref$symbolSize,
      _ref$symbolSpacing = _ref.symbolSpacing,
      symbolSpacing = _ref$symbolSpacing === void 0 ? 8 : _ref$symbolSpacing,
      theme = _ref.theme;

  var _computeDimensions = computeDimensions({
    itemCount: data.length,
    itemWidth: itemWidth,
    itemHeight: itemHeight,
    itemsSpacing: itemsSpacing,
    direction: direction,
    padding: _padding
  }),
      width = _computeDimensions.width,
      height = _computeDimensions.height,
      padding = _computeDimensions.padding;

  var _computePositionFromA = computePositionFromAnchor({
    anchor: anchor,
    translateX: translateX,
    translateY: translateY,
    containerWidth: containerWidth,
    containerHeight: containerHeight,
    width: width,
    height: height
  }),
      x = _computePositionFromA.x,
      y = _computePositionFromA.y;

  var xStep = direction === 'row' ? itemWidth + itemsSpacing : 0;
  var yStep = direction === 'column' ? itemHeight + itemsSpacing : 0;
  ctx.save();
  ctx.translate(x, y);
  ctx.font = "".concat(theme.legends.text.fontSize, "px ").concat(theme.legends.text.fontFamily || 'sans-serif');
  data.forEach(function (d, i) {
    var _d$color, _ref2;

    var itemX = i * xStep + padding.left;
    var itemY = i * yStep + padding.top;

    var _computeItemLayout = computeItemLayout({
      direction: itemDirection,
      justify: justify,
      symbolSize: symbolSize,
      symbolSpacing: symbolSpacing,
      width: itemWidth,
      height: itemHeight
    }),
        symbolX = _computeItemLayout.symbolX,
        symbolY = _computeItemLayout.symbolY,
        labelX = _computeItemLayout.labelX,
        labelY = _computeItemLayout.labelY,
        labelAnchor = _computeItemLayout.labelAnchor,
        labelAlignment = _computeItemLayout.labelAlignment;

    ctx.fillStyle = (_d$color = d.color) !== null && _d$color !== void 0 ? _d$color : 'black';
    ctx.fillRect(itemX + symbolX, itemY + symbolY, symbolSize, symbolSize);
    ctx.textAlign = textAlignMapping[labelAnchor];

    if (labelAlignment === 'central') {
      ctx.textBaseline = 'middle';
    }

    ctx.fillStyle = (_ref2 = itemTextColor !== null && itemTextColor !== void 0 ? itemTextColor : theme.legends.text.fill) !== null && _ref2 !== void 0 ? _ref2 : 'black';
    ctx.fillText(String(d.label), itemX + labelX, itemY + labelY);
  });
  ctx.restore();
};

var useQuantizeColorScaleLegendData = function useQuantizeColorScaleLegendData(_ref) {
  var scale = _ref.scale,
      overriddenDomain = _ref.domain,
      _ref$reverse = _ref.reverse,
      reverse = _ref$reverse === void 0 ? false : _ref$reverse,
      _ref$valueFormat = _ref.valueFormat,
      valueFormat = _ref$valueFormat === void 0 ? function (v) {
    return v;
  } : _ref$valueFormat,
      _ref$separator = _ref.separator,
      separator = _ref$separator === void 0 ? ' - ' : _ref$separator;
  return React.useMemo(function () {
    var domain = overriddenDomain !== null && overriddenDomain !== void 0 ? overriddenDomain : scale.range();
    var items = domain.map(function (domainValue, index) {
      var _scale$invertExtent = scale.invertExtent(domainValue),
          _scale$invertExtent2 = _slicedToArray$3(_scale$invertExtent, 2),
          start = _scale$invertExtent2[0],
          end = _scale$invertExtent2[1];

      return {
        id: domainValue,
        index: index,
        extent: [start, end],
        label: "".concat(valueFormat(start)).concat(separator).concat(valueFormat(end)),
        value: scale(start),
        color: domainValue
      };
    });
    if (reverse === true) items.reverse();
    return items;
  }, [overriddenDomain, scale, reverse]);
};

var LegendPropShape = {
  data: propTypes.arrayOf(propTypes.object),
  anchor: propTypes.oneOf(['top', 'top-right', 'right', 'bottom-right', 'bottom', 'bottom-left', 'left', 'top-left', 'center']).isRequired,
  translateX: propTypes.number,
  translateY: propTypes.number,
  direction: propTypes.oneOf(['row', 'column']).isRequired,
  itemsSpacing: propTypes.number,
  itemWidth: propTypes.number.isRequired,
  itemHeight: propTypes.number.isRequired,
  itemDirection: propTypes.oneOf(['left-to-right', 'right-to-left', 'top-to-bottom', 'bottom-to-top']),
  itemTextColor: propTypes.string,
  itemBackground: propTypes.string,
  itemOpacity: propTypes.number,
  symbolShape: propTypes.oneOfType([propTypes.oneOf(['circle', 'diamond', 'square', 'triangle']), propTypes.func]),
  symbolSize: propTypes.number,
  symbolSpacing: propTypes.number,
  symbolBorderWidth: propTypes.number,
  symbolBorderColor: propTypes.string,
  onClick: propTypes.func,
  onMouseEnter: propTypes.func,
  onMouseLeave: propTypes.func,
  effects: propTypes.arrayOf(propTypes.shape({
    on: propTypes.oneOfType([propTypes.oneOf(['hover'])]).isRequired,
    style: propTypes.shape({
      itemTextColor: propTypes.string,
      itemBackground: propTypes.string,
      itemOpacity: propTypes.number,
      symbolSize: propTypes.number,
      symbolBorderWidth: propTypes.number,
      symbolBorderColor: propTypes.string
    }).isRequired
  }))
};

/**
 * This method returns `undefined`.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Util
 * @example
 *
 * _.times(2, _.noop);
 * // => [undefined, undefined]
 */
function noop$1() {
  // No operation performed.
}

var noop_1 = noop$1;

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Creates a set object of `values`.
 *
 * @private
 * @param {Array} values The values to add to the set.
 * @returns {Object} Returns the new set.
 */
var createSet = !(_Set && (1 / _setToArray(new _Set([,-0]))[1]) == INFINITY) ? noop_1 : function(values) {
  return new _Set(values);
};

var _createSet = createSet;

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * The base implementation of `_.uniqBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 */
function baseUniq(array, iteratee, comparator) {
  var index = -1,
      includes = _arrayIncludes,
      length = array.length,
      isCommon = true,
      result = [],
      seen = result;

  if (comparator) {
    isCommon = false;
    includes = _arrayIncludesWith;
  }
  else if (length >= LARGE_ARRAY_SIZE) {
    var set = iteratee ? null : _createSet(array);
    if (set) {
      return _setToArray(set);
    }
    isCommon = false;
    includes = _cacheHas;
    seen = new _SetCache;
  }
  else {
    seen = iteratee ? [] : result;
  }
  outer:
  while (++index < length) {
    var value = array[index],
        computed = iteratee ? iteratee(value) : value;

    value = (comparator || value !== 0) ? value : 0;
    if (isCommon && computed === computed) {
      var seenIndex = seen.length;
      while (seenIndex--) {
        if (seen[seenIndex] === computed) {
          continue outer;
        }
      }
      if (iteratee) {
        seen.push(computed);
      }
      result.push(value);
    }
    else if (!includes(seen, computed, comparator)) {
      if (seen !== result) {
        seen.push(computed);
      }
      result.push(value);
    }
  }
  return result;
}

var _baseUniq = baseUniq;

/**
 * Creates a duplicate-free version of an array, using
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons, in which only the first occurrence of each element
 * is kept. The order of result values is determined by the order they occur
 * in the array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * _.uniq([2, 1, 2]);
 * // => [2, 1]
 */
function uniq(array) {
  return (array && array.length) ? _baseUniq(array) : [];
}

var uniq_1 = uniq;

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG$1 = 1,
    COMPARE_UNORDERED_FLAG$1 = 2;

/**
 * The base implementation of `_.isMatch` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Array} matchData The property names, values, and compare flags to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 */
function baseIsMatch(object, source, matchData, customizer) {
  var index = matchData.length,
      length = index,
      noCustomizer = !customizer;

  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (index--) {
    var data = matchData[index];
    if ((noCustomizer && data[2])
          ? data[1] !== object[data[0]]
          : !(data[0] in object)
        ) {
      return false;
    }
  }
  while (++index < length) {
    data = matchData[index];
    var key = data[0],
        objValue = object[key],
        srcValue = data[1];

    if (noCustomizer && data[2]) {
      if (objValue === undefined && !(key in object)) {
        return false;
      }
    } else {
      var stack = new _Stack;
      if (customizer) {
        var result = customizer(objValue, srcValue, key, object, source, stack);
      }
      if (!(result === undefined
            ? _baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG$1 | COMPARE_UNORDERED_FLAG$1, customizer, stack)
            : result
          )) {
        return false;
      }
    }
  }
  return true;
}

var _baseIsMatch = baseIsMatch;

/**
 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` if suitable for strict
 *  equality comparisons, else `false`.
 */
function isStrictComparable(value) {
  return value === value && !isObject_1(value);
}

var _isStrictComparable = isStrictComparable;

/**
 * Gets the property names, values, and compare flags of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the match data of `object`.
 */
function getMatchData(object) {
  var result = keys_1(object),
      length = result.length;

  while (length--) {
    var key = result[length],
        value = object[key];

    result[length] = [key, value, _isStrictComparable(value)];
  }
  return result;
}

var _getMatchData = getMatchData;

/**
 * A specialized version of `matchesProperty` for source values suitable
 * for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function matchesStrictComparable(key, srcValue) {
  return function(object) {
    if (object == null) {
      return false;
    }
    return object[key] === srcValue &&
      (srcValue !== undefined || (key in Object(object)));
  };
}

var _matchesStrictComparable = matchesStrictComparable;

/**
 * The base implementation of `_.matches` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatches(source) {
  var matchData = _getMatchData(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return _matchesStrictComparable(matchData[0][0], matchData[0][1]);
  }
  return function(object) {
    return object === source || _baseIsMatch(object, source, matchData);
  };
}

var _baseMatches = baseMatches;

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
 *
 * @private
 * @param {string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatchesProperty(path, srcValue) {
  if (_isKey(path) && _isStrictComparable(srcValue)) {
    return _matchesStrictComparable(_toKey(path), srcValue);
  }
  return function(object) {
    var objValue = get_1(object, path);
    return (objValue === undefined && objValue === srcValue)
      ? hasIn_1(object, path)
      : _baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
  };
}

var _baseMatchesProperty = baseMatchesProperty;

/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function baseProperty(key) {
  return function(object) {
    return object == null ? undefined : object[key];
  };
}

var _baseProperty = baseProperty;

/**
 * A specialized version of `baseProperty` which supports deep paths.
 *
 * @private
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyDeep(path) {
  return function(object) {
    return _baseGet(object, path);
  };
}

var _basePropertyDeep = basePropertyDeep;

/**
 * Creates a function that returns the value at `path` of a given object.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': 2 } },
 *   { 'a': { 'b': 1 } }
 * ];
 *
 * _.map(objects, _.property('a.b'));
 * // => [2, 1]
 *
 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
 * // => [1, 2]
 */
function property(path) {
  return _isKey(path) ? _baseProperty(_toKey(path)) : _basePropertyDeep(path);
}

var property_1 = property;

/**
 * The base implementation of `_.iteratee`.
 *
 * @private
 * @param {*} [value=_.identity] The value to convert to an iteratee.
 * @returns {Function} Returns the iteratee.
 */
function baseIteratee(value) {
  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
  if (typeof value == 'function') {
    return value;
  }
  if (value == null) {
    return identity_1;
  }
  if (typeof value == 'object') {
    return isArray_1(value)
      ? _baseMatchesProperty(value[0], value[1])
      : _baseMatches(value);
  }
  return property_1(value);
}

var _baseIteratee = baseIteratee;

/**
 * This method is like `_.uniq` except that it accepts `iteratee` which is
 * invoked for each element in `array` to generate the criterion by which
 * uniqueness is computed. The order of result values is determined by the
 * order they occur in the array. The iteratee is invoked with one argument:
 * (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
 * // => [2.1, 1.2]
 *
 * // The `_.property` iteratee shorthand.
 * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
 * // => [{ 'x': 1 }, { 'x': 2 }]
 */
function uniqBy(array, iteratee) {
  return (array && array.length) ? _baseUniq(array, _baseIteratee(iteratee)) : [];
}

var uniqBy_1 = uniqBy;

/**
 * The base implementation of `_.forOwn` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */
function baseForOwn(object, iteratee) {
  return object && _baseFor(object, iteratee, keys_1);
}

var _baseForOwn = baseForOwn;

/**
 * Creates a `baseEach` or `baseEachRight` function.
 *
 * @private
 * @param {Function} eachFunc The function to iterate over a collection.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseEach(eachFunc, fromRight) {
  return function(collection, iteratee) {
    if (collection == null) {
      return collection;
    }
    if (!isArrayLike_1(collection)) {
      return eachFunc(collection, iteratee);
    }
    var length = collection.length,
        index = fromRight ? length : -1,
        iterable = Object(collection);

    while ((fromRight ? index-- : ++index < length)) {
      if (iteratee(iterable[index], index, iterable) === false) {
        break;
      }
    }
    return collection;
  };
}

var _createBaseEach = createBaseEach;

/**
 * The base implementation of `_.forEach` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 */
var baseEach = _createBaseEach(_baseForOwn);

var _baseEach = baseEach;

/**
 * The base implementation of `_.map` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function baseMap(collection, iteratee) {
  var index = -1,
      result = isArrayLike_1(collection) ? Array(collection.length) : [];

  _baseEach(collection, function(value, key, collection) {
    result[++index] = iteratee(value, key, collection);
  });
  return result;
}

var _baseMap = baseMap;

/**
 * The base implementation of `_.sortBy` which uses `comparer` to define the
 * sort order of `array` and replaces criteria objects with their corresponding
 * values.
 *
 * @private
 * @param {Array} array The array to sort.
 * @param {Function} comparer The function to define sort order.
 * @returns {Array} Returns `array`.
 */
function baseSortBy(array, comparer) {
  var length = array.length;

  array.sort(comparer);
  while (length--) {
    array[length] = array[length].value;
  }
  return array;
}

var _baseSortBy = baseSortBy;

/**
 * Compares values to sort them in ascending order.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {number} Returns the sort order indicator for `value`.
 */
function compareAscending(value, other) {
  if (value !== other) {
    var valIsDefined = value !== undefined,
        valIsNull = value === null,
        valIsReflexive = value === value,
        valIsSymbol = isSymbol_1(value);

    var othIsDefined = other !== undefined,
        othIsNull = other === null,
        othIsReflexive = other === other,
        othIsSymbol = isSymbol_1(other);

    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
        (valIsNull && othIsDefined && othIsReflexive) ||
        (!valIsDefined && othIsReflexive) ||
        !valIsReflexive) {
      return 1;
    }
    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
        (othIsNull && valIsDefined && valIsReflexive) ||
        (!othIsDefined && valIsReflexive) ||
        !othIsReflexive) {
      return -1;
    }
  }
  return 0;
}

var _compareAscending = compareAscending;

/**
 * Used by `_.orderBy` to compare multiple properties of a value to another
 * and stable sort them.
 *
 * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
 * specify an order of "desc" for descending or "asc" for ascending sort order
 * of corresponding values.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {boolean[]|string[]} orders The order to sort by for each property.
 * @returns {number} Returns the sort order indicator for `object`.
 */
function compareMultiple(object, other, orders) {
  var index = -1,
      objCriteria = object.criteria,
      othCriteria = other.criteria,
      length = objCriteria.length,
      ordersLength = orders.length;

  while (++index < length) {
    var result = _compareAscending(objCriteria[index], othCriteria[index]);
    if (result) {
      if (index >= ordersLength) {
        return result;
      }
      var order = orders[index];
      return result * (order == 'desc' ? -1 : 1);
    }
  }
  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
  // that causes it, under certain circumstances, to provide the same value for
  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
  // for more details.
  //
  // This also ensures a stable sort in V8 and other engines.
  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
  return object.index - other.index;
}

var _compareMultiple = compareMultiple;

/**
 * The base implementation of `_.orderBy` without param guards.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
 * @param {string[]} orders The sort orders of `iteratees`.
 * @returns {Array} Returns the new sorted array.
 */
function baseOrderBy(collection, iteratees, orders) {
  if (iteratees.length) {
    iteratees = _arrayMap(iteratees, function(iteratee) {
      if (isArray_1(iteratee)) {
        return function(value) {
          return _baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
        }
      }
      return iteratee;
    });
  } else {
    iteratees = [identity_1];
  }

  var index = -1;
  iteratees = _arrayMap(iteratees, _baseUnary(_baseIteratee));

  var result = _baseMap(collection, function(value, key, collection) {
    var criteria = _arrayMap(iteratees, function(iteratee) {
      return iteratee(value);
    });
    return { 'criteria': criteria, 'index': ++index, 'value': value };
  });

  return _baseSortBy(result, function(object, other) {
    return _compareMultiple(object, other, orders);
  });
}

var _baseOrderBy = baseOrderBy;

/**
 * Creates an array of elements, sorted in ascending order by the results of
 * running each element in a collection thru each iteratee. This method
 * performs a stable sort, that is, it preserves the original sort order of
 * equal elements. The iteratees are invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {...(Function|Function[])} [iteratees=[_.identity]]
 *  The iteratees to sort by.
 * @returns {Array} Returns the new sorted array.
 * @example
 *
 * var users = [
 *   { 'user': 'fred',   'age': 48 },
 *   { 'user': 'barney', 'age': 36 },
 *   { 'user': 'fred',   'age': 30 },
 *   { 'user': 'barney', 'age': 34 }
 * ];
 *
 * _.sortBy(users, [function(o) { return o.user; }]);
 * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]
 *
 * _.sortBy(users, ['user', 'age']);
 * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]
 */
var sortBy = _baseRest(function(collection, iteratees) {
  if (collection == null) {
    return [];
  }
  var length = iteratees.length;
  if (length > 1 && _isIterateeCall(collection, iteratees[0], iteratees[1])) {
    iteratees = [];
  } else if (length > 2 && _isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
    iteratees = [iteratees[0]];
  }
  return _baseOrderBy(collection, _baseFlatten(iteratees, 1), []);
});

var sortBy_1 = sortBy;

/** `Object#toString` result references. */
var dateTag = '[object Date]';

/**
 * The base implementation of `_.isDate` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
 */
function baseIsDate(value) {
  return isObjectLike_1(value) && _baseGetTag(value) == dateTag;
}

var _baseIsDate = baseIsDate;

/* Node.js helper references. */
var nodeIsDate = _nodeUtil && _nodeUtil.isDate;

/**
 * Checks if `value` is classified as a `Date` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
 * @example
 *
 * _.isDate(new Date);
 * // => true
 *
 * _.isDate('Mon April 23 2012');
 * // => false
 */
var isDate = nodeIsDate ? _baseUnary(nodeIsDate) : _baseIsDate;

var isDate_1 = isDate;

function _arrayLikeToArray$3(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}

function _arrayWithoutHoles$1(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray$3(arr);
}

function _iterableToArray$1(iter) {
  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
}

function _unsupportedIterableToArray$3(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray$3(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$3(o, minLen);
}

function _nonIterableSpread$1() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _toConsumableArray$1(arr) {
  return _arrayWithoutHoles$1(arr) || _iterableToArray$1(arr) || _unsupportedIterableToArray$3(arr) || _nonIterableSpread$1();
}

function _defineProperty$2(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

function ownKeys$2(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2$2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$2(Object(source), true).forEach(function (key) {
        _defineProperty$2(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$2(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
var precisionCutOffs = [function (date) {
  return date.setMilliseconds(0);
}, function (date) {
  return date.setSeconds(0);
}, function (date) {
  return date.setMinutes(0);
}, function (date) {
  return date.setHours(0);
}, function (date) {
  return date.setDate(1);
}, function (date) {
  return date.setMonth(0);
}];
var precisionCutOffsByType = {
  millisecond: [],
  second: precisionCutOffs.slice(0, 1),
  minute: precisionCutOffs.slice(0, 2),
  hour: precisionCutOffs.slice(0, 3),
  day: precisionCutOffs.slice(0, 4),
  month: precisionCutOffs.slice(0, 5),
  year: precisionCutOffs.slice(0, 6)
};
var createPrecisionMethod = function createPrecisionMethod(precision) {
  return function (date) {
    precisionCutOffsByType[precision].forEach(function (cutOff) {
      cutOff(date);
    });
    return date;
  };
};
var createDateNormalizer = function createDateNormalizer(_ref) {
  var _ref$format = _ref.format,
      format = _ref$format === void 0 ? 'native' : _ref$format,
      _ref$precision = _ref.precision,
      precision = _ref$precision === void 0 ? 'millisecond' : _ref$precision,
      _ref$useUTC = _ref.useUTC,
      useUTC = _ref$useUTC === void 0 ? true : _ref$useUTC;
  var precisionFn = createPrecisionMethod(precision);
  return function (value) {
    if (value === undefined) {
      return value;
    }

    if (format === 'native' || value instanceof Date) {
      return precisionFn(value);
    }

    var parseTime = useUTC ? utcParse(format) : timeParse(format);
    return precisionFn(parseTime(value));
  };
};

var createLinearScale = function createLinearScale(_ref, data, size, axis) {
  var _ref$min = _ref.min,
      min = _ref$min === void 0 ? 0 : _ref$min,
      _ref$max = _ref.max,
      max = _ref$max === void 0 ? 'auto' : _ref$max,
      _ref$stacked = _ref.stacked,
      stacked = _ref$stacked === void 0 ? false : _ref$stacked,
      _ref$reverse = _ref.reverse,
      reverse = _ref$reverse === void 0 ? false : _ref$reverse,
      _ref$clamp = _ref.clamp,
      clamp = _ref$clamp === void 0 ? false : _ref$clamp,
      _ref$nice = _ref.nice,
      nice = _ref$nice === void 0 ? false : _ref$nice;
  var minValue;

  if (min === 'auto') {
    var _data$minStacked;

    minValue = stacked === true ? (_data$minStacked = data.minStacked) !== null && _data$minStacked !== void 0 ? _data$minStacked : 0 : data.min;
  } else {
    minValue = min;
  }

  var maxValue;

  if (max === 'auto') {
    var _data$maxStacked;

    maxValue = stacked === true ? (_data$maxStacked = data.maxStacked) !== null && _data$maxStacked !== void 0 ? _data$maxStacked : 0 : data.max;
  } else {
    maxValue = max;
  }

  var scale = linear().rangeRound(axis === 'x' ? [0, size] : [size, 0]).domain(reverse ? [maxValue, minValue] : [minValue, maxValue]).clamp(clamp);
  if (nice === true) scale.nice();else if (typeof nice === 'number') scale.nice(nice);
  var typedScale = scale;
  typedScale.type = 'linear';
  typedScale.stacked = stacked;
  return typedScale;
};

var createPointScale = function createPointScale(_spec, data, size) {
  var scale = point$4().range([0, size]).domain(data.all);
  var typedScale = scale;
  typedScale.type = 'point';
  return typedScale;
};

var createBandScale = function createBandScale(_ref, data, size, axis) {
  var _ref$round = _ref.round,
      round = _ref$round === void 0 ? true : _ref$round;
  var scale = band().range(axis === 'x' ? [0, size] : [size, 0]).domain(data.all).round(round);
  var typedScale = scale;
  typedScale.type = 'band';
  return typedScale;
};

var createTimeScale = function createTimeScale(_ref, data, size) {
  var _ref$format = _ref.format,
      format = _ref$format === void 0 ? 'native' : _ref$format,
      _ref$precision = _ref.precision,
      precision = _ref$precision === void 0 ? 'millisecond' : _ref$precision,
      _ref$min = _ref.min,
      min = _ref$min === void 0 ? 'auto' : _ref$min,
      _ref$max = _ref.max,
      max = _ref$max === void 0 ? 'auto' : _ref$max,
      _ref$useUTC = _ref.useUTC,
      useUTC = _ref$useUTC === void 0 ? true : _ref$useUTC,
      _ref$nice = _ref.nice,
      nice = _ref$nice === void 0 ? false : _ref$nice;
  var normalize = createDateNormalizer({
    format: format,
    precision: precision,
    useUTC: useUTC
  });
  var minValue;

  if (min === 'auto') {
    minValue = normalize(data.min);
  } else if (format !== 'native') {
    minValue = normalize(min);
  } else {
    minValue = min;
  }

  var maxValue;

  if (max === 'auto') {
    maxValue = normalize(data.max);
  } else if (format !== 'native') {
    maxValue = normalize(max);
  } else {
    maxValue = max;
  }

  var scale = useUTC ? utcTime() : time();
  scale.range([0, size]);
  if (minValue && maxValue) scale.domain([minValue, maxValue]);
  if (nice === true) scale.nice();else if (typeof nice === 'object' || typeof nice === 'number') scale.nice(nice);
  var typedScale = scale;
  typedScale.type = 'time';
  typedScale.useUTC = useUTC;
  return typedScale;
};

var createLogScale = function createLogScale(_ref, data, size, axis) {
  var _ref$base = _ref.base,
      base = _ref$base === void 0 ? 10 : _ref$base,
      _ref$min = _ref.min,
      min = _ref$min === void 0 ? 'auto' : _ref$min,
      _ref$max = _ref.max,
      max = _ref$max === void 0 ? 'auto' : _ref$max;
  var hasZero = data.all.some(function (v) {
    return v === 0;
  });

  if (hasZero) {
    throw new Error("a log scale domain must not include or cross zero");
  }

  var sign;
  var hasMixedSign = false;
  data.all.filter(function (v) {
    return v != null;
  }).forEach(function (v) {
    if (hasMixedSign) return;

    if (sign === undefined) {
      sign = Math.sign(v);
    } else if (Math.sign(v) !== sign) {
      hasMixedSign = true;
    }
  });

  if (hasMixedSign) {
    throw new Error("a log scale domain must be strictly-positive or strictly-negative");
  }

  var minValue;

  if (min === 'auto') {
    minValue = data.min;
  } else {
    minValue = min;
  }

  var maxValue;

  if (max === 'auto') {
    maxValue = data.max;
  } else {
    maxValue = max;
  }

  var scale = log$1().domain([minValue, maxValue]).rangeRound(axis === 'x' ? [0, size] : [size, 0]).base(base).nice();
  var typedScale = scale;
  typedScale.type = 'log';
  return scale;
};

var createSymlogScale = function createSymlogScale(_ref, data, size, axis) {
  var _ref$constant = _ref.constant,
      constant = _ref$constant === void 0 ? 1 : _ref$constant,
      _ref$min = _ref.min,
      min = _ref$min === void 0 ? 'auto' : _ref$min,
      _ref$max = _ref.max,
      max = _ref$max === void 0 ? 'auto' : _ref$max,
      _ref$reverse = _ref.reverse,
      reverse = _ref$reverse === void 0 ? false : _ref$reverse;
  var minValue;

  if (min === 'auto') {
    minValue = data.min;
  } else {
    minValue = min;
  }

  var maxValue;

  if (max === 'auto') {
    maxValue = data.max;
  } else {
    maxValue = max;
  }

  var scale = symlog().constant(constant).rangeRound(axis === 'x' ? [0, size] : [size, 0]).nice();
  if (reverse === true) scale.domain([maxValue, minValue]);else scale.domain([minValue, maxValue]);
  var typedScale = scale;
  typedScale.type = 'symlog';
  return typedScale;
};

var getOtherAxis = function getOtherAxis(axis) {
  return axis === 'x' ? 'y' : 'x';
};
var compareValues = function compareValues(a, b) {
  return a === b;
};
var compareDateValues = function compareDateValues(a, b) {
  return a.getTime() === b.getTime();
};
function computeScale(spec, data, size, axis) {
  switch (spec.type) {
    case 'linear':
      return createLinearScale(spec, data, size, axis);

    case 'point':
      return createPointScale(spec, data, size);

    case 'band':
      return createBandScale(spec, data, size, axis);

    case 'time':
      return createTimeScale(spec, data, size);

    case 'log':
      return createLogScale(spec, data, size, axis);

    case 'symlog':
      return createSymlogScale(spec, data, size, axis);

    default:
      throw new Error('invalid scale spec');
  }
}
var computeXYScalesForSeries = function computeXYScalesForSeries(_series, xScaleSpec, yScaleSpec, width, height) {
  var series = _series.map(function (serie) {
    return _objectSpread2$2(_objectSpread2$2({}, serie), {}, {
      data: serie.data.map(function (d) {
        return {
          data: _objectSpread2$2({}, d)
        };
      })
    });
  });

  var xy = generateSeriesXY(series, xScaleSpec, yScaleSpec);

  if ('stacked' in xScaleSpec && xScaleSpec.stacked === true) {
    stackX(xy, series);
  }

  if ('stacked' in yScaleSpec && yScaleSpec.stacked === true) {
    stackY(xy, series);
  }

  var xScale = computeScale(xScaleSpec, xy.x, width, 'x');
  var yScale = computeScale(yScaleSpec, xy.y, height, 'y');
  series.forEach(function (serie) {
    serie.data.forEach(function (d) {
      var _xScale, _yScale;

      d.position = {
        x: 'stacked' in xScale && xScale.stacked === true ? d.data.xStacked === null ? null : xScale(d.data.xStacked) : d.data.x === null ? null : (_xScale = xScale(d.data.x)) !== null && _xScale !== void 0 ? _xScale : null,
        y: 'stacked' in yScale && yScale.stacked === true ? d.data.yStacked === null ? null : yScale(d.data.yStacked) : d.data.y === null ? null : (_yScale = yScale(d.data.y)) !== null && _yScale !== void 0 ? _yScale : null
      };
    });
  });
  return _objectSpread2$2(_objectSpread2$2({}, xy), {}, {
    series: series,
    xScale: xScale,
    yScale: yScale
  });
};
var generateSeriesXY = function generateSeriesXY(series, xScaleSpec, yScaleSpec) {
  return {
    x: generateSeriesAxis(series, 'x', xScaleSpec),
    y: generateSeriesAxis(series, 'y', yScaleSpec)
  };
};
var generateSeriesAxis = function generateSeriesAxis(series, axis, scaleSpec) {
  var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
      _ref$getValue = _ref.getValue,
      getValue = _ref$getValue === void 0 ? function (d) {
    return d.data[axis];
  } : _ref$getValue,
      _ref$setValue = _ref.setValue,
      setValue = _ref$setValue === void 0 ? function (d, v) {
    d.data[axis] = v;
  } : _ref$setValue;

  if (scaleSpec.type === 'linear') {
    series.forEach(function (serie) {
      serie.data.forEach(function (d) {
        var value = getValue(d);

        if (value) {
          setValue(d, parseFloat(String(value)));
        }
      });
    });
  } else if (scaleSpec.type === 'time' && scaleSpec.format !== 'native') {
    var parseTime = createDateNormalizer(scaleSpec);
    series.forEach(function (serie) {
      serie.data.forEach(function (d) {
        var value = getValue(d);

        if (value) {
          setValue(d, parseTime(value));
        }
      });
    });
  }

  var values = [];
  series.forEach(function (serie) {
    serie.data.forEach(function (d) {
      values.push(getValue(d));
    });
  });

  switch (scaleSpec.type) {
    case 'linear':
      {
        var all = sortBy_1(uniq_1(values), function (v) {
          return v;
        });
        return {
          all: all,
          min: Math.min.apply(Math, _toConsumableArray$1(all)),
          max: Math.max.apply(Math, _toConsumableArray$1(all))
        };
      }

    case 'time':
      {
        var _all = uniqBy_1(values, function (v) {
          return v.getTime();
        }).slice(0).sort(function (a, b) {
          return b.getTime() - a.getTime();
        }).reverse();

        return {
          all: _all,
          min: _all[0],
          max: last_1(_all)
        };
      }

    default:
      {
        var _all2 = uniq_1(values);

        return {
          all: _all2,
          min: _all2[0],
          max: last_1(_all2)
        };
      }
  }
};
var stackAxis = function stackAxis(axis, xy, series) {
  var otherAxis = getOtherAxis(axis);
  var all = [];
  xy[otherAxis].all.forEach(function (v) {
    var compare = isDate_1(v) ? compareDateValues : compareValues;
    var stack = [];
    series.forEach(function (serie) {
      var datum = serie.data.find(function (d) {
        return compare(d.data[otherAxis], v);
      });
      var value = null;
      var stackValue = null;

      if (datum !== undefined) {
        value = datum.data[axis];

        if (value !== null) {
          var head = last_1(stack);

          if (head === undefined) {
            stackValue = value;
          } else if (head !== null) {
            stackValue = head + value;
          }
        }

        datum.data["".concat(axis, "Stacked")] = stackValue;
      }

      stack.push(stackValue);

      if (stackValue !== null) {
        all.push(stackValue);
      }
    });
  });
  xy[axis].minStacked = Math.min.apply(Math, all);
  xy[axis].maxStacked = Math.max.apply(Math, all);
};

var stackX = function stackX(xy, series) {
  return stackAxis('x', xy, series);
};

var stackY = function stackY(xy, series) {
  return stackAxis('y', xy, series);
};

const EPSILON = Math.pow(2, -52);
const EDGE_STACK = new Uint32Array(512);

class Delaunator {

    static from(points, getX = defaultGetX, getY = defaultGetY) {
        const n = points.length;
        const coords = new Float64Array(n * 2);

        for (let i = 0; i < n; i++) {
            const p = points[i];
            coords[2 * i] = getX(p);
            coords[2 * i + 1] = getY(p);
        }

        return new Delaunator(coords);
    }

    constructor(coords) {
        const n = coords.length >> 1;
        if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');

        this.coords = coords;

        // arrays that will store the triangulation graph
        const maxTriangles = Math.max(2 * n - 5, 0);
        this._triangles = new Uint32Array(maxTriangles * 3);
        this._halfedges = new Int32Array(maxTriangles * 3);

        // temporary arrays for tracking the edges of the advancing convex hull
        this._hashSize = Math.ceil(Math.sqrt(n));
        this._hullPrev = new Uint32Array(n); // edge to prev edge
        this._hullNext = new Uint32Array(n); // edge to next edge
        this._hullTri = new Uint32Array(n); // edge to adjacent triangle
        this._hullHash = new Int32Array(this._hashSize).fill(-1); // angular edge hash

        // temporary arrays for sorting points
        this._ids = new Uint32Array(n);
        this._dists = new Float64Array(n);

        this.update();
    }

    update() {
        const {coords, _hullPrev: hullPrev, _hullNext: hullNext, _hullTri: hullTri, _hullHash: hullHash} =  this;
        const n = coords.length >> 1;

        // populate an array of point indices; calculate input data bbox
        let minX = Infinity;
        let minY = Infinity;
        let maxX = -Infinity;
        let maxY = -Infinity;

        for (let i = 0; i < n; i++) {
            const x = coords[2 * i];
            const y = coords[2 * i + 1];
            if (x < minX) minX = x;
            if (y < minY) minY = y;
            if (x > maxX) maxX = x;
            if (y > maxY) maxY = y;
            this._ids[i] = i;
        }
        const cx = (minX + maxX) / 2;
        const cy = (minY + maxY) / 2;

        let minDist = Infinity;
        let i0, i1, i2;

        // pick a seed point close to the center
        for (let i = 0; i < n; i++) {
            const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);
            if (d < minDist) {
                i0 = i;
                minDist = d;
            }
        }
        const i0x = coords[2 * i0];
        const i0y = coords[2 * i0 + 1];

        minDist = Infinity;

        // find the point closest to the seed
        for (let i = 0; i < n; i++) {
            if (i === i0) continue;
            const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);
            if (d < minDist && d > 0) {
                i1 = i;
                minDist = d;
            }
        }
        let i1x = coords[2 * i1];
        let i1y = coords[2 * i1 + 1];

        let minRadius = Infinity;

        // find the third point which forms the smallest circumcircle with the first two
        for (let i = 0; i < n; i++) {
            if (i === i0 || i === i1) continue;
            const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);
            if (r < minRadius) {
                i2 = i;
                minRadius = r;
            }
        }
        let i2x = coords[2 * i2];
        let i2y = coords[2 * i2 + 1];

        if (minRadius === Infinity) {
            // order collinear points by dx (or dy if all x are identical)
            // and return the list as a hull
            for (let i = 0; i < n; i++) {
                this._dists[i] = (coords[2 * i] - coords[0]) || (coords[2 * i + 1] - coords[1]);
            }
            quicksort(this._ids, this._dists, 0, n - 1);
            const hull = new Uint32Array(n);
            let j = 0;
            for (let i = 0, d0 = -Infinity; i < n; i++) {
                const id = this._ids[i];
                if (this._dists[id] > d0) {
                    hull[j++] = id;
                    d0 = this._dists[id];
                }
            }
            this.hull = hull.subarray(0, j);
            this.triangles = new Uint32Array(0);
            this.halfedges = new Uint32Array(0);
            return;
        }

        // swap the order of the seed points for counter-clockwise orientation
        if (orient(i0x, i0y, i1x, i1y, i2x, i2y)) {
            const i = i1;
            const x = i1x;
            const y = i1y;
            i1 = i2;
            i1x = i2x;
            i1y = i2y;
            i2 = i;
            i2x = x;
            i2y = y;
        }

        const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);
        this._cx = center.x;
        this._cy = center.y;

        for (let i = 0; i < n; i++) {
            this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);
        }

        // sort the points by distance from the seed triangle circumcenter
        quicksort(this._ids, this._dists, 0, n - 1);

        // set up the seed triangle as the starting hull
        this._hullStart = i0;
        let hullSize = 3;

        hullNext[i0] = hullPrev[i2] = i1;
        hullNext[i1] = hullPrev[i0] = i2;
        hullNext[i2] = hullPrev[i1] = i0;

        hullTri[i0] = 0;
        hullTri[i1] = 1;
        hullTri[i2] = 2;

        hullHash.fill(-1);
        hullHash[this._hashKey(i0x, i0y)] = i0;
        hullHash[this._hashKey(i1x, i1y)] = i1;
        hullHash[this._hashKey(i2x, i2y)] = i2;

        this.trianglesLen = 0;
        this._addTriangle(i0, i1, i2, -1, -1, -1);

        for (let k = 0, xp, yp; k < this._ids.length; k++) {
            const i = this._ids[k];
            const x = coords[2 * i];
            const y = coords[2 * i + 1];

            // skip near-duplicate points
            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;
            xp = x;
            yp = y;

            // skip seed triangle points
            if (i === i0 || i === i1 || i === i2) continue;

            // find a visible edge on the convex hull using edge hash
            let start = 0;
            for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {
                start = hullHash[(key + j) % this._hashSize];
                if (start !== -1 && start !== hullNext[start]) break;
            }

            start = hullPrev[start];
            let e = start, q;
            while (q = hullNext[e], !orient(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1])) {
                e = q;
                if (e === start) {
                    e = -1;
                    break;
                }
            }
            if (e === -1) continue; // likely a near-duplicate point; skip it

            // add the first triangle from the point
            let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);

            // recursively flip triangles from the point until they satisfy the Delaunay condition
            hullTri[i] = this._legalize(t + 2);
            hullTri[e] = t; // keep track of boundary triangles on the hull
            hullSize++;

            // walk forward through the hull, adding more triangles and flipping recursively
            let n = hullNext[e];
            while (q = hullNext[n], orient(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1])) {
                t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);
                hullTri[i] = this._legalize(t + 2);
                hullNext[n] = n; // mark as removed
                hullSize--;
                n = q;
            }

            // walk backward from the other side, adding more triangles and flipping
            if (e === start) {
                while (q = hullPrev[e], orient(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1])) {
                    t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);
                    this._legalize(t + 2);
                    hullTri[q] = t;
                    hullNext[e] = e; // mark as removed
                    hullSize--;
                    e = q;
                }
            }

            // update the hull indices
            this._hullStart = hullPrev[i] = e;
            hullNext[e] = hullPrev[n] = i;
            hullNext[i] = n;

            // save the two new edges in the hash table
            hullHash[this._hashKey(x, y)] = i;
            hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;
        }

        this.hull = new Uint32Array(hullSize);
        for (let i = 0, e = this._hullStart; i < hullSize; i++) {
            this.hull[i] = e;
            e = hullNext[e];
        }

        // trim typed triangle mesh arrays
        this.triangles = this._triangles.subarray(0, this.trianglesLen);
        this.halfedges = this._halfedges.subarray(0, this.trianglesLen);
    }

    _hashKey(x, y) {
        return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;
    }

    _legalize(a) {
        const {_triangles: triangles, _halfedges: halfedges, coords} = this;

        let i = 0;
        let ar = 0;

        // recursion eliminated with a fixed-size stack
        while (true) {
            const b = halfedges[a];

            /* if the pair of triangles doesn't satisfy the Delaunay condition
             * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,
             * then do the same check/flip recursively for the new pair of triangles
             *
             *           pl                    pl
             *          /||\                  /  \
             *       al/ || \bl            al/    \a
             *        /  ||  \              /      \
             *       /  a||b  \    flip    /___ar___\
             *     p0\   ||   /p1   =>   p0\---bl---/p1
             *        \  ||  /              \      /
             *       ar\ || /br             b\    /br
             *          \||/                  \  /
             *           pr                    pr
             */
            const a0 = a - a % 3;
            ar = a0 + (a + 2) % 3;

            if (b === -1) { // convex hull edge
                if (i === 0) break;
                a = EDGE_STACK[--i];
                continue;
            }

            const b0 = b - b % 3;
            const al = a0 + (a + 1) % 3;
            const bl = b0 + (b + 2) % 3;

            const p0 = triangles[ar];
            const pr = triangles[a];
            const pl = triangles[al];
            const p1 = triangles[bl];

            const illegal = inCircle(
                coords[2 * p0], coords[2 * p0 + 1],
                coords[2 * pr], coords[2 * pr + 1],
                coords[2 * pl], coords[2 * pl + 1],
                coords[2 * p1], coords[2 * p1 + 1]);

            if (illegal) {
                triangles[a] = p1;
                triangles[b] = p0;

                const hbl = halfedges[bl];

                // edge swapped on the other side of the hull (rare); fix the halfedge reference
                if (hbl === -1) {
                    let e = this._hullStart;
                    do {
                        if (this._hullTri[e] === bl) {
                            this._hullTri[e] = a;
                            break;
                        }
                        e = this._hullPrev[e];
                    } while (e !== this._hullStart);
                }
                this._link(a, hbl);
                this._link(b, halfedges[ar]);
                this._link(ar, bl);

                const br = b0 + (b + 1) % 3;

                // don't worry about hitting the cap: it can only happen on extremely degenerate input
                if (i < EDGE_STACK.length) {
                    EDGE_STACK[i++] = br;
                }
            } else {
                if (i === 0) break;
                a = EDGE_STACK[--i];
            }
        }

        return ar;
    }

    _link(a, b) {
        this._halfedges[a] = b;
        if (b !== -1) this._halfedges[b] = a;
    }

    // add a new triangle given vertex indices and adjacent half-edge ids
    _addTriangle(i0, i1, i2, a, b, c) {
        const t = this.trianglesLen;

        this._triangles[t] = i0;
        this._triangles[t + 1] = i1;
        this._triangles[t + 2] = i2;

        this._link(t, a);
        this._link(t + 1, b);
        this._link(t + 2, c);

        this.trianglesLen += 3;

        return t;
    }
}

// monotonically increases with real angle, but doesn't need expensive trigonometry
function pseudoAngle(dx, dy) {
    const p = dx / (Math.abs(dx) + Math.abs(dy));
    return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]
}

function dist(ax, ay, bx, by) {
    const dx = ax - bx;
    const dy = ay - by;
    return dx * dx + dy * dy;
}

// return 2d orientation sign if we're confident in it through J. Shewchuk's error bound check
function orientIfSure(px, py, rx, ry, qx, qy) {
    const l = (ry - py) * (qx - px);
    const r = (rx - px) * (qy - py);
    return Math.abs(l - r) >= 3.3306690738754716e-16 * Math.abs(l + r) ? l - r : 0;
}

// a more robust orientation test that's stable in a given triangle (to fix robustness issues)
function orient(rx, ry, qx, qy, px, py) {
    const sign = orientIfSure(px, py, rx, ry, qx, qy) ||
    orientIfSure(rx, ry, qx, qy, px, py) ||
    orientIfSure(qx, qy, px, py, rx, ry);
    return sign < 0;
}

function inCircle(ax, ay, bx, by, cx, cy, px, py) {
    const dx = ax - px;
    const dy = ay - py;
    const ex = bx - px;
    const ey = by - py;
    const fx = cx - px;
    const fy = cy - py;

    const ap = dx * dx + dy * dy;
    const bp = ex * ex + ey * ey;
    const cp = fx * fx + fy * fy;

    return dx * (ey * cp - bp * fy) -
           dy * (ex * cp - bp * fx) +
           ap * (ex * fy - ey * fx) < 0;
}

function circumradius(ax, ay, bx, by, cx, cy) {
    const dx = bx - ax;
    const dy = by - ay;
    const ex = cx - ax;
    const ey = cy - ay;

    const bl = dx * dx + dy * dy;
    const cl = ex * ex + ey * ey;
    const d = 0.5 / (dx * ey - dy * ex);

    const x = (ey * bl - dy * cl) * d;
    const y = (dx * cl - ex * bl) * d;

    return x * x + y * y;
}

function circumcenter(ax, ay, bx, by, cx, cy) {
    const dx = bx - ax;
    const dy = by - ay;
    const ex = cx - ax;
    const ey = cy - ay;

    const bl = dx * dx + dy * dy;
    const cl = ex * ex + ey * ey;
    const d = 0.5 / (dx * ey - dy * ex);

    const x = ax + (ey * bl - dy * cl) * d;
    const y = ay + (dx * cl - ex * bl) * d;

    return {x, y};
}

function quicksort(ids, dists, left, right) {
    if (right - left <= 20) {
        for (let i = left + 1; i <= right; i++) {
            const temp = ids[i];
            const tempDist = dists[temp];
            let j = i - 1;
            while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];
            ids[j + 1] = temp;
        }
    } else {
        const median = (left + right) >> 1;
        let i = left + 1;
        let j = right;
        swap(ids, median, i);
        if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);
        if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);
        if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);

        const temp = ids[i];
        const tempDist = dists[temp];
        while (true) {
            do i++; while (dists[ids[i]] < tempDist);
            do j--; while (dists[ids[j]] > tempDist);
            if (j < i) break;
            swap(ids, i, j);
        }
        ids[left + 1] = ids[j];
        ids[j] = temp;

        if (right - i + 1 >= j - left) {
            quicksort(ids, dists, i, right);
            quicksort(ids, dists, left, j - 1);
        } else {
            quicksort(ids, dists, left, j - 1);
            quicksort(ids, dists, i, right);
        }
    }
}

function swap(arr, i, j) {
    const tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
}

function defaultGetX(p) {
    return p[0];
}
function defaultGetY(p) {
    return p[1];
}

const epsilon$1 = 1e-6;

class Path {
  constructor() {
    this._x0 = this._y0 = // start of current subpath
    this._x1 = this._y1 = null; // end of current subpath
    this._ = "";
  }
  moveTo(x, y) {
    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;
  }
  closePath() {
    if (this._x1 !== null) {
      this._x1 = this._x0, this._y1 = this._y0;
      this._ += "Z";
    }
  }
  lineTo(x, y) {
    this._ += `L${this._x1 = +x},${this._y1 = +y}`;
  }
  arc(x, y, r) {
    x = +x, y = +y, r = +r;
    const x0 = x + r;
    const y0 = y;
    if (r < 0) throw new Error("negative radius");
    if (this._x1 === null) this._ += `M${x0},${y0}`;
    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) this._ += "L" + x0 + "," + y0;
    if (!r) return;
    this._ += `A${r},${r},0,1,1,${x - r},${y}A${r},${r},0,1,1,${this._x1 = x0},${this._y1 = y0}`;
  }
  rect(x, y, w, h) {
    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${+w}v${+h}h${-w}Z`;
  }
  value() {
    return this._ || null;
  }
}

class Polygon {
  constructor() {
    this._ = [];
  }
  moveTo(x, y) {
    this._.push([x, y]);
  }
  closePath() {
    this._.push(this._[0].slice());
  }
  lineTo(x, y) {
    this._.push([x, y]);
  }
  value() {
    return this._.length ? this._ : null;
  }
}

class Voronoi {
  constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {
    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error("invalid bounds");
    this.delaunay = delaunay;
    this._circumcenters = new Float64Array(delaunay.points.length * 2);
    this.vectors = new Float64Array(delaunay.points.length * 2);
    this.xmax = xmax, this.xmin = xmin;
    this.ymax = ymax, this.ymin = ymin;
    this._init();
  }
  update() {
    this.delaunay.update();
    this._init();
    return this;
  }
  _init() {
    const {delaunay: {points, hull, triangles}, vectors} = this;

    // Compute circumcenters.
    const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);
    for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {
      const t1 = triangles[i] * 2;
      const t2 = triangles[i + 1] * 2;
      const t3 = triangles[i + 2] * 2;
      const x1 = points[t1];
      const y1 = points[t1 + 1];
      const x2 = points[t2];
      const y2 = points[t2 + 1];
      const x3 = points[t3];
      const y3 = points[t3 + 1];

      const dx = x2 - x1;
      const dy = y2 - y1;
      const ex = x3 - x1;
      const ey = y3 - y1;
      const bl = dx * dx + dy * dy;
      const cl = ex * ex + ey * ey;
      const ab = (dx * ey - dy * ex) * 2;

      if (!ab) {
        // degenerate case (collinear diagram)
        x = (x1 + x3) / 2 - 1e8 * ey;
        y = (y1 + y3) / 2 + 1e8 * ex;
      }
      else if (Math.abs(ab) < 1e-8) {
        // almost equal points (degenerate triangle)
        x = (x1 + x3) / 2;
        y = (y1 + y3) / 2;
      } else {
        const d = 1 / ab;
        x = x1 + (ey * bl - dy * cl) * d;
        y = y1 + (dx * cl - ex * bl) * d;
      }
      circumcenters[j] = x;
      circumcenters[j + 1] = y;
    }

    // Compute exterior cell rays.
    let h = hull[hull.length - 1];
    let p0, p1 = h * 4;
    let x0, x1 = points[2 * h];
    let y0, y1 = points[2 * h + 1];
    vectors.fill(0);
    for (let i = 0; i < hull.length; ++i) {
      h = hull[i];
      p0 = p1, x0 = x1, y0 = y1;
      p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];
      vectors[p0 + 2] = vectors[p1] = y0 - y1;
      vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;
    }
  }
  render(context) {
    const buffer = context == null ? context = new Path : undefined;
    const {delaunay: {halfedges, inedges, hull}, circumcenters, vectors} = this;
    if (hull.length <= 1) return null;
    for (let i = 0, n = halfedges.length; i < n; ++i) {
      const j = halfedges[i];
      if (j < i) continue;
      const ti = Math.floor(i / 3) * 2;
      const tj = Math.floor(j / 3) * 2;
      const xi = circumcenters[ti];
      const yi = circumcenters[ti + 1];
      const xj = circumcenters[tj];
      const yj = circumcenters[tj + 1];
      this._renderSegment(xi, yi, xj, yj, context);
    }
    let h0, h1 = hull[hull.length - 1];
    for (let i = 0; i < hull.length; ++i) {
      h0 = h1, h1 = hull[i];
      const t = Math.floor(inedges[h1] / 3) * 2;
      const x = circumcenters[t];
      const y = circumcenters[t + 1];
      const v = h0 * 4;
      const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);
      if (p) this._renderSegment(x, y, p[0], p[1], context);
    }
    return buffer && buffer.value();
  }
  renderBounds(context) {
    const buffer = context == null ? context = new Path : undefined;
    context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);
    return buffer && buffer.value();
  }
  renderCell(i, context) {
    const buffer = context == null ? context = new Path : undefined;
    const points = this._clip(i);
    if (points === null || !points.length) return;
    context.moveTo(points[0], points[1]);
    let n = points.length;
    while (points[0] === points[n-2] && points[1] === points[n-1] && n > 1) n -= 2;
    for (let i = 2; i < n; i += 2) {
      if (points[i] !== points[i-2] || points[i+1] !== points[i-1])
        context.lineTo(points[i], points[i + 1]);
    }
    context.closePath();
    return buffer && buffer.value();
  }
  *cellPolygons() {
    const {delaunay: {points}} = this;
    for (let i = 0, n = points.length / 2; i < n; ++i) {
      const cell = this.cellPolygon(i);
      if (cell) cell.index = i, yield cell;
    }
  }
  cellPolygon(i) {
    const polygon = new Polygon;
    this.renderCell(i, polygon);
    return polygon.value();
  }
  _renderSegment(x0, y0, x1, y1, context) {
    let S;
    const c0 = this._regioncode(x0, y0);
    const c1 = this._regioncode(x1, y1);
    if (c0 === 0 && c1 === 0) {
      context.moveTo(x0, y0);
      context.lineTo(x1, y1);
    } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {
      context.moveTo(S[0], S[1]);
      context.lineTo(S[2], S[3]);
    }
  }
  contains(i, x, y) {
    if ((x = +x, x !== x) || (y = +y, y !== y)) return false;
    return this.delaunay._step(i, x, y) === i;
  }
  *neighbors(i) {
    const ci = this._clip(i);
    if (ci) for (const j of this.delaunay.neighbors(i)) {
      const cj = this._clip(j);
      // find the common edge
      if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {
        for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {
          if (ci[ai] == cj[aj]
          && ci[ai + 1] == cj[aj + 1]
          && ci[(ai + 2) % li] == cj[(aj + lj - 2) % lj]
          && ci[(ai + 3) % li] == cj[(aj + lj - 1) % lj]
          ) {
            yield j;
            break loop;
          }
        }
      }
    }
  }
  _cell(i) {
    const {circumcenters, delaunay: {inedges, halfedges, triangles}} = this;
    const e0 = inedges[i];
    if (e0 === -1) return null; // coincident point
    const points = [];
    let e = e0;
    do {
      const t = Math.floor(e / 3);
      points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);
      e = e % 3 === 2 ? e - 2 : e + 1;
      if (triangles[e] !== i) break; // bad triangulation
      e = halfedges[e];
    } while (e !== e0 && e !== -1);
    return points;
  }
  _clip(i) {
    // degenerate case (1 valid point: return the box)
    if (i === 0 && this.delaunay.hull.length === 1) {
      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];
    }
    const points = this._cell(i);
    if (points === null) return null;
    const {vectors: V} = this;
    const v = i * 4;
    return V[v] || V[v + 1]
        ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3])
        : this._clipFinite(i, points);
  }
  _clipFinite(i, points) {
    const n = points.length;
    let P = null;
    let x0, y0, x1 = points[n - 2], y1 = points[n - 1];
    let c0, c1 = this._regioncode(x1, y1);
    let e0, e1;
    for (let j = 0; j < n; j += 2) {
      x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];
      c0 = c1, c1 = this._regioncode(x1, y1);
      if (c0 === 0 && c1 === 0) {
        e0 = e1, e1 = 0;
        if (P) P.push(x1, y1);
        else P = [x1, y1];
      } else {
        let S, sx0, sy0, sx1, sy1;
        if (c0 === 0) {
          if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;
          [sx0, sy0, sx1, sy1] = S;
        } else {
          if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;
          [sx1, sy1, sx0, sy0] = S;
          e0 = e1, e1 = this._edgecode(sx0, sy0);
          if (e0 && e1) this._edge(i, e0, e1, P, P.length);
          if (P) P.push(sx0, sy0);
          else P = [sx0, sy0];
        }
        e0 = e1, e1 = this._edgecode(sx1, sy1);
        if (e0 && e1) this._edge(i, e0, e1, P, P.length);
        if (P) P.push(sx1, sy1);
        else P = [sx1, sy1];
      }
    }
    if (P) {
      e0 = e1, e1 = this._edgecode(P[0], P[1]);
      if (e0 && e1) this._edge(i, e0, e1, P, P.length);
    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {
      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];
    }
    return P;
  }
  _clipSegment(x0, y0, x1, y1, c0, c1) {
    while (true) {
      if (c0 === 0 && c1 === 0) return [x0, y0, x1, y1];
      if (c0 & c1) return null;
      let x, y, c = c0 || c1;
      if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;
      else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;
      else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;
      else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;
      if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);
      else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);
    }
  }
  _clipInfinite(i, points, vx0, vy0, vxn, vyn) {
    let P = Array.from(points), p;
    if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);
    if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);
    if (P = this._clipFinite(i, P)) {
      for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {
        c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);
        if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;
      }
    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {
      P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];
    }
    return P;
  }
  _edge(i, e0, e1, P, j) {
    while (e0 !== e1) {
      let x, y;
      switch (e0) {
        case 0b0101: e0 = 0b0100; continue; // top-left
        case 0b0100: e0 = 0b0110, x = this.xmax, y = this.ymin; break; // top
        case 0b0110: e0 = 0b0010; continue; // top-right
        case 0b0010: e0 = 0b1010, x = this.xmax, y = this.ymax; break; // right
        case 0b1010: e0 = 0b1000; continue; // bottom-right
        case 0b1000: e0 = 0b1001, x = this.xmin, y = this.ymax; break; // bottom
        case 0b1001: e0 = 0b0001; continue; // bottom-left
        case 0b0001: e0 = 0b0101, x = this.xmin, y = this.ymin; break; // left
      }
      if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {
        P.splice(j, 0, x, y), j += 2;
      }
    }
    if (P.length > 4) {
      for (let i = 0; i < P.length; i+= 2) {
        const j = (i + 2) % P.length, k = (i + 4) % P.length;
        if (P[i] === P[j] && P[j] === P[k]
        || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1])
          P.splice(j, 2), i -= 2;
      }
    }
    return j;
  }
  _project(x0, y0, vx, vy) {
    let t = Infinity, c, x, y;
    if (vy < 0) { // top
      if (y0 <= this.ymin) return null;
      if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;
    } else if (vy > 0) { // bottom
      if (y0 >= this.ymax) return null;
      if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;
    }
    if (vx > 0) { // right
      if (x0 >= this.xmax) return null;
      if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;
    } else if (vx < 0) { // left
      if (x0 <= this.xmin) return null;
      if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;
    }
    return [x, y];
  }
  _edgecode(x, y) {
    return (x === this.xmin ? 0b0001
        : x === this.xmax ? 0b0010 : 0b0000)
        | (y === this.ymin ? 0b0100
        : y === this.ymax ? 0b1000 : 0b0000);
  }
  _regioncode(x, y) {
    return (x < this.xmin ? 0b0001
        : x > this.xmax ? 0b0010 : 0b0000)
        | (y < this.ymin ? 0b0100
        : y > this.ymax ? 0b1000 : 0b0000);
  }
}

const tau$1 = 2 * Math.PI, pow = Math.pow;

function pointX(p) {
  return p[0];
}

function pointY(p) {
  return p[1];
}

// A triangulation is collinear if all its triangles have a non-null area
function collinear(d) {
  const {triangles, coords} = d;
  for (let i = 0; i < triangles.length; i += 3) {
    const a = 2 * triangles[i],
          b = 2 * triangles[i + 1],
          c = 2 * triangles[i + 2],
          cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1])
                - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);
    if (cross > 1e-10) return false;
  }
  return true;
}

function jitter(x, y, r) {
  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];
}

class Delaunay {
  static from(points, fx = pointX, fy = pointY, that) {
    return new Delaunay("length" in points
        ? flatArray(points, fx, fy, that)
        : Float64Array.from(flatIterable(points, fx, fy, that)));
  }
  constructor(points) {
    this._delaunator = new Delaunator(points);
    this.inedges = new Int32Array(points.length / 2);
    this._hullIndex = new Int32Array(points.length / 2);
    this.points = this._delaunator.coords;
    this._init();
  }
  update() {
    this._delaunator.update();
    this._init();
    return this;
  }
  _init() {
    const d = this._delaunator, points = this.points;

    // check for collinear
    if (d.hull && d.hull.length > 2 && collinear(d)) {
      this.collinear = Int32Array.from({length: points.length/2}, (_,i) => i)
        .sort((i, j) => points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1]); // for exact neighbors
      const e = this.collinear[0], f = this.collinear[this.collinear.length - 1],
        bounds = [ points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1] ],
        r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);
      for (let i = 0, n = points.length / 2; i < n; ++i) {
        const p = jitter(points[2 * i], points[2 * i + 1], r);
        points[2 * i] = p[0];
        points[2 * i + 1] = p[1];
      }
      this._delaunator = new Delaunator(points);
    } else {
      delete this.collinear;
    }

    const halfedges = this.halfedges = this._delaunator.halfedges;
    const hull = this.hull = this._delaunator.hull;
    const triangles = this.triangles = this._delaunator.triangles;
    const inedges = this.inedges.fill(-1);
    const hullIndex = this._hullIndex.fill(-1);

    // Compute an index from each point to an (arbitrary) incoming halfedge
    // Used to give the first neighbor of each point; for this reason,
    // on the hull we give priority to exterior halfedges
    for (let e = 0, n = halfedges.length; e < n; ++e) {
      const p = triangles[e % 3 === 2 ? e - 2 : e + 1];
      if (halfedges[e] === -1 || inedges[p] === -1) inedges[p] = e;
    }
    for (let i = 0, n = hull.length; i < n; ++i) {
      hullIndex[hull[i]] = i;
    }

    // degenerate case: 1 or 2 (distinct) points
    if (hull.length <= 2 && hull.length > 0) {
      this.triangles = new Int32Array(3).fill(-1);
      this.halfedges = new Int32Array(3).fill(-1);
      this.triangles[0] = hull[0];
      this.triangles[1] = hull[1];
      this.triangles[2] = hull[1];
      inedges[hull[0]] = 1;
      if (hull.length === 2) inedges[hull[1]] = 0;
    }
  }
  voronoi(bounds) {
    return new Voronoi(this, bounds);
  }
  *neighbors(i) {
    const {inedges, hull, _hullIndex, halfedges, triangles, collinear} = this;

    // degenerate case with several collinear points
    if (collinear) {
      const l = collinear.indexOf(i);
      if (l > 0) yield collinear[l - 1];
      if (l < collinear.length - 1) yield collinear[l + 1];
      return;
    }

    const e0 = inedges[i];
    if (e0 === -1) return; // coincident point
    let e = e0, p0 = -1;
    do {
      yield p0 = triangles[e];
      e = e % 3 === 2 ? e - 2 : e + 1;
      if (triangles[e] !== i) return; // bad triangulation
      e = halfedges[e];
      if (e === -1) {
        const p = hull[(_hullIndex[i] + 1) % hull.length];
        if (p !== p0) yield p;
        return;
      }
    } while (e !== e0);
  }
  find(x, y, i = 0) {
    if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;
    const i0 = i;
    let c;
    while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;
    return c;
  }
  _step(i, x, y) {
    const {inedges, hull, _hullIndex, halfedges, triangles, points} = this;
    if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);
    let c = i;
    let dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);
    const e0 = inedges[i];
    let e = e0;
    do {
      let t = triangles[e];
      const dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);
      if (dt < dc) dc = dt, c = t;
      e = e % 3 === 2 ? e - 2 : e + 1;
      if (triangles[e] !== i) break; // bad triangulation
      e = halfedges[e];
      if (e === -1) {
        e = hull[(_hullIndex[i] + 1) % hull.length];
        if (e !== t) {
          if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;
        }
        break;
      }
    } while (e !== e0);
    return c;
  }
  render(context) {
    const buffer = context == null ? context = new Path : undefined;
    const {points, halfedges, triangles} = this;
    for (let i = 0, n = halfedges.length; i < n; ++i) {
      const j = halfedges[i];
      if (j < i) continue;
      const ti = triangles[i] * 2;
      const tj = triangles[j] * 2;
      context.moveTo(points[ti], points[ti + 1]);
      context.lineTo(points[tj], points[tj + 1]);
    }
    this.renderHull(context);
    return buffer && buffer.value();
  }
  renderPoints(context, r = 2) {
    const buffer = context == null ? context = new Path : undefined;
    const {points} = this;
    for (let i = 0, n = points.length; i < n; i += 2) {
      const x = points[i], y = points[i + 1];
      context.moveTo(x + r, y);
      context.arc(x, y, r, 0, tau$1);
    }
    return buffer && buffer.value();
  }
  renderHull(context) {
    const buffer = context == null ? context = new Path : undefined;
    const {hull, points} = this;
    const h = hull[0] * 2, n = hull.length;
    context.moveTo(points[h], points[h + 1]);
    for (let i = 1; i < n; ++i) {
      const h = 2 * hull[i];
      context.lineTo(points[h], points[h + 1]);
    }
    context.closePath();
    return buffer && buffer.value();
  }
  hullPolygon() {
    const polygon = new Polygon;
    this.renderHull(polygon);
    return polygon.value();
  }
  renderTriangle(i, context) {
    const buffer = context == null ? context = new Path : undefined;
    const {points, triangles} = this;
    const t0 = triangles[i *= 3] * 2;
    const t1 = triangles[i + 1] * 2;
    const t2 = triangles[i + 2] * 2;
    context.moveTo(points[t0], points[t0 + 1]);
    context.lineTo(points[t1], points[t1 + 1]);
    context.lineTo(points[t2], points[t2 + 1]);
    context.closePath();
    return buffer && buffer.value();
  }
  *trianglePolygons() {
    const {triangles} = this;
    for (let i = 0, n = triangles.length / 3; i < n; ++i) {
      yield this.trianglePolygon(i);
    }
  }
  trianglePolygon(i) {
    const polygon = new Polygon;
    this.renderTriangle(i, polygon);
    return polygon.value();
  }
}

function flatArray(points, fx, fy, that) {
  const n = points.length;
  const array = new Float64Array(n * 2);
  for (let i = 0; i < n; ++i) {
    const p = points[i];
    array[i * 2] = fx.call(that, p, i, points);
    array[i * 2 + 1] = fy.call(that, p, i, points);
  }
  return array;
}

function* flatIterable(points, fx, fy, that) {
  let i = 0;
  for (const p of points) {
    yield fx.call(that, p, i, points);
    yield fy.call(that, p, i, points);
    ++i;
  }
}

var getAccessor = function getAccessor(directive) {
  return typeof directive === 'function' ? directive : function (datum) {
    return datum[directive];
  };
};

var computeMeshPoints = function computeMeshPoints(_ref) {
  var points = _ref.points,
      _ref$x = _ref.x,
      x = _ref$x === void 0 ? 'x' : _ref$x,
      _ref$y = _ref.y,
      y = _ref$y === void 0 ? 'y' : _ref$y;
  var getX = getAccessor(x);
  var getY = getAccessor(y);
  return points.map(function (point) {
    return [getX(point), getY(point)];
  });
};
var computeMesh = function computeMesh(_ref2) {
  var points = _ref2.points,
      width = _ref2.width,
      height = _ref2.height,
      debug = _ref2.debug;
  var delaunay = Delaunay.from(points);
  var voronoi = debug ? delaunay.voronoi([0, 0, width, height]) : undefined;
  return {
    delaunay: delaunay,
    voronoi: voronoi
  };
};

var useVoronoiMesh = function useVoronoiMesh(_ref) {
  var points = _ref.points,
      x = _ref.x,
      y = _ref.y,
      width = _ref.width,
      height = _ref.height,
      debug = _ref.debug;
  var points2d = React.useMemo(function () {
    return computeMeshPoints({
      points: points,
      x: x,
      y: y
    });
  }, [points, x, y]);
  return React.useMemo(function () {
    return computeMesh({
      points: points2d,
      width: width,
      height: height,
      debug: debug
    });
  }, [points2d, width, height, debug]);
};

function _arrayWithHoles$2(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit$2(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;
  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }
  return _arr;
}

function _arrayLikeToArray$2(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}

function _unsupportedIterableToArray$2(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray$2(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$2(o, minLen);
}

function _nonIterableRest$2() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _slicedToArray$2(arr, i) {
  return _arrayWithHoles$2(arr) || _iterableToArrayLimit$2(arr, i) || _unsupportedIterableToArray$2(arr, i) || _nonIterableRest$2();
}

var Mesh$2 = function Mesh(_ref) {
  var nodes = _ref.nodes,
      width = _ref.width,
      height = _ref.height,
      x = _ref.x,
      y = _ref.y,
      onMouseEnter = _ref.onMouseEnter,
      onMouseMove = _ref.onMouseMove,
      onMouseLeave = _ref.onMouseLeave,
      onClick = _ref.onClick,
      debug = _ref.debug;
  var elementRef = React.useRef(null);

  var _useState = React.useState(null),
      _useState2 = _slicedToArray$2(_useState, 2),
      currentIndex = _useState2[0],
      setCurrentIndex = _useState2[1];

  var _useVoronoiMesh = useVoronoiMesh({
    points: nodes,
    x: x,
    y: y,
    width: width,
    height: height,
    debug: debug
  }),
      delaunay = _useVoronoiMesh.delaunay,
      voronoi = _useVoronoiMesh.voronoi;

  var voronoiPath = React.useMemo(function () {
    if (debug && voronoi) {
      return voronoi.render();
    }

    return undefined;
  }, [debug, voronoi]);
  var getIndexAndNodeFromEvent = React.useCallback(function (event) {
    if (!elementRef.current) {
      return [null, null];
    }

    var _getRelativeCursor = getRelativeCursor(elementRef.current, event),
        _getRelativeCursor2 = _slicedToArray$2(_getRelativeCursor, 2),
        x = _getRelativeCursor2[0],
        y = _getRelativeCursor2[1];

    var index = delaunay.find(x, y);
    return [index, index !== undefined ? nodes[index] : null];
  }, [elementRef, delaunay]);
  var handleMouseEnter = React.useCallback(function (event) {
    var _getIndexAndNodeFromE = getIndexAndNodeFromEvent(event),
        _getIndexAndNodeFromE2 = _slicedToArray$2(_getIndexAndNodeFromE, 2),
        index = _getIndexAndNodeFromE2[0],
        node = _getIndexAndNodeFromE2[1];

    setCurrentIndex(index);

    if (node) {
      onMouseEnter === null || onMouseEnter === void 0 ? void 0 : onMouseEnter(node, event);
    }
  }, [getIndexAndNodeFromEvent, setCurrentIndex, onMouseEnter]);
  var handleMouseMove = React.useCallback(function (event) {
    var _getIndexAndNodeFromE3 = getIndexAndNodeFromEvent(event),
        _getIndexAndNodeFromE4 = _slicedToArray$2(_getIndexAndNodeFromE3, 2),
        index = _getIndexAndNodeFromE4[0],
        node = _getIndexAndNodeFromE4[1];

    setCurrentIndex(index);

    if (node) {
      onMouseMove === null || onMouseMove === void 0 ? void 0 : onMouseMove(node, event);
    }
  }, [getIndexAndNodeFromEvent, setCurrentIndex, onMouseMove]);
  var handleMouseLeave = React.useCallback(function (event) {
    setCurrentIndex(null);

    if (onMouseLeave) {
      var previousNode = undefined;

      if (currentIndex !== null) {
        previousNode = nodes[currentIndex];
      }

      previousNode && onMouseLeave(previousNode, event);
    }
  }, [setCurrentIndex, currentIndex, onMouseLeave, nodes]);
  var handleClick = React.useCallback(function (event) {
    var _getIndexAndNodeFromE5 = getIndexAndNodeFromEvent(event),
        _getIndexAndNodeFromE6 = _slicedToArray$2(_getIndexAndNodeFromE5, 2),
        index = _getIndexAndNodeFromE6[0],
        node = _getIndexAndNodeFromE6[1];

    setCurrentIndex(index);

    if (node) {
      onClick === null || onClick === void 0 ? void 0 : onClick(node, event);
    }
  }, [getIndexAndNodeFromEvent, setCurrentIndex, onClick]);
  return jsxRuntime.jsxs("g", {
    ref: elementRef,
    children: [debug && voronoi && jsxRuntime.jsxs(jsxRuntime.Fragment, {
      children: [jsxRuntime.jsx("path", {
        d: voronoiPath,
        stroke: "red",
        strokeWidth: 1,
        opacity: 0.75
      }), currentIndex !== null && jsxRuntime.jsx("path", {
        fill: "pink",
        opacity: 0.35,
        d: voronoi.renderCell(currentIndex)
      })]
    }), jsxRuntime.jsx("rect", {
      width: width,
      height: height,
      fill: "red",
      opacity: 0,
      style: {
        cursor: 'auto'
      },
      onMouseEnter: handleMouseEnter,
      onMouseMove: handleMouseMove,
      onMouseLeave: handleMouseLeave,
      onClick: handleClick
    })]
  });
};

var renderVoronoiToCanvas = function renderVoronoiToCanvas(ctx, voronoi) {
  ctx.save();
  ctx.globalAlpha = 0.75;
  ctx.beginPath();
  voronoi.render(ctx);
  ctx.strokeStyle = 'red';
  ctx.lineWidth = 1;
  ctx.stroke();
  ctx.restore();
};
var renderVoronoiCellToCanvas = function renderVoronoiCellToCanvas(ctx, voronoi, index) {
  ctx.save();
  ctx.globalAlpha = 0.35;
  ctx.beginPath();
  voronoi.renderCell(index, ctx);
  ctx.fillStyle = 'red';
  ctx.fill();
  ctx.restore();
};

function _defineProperty$1(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

function ownKeys$1(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2$1(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$1(Object(source), true).forEach(function (key) {
        _defineProperty$1(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$1(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}

function _arrayWithHoles$1(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit$1(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;
  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }
  return _arr;
}

function _arrayLikeToArray$1(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}

function _unsupportedIterableToArray$1(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray$1(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$1(o, minLen);
}

function _nonIterableRest$1() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _slicedToArray$1(arr, i) {
  return _arrayWithHoles$1(arr) || _iterableToArrayLimit$1(arr, i) || _unsupportedIterableToArray$1(arr, i) || _nonIterableRest$1();
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray$1(arr);
}

function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray$1(arr) || _nonIterableSpread();
}

var LinePointTooltip = function LinePointTooltip(_ref) {
  var point = _ref.point;
  return jsxRuntime.jsx(BasicTooltip, {
    id: jsxRuntime.jsxs("span", {
      children: ["x: ", jsxRuntime.jsx("strong", {
        children: point.data.xFormatted
      }), ", y:", ' ', jsxRuntime.jsx("strong", {
        children: point.data.yFormatted
      })]
    }),
    enableChip: true,
    color: point.serieColor
  });
};
var PointTooltip = React.memo(LinePointTooltip);

var SliceTooltip = function SliceTooltip(_ref) {
  var slice = _ref.slice,
      axis = _ref.axis;
  var theme = useTheme();
  var otherAxis = axis === 'x' ? 'y' : 'x';
  return jsxRuntime.jsx(TableTooltip, {
    rows: slice.points.map(function (point) {
      return [jsxRuntime.jsx(Chip, {
        color: point.serieColor,
        style: theme.tooltip.chip
      }, "chip"), point.serieId, jsxRuntime.jsx("span", {
        style: theme.tooltip.tableCellValue,
        children: point.data["".concat(otherAxis, "Formatted")]
      }, "value")];
    })
  });
};
var SliceTooltip$1 = React.memo(SliceTooltip);

var commonPropTypes$1 = {
  data: propTypes.arrayOf(propTypes.shape({
    id: propTypes.oneOfType([propTypes.string, propTypes.number]).isRequired,
    data: propTypes.arrayOf(propTypes.shape({
      x: propTypes.oneOfType([propTypes.number, propTypes.string, propTypes.instanceOf(Date)]),
      y: propTypes.oneOfType([propTypes.number, propTypes.string, propTypes.instanceOf(Date)])
    })).isRequired
  })).isRequired,
  xScale: propTypes.object.isRequired,
  xFormat: propTypes.oneOfType([propTypes.func, propTypes.string]),
  yScale: propTypes.object.isRequired,
  yFormat: propTypes.oneOfType([propTypes.func, propTypes.string]),
  layers: propTypes.arrayOf(propTypes.oneOfType([propTypes.oneOf(['grid', 'markers', 'axes', 'areas', 'crosshair', 'lines', 'slices', 'points', 'mesh', 'legends']), propTypes.func])).isRequired,
  curve: lineCurvePropType.isRequired,
  axisTop: axisPropType,
  axisRight: axisPropType,
  axisBottom: axisPropType,
  axisLeft: axisPropType,
  enableGridX: propTypes.bool.isRequired,
  enableGridY: propTypes.bool.isRequired,
  gridXValues: propTypes.oneOfType([propTypes.number, propTypes.arrayOf(propTypes.oneOfType([propTypes.number, propTypes.string, propTypes.instanceOf(Date)]))]),
  gridYValues: propTypes.oneOfType([propTypes.number, propTypes.arrayOf(propTypes.oneOfType([propTypes.number, propTypes.string, propTypes.instanceOf(Date)]))]),
  enablePoints: propTypes.bool.isRequired,
  pointSymbol: propTypes.func,
  pointSize: propTypes.number.isRequired,
  pointColor: propTypes.any.isRequired,
  pointBorderWidth: propTypes.number.isRequired,
  pointBorderColor: propTypes.any.isRequired,
  enablePointLabel: propTypes.bool.isRequired,
  pointLabel: propTypes.oneOfType([propTypes.string, propTypes.func]).isRequired,
  markers: propTypes.arrayOf(propTypes.shape({
    axis: propTypes.oneOf(['x', 'y']).isRequired,
    value: propTypes.oneOfType([propTypes.number, propTypes.string, propTypes.instanceOf(Date)]).isRequired,
    style: propTypes.object
  })),
  colors: ordinalColorsPropType.isRequired,
  enableArea: propTypes.bool.isRequired,
  areaOpacity: propTypes.number.isRequired,
  areaBlendMode: blendModePropType.isRequired,
  areaBaselineValue: propTypes.oneOfType([propTypes.number, propTypes.string, propTypes.instanceOf(Date)]).isRequired,
  lineWidth: propTypes.number.isRequired,
  legends: propTypes.arrayOf(propTypes.shape(LegendPropShape)).isRequired,
  isInteractive: propTypes.bool.isRequired,
  debugMesh: propTypes.bool.isRequired,
  tooltip: propTypes.oneOfType([propTypes.func, propTypes.object]).isRequired,
  enableSlices: propTypes.oneOf(['x', 'y', false]).isRequired,
  debugSlices: propTypes.bool.isRequired,
  sliceTooltip: propTypes.oneOfType([propTypes.func, propTypes.object]).isRequired,
  enableCrosshair: propTypes.bool.isRequired,
  crosshairType: propTypes.string.isRequired
};
_objectSpread2$1(_objectSpread2$1(_objectSpread2$1({}, commonPropTypes$1), {}, {
  enablePointLabel: propTypes.bool.isRequired,
  role: propTypes.string.isRequired,
  useMesh: propTypes.bool.isRequired
}, motionPropTypes), defsPropTypes);
_objectSpread2$1({
  pixelRatio: propTypes.number.isRequired
}, commonPropTypes$1);
var commonDefaultProps$1 = {
  curve: 'linear',
  xScale: {
    type: 'point'
  },
  yScale: {
    type: 'linear',
    min: 0,
    max: 'auto'
  },
  layers: ['grid', 'markers', 'axes', 'areas', 'crosshair', 'lines', 'points', 'slices', 'mesh', 'legends'],
  axisBottom: {},
  axisLeft: {},
  enableGridX: true,
  enableGridY: true,
  enablePoints: true,
  pointSize: 6,
  pointColor: {
    from: 'color'
  },
  pointBorderWidth: 0,
  pointBorderColor: {
    theme: 'background'
  },
  enablePointLabel: false,
  pointLabel: 'yFormatted',
  colors: {
    scheme: 'nivo'
  },
  enableArea: false,
  areaBaselineValue: 0,
  areaOpacity: 0.2,
  areaBlendMode: 'normal',
  lineWidth: 2,
  legends: [],
  isInteractive: true,
  tooltip: PointTooltip,
  enableSlices: false,
  debugSlices: false,
  sliceTooltip: SliceTooltip$1,
  debugMesh: false,
  enableCrosshair: true,
  crosshairType: 'bottom-left'
};
var LineDefaultProps = _objectSpread2$1(_objectSpread2$1({}, commonDefaultProps$1), {}, {
  enablePointLabel: false,
  useMesh: false,
  animate: true,
  motionConfig: 'gentle',
  defs: [],
  fill: [],
  role: 'img'
});
var LineCanvasDefaultProps = _objectSpread2$1(_objectSpread2$1({}, commonDefaultProps$1), {}, {
  pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1
});

var useLineGenerator = function useLineGenerator(_ref) {
  var curve = _ref.curve;
  return React.useMemo(function () {
    return line().defined(function (d) {
      return d.x !== null && d.y !== null;
    }).x(function (d) {
      return d.x;
    }).y(function (d) {
      return d.y;
    }).curve(curveFromProp(curve));
  }, [curve]);
};
var useAreaGenerator = function useAreaGenerator(_ref2) {
  var curve = _ref2.curve,
      yScale = _ref2.yScale,
      areaBaselineValue = _ref2.areaBaselineValue;
  return React.useMemo(function () {
    return area().defined(function (d) {
      return d.x !== null && d.y !== null;
    }).x(function (d) {
      return d.x;
    }).y1(function (d) {
      return d.y;
    }).curve(curveFromProp(curve)).y0(yScale(areaBaselineValue));
  }, [curve, yScale, areaBaselineValue]);
};
var usePoints = function usePoints(_ref3) {
  var series = _ref3.series,
      getPointColor = _ref3.getPointColor,
      getPointBorderColor = _ref3.getPointBorderColor,
      formatX = _ref3.formatX,
      formatY = _ref3.formatY;
  return React.useMemo(function () {
    return series.reduce(function (acc, serie) {
      return [].concat(_toConsumableArray(acc), _toConsumableArray(serie.data.filter(function (datum) {
        return datum.position.x !== null && datum.position.y !== null;
      }).map(function (datum, i) {
        var point = {
          id: "".concat(serie.id, ".").concat(i),
          index: acc.length + i,
          serieId: serie.id,
          serieColor: serie.color,
          x: datum.position.x,
          y: datum.position.y
        };
        point.color = getPointColor(serie);
        point.borderColor = getPointBorderColor(point);
        point.data = _objectSpread2$1(_objectSpread2$1({}, datum.data), {}, {
          xFormatted: formatX(datum.data.x),
          yFormatted: formatY(datum.data.y)
        });
        return point;
      })));
    }, []);
  }, [series, getPointColor, getPointBorderColor, formatX, formatY]);
};
var useSlices = function useSlices(_ref4) {
  var enableSlices = _ref4.enableSlices,
      points = _ref4.points,
      width = _ref4.width,
      height = _ref4.height;
  return React.useMemo(function () {
    if (enableSlices === false) return [];
    if (enableSlices === 'x') {
      var map = new Map();
      points.forEach(function (point) {
        if (point.data.x === null || point.data.y === null) return;
        if (!map.has(point.x)) map.set(point.x, [point]);else map.get(point.x).push(point);
      });
      return Array.from(map.entries()).sort(function (a, b) {
        return a[0] - b[0];
      }).map(function (_ref5, i, slices) {
        var _ref6 = _slicedToArray$1(_ref5, 2),
            x = _ref6[0],
            slicePoints = _ref6[1];
        var prevSlice = slices[i - 1];
        var nextSlice = slices[i + 1];
        var x0;
        if (!prevSlice) x0 = x;else x0 = x - (x - prevSlice[0]) / 2;
        var sliceWidth;
        if (!nextSlice) sliceWidth = width - x0;else sliceWidth = x - x0 + (nextSlice[0] - x) / 2;
        return {
          id: x,
          x0: x0,
          x: x,
          y0: 0,
          y: 0,
          width: sliceWidth,
          height: height,
          points: slicePoints.reverse()
        };
      });
    } else if (enableSlices === 'y') {
      var _map = new Map();
      points.forEach(function (point) {
        if (point.data.x === null || point.data.y === null) return;
        if (!_map.has(point.y)) _map.set(point.y, [point]);else _map.get(point.y).push(point);
      });
      return Array.from(_map.entries()).sort(function (a, b) {
        return a[0] - b[0];
      }).map(function (_ref7, i, slices) {
        var _ref8 = _slicedToArray$1(_ref7, 2),
            y = _ref8[0],
            slicePoints = _ref8[1];
        var prevSlice = slices[i - 1];
        var nextSlice = slices[i + 1];
        var y0;
        if (!prevSlice) y0 = y;else y0 = y - (y - prevSlice[0]) / 2;
        var sliceHeight;
        if (!nextSlice) sliceHeight = height - y0;else sliceHeight = y - y0 + (nextSlice[0] - y) / 2;
        return {
          id: y,
          x0: 0,
          x: 0,
          y0: y0,
          y: y,
          width: width,
          height: sliceHeight,
          points: slicePoints.reverse()
        };
      });
    }
  }, [enableSlices, points]);
};
var useLine = function useLine(_ref9) {
  var data = _ref9.data,
      _ref9$xScale = _ref9.xScale,
      xScaleSpec = _ref9$xScale === void 0 ? LineDefaultProps.xScale : _ref9$xScale,
      xFormat = _ref9.xFormat,
      _ref9$yScale = _ref9.yScale,
      yScaleSpec = _ref9$yScale === void 0 ? LineDefaultProps.yScale : _ref9$yScale,
      yFormat = _ref9.yFormat,
      width = _ref9.width,
      height = _ref9.height,
      _ref9$colors = _ref9.colors,
      colors = _ref9$colors === void 0 ? LineDefaultProps.colors : _ref9$colors,
      _ref9$curve = _ref9.curve,
      curve = _ref9$curve === void 0 ? LineDefaultProps.curve : _ref9$curve,
      _ref9$areaBaselineVal = _ref9.areaBaselineValue,
      areaBaselineValue = _ref9$areaBaselineVal === void 0 ? LineDefaultProps.areaBaselineValue : _ref9$areaBaselineVal,
      _ref9$pointColor = _ref9.pointColor,
      pointColor = _ref9$pointColor === void 0 ? LineDefaultProps.pointColor : _ref9$pointColor,
      _ref9$pointBorderColo = _ref9.pointBorderColor,
      pointBorderColor = _ref9$pointBorderColo === void 0 ? LineDefaultProps.pointBorderColor : _ref9$pointBorderColo,
      _ref9$enableSlices = _ref9.enableSlices,
      enableSlices = _ref9$enableSlices === void 0 ? LineDefaultProps.enableSlicesTooltip : _ref9$enableSlices;
  var formatX = useValueFormatter(xFormat);
  var formatY = useValueFormatter(yFormat);
  var getColor = useOrdinalColorScale(colors, 'id');
  var theme = useTheme();
  var getPointColor = useInheritedColor(pointColor, theme);
  var getPointBorderColor = useInheritedColor(pointBorderColor, theme);
  var _useState = React.useState([]),
      _useState2 = _slicedToArray$1(_useState, 2),
      hiddenIds = _useState2[0],
      setHiddenIds = _useState2[1];
  var _useMemo = React.useMemo(function () {
    return computeXYScalesForSeries(data.filter(function (item) {
      return hiddenIds.indexOf(item.id) === -1;
    }), xScaleSpec, yScaleSpec, width, height);
  }, [data, hiddenIds, xScaleSpec, yScaleSpec, width, height]),
      xScale = _useMemo.xScale,
      yScale = _useMemo.yScale,
      rawSeries = _useMemo.series;
  var _useMemo2 = React.useMemo(function () {
    var dataWithColor = data.map(function (line) {
      return {
        id: line.id,
        label: line.id,
        color: getColor(line)
      };
    });
    var series = dataWithColor.map(function (datum) {
      return _objectSpread2$1(_objectSpread2$1({}, rawSeries.find(function (serie) {
        return serie.id === datum.id;
      })), {}, {
        color: datum.color
      });
    }).filter(function (item) {
      return Boolean(item.id);
    });
    var legendData = dataWithColor.map(function (item) {
      return _objectSpread2$1(_objectSpread2$1({}, item), {}, {
        hidden: !series.find(function (serie) {
          return serie.id === item.id;
        })
      });
    }).reverse();
    return {
      legendData: legendData,
      series: series
    };
  }, [data, rawSeries, getColor]),
      legendData = _useMemo2.legendData,
      series = _useMemo2.series;
  var toggleSerie = React.useCallback(function (id) {
    setHiddenIds(function (state) {
      return state.indexOf(id) > -1 ? state.filter(function (item) {
        return item !== id;
      }) : [].concat(_toConsumableArray(state), [id]);
    });
  }, []);
  var points = usePoints({
    series: series,
    getPointColor: getPointColor,
    getPointBorderColor: getPointBorderColor,
    formatX: formatX,
    formatY: formatY
  });
  var slices = useSlices({
    enableSlices: enableSlices,
    points: points,
    width: width,
    height: height
  });
  var lineGenerator = useLineGenerator({
    curve: curve
  });
  var areaGenerator = useAreaGenerator({
    curve: curve,
    yScale: yScale,
    areaBaselineValue: areaBaselineValue
  });
  return {
    legendData: legendData,
    toggleSerie: toggleSerie,
    lineGenerator: lineGenerator,
    areaGenerator: areaGenerator,
    getColor: getColor,
    series: series,
    xScale: xScale,
    yScale: yScale,
    slices: slices,
    points: points
  };
};

var AreaPath = function AreaPath(_ref) {
  var areaBlendMode = _ref.areaBlendMode,
      areaOpacity = _ref.areaOpacity,
      color = _ref.color,
      fill = _ref.fill,
      path = _ref.path;
  var _useMotionConfig = useMotionConfig(),
      animate = _useMotionConfig.animate,
      springConfig = _useMotionConfig.config;
  var animatedPath = useAnimatedPath(path);
  var animatedProps = useSpring({
    color: color,
    config: springConfig,
    immediate: !animate
  });
  return jsxRuntime.jsx(animated.path, {
    d: animatedPath,
    fill: fill ? fill : animatedProps.color,
    fillOpacity: areaOpacity,
    strokeWidth: 0,
    style: {
      mixBlendMode: areaBlendMode
    }
  });
};
var Areas = function Areas(_ref2) {
  var areaGenerator = _ref2.areaGenerator,
      areaOpacity = _ref2.areaOpacity,
      areaBlendMode = _ref2.areaBlendMode,
      lines = _ref2.lines;
  var computedLines = lines.slice(0).reverse();
  return jsxRuntime.jsx("g", {
    children: computedLines.map(function (line) {
      return jsxRuntime.jsx(AreaPath, _objectSpread2$1({
        path: areaGenerator(line.data.map(function (d) {
          return d.position;
        }))
      }, _objectSpread2$1({
        areaOpacity: areaOpacity,
        areaBlendMode: areaBlendMode
      }, line)), line.id);
    })
  });
};
var Areas$1 = React.memo(Areas);

var LinesItem = function LinesItem(_ref) {
  var lineGenerator = _ref.lineGenerator,
      points = _ref.points,
      color = _ref.color,
      thickness = _ref.thickness;
  var path = React.useMemo(function () {
    return lineGenerator(points);
  }, [lineGenerator, points]);
  var animatedPath = useAnimatedPath(path);
  return jsxRuntime.jsx(animated.path, {
    d: animatedPath,
    fill: "none",
    strokeWidth: thickness,
    stroke: color
  });
};
var LinesItem$1 = React.memo(LinesItem);

var Lines = function Lines(_ref) {
  var lines = _ref.lines,
      lineGenerator = _ref.lineGenerator,
      lineWidth = _ref.lineWidth;
  return lines.slice(0).reverse().map(function (_ref2) {
    var id = _ref2.id,
        data = _ref2.data,
        color = _ref2.color;
    return jsxRuntime.jsx(LinesItem$1, {
      id: id,
      points: data.map(function (d) {
        return d.position;
      }),
      lineGenerator: lineGenerator,
      color: color,
      thickness: lineWidth
    }, id);
  });
};
var Lines$1 = React.memo(Lines);

var SlicesItem = function SlicesItem(_ref) {
  var slice = _ref.slice,
      axis = _ref.axis,
      debug = _ref.debug,
      tooltip = _ref.tooltip,
      isCurrent = _ref.isCurrent,
      setCurrent = _ref.setCurrent;
  var _useTooltip = useTooltip(),
      showTooltipFromEvent = _useTooltip.showTooltipFromEvent,
      hideTooltip = _useTooltip.hideTooltip;
  var handleMouseEnter = React.useCallback(function (event) {
    showTooltipFromEvent(React.createElement(tooltip, {
      slice: slice,
      axis: axis
    }), event, 'right');
    setCurrent(slice);
  }, [showTooltipFromEvent, tooltip, slice]);
  var handleMouseMove = React.useCallback(function (event) {
    showTooltipFromEvent(React.createElement(tooltip, {
      slice: slice,
      axis: axis
    }), event, 'right');
  }, [showTooltipFromEvent, tooltip, slice]);
  var handleMouseLeave = React.useCallback(function () {
    hideTooltip();
    setCurrent(null);
  }, [hideTooltip]);
  return jsxRuntime.jsx("rect", {
    x: slice.x0,
    y: slice.y0,
    width: slice.width,
    height: slice.height,
    stroke: "red",
    strokeWidth: debug ? 1 : 0,
    strokeOpacity: 0.75,
    fill: "red",
    fillOpacity: isCurrent && debug ? 0.35 : 0,
    onMouseEnter: handleMouseEnter,
    onMouseMove: handleMouseMove,
    onMouseLeave: handleMouseLeave
  });
};
var SlicesItem$1 = React.memo(SlicesItem);

var Slices = function Slices(_ref) {
  var slices = _ref.slices,
      axis = _ref.axis,
      debug = _ref.debug,
      height = _ref.height,
      tooltip = _ref.tooltip,
      current = _ref.current,
      setCurrent = _ref.setCurrent;
  return slices.map(function (slice) {
    return jsxRuntime.jsx(SlicesItem$1, {
      slice: slice,
      axis: axis,
      debug: debug,
      height: height,
      tooltip: tooltip,
      setCurrent: setCurrent,
      isCurrent: current !== null && current.id === slice.id
    }, slice.id);
  });
};
var Slices$1 = React.memo(Slices);

var Points = function Points(_ref) {
  var points = _ref.points,
      symbol = _ref.symbol,
      size = _ref.size,
      borderWidth = _ref.borderWidth,
      enableLabel = _ref.enableLabel,
      label = _ref.label,
      labelYOffset = _ref.labelYOffset;
  var theme = useTheme();
  var getLabel = getLabelGenerator(label);
  var mappedPoints = points.reverse().map(function (point) {
    var mappedPoint = {
      id: point.id,
      x: point.x,
      y: point.y,
      datum: point.data,
      fill: point.color,
      stroke: point.borderColor,
      label: enableLabel ? getLabel(point.data) : null
    };
    return mappedPoint;
  });
  return jsxRuntime.jsx("g", {
    children: mappedPoints.map(function (point) {
      return jsxRuntime.jsx(DotsItem$1, {
        x: point.x,
        y: point.y,
        datum: point.datum,
        symbol: symbol,
        size: size,
        color: point.fill,
        borderWidth: borderWidth,
        borderColor: point.stroke,
        label: point.label,
        labelYOffset: labelYOffset,
        theme: theme
      }, point.id);
    })
  });
};
var Points$1 = React.memo(Points);

var Mesh = function Mesh(_ref) {
  var points = _ref.points,
      width = _ref.width,
      height = _ref.height,
      margin = _ref.margin,
      setCurrent = _ref.setCurrent,
      onMouseEnter = _ref.onMouseEnter,
      onMouseMove = _ref.onMouseMove,
      onMouseLeave = _ref.onMouseLeave,
      onClick = _ref.onClick,
      tooltip = _ref.tooltip,
      debug = _ref.debug;
  var _useTooltip = useTooltip(),
      showTooltipAt = _useTooltip.showTooltipAt,
      hideTooltip = _useTooltip.hideTooltip;
  var handleMouseEnter = React.useCallback(function (point, event) {
    showTooltipAt(React.createElement(tooltip, {
      point: point
    }), [point.x + margin.left, point.y + margin.top], 'top');
    setCurrent(point);
    onMouseEnter && onMouseEnter(point, event);
  }, [setCurrent, showTooltipAt, tooltip, onMouseEnter, margin]);
  var handleMouseMove = React.useCallback(function (point, event) {
    showTooltipAt(React.createElement(tooltip, {
      point: point
    }), [point.x + margin.left, point.y + margin.top], 'top');
    setCurrent(point);
    onMouseMove && onMouseMove(point, event);
  }, [setCurrent, showTooltipAt, tooltip, onMouseMove]);
  var handleMouseLeave = React.useCallback(function (point, event) {
    hideTooltip();
    setCurrent(null);
    onMouseLeave && onMouseLeave(point, event);
  }, [hideTooltip, setCurrent, onMouseLeave]);
  var handleClick = React.useCallback(function (point, event) {
    onClick && onClick(point, event);
  }, [onClick]);
  return jsxRuntime.jsx(Mesh$2, {
    nodes: points,
    width: width,
    height: height,
    onMouseEnter: handleMouseEnter,
    onMouseMove: handleMouseMove,
    onMouseLeave: handleMouseLeave,
    onClick: handleClick,
    debug: debug
  });
};
var Mesh$1 = React.memo(Mesh);

var Line = function Line(props) {
  var data = props.data,
      xScaleSpec = props.xScale,
      xFormat = props.xFormat,
      yScaleSpec = props.yScale,
      yFormat = props.yFormat,
      layers = props.layers,
      curve = props.curve,
      areaBaselineValue = props.areaBaselineValue,
      colors = props.colors,
      partialMargin = props.margin,
      width = props.width,
      height = props.height,
      axisTop = props.axisTop,
      axisRight = props.axisRight,
      axisBottom = props.axisBottom,
      axisLeft = props.axisLeft,
      enableGridX = props.enableGridX,
      enableGridY = props.enableGridY,
      gridXValues = props.gridXValues,
      gridYValues = props.gridYValues,
      lineWidth = props.lineWidth,
      enableArea = props.enableArea,
      areaOpacity = props.areaOpacity,
      areaBlendMode = props.areaBlendMode,
      enablePoints = props.enablePoints,
      pointSymbol = props.pointSymbol,
      pointSize = props.pointSize,
      pointColor = props.pointColor,
      pointBorderWidth = props.pointBorderWidth,
      pointBorderColor = props.pointBorderColor,
      enablePointLabel = props.enablePointLabel,
      pointLabel = props.pointLabel,
      pointLabelYOffset = props.pointLabelYOffset,
      defs = props.defs,
      fill = props.fill,
      markers = props.markers,
      legends = props.legends,
      isInteractive = props.isInteractive,
      useMesh = props.useMesh,
      debugMesh = props.debugMesh,
      onMouseEnter = props.onMouseEnter,
      onMouseMove = props.onMouseMove,
      onMouseLeave = props.onMouseLeave,
      onClick = props.onClick,
      tooltip = props.tooltip,
      enableSlices = props.enableSlices,
      debugSlices = props.debugSlices,
      sliceTooltip = props.sliceTooltip,
      enableCrosshair = props.enableCrosshair,
      crosshairType = props.crosshairType,
      role = props.role;
  var _useDimensions = useDimensions(width, height, partialMargin),
      margin = _useDimensions.margin,
      innerWidth = _useDimensions.innerWidth,
      innerHeight = _useDimensions.innerHeight,
      outerWidth = _useDimensions.outerWidth,
      outerHeight = _useDimensions.outerHeight;
  var _useLine = useLine({
    data: data,
    xScale: xScaleSpec,
    xFormat: xFormat,
    yScale: yScaleSpec,
    yFormat: yFormat,
    width: innerWidth,
    height: innerHeight,
    colors: colors,
    curve: curve,
    areaBaselineValue: areaBaselineValue,
    pointColor: pointColor,
    pointBorderColor: pointBorderColor,
    enableSlices: enableSlices
  }),
      legendData = _useLine.legendData,
      toggleSerie = _useLine.toggleSerie,
      lineGenerator = _useLine.lineGenerator,
      areaGenerator = _useLine.areaGenerator,
      series = _useLine.series,
      xScale = _useLine.xScale,
      yScale = _useLine.yScale,
      slices = _useLine.slices,
      points = _useLine.points;
  var theme = useTheme();
  var getPointColor = useInheritedColor(pointColor, theme);
  var getPointBorderColor = useInheritedColor(pointBorderColor, theme);
  var _useState = React.useState(null),
      _useState2 = _slicedToArray$1(_useState, 2),
      currentPoint = _useState2[0],
      setCurrentPoint = _useState2[1];
  var _useState3 = React.useState(null),
      _useState4 = _slicedToArray$1(_useState3, 2),
      currentSlice = _useState4[0],
      setCurrentSlice = _useState4[1];
  var layerById = {
    grid: jsxRuntime.jsx(Grid, {
      theme: theme,
      width: innerWidth,
      height: innerHeight,
      xScale: enableGridX ? xScale : null,
      yScale: enableGridY ? yScale : null,
      xValues: gridXValues,
      yValues: gridYValues
    }, "grid"),
    markers: jsxRuntime.jsx(CartesianMarkers$1, {
      markers: markers,
      width: innerWidth,
      height: innerHeight,
      xScale: xScale,
      yScale: yScale,
      theme: theme
    }, "markers"),
    axes: jsxRuntime.jsx(Axes, {
      xScale: xScale,
      yScale: yScale,
      width: innerWidth,
      height: innerHeight,
      theme: theme,
      top: axisTop,
      right: axisRight,
      bottom: axisBottom,
      left: axisLeft
    }, "axes"),
    areas: null,
    lines: jsxRuntime.jsx(Lines$1, {
      lines: series,
      lineGenerator: lineGenerator,
      lineWidth: lineWidth
    }, "lines"),
    slices: null,
    points: null,
    crosshair: null,
    mesh: null,
    legends: legends.map(function (legend, i) {
      return jsxRuntime.jsx(BoxLegendSvg, _objectSpread2$1(_objectSpread2$1({}, legend), {}, {
        containerWidth: innerWidth,
        containerHeight: innerHeight,
        data: legend.data || legendData,
        theme: theme,
        toggleSerie: legend.toggleSerie ? toggleSerie : undefined
      }), "legend.".concat(i));
    })
  };
  var boundDefs = bindDefs(defs, series, fill);
  if (enableArea) {
    layerById.areas = jsxRuntime.jsx(Areas$1, {
      areaGenerator: areaGenerator,
      areaOpacity: areaOpacity,
      areaBlendMode: areaBlendMode,
      lines: series
    }, "areas");
  }
  if (isInteractive && enableSlices !== false) {
    layerById.slices = jsxRuntime.jsx(Slices$1, {
      slices: slices,
      axis: enableSlices,
      debug: debugSlices,
      height: innerHeight,
      tooltip: sliceTooltip,
      current: currentSlice,
      setCurrent: setCurrentSlice
    }, "slices");
  }
  if (enablePoints) {
    layerById.points = jsxRuntime.jsx(Points$1, {
      points: points,
      symbol: pointSymbol,
      size: pointSize,
      color: getPointColor,
      borderWidth: pointBorderWidth,
      borderColor: getPointBorderColor,
      enableLabel: enablePointLabel,
      label: pointLabel,
      labelYOffset: pointLabelYOffset
    }, "points");
  }
  if (isInteractive && enableCrosshair) {
    if (currentPoint !== null) {
      layerById.crosshair = jsxRuntime.jsx(Crosshair, {
        width: innerWidth,
        height: innerHeight,
        x: currentPoint.x,
        y: currentPoint.y,
        type: crosshairType
      }, "crosshair");
    }
    if (currentSlice !== null) {
      layerById.crosshair = jsxRuntime.jsx(Crosshair, {
        width: innerWidth,
        height: innerHeight,
        x: currentSlice.x,
        y: currentSlice.y,
        type: enableSlices
      }, "crosshair");
    }
  }
  if (isInteractive && useMesh && enableSlices === false) {
    layerById.mesh = jsxRuntime.jsx(Mesh$1, {
      points: points,
      width: innerWidth,
      height: innerHeight,
      margin: margin,
      current: currentPoint,
      setCurrent: setCurrentPoint,
      onMouseEnter: onMouseEnter,
      onMouseMove: onMouseMove,
      onMouseLeave: onMouseLeave,
      onClick: onClick,
      tooltip: tooltip,
      debug: debugMesh
    }, "mesh");
  }
  return jsxRuntime.jsx(SvgWrapper, {
    defs: boundDefs,
    width: outerWidth,
    height: outerHeight,
    margin: margin,
    role: role,
    children: layers.map(function (layer, i) {
      if (typeof layer === 'function') {
        return jsxRuntime.jsx(React.Fragment, {
          children: layer(_objectSpread2$1(_objectSpread2$1({}, props), {}, {
            innerWidth: innerWidth,
            innerHeight: innerHeight,
            series: series,
            slices: slices,
            points: points,
            xScale: xScale,
            yScale: yScale,
            lineGenerator: lineGenerator,
            areaGenerator: areaGenerator,
            currentPoint: currentPoint,
            setCurrentPoint: setCurrentPoint,
            currentSlice: currentSlice,
            setCurrentSlice: setCurrentSlice
          }))
        }, i);
      }
      return layerById[layer];
    })
  });
};
Line.defaultProps = LineDefaultProps;
var Line$1 = withContainer(Line);

var ResponsiveLine = function ResponsiveLine(props) {
  return jsxRuntime.jsx(ResponsiveWrapper, {
    children: function children(_ref) {
      var width = _ref.width,
          height = _ref.height;
      return jsxRuntime.jsx(Line$1, _objectSpread2$1({
        width: width,
        height: height
      }, props));
    }
  });
};

var LineCanvas = function LineCanvas(_ref) {
  var width = _ref.width,
      height = _ref.height,
      partialMargin = _ref.margin,
      pixelRatio = _ref.pixelRatio,
      data = _ref.data,
      xScaleSpec = _ref.xScale,
      xFormat = _ref.xFormat,
      yScaleSpec = _ref.yScale,
      yFormat = _ref.yFormat,
      curve = _ref.curve,
      layers = _ref.layers,
      colors = _ref.colors,
      lineWidth = _ref.lineWidth,
      enableArea = _ref.enableArea,
      areaBaselineValue = _ref.areaBaselineValue,
      areaOpacity = _ref.areaOpacity,
      enablePoints = _ref.enablePoints,
      pointSize = _ref.pointSize,
      pointColor = _ref.pointColor,
      pointBorderWidth = _ref.pointBorderWidth,
      pointBorderColor = _ref.pointBorderColor,
      enableGridX = _ref.enableGridX,
      gridXValues = _ref.gridXValues,
      enableGridY = _ref.enableGridY,
      gridYValues = _ref.gridYValues,
      axisTop = _ref.axisTop,
      axisRight = _ref.axisRight,
      axisBottom = _ref.axisBottom,
      axisLeft = _ref.axisLeft,
      legends = _ref.legends,
      isInteractive = _ref.isInteractive,
      debugMesh = _ref.debugMesh,
      onMouseLeave = _ref.onMouseLeave,
      onClick = _ref.onClick,
      tooltip = _ref.tooltip,
      canvasRef = _ref.canvasRef;
  var canvasEl = React.useRef(null);
  var _useDimensions = useDimensions(width, height, partialMargin),
      margin = _useDimensions.margin,
      innerWidth = _useDimensions.innerWidth,
      innerHeight = _useDimensions.innerHeight,
      outerWidth = _useDimensions.outerWidth,
      outerHeight = _useDimensions.outerHeight;
  var theme = useTheme();
  var _useState = React.useState(null),
      _useState2 = _slicedToArray$1(_useState, 2),
      currentPoint = _useState2[0],
      setCurrentPoint = _useState2[1];
  var _useLine = useLine({
    data: data,
    xScale: xScaleSpec,
    xFormat: xFormat,
    yScale: yScaleSpec,
    yFormat: yFormat,
    width: innerWidth,
    height: innerHeight,
    colors: colors,
    curve: curve,
    areaBaselineValue: areaBaselineValue,
    pointColor: pointColor,
    pointBorderColor: pointBorderColor
  }),
      lineGenerator = _useLine.lineGenerator,
      areaGenerator = _useLine.areaGenerator,
      series = _useLine.series,
      xScale = _useLine.xScale,
      yScale = _useLine.yScale,
      points = _useLine.points;
  var _useVoronoiMesh = useVoronoiMesh({
    points: points,
    width: innerWidth,
    height: innerHeight,
    debug: debugMesh
  }),
      delaunay = _useVoronoiMesh.delaunay,
      voronoi = _useVoronoiMesh.voronoi;
  React.useEffect(function () {
    if (canvasRef) {
      canvasRef.current = canvasEl.current;
    }
    canvasEl.current.width = outerWidth * pixelRatio;
    canvasEl.current.height = outerHeight * pixelRatio;
    var ctx = canvasEl.current.getContext('2d');
    ctx.scale(pixelRatio, pixelRatio);
    ctx.fillStyle = theme.background;
    ctx.fillRect(0, 0, outerWidth, outerHeight);
    ctx.translate(margin.left, margin.top);
    layers.forEach(function (layer) {
      if (typeof layer === 'function') {
        layer({
          ctx: ctx,
          innerWidth: innerWidth,
          innerHeight: innerHeight,
          series: series,
          points: points,
          xScale: xScale,
          yScale: yScale,
          lineWidth: lineWidth,
          lineGenerator: lineGenerator,
          areaGenerator: areaGenerator,
          currentPoint: currentPoint,
          setCurrentPoint: setCurrentPoint
        });
      }
      if (layer === 'grid' && theme.grid.line.strokeWidth > 0) {
        ctx.lineWidth = theme.grid.line.strokeWidth;
        ctx.strokeStyle = theme.grid.line.stroke;
        enableGridX && renderGridLinesToCanvas(ctx, {
          width: innerWidth,
          height: innerHeight,
          scale: xScale,
          axis: 'x',
          values: gridXValues
        });
        enableGridY && renderGridLinesToCanvas(ctx, {
          width: innerWidth,
          height: innerHeight,
          scale: yScale,
          axis: 'y',
          values: gridYValues
        });
      }
      if (layer === 'axes') {
        renderAxesToCanvas(ctx, {
          xScale: xScale,
          yScale: yScale,
          width: innerWidth,
          height: innerHeight,
          top: axisTop,
          right: axisRight,
          bottom: axisBottom,
          left: axisLeft,
          theme: theme
        });
      }
      if (layer === 'areas' && enableArea === true) {
        ctx.save();
        ctx.globalAlpha = areaOpacity;
        areaGenerator.context(ctx);
        series.forEach(function (serie) {
          ctx.fillStyle = serie.color;
          ctx.beginPath();
          areaGenerator(serie.data.map(function (d) {
            return d.position;
          }));
          ctx.fill();
        });
        ctx.restore();
      }
      if (layer === 'lines') {
        lineGenerator.context(ctx);
        series.forEach(function (serie) {
          ctx.strokeStyle = serie.color;
          ctx.lineWidth = lineWidth;
          ctx.beginPath();
          lineGenerator(serie.data.map(function (d) {
            return d.position;
          }));
          ctx.stroke();
        });
      }
      if (layer === 'points' && enablePoints === true && pointSize > 0) {
        points.forEach(function (point) {
          ctx.fillStyle = point.color;
          ctx.beginPath();
          ctx.arc(point.x, point.y, pointSize / 2, 0, 2 * Math.PI);
          ctx.fill();
          if (pointBorderWidth > 0) {
            ctx.strokeStyle = point.borderColor;
            ctx.lineWidth = pointBorderWidth;
            ctx.stroke();
          }
        });
      }
      if (layer === 'mesh' && debugMesh === true) {
        renderVoronoiToCanvas(ctx, voronoi);
        if (currentPoint) {
          renderVoronoiCellToCanvas(ctx, voronoi, currentPoint.index);
        }
      }
      if (layer === 'legends') {
        var legendData = series.map(function (serie) {
          return {
            id: serie.id,
            label: serie.id,
            color: serie.color
          };
        }).reverse();
        legends.forEach(function (legend) {
          renderLegendToCanvas(ctx, _objectSpread2$1(_objectSpread2$1({}, legend), {}, {
            data: legend.data || legendData,
            containerWidth: innerWidth,
            containerHeight: innerHeight,
            theme: theme
          }));
        });
      }
    });
  }, [canvasEl, outerWidth, outerHeight, layers, theme, lineGenerator, series, xScale, yScale, enableGridX, gridXValues, enableGridY, gridYValues, axisTop, axisRight, axisBottom, axisLeft, legends, points, enablePoints, pointSize, currentPoint]);
  var getPointFromMouseEvent = React.useCallback(function (event) {
    var _getRelativeCursor = getRelativeCursor(canvasEl.current, event),
        _getRelativeCursor2 = _slicedToArray$1(_getRelativeCursor, 2),
        x = _getRelativeCursor2[0],
        y = _getRelativeCursor2[1];
    if (!isCursorInRect(margin.left, margin.top, innerWidth, innerHeight, x, y)) return null;
    var pointIndex = delaunay.find(x - margin.left, y - margin.top);
    return points[pointIndex];
  }, [canvasEl, margin, innerWidth, innerHeight, delaunay]);
  var _useTooltip = useTooltip(),
      showTooltipFromEvent = _useTooltip.showTooltipFromEvent,
      hideTooltip = _useTooltip.hideTooltip;
  var handleMouseHover = React.useCallback(function (event) {
    var point = getPointFromMouseEvent(event);
    setCurrentPoint(point);
    if (point) {
      showTooltipFromEvent(React.createElement(tooltip, {
        point: point
      }), event);
    } else {
      hideTooltip();
    }
  }, [getPointFromMouseEvent, setCurrentPoint, showTooltipFromEvent, hideTooltip, tooltip]);
  var handleMouseLeave = React.useCallback(function (event) {
    hideTooltip();
    setCurrentPoint(null);
    currentPoint && onMouseLeave && onMouseLeave(currentPoint, event);
  }, [hideTooltip, setCurrentPoint, onMouseLeave]);
  var handleClick = React.useCallback(function (event) {
    if (onClick) {
      var point = getPointFromMouseEvent(event);
      point && onClick(point, event);
    }
  }, [getPointFromMouseEvent, onClick]);
  return jsxRuntime.jsx("canvas", {
    ref: canvasEl,
    width: outerWidth * pixelRatio,
    height: outerHeight * pixelRatio,
    style: {
      width: outerWidth,
      height: outerHeight,
      cursor: isInteractive ? 'auto' : 'normal'
    },
    onMouseEnter: isInteractive ? handleMouseHover : undefined,
    onMouseMove: isInteractive ? handleMouseHover : undefined,
    onMouseLeave: isInteractive ? handleMouseLeave : undefined,
    onClick: isInteractive ? handleClick : undefined
  });
};
LineCanvas.defaultProps = LineCanvasDefaultProps;
var LineCanvasWithContainer = withContainer(LineCanvas);
var LineCanvas$1 = React.forwardRef(function (props, ref) {
  return jsxRuntime.jsx(LineCanvasWithContainer, _objectSpread2$1(_objectSpread2$1({}, props), {}, {
    canvasRef: ref
  }));
});

var ResponsiveLineCanvas = function ResponsiveLineCanvas(props, ref) {
  return jsxRuntime.jsx(ResponsiveWrapper, {
    children: function children(_ref) {
      var width = _ref.width,
          height = _ref.height;
      return jsxRuntime.jsx(LineCanvas$1, _objectSpread2$1(_objectSpread2$1({
        width: width,
        height: height
      }, props), {}, {
        ref: ref
      }));
    }
  });
};
React.forwardRef(ResponsiveLineCanvas);

var styles$d = {"container":"LineChart_container___2tZKV"};

var styles$c = {"container":"ChartTooltip_container___267HP","enterTooltip":"ChartTooltip_enterTooltip___3fZnT","item":"ChartTooltip_item___1AZ2e","line":"ChartTooltip_line___2Cbbi","box":"ChartTooltip_box___bbFbs","label":"ChartTooltip_label___3j5qA","icon":"ChartTooltip_icon___cfsLR","countryName":"ChartTooltip_countryName___2DSlK","stackedLabel":"ChartTooltip_stackedLabel___6heOz"};

var LineChartTooltip = React__namespace.forwardRef(function LineChartTooltip(props, ref) {
    var data = props.data, _a = props.formatTooltipItem, formatTooltipItem = _a === void 0 ? function (value) { return value; } : _a, className = props.className, tooltipProps = __rest(props, ["data", "formatTooltipItem", "className"]);
    var point = tooltipProps.point;
    var tooltipItems = data.map(function (d) { return ({
        series: d.id,
        item: d.data.find(function (item) { return item.x === point.data.xFormatted; }),
        color: d.color,
    }); });
    return (React__namespace.createElement("div", { ref: ref, className: classnames(styles$c.container, className) }, tooltipItems.map(function (dataItem, index) {
        var _a;
        return (React__namespace.createElement("div", { key: index, className: styles$c.item },
            React__namespace.createElement("div", { style: { color: dataItem.color }, className: styles$c.line }),
            React__namespace.createElement(Typography, { className: styles$c.label, variant: "small" }, formatTooltipItem((_a = dataItem.item) === null || _a === void 0 ? void 0 : _a.y))));
    })));
});
var GeoChartTooltip = React__namespace.forwardRef(function GeoChartTooltip(props, ref) {
    var _a = props, id = _a.id, label = _a.label, properties = _a.properties, value = _a.value, formattedValue = _a.formattedValue, _b = _a.showAbsolute, showAbsolute = _b === void 0 ? true : _b, className = _a.className;
    return (React__namespace.createElement("div", { ref: ref, className: classnames(styles$c.container, className) },
        React__namespace.createElement("div", { className: styles$c.item },
            id && React__namespace.createElement(FlagIcon, { country: id }),
            React__namespace.createElement("div", { className: styles$c.stackedLabel },
                React__namespace.createElement(Typography, { className: styles$c.label, variant: "small" },
                    React__namespace.createElement("strong", null, label || (properties === null || properties === void 0 ? void 0 : properties.name))),
                React__namespace.createElement(Typography, { className: styles$c.label, variant: "small" }, showAbsolute && value ? value.toFixed(2) : formattedValue || "-")))));
});
var BarChartTooltip = React__namespace.forwardRef(function BarChartTooltip(props, ref) {
    var _a, _b;
    var data = props.data, className = props.className, id = props.id, indexValue = props.indexValue, value = props.value, color = props.color;
    return (React__namespace.createElement("div", { ref: ref, className: classnames(styles$c.container, className) },
        React__namespace.createElement("div", { className: styles$c.item },
            React__namespace.createElement("div", { style: { color: color }, className: styles$c.box }),
            React__namespace.createElement(Typography, { className: styles$c.label, variant: "small" },
                React__namespace.createElement("strong", null, (_a = data.data.find(function (k) { return k.categoryKey === indexValue; })) === null || _a === void 0 ? void 0 :
                    _a.name,
                    " - ", (_b = data.keys.find(function (k) { return k.dataKey === id; })) === null || _b === void 0 ? void 0 :
                    _b.name,
                    ":")),
            React__namespace.createElement(Typography, { className: styles$c.label, variant: "small" }, value))));
});
var PieChartTooltip = React__namespace.forwardRef(function PieChartTooltip(props, ref) {
    var className = props.className, datum = props.datum;
    return (React__namespace.createElement("div", { ref: ref, className: classnames(styles$c.container, className) },
        React__namespace.createElement("div", { className: styles$c.item },
            React__namespace.createElement("div", { style: { color: datum.color }, className: styles$c.box }),
            React__namespace.createElement(Typography, { className: styles$c.label, variant: "small" },
                React__namespace.createElement("strong", null,
                    datum.label,
                    ":")),
            React__namespace.createElement(Typography, { className: styles$c.label, variant: "small" }, datum.value))));
});
var ChartTooltip = {
    Line: LineChartTooltip,
    Geo: GeoChartTooltip,
    Bar: BarChartTooltip,
    Pie: PieChartTooltip,
};

var LineChart = React__namespace.forwardRef(function LineChart(props, ref) {
    var data = props.data, formatTooltipItem = props.formatTooltipItem, _a = props.showTooltip, showTooltip = _a === void 0 ? false : _a, className = props.className, lineSvgProps = __rest(props, ["data", "formatTooltipItem", "showTooltip", "className"]);
    return (React__namespace.createElement("div", { ref: ref, className: classnames(styles$d.container, className) },
        React__namespace.createElement(ResponsiveLine, __assign({ data: data, colors: { datum: "color" }, theme: {
                crosshair: {
                    line: {
                        stroke: colors$1["color-grey-slate"],
                        strokeWidth: 1,
                        strokeOpacity: 0.4,
                    },
                },
                axis: {
                    ticks: {
                        text: {
                            fill: colors$1["color-grey-slate"],
                            fontFamily: "Axiforma",
                            fontSize: "0.75rem",
                            opacity: 0.6,
                            letterSpacing: 0,
                            lineHeight: 0.75,
                        },
                    },
                },
            }, margin: { top: 16, right: 64, bottom: 48, left: 72 }, xScale: { type: "point" }, yScale: { type: "linear", min: 0, max: "auto", stacked: false, reverse: false }, yFormat: " >-.2f", axisBottom: {
                tickPadding: 30,
                tickSize: 0,
            }, axisLeft: {
                tickPadding: 32,
                tickValues: 5,
                tickSize: 0,
            }, enablePoints: false, enableGridX: false, enableGridY: false, enableSlices: false, enableCrosshair: true, crosshairType: "cross", useMesh: true, lineWidth: 3, isInteractive: showTooltip, tooltip: showTooltip
                ? function (tooltipProps) { return (React__namespace.createElement(ChartTooltip.Line, __assign({}, tooltipProps, { formatTooltipItem: formatTooltipItem, data: data }))); }
                : undefined }, lineSvgProps))));
});

var styles$b = {"container":"ChartLegend_container___3MH0g","title":"ChartLegend_title___2RUat","dot":"ChartLegend_dot___17Xkt","label":"ChartLegend_label___IcstP","value":"ChartLegend_value___2sDc4"};

var ChartLegend = function (_a) {
    var title = _a.title, data = _a.data;
    return (React__default['default'].createElement("table", { className: styles$b.container, cellSpacing: "0" },
        React__default['default'].createElement("caption", { className: styles$b.title }, title),
        React__default['default'].createElement("tbody", null, data.map(function (_a, i) {
            var label = _a.label, value = _a.value, color = _a.color;
            return (React__default['default'].createElement("tr", { key: i },
                React__default['default'].createElement("td", { className: styles$b.label },
                    React__default['default'].createElement("span", { className: styles$b.dot, style: { backgroundColor: color } }),
                    label),
                React__default['default'].createElement("td", { className: styles$b.value }, value)));
        }))));
};

var styles$a = {"spinner":"Spinner_spinner___-6thG","spin":"Spinner_spin___xZP62","circle":"Spinner_circle___Md4Dd","dashOffset":"Spinner_dashOffset___3vABl"};

var Spinner = function (props) { return (React__namespace.createElement("svg", __assign({ className: styles$a.spinner, viewBox: "0 0 50 50" }, props),
    React__namespace.createElement("circle", { className: styles$a.circle, cx: "25", cy: "25", r: "20", fill: "none", stroke: "currentColor", strokeWidth: "5", strokeLinecap: "round" }))); };

var styles$9 = {"tooltip":"Tooltip_tooltip___3yX6y","open":"Tooltip_open___1WbG8","strong":"Tooltip_strong___18ASX","hover":"Tooltip_hover___1gsHG","content":"Tooltip_content___38UF1","title":"Tooltip_title___pi_hQ","body":"Tooltip_body___wn0D_","arrow":"Tooltip_arrow___3EByp"};

var TooltipContent = function (_a) {
    var children = _a.children, title = _a.title;
    return (React__namespace.createElement("div", { className: styles$9.content },
        title && React__namespace.createElement("div", { className: styles$9.title }, title),
        children && React__namespace.createElement("div", { className: styles$9.body }, children)));
};
var Tooltip = function (props) {
    var _a;
    var _b = React__namespace.useState(false), isHover = _b[0], setHover = _b[1];
    var _c = React__namespace.useState(null), arrowElement = _c[0], setArrowElement = _c[1];
    var isOpen = props.isOpen, anchorElement = props.anchorElement, children = props.children, _d = props.variant, variant = _d === void 0 ? "default" : _d, _e = props.distance, distance = _e === void 0 ? 8 : _e, _f = props.placement, placement = _f === void 0 ? "right" : _f, className = props.className, otherProps = __rest(props, ["isOpen", "anchorElement", "children", "variant", "distance", "placement", "className"]);
    var _g = React__namespace.useState(null), popperElement = _g[0], setPopperElement = _g[1];
    var handleMouseEnter = function () {
        setHover(true);
    };
    var handleMouseLeave = function () {
        setHover(false);
    };
    var _h = usePopper(anchorElement, popperElement, {
        modifiers: [
            {
                name: "offset",
                options: {
                    offset: [0, distance],
                },
            },
            { name: "arrow", options: { element: arrowElement } },
        ],
        placement: placement,
    }), popperStyles = _h.styles, attributes = _h.attributes;
    return (React__namespace.createElement("div", __assign({ role: "tooltip", onMouseEnter: handleMouseEnter, onMouseLeave: handleMouseLeave, className: classnames(styles$9.tooltip, styles$9[variant], className, (_a = {},
            _a[styles$9.open] = isOpen || isHover,
            _a[styles$9.hover] = isHover,
            _a)), ref: setPopperElement, style: popperStyles.popper }, attributes.popper, otherProps),
        React__namespace.createElement("div", { className: styles$9.arrow, ref: setArrowElement, style: popperStyles.arrow }),
        children));
};

// Adds floating point numbers with twice the normal precision.
// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and
// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)
// 305–363 (1997).
// Code adapted from GeographicLib by Charles F. F. Karney,
// http://geographiclib.sourceforge.net/

function adder() {
  return new Adder;
}

function Adder() {
  this.reset();
}

Adder.prototype = {
  constructor: Adder,
  reset: function() {
    this.s = // rounded value
    this.t = 0; // exact error
  },
  add: function(y) {
    add(temp, y, this.t);
    add(this, temp.s, this.s);
    if (this.s) this.t += temp.t;
    else this.s = temp.t;
  },
  valueOf: function() {
    return this.s;
  }
};

var temp = new Adder;

function add(adder, a, b) {
  var x = adder.s = a + b,
      bv = x - a,
      av = x - bv;
  adder.t = (a - av) + (b - bv);
}

var epsilon = 1e-6;
var epsilon2 = 1e-12;
var pi = Math.PI;
var halfPi = pi / 2;
var quarterPi = pi / 4;
var tau = pi * 2;

var degrees = 180 / pi;
var radians = pi / 180;

var abs = Math.abs;
var atan = Math.atan;
var atan2 = Math.atan2;
var cos = Math.cos;
var ceil = Math.ceil;
var exp = Math.exp;
var log = Math.log;
var sin = Math.sin;
var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };
var sqrt = Math.sqrt;
var tan = Math.tan;

function acos(x) {
  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
}

function asin(x) {
  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);
}

function noop() {}

function streamGeometry(geometry, stream) {
  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {
    streamGeometryType[geometry.type](geometry, stream);
  }
}

var streamObjectType = {
  Feature: function(object, stream) {
    streamGeometry(object.geometry, stream);
  },
  FeatureCollection: function(object, stream) {
    var features = object.features, i = -1, n = features.length;
    while (++i < n) streamGeometry(features[i].geometry, stream);
  }
};

var streamGeometryType = {
  Sphere: function(object, stream) {
    stream.sphere();
  },
  Point: function(object, stream) {
    object = object.coordinates;
    stream.point(object[0], object[1], object[2]);
  },
  MultiPoint: function(object, stream) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);
  },
  LineString: function(object, stream) {
    streamLine(object.coordinates, stream, 0);
  },
  MultiLineString: function(object, stream) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) streamLine(coordinates[i], stream, 0);
  },
  Polygon: function(object, stream) {
    streamPolygon(object.coordinates, stream);
  },
  MultiPolygon: function(object, stream) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) streamPolygon(coordinates[i], stream);
  },
  GeometryCollection: function(object, stream) {
    var geometries = object.geometries, i = -1, n = geometries.length;
    while (++i < n) streamGeometry(geometries[i], stream);
  }
};

function streamLine(coordinates, stream, closed) {
  var i = -1, n = coordinates.length - closed, coordinate;
  stream.lineStart();
  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);
  stream.lineEnd();
}

function streamPolygon(coordinates, stream) {
  var i = -1, n = coordinates.length;
  stream.polygonStart();
  while (++i < n) streamLine(coordinates[i], stream, 1);
  stream.polygonEnd();
}

function geoStream(object, stream) {
  if (object && streamObjectType.hasOwnProperty(object.type)) {
    streamObjectType[object.type](object, stream);
  } else {
    streamGeometry(object, stream);
  }
}

function spherical(cartesian) {
  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];
}

function cartesian(spherical) {
  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);
  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];
}

function cartesianDot(a, b) {
  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
}

function cartesianCross(a, b) {
  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];
}

// TODO return a
function cartesianAddInPlace(a, b) {
  a[0] += b[0], a[1] += b[1], a[2] += b[2];
}

function cartesianScale(vector, k) {
  return [vector[0] * k, vector[1] * k, vector[2] * k];
}

// TODO return d
function cartesianNormalizeInPlace(d) {
  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
  d[0] /= l, d[1] /= l, d[2] /= l;
}

function compose(a, b) {

  function compose(x, y) {
    return x = a(x, y), b(x[0], x[1]);
  }

  if (a.invert && b.invert) compose.invert = function(x, y) {
    return x = b.invert(x, y), x && a.invert(x[0], x[1]);
  };

  return compose;
}

function rotationIdentity(lambda, phi) {
  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];
}

rotationIdentity.invert = rotationIdentity;

function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {
  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))
    : rotationLambda(deltaLambda))
    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)
    : rotationIdentity);
}

function forwardRotationLambda(deltaLambda) {
  return function(lambda, phi) {
    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];
  };
}

function rotationLambda(deltaLambda) {
  var rotation = forwardRotationLambda(deltaLambda);
  rotation.invert = forwardRotationLambda(-deltaLambda);
  return rotation;
}

function rotationPhiGamma(deltaPhi, deltaGamma) {
  var cosDeltaPhi = cos(deltaPhi),
      sinDeltaPhi = sin(deltaPhi),
      cosDeltaGamma = cos(deltaGamma),
      sinDeltaGamma = sin(deltaGamma);

  function rotation(lambda, phi) {
    var cosPhi = cos(phi),
        x = cos(lambda) * cosPhi,
        y = sin(lambda) * cosPhi,
        z = sin(phi),
        k = z * cosDeltaPhi + x * sinDeltaPhi;
    return [
      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),
      asin(k * cosDeltaGamma + y * sinDeltaGamma)
    ];
  }

  rotation.invert = function(lambda, phi) {
    var cosPhi = cos(phi),
        x = cos(lambda) * cosPhi,
        y = sin(lambda) * cosPhi,
        z = sin(phi),
        k = z * cosDeltaGamma - y * sinDeltaGamma;
    return [
      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),
      asin(k * cosDeltaPhi - x * sinDeltaPhi)
    ];
  };

  return rotation;
}

function rotation(rotate) {
  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);

  function forward(coordinates) {
    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);
    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;
  }

  forward.invert = function(coordinates) {
    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);
    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;
  };

  return forward;
}

// Generates a circle centered at [0°, 0°], with a given radius and precision.
function circleStream(stream, radius, delta, direction, t0, t1) {
  if (!delta) return;
  var cosRadius = cos(radius),
      sinRadius = sin(radius),
      step = direction * delta;
  if (t0 == null) {
    t0 = radius + direction * tau;
    t1 = radius - step / 2;
  } else {
    t0 = circleRadius(cosRadius, t0);
    t1 = circleRadius(cosRadius, t1);
    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;
  }
  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {
    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);
    stream.point(point[0], point[1]);
  }
}

// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].
function circleRadius(cosRadius, point) {
  point = cartesian(point), point[0] -= cosRadius;
  cartesianNormalizeInPlace(point);
  var radius = acos(-point[1]);
  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;
}

function clipBuffer() {
  var lines = [],
      line;
  return {
    point: function(x, y, m) {
      line.push([x, y, m]);
    },
    lineStart: function() {
      lines.push(line = []);
    },
    lineEnd: noop,
    rejoin: function() {
      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
    },
    result: function() {
      var result = lines;
      lines = [];
      line = null;
      return result;
    }
  };
}

function pointEqual(a, b) {
  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;
}

function Intersection(point, points, other, entry) {
  this.x = point;
  this.z = points;
  this.o = other; // another intersection
  this.e = entry; // is an entry?
  this.v = false; // visited
  this.n = this.p = null; // next & previous
}

// A generalized polygon clipping algorithm: given a polygon that has been cut
// into its visible line segments, and rejoins the segments by interpolating
// along the clip edge.
function clipRejoin(segments, compareIntersection, startInside, interpolate, stream) {
  var subject = [],
      clip = [],
      i,
      n;

  segments.forEach(function(segment) {
    if ((n = segment.length - 1) <= 0) return;
    var n, p0 = segment[0], p1 = segment[n], x;

    if (pointEqual(p0, p1)) {
      if (!p0[2] && !p1[2]) {
        stream.lineStart();
        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);
        stream.lineEnd();
        return;
      }
      // handle degenerate cases by moving the point
      p1[0] += 2 * epsilon;
    }

    subject.push(x = new Intersection(p0, segment, null, true));
    clip.push(x.o = new Intersection(p0, null, x, false));
    subject.push(x = new Intersection(p1, segment, null, false));
    clip.push(x.o = new Intersection(p1, null, x, true));
  });

  if (!subject.length) return;

  clip.sort(compareIntersection);
  link(subject);
  link(clip);

  for (i = 0, n = clip.length; i < n; ++i) {
    clip[i].e = startInside = !startInside;
  }

  var start = subject[0],
      points,
      point;

  while (1) {
    // Find first unvisited intersection.
    var current = start,
        isSubject = true;
    while (current.v) if ((current = current.n) === start) return;
    points = current.z;
    stream.lineStart();
    do {
      current.v = current.o.v = true;
      if (current.e) {
        if (isSubject) {
          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);
        } else {
          interpolate(current.x, current.n.x, 1, stream);
        }
        current = current.n;
      } else {
        if (isSubject) {
          points = current.p.z;
          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);
        } else {
          interpolate(current.x, current.p.x, -1, stream);
        }
        current = current.p;
      }
      current = current.o;
      points = current.z;
      isSubject = !isSubject;
    } while (!current.v);
    stream.lineEnd();
  }
}

function link(array) {
  if (!(n = array.length)) return;
  var n,
      i = 0,
      a = array[0],
      b;
  while (++i < n) {
    a.n = b = array[i];
    b.p = a;
    a = b;
  }
  a.n = b = array[0];
  b.p = a;
}

var sum = adder();

function longitude(point) {
  if (abs(point[0]) <= pi)
    return point[0];
  else
    return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);
}

function polygonContains(polygon, point) {
  var lambda = longitude(point),
      phi = point[1],
      sinPhi = sin(phi),
      normal = [sin(lambda), -cos(lambda), 0],
      angle = 0,
      winding = 0;

  sum.reset();

  if (sinPhi === 1) phi = halfPi + epsilon;
  else if (sinPhi === -1) phi = -halfPi - epsilon;

  for (var i = 0, n = polygon.length; i < n; ++i) {
    if (!(m = (ring = polygon[i]).length)) continue;
    var ring,
        m,
        point0 = ring[m - 1],
        lambda0 = longitude(point0),
        phi0 = point0[1] / 2 + quarterPi,
        sinPhi0 = sin(phi0),
        cosPhi0 = cos(phi0);

    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {
      var point1 = ring[j],
          lambda1 = longitude(point1),
          phi1 = point1[1] / 2 + quarterPi,
          sinPhi1 = sin(phi1),
          cosPhi1 = cos(phi1),
          delta = lambda1 - lambda0,
          sign = delta >= 0 ? 1 : -1,
          absDelta = sign * delta,
          antimeridian = absDelta > pi,
          k = sinPhi0 * sinPhi1;

      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));
      angle += antimeridian ? delta + sign * tau : delta;

      // Are the longitudes either side of the point’s meridian (lambda),
      // and are the latitudes smaller than the parallel (phi)?
      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {
        var arc = cartesianCross(cartesian(point0), cartesian(point1));
        cartesianNormalizeInPlace(arc);
        var intersection = cartesianCross(normal, arc);
        cartesianNormalizeInPlace(intersection);
        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);
        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {
          winding += antimeridian ^ delta >= 0 ? 1 : -1;
        }
      }
    }
  }

  // First, determine whether the South pole is inside or outside:
  //
  // It is inside if:
  // * the polygon winds around it in a clockwise direction.
  // * the polygon does not (cumulatively) wind around it, but has a negative
  //   (counter-clockwise) area.
  //
  // Second, count the (signed) number of times a segment crosses a lambda
  // from the point to the South pole.  If it is zero, then the point is the
  // same side as the South pole.

  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);
}

function ascending(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}

function bisector(compare) {
  if (compare.length === 1) compare = ascendingComparator(compare);
  return {
    left: function(a, x, lo, hi) {
      if (lo == null) lo = 0;
      if (hi == null) hi = a.length;
      while (lo < hi) {
        var mid = lo + hi >>> 1;
        if (compare(a[mid], x) < 0) lo = mid + 1;
        else hi = mid;
      }
      return lo;
    },
    right: function(a, x, lo, hi) {
      if (lo == null) lo = 0;
      if (hi == null) hi = a.length;
      while (lo < hi) {
        var mid = lo + hi >>> 1;
        if (compare(a[mid], x) > 0) hi = mid;
        else lo = mid + 1;
      }
      return lo;
    }
  };
}

function ascendingComparator(f) {
  return function(d, x) {
    return ascending(f(d), x);
  };
}

bisector(ascending);

function range(start, stop, step) {
  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;

  var i = -1,
      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,
      range = new Array(n);

  while (++i < n) {
    range[i] = start + i * step;
  }

  return range;
}

function merge(arrays) {
  var n = arrays.length,
      m,
      i = -1,
      j = 0,
      merged,
      array;

  while (++i < n) j += arrays[i].length;
  merged = new Array(j);

  while (--n >= 0) {
    array = arrays[n];
    m = array.length;
    while (--m >= 0) {
      merged[--j] = array[m];
    }
  }

  return merged;
}

function clip(pointVisible, clipLine, interpolate, start) {
  return function(sink) {
    var line = clipLine(sink),
        ringBuffer = clipBuffer(),
        ringSink = clipLine(ringBuffer),
        polygonStarted = false,
        polygon,
        segments,
        ring;

    var clip = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function() {
        clip.point = pointRing;
        clip.lineStart = ringStart;
        clip.lineEnd = ringEnd;
        segments = [];
        polygon = [];
      },
      polygonEnd: function() {
        clip.point = point;
        clip.lineStart = lineStart;
        clip.lineEnd = lineEnd;
        segments = merge(segments);
        var startInside = polygonContains(polygon, start);
        if (segments.length) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);
        } else if (startInside) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          sink.lineStart();
          interpolate(null, null, 1, sink);
          sink.lineEnd();
        }
        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;
        segments = polygon = null;
      },
      sphere: function() {
        sink.polygonStart();
        sink.lineStart();
        interpolate(null, null, 1, sink);
        sink.lineEnd();
        sink.polygonEnd();
      }
    };

    function point(lambda, phi) {
      if (pointVisible(lambda, phi)) sink.point(lambda, phi);
    }

    function pointLine(lambda, phi) {
      line.point(lambda, phi);
    }

    function lineStart() {
      clip.point = pointLine;
      line.lineStart();
    }

    function lineEnd() {
      clip.point = point;
      line.lineEnd();
    }

    function pointRing(lambda, phi) {
      ring.push([lambda, phi]);
      ringSink.point(lambda, phi);
    }

    function ringStart() {
      ringSink.lineStart();
      ring = [];
    }

    function ringEnd() {
      pointRing(ring[0][0], ring[0][1]);
      ringSink.lineEnd();

      var clean = ringSink.clean(),
          ringSegments = ringBuffer.result(),
          i, n = ringSegments.length, m,
          segment,
          point;

      ring.pop();
      polygon.push(ring);
      ring = null;

      if (!n) return;

      // No intersections.
      if (clean & 1) {
        segment = ringSegments[0];
        if ((m = segment.length - 1) > 0) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          sink.lineStart();
          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);
          sink.lineEnd();
        }
        return;
      }

      // Rejoin connected segments.
      // TODO reuse ringBuffer.rejoin()?
      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));

      segments.push(ringSegments.filter(validSegment));
    }

    return clip;
  };
}

function validSegment(segment) {
  return segment.length > 1;
}

// Intersections are sorted along the clip edge. For both antimeridian cutting
// and circle clipping, the same comparison is used.
function compareIntersection(a, b) {
  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])
       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);
}

var clipAntimeridian = clip(
  function() { return true; },
  clipAntimeridianLine,
  clipAntimeridianInterpolate,
  [-pi, -halfPi]
);

// Takes a line and cuts into visible segments. Return values: 0 - there were
// intersections or the line was empty; 1 - no intersections; 2 - there were
// intersections, and the first and last segments should be rejoined.
function clipAntimeridianLine(stream) {
  var lambda0 = NaN,
      phi0 = NaN,
      sign0 = NaN,
      clean; // no intersections

  return {
    lineStart: function() {
      stream.lineStart();
      clean = 1;
    },
    point: function(lambda1, phi1) {
      var sign1 = lambda1 > 0 ? pi : -pi,
          delta = abs(lambda1 - lambda0);
      if (abs(delta - pi) < epsilon) { // line crosses a pole
        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);
        stream.point(sign0, phi0);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi0);
        stream.point(lambda1, phi0);
        clean = 0;
      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian
        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies
        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;
        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);
        stream.point(sign0, phi0);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi0);
        clean = 0;
      }
      stream.point(lambda0 = lambda1, phi0 = phi1);
      sign0 = sign1;
    },
    lineEnd: function() {
      stream.lineEnd();
      lambda0 = phi0 = NaN;
    },
    clean: function() {
      return 2 - clean; // if intersections, rejoin first and last segments
    }
  };
}

function clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {
  var cosPhi0,
      cosPhi1,
      sinLambda0Lambda1 = sin(lambda0 - lambda1);
  return abs(sinLambda0Lambda1) > epsilon
      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)
          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))
          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))
      : (phi0 + phi1) / 2;
}

function clipAntimeridianInterpolate(from, to, direction, stream) {
  var phi;
  if (from == null) {
    phi = direction * halfPi;
    stream.point(-pi, phi);
    stream.point(0, phi);
    stream.point(pi, phi);
    stream.point(pi, 0);
    stream.point(pi, -phi);
    stream.point(0, -phi);
    stream.point(-pi, -phi);
    stream.point(-pi, 0);
    stream.point(-pi, phi);
  } else if (abs(from[0] - to[0]) > epsilon) {
    var lambda = from[0] < to[0] ? pi : -pi;
    phi = direction * lambda / 2;
    stream.point(-lambda, phi);
    stream.point(0, phi);
    stream.point(lambda, phi);
  } else {
    stream.point(to[0], to[1]);
  }
}

function clipCircle(radius) {
  var cr = cos(radius),
      delta = 6 * radians,
      smallRadius = cr > 0,
      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case

  function interpolate(from, to, direction, stream) {
    circleStream(stream, radius, delta, direction, from, to);
  }

  function visible(lambda, phi) {
    return cos(lambda) * cos(phi) > cr;
  }

  // Takes a line and cuts into visible segments. Return values used for polygon
  // clipping: 0 - there were intersections or the line was empty; 1 - no
  // intersections 2 - there were intersections, and the first and last segments
  // should be rejoined.
  function clipLine(stream) {
    var point0, // previous point
        c0, // code for previous point
        v0, // visibility of previous point
        v00, // visibility of first point
        clean; // no intersections
    return {
      lineStart: function() {
        v00 = v0 = false;
        clean = 1;
      },
      point: function(lambda, phi) {
        var point1 = [lambda, phi],
            point2,
            v = visible(lambda, phi),
            c = smallRadius
              ? v ? 0 : code(lambda, phi)
              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;
        if (!point0 && (v00 = v0 = v)) stream.lineStart();
        if (v !== v0) {
          point2 = intersect(point0, point1);
          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))
            point1[2] = 1;
        }
        if (v !== v0) {
          clean = 0;
          if (v) {
            // outside going in
            stream.lineStart();
            point2 = intersect(point1, point0);
            stream.point(point2[0], point2[1]);
          } else {
            // inside going out
            point2 = intersect(point0, point1);
            stream.point(point2[0], point2[1], 2);
            stream.lineEnd();
          }
          point0 = point2;
        } else if (notHemisphere && point0 && smallRadius ^ v) {
          var t;
          // If the codes for two points are different, or are both zero,
          // and there this segment intersects with the small circle.
          if (!(c & c0) && (t = intersect(point1, point0, true))) {
            clean = 0;
            if (smallRadius) {
              stream.lineStart();
              stream.point(t[0][0], t[0][1]);
              stream.point(t[1][0], t[1][1]);
              stream.lineEnd();
            } else {
              stream.point(t[1][0], t[1][1]);
              stream.lineEnd();
              stream.lineStart();
              stream.point(t[0][0], t[0][1], 3);
            }
          }
        }
        if (v && (!point0 || !pointEqual(point0, point1))) {
          stream.point(point1[0], point1[1]);
        }
        point0 = point1, v0 = v, c0 = c;
      },
      lineEnd: function() {
        if (v0) stream.lineEnd();
        point0 = null;
      },
      // Rejoin first and last segments if there were intersections and the first
      // and last points were visible.
      clean: function() {
        return clean | ((v00 && v0) << 1);
      }
    };
  }

  // Intersects the great circle between a and b with the clip circle.
  function intersect(a, b, two) {
    var pa = cartesian(a),
        pb = cartesian(b);

    // We have two planes, n1.p = d1 and n2.p = d2.
    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).
    var n1 = [1, 0, 0], // normal
        n2 = cartesianCross(pa, pb),
        n2n2 = cartesianDot(n2, n2),
        n1n2 = n2[0], // cartesianDot(n1, n2),
        determinant = n2n2 - n1n2 * n1n2;

    // Two polar points.
    if (!determinant) return !two && a;

    var c1 =  cr * n2n2 / determinant,
        c2 = -cr * n1n2 / determinant,
        n1xn2 = cartesianCross(n1, n2),
        A = cartesianScale(n1, c1),
        B = cartesianScale(n2, c2);
    cartesianAddInPlace(A, B);

    // Solve |p(t)|^2 = 1.
    var u = n1xn2,
        w = cartesianDot(A, u),
        uu = cartesianDot(u, u),
        t2 = w * w - uu * (cartesianDot(A, A) - 1);

    if (t2 < 0) return;

    var t = sqrt(t2),
        q = cartesianScale(u, (-w - t) / uu);
    cartesianAddInPlace(q, A);
    q = spherical(q);

    if (!two) return q;

    // Two intersection points.
    var lambda0 = a[0],
        lambda1 = b[0],
        phi0 = a[1],
        phi1 = b[1],
        z;

    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;

    var delta = lambda1 - lambda0,
        polar = abs(delta - pi) < epsilon,
        meridian = polar || delta < epsilon;

    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;

    // Check that the first point is between a and b.
    if (meridian
        ? polar
          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)
          : phi0 <= q[1] && q[1] <= phi1
        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {
      var q1 = cartesianScale(u, (-w + t) / uu);
      cartesianAddInPlace(q1, A);
      return [q, spherical(q1)];
    }
  }

  // Generates a 4-bit vector representing the location of a point relative to
  // the small circle's bounding box.
  function code(lambda, phi) {
    var r = smallRadius ? radius : pi - radius,
        code = 0;
    if (lambda < -r) code |= 1; // left
    else if (lambda > r) code |= 2; // right
    if (phi < -r) code |= 4; // below
    else if (phi > r) code |= 8; // above
    return code;
  }

  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);
}

function clipLine(a, b, x0, y0, x1, y1) {
  var ax = a[0],
      ay = a[1],
      bx = b[0],
      by = b[1],
      t0 = 0,
      t1 = 1,
      dx = bx - ax,
      dy = by - ay,
      r;

  r = x0 - ax;
  if (!dx && r > 0) return;
  r /= dx;
  if (dx < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dx > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = x1 - ax;
  if (!dx && r < 0) return;
  r /= dx;
  if (dx < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dx > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  r = y0 - ay;
  if (!dy && r > 0) return;
  r /= dy;
  if (dy < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dy > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = y1 - ay;
  if (!dy && r < 0) return;
  r /= dy;
  if (dy < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dy > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;
  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;
  return true;
}

var clipMax = 1e9, clipMin = -clipMax;

// TODO Use d3-polygon’s polygonContains here for the ring check?
// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?

function clipRectangle(x0, y0, x1, y1) {

  function visible(x, y) {
    return x0 <= x && x <= x1 && y0 <= y && y <= y1;
  }

  function interpolate(from, to, direction, stream) {
    var a = 0, a1 = 0;
    if (from == null
        || (a = corner(from, direction)) !== (a1 = corner(to, direction))
        || comparePoint(from, to) < 0 ^ direction > 0) {
      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);
      while ((a = (a + direction + 4) % 4) !== a1);
    } else {
      stream.point(to[0], to[1]);
    }
  }

  function corner(p, direction) {
    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3
        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1
        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0
        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon
  }

  function compareIntersection(a, b) {
    return comparePoint(a.x, b.x);
  }

  function comparePoint(a, b) {
    var ca = corner(a, 1),
        cb = corner(b, 1);
    return ca !== cb ? ca - cb
        : ca === 0 ? b[1] - a[1]
        : ca === 1 ? a[0] - b[0]
        : ca === 2 ? a[1] - b[1]
        : b[0] - a[0];
  }

  return function(stream) {
    var activeStream = stream,
        bufferStream = clipBuffer(),
        segments,
        polygon,
        ring,
        x__, y__, v__, // first point
        x_, y_, v_, // previous point
        first,
        clean;

    var clipStream = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: polygonStart,
      polygonEnd: polygonEnd
    };

    function point(x, y) {
      if (visible(x, y)) activeStream.point(x, y);
    }

    function polygonInside() {
      var winding = 0;

      for (var i = 0, n = polygon.length; i < n; ++i) {
        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {
          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];
          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }
          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }
        }
      }

      return winding;
    }

    // Buffer geometry within a polygon and then clip it en masse.
    function polygonStart() {
      activeStream = bufferStream, segments = [], polygon = [], clean = true;
    }

    function polygonEnd() {
      var startInside = polygonInside(),
          cleanInside = clean && startInside,
          visible = (segments = merge(segments)).length;
      if (cleanInside || visible) {
        stream.polygonStart();
        if (cleanInside) {
          stream.lineStart();
          interpolate(null, null, 1, stream);
          stream.lineEnd();
        }
        if (visible) {
          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);
        }
        stream.polygonEnd();
      }
      activeStream = stream, segments = polygon = ring = null;
    }

    function lineStart() {
      clipStream.point = linePoint;
      if (polygon) polygon.push(ring = []);
      first = true;
      v_ = false;
      x_ = y_ = NaN;
    }

    // TODO rather than special-case polygons, simply handle them separately.
    // Ideally, coincident intersection points should be jittered to avoid
    // clipping issues.
    function lineEnd() {
      if (segments) {
        linePoint(x__, y__);
        if (v__ && v_) bufferStream.rejoin();
        segments.push(bufferStream.result());
      }
      clipStream.point = point;
      if (v_) activeStream.lineEnd();
    }

    function linePoint(x, y) {
      var v = visible(x, y);
      if (polygon) ring.push([x, y]);
      if (first) {
        x__ = x, y__ = y, v__ = v;
        first = false;
        if (v) {
          activeStream.lineStart();
          activeStream.point(x, y);
        }
      } else {
        if (v && v_) activeStream.point(x, y);
        else {
          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],
              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];
          if (clipLine(a, b, x0, y0, x1, y1)) {
            if (!v_) {
              activeStream.lineStart();
              activeStream.point(a[0], a[1]);
            }
            activeStream.point(b[0], b[1]);
            if (!v) activeStream.lineEnd();
            clean = false;
          } else if (v) {
            activeStream.lineStart();
            activeStream.point(x, y);
            clean = false;
          }
        }
      }
      x_ = x, y_ = y, v_ = v;
    }

    return clipStream;
  };
}

var lengthSum$1 = adder(),
    lambda0,
    sinPhi0,
    cosPhi0;

var lengthStream$1 = {
  sphere: noop,
  point: noop,
  lineStart: lengthLineStart,
  lineEnd: noop,
  polygonStart: noop,
  polygonEnd: noop
};

function lengthLineStart() {
  lengthStream$1.point = lengthPointFirst$1;
  lengthStream$1.lineEnd = lengthLineEnd;
}

function lengthLineEnd() {
  lengthStream$1.point = lengthStream$1.lineEnd = noop;
}

function lengthPointFirst$1(lambda, phi) {
  lambda *= radians, phi *= radians;
  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);
  lengthStream$1.point = lengthPoint$1;
}

function lengthPoint$1(lambda, phi) {
  lambda *= radians, phi *= radians;
  var sinPhi = sin(phi),
      cosPhi = cos(phi),
      delta = abs(lambda - lambda0),
      cosDelta = cos(delta),
      sinDelta = sin(delta),
      x = cosPhi * sinDelta,
      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,
      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;
  lengthSum$1.add(atan2(sqrt(x * x + y * y), z));
  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;
}

function length(object) {
  lengthSum$1.reset();
  geoStream(object, lengthStream$1);
  return +lengthSum$1;
}

var coordinates = [null, null],
    object = {type: "LineString", coordinates: coordinates};

function distance(a, b) {
  coordinates[0] = a;
  coordinates[1] = b;
  return length(object);
}

var containsObjectType = {
  Feature: function(object, point) {
    return containsGeometry(object.geometry, point);
  },
  FeatureCollection: function(object, point) {
    var features = object.features, i = -1, n = features.length;
    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;
    return false;
  }
};

var containsGeometryType = {
  Sphere: function() {
    return true;
  },
  Point: function(object, point) {
    return containsPoint(object.coordinates, point);
  },
  MultiPoint: function(object, point) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) if (containsPoint(coordinates[i], point)) return true;
    return false;
  },
  LineString: function(object, point) {
    return containsLine(object.coordinates, point);
  },
  MultiLineString: function(object, point) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) if (containsLine(coordinates[i], point)) return true;
    return false;
  },
  Polygon: function(object, point) {
    return containsPolygon(object.coordinates, point);
  },
  MultiPolygon: function(object, point) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;
    return false;
  },
  GeometryCollection: function(object, point) {
    var geometries = object.geometries, i = -1, n = geometries.length;
    while (++i < n) if (containsGeometry(geometries[i], point)) return true;
    return false;
  }
};

function containsGeometry(geometry, point) {
  return geometry && containsGeometryType.hasOwnProperty(geometry.type)
      ? containsGeometryType[geometry.type](geometry, point)
      : false;
}

function containsPoint(coordinates, point) {
  return distance(coordinates, point) === 0;
}

function containsLine(coordinates, point) {
  var ao, bo, ab;
  for (var i = 0, n = coordinates.length; i < n; i++) {
    bo = distance(coordinates[i], point);
    if (bo === 0) return true;
    if (i > 0) {
      ab = distance(coordinates[i], coordinates[i - 1]);
      if (
        ab > 0 &&
        ao <= ab &&
        bo <= ab &&
        (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2 * ab
      )
        return true;
    }
    ao = bo;
  }
  return false;
}

function containsPolygon(coordinates, point) {
  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));
}

function ringRadians(ring) {
  return ring = ring.map(pointRadians), ring.pop(), ring;
}

function pointRadians(point) {
  return [point[0] * radians, point[1] * radians];
}

function geoContains(object, point) {
  return (object && containsObjectType.hasOwnProperty(object.type)
      ? containsObjectType[object.type]
      : containsGeometry)(object, point);
}

function graticuleX(y0, y1, dy) {
  var y = range(y0, y1 - epsilon, dy).concat(y1);
  return function(x) { return y.map(function(y) { return [x, y]; }); };
}

function graticuleY(x0, x1, dx) {
  var x = range(x0, x1 - epsilon, dx).concat(x1);
  return function(y) { return x.map(function(x) { return [x, y]; }); };
}

function graticule() {
  var x1, x0, X1, X0,
      y1, y0, Y1, Y0,
      dx = 10, dy = dx, DX = 90, DY = 360,
      x, y, X, Y,
      precision = 2.5;

  function graticule() {
    return {type: "MultiLineString", coordinates: lines()};
  }

  function lines() {
    return range(ceil(X0 / DX) * DX, X1, DX).map(X)
        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))
        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))
        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));
  }

  graticule.lines = function() {
    return lines().map(function(coordinates) { return {type: "LineString", coordinates: coordinates}; });
  };

  graticule.outline = function() {
    return {
      type: "Polygon",
      coordinates: [
        X(X0).concat(
        Y(Y1).slice(1),
        X(X1).reverse().slice(1),
        Y(Y0).reverse().slice(1))
      ]
    };
  };

  graticule.extent = function(_) {
    if (!arguments.length) return graticule.extentMinor();
    return graticule.extentMajor(_).extentMinor(_);
  };

  graticule.extentMajor = function(_) {
    if (!arguments.length) return [[X0, Y0], [X1, Y1]];
    X0 = +_[0][0], X1 = +_[1][0];
    Y0 = +_[0][1], Y1 = +_[1][1];
    if (X0 > X1) _ = X0, X0 = X1, X1 = _;
    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
    return graticule.precision(precision);
  };

  graticule.extentMinor = function(_) {
    if (!arguments.length) return [[x0, y0], [x1, y1]];
    x0 = +_[0][0], x1 = +_[1][0];
    y0 = +_[0][1], y1 = +_[1][1];
    if (x0 > x1) _ = x0, x0 = x1, x1 = _;
    if (y0 > y1) _ = y0, y0 = y1, y1 = _;
    return graticule.precision(precision);
  };

  graticule.step = function(_) {
    if (!arguments.length) return graticule.stepMinor();
    return graticule.stepMajor(_).stepMinor(_);
  };

  graticule.stepMajor = function(_) {
    if (!arguments.length) return [DX, DY];
    DX = +_[0], DY = +_[1];
    return graticule;
  };

  graticule.stepMinor = function(_) {
    if (!arguments.length) return [dx, dy];
    dx = +_[0], dy = +_[1];
    return graticule;
  };

  graticule.precision = function(_) {
    if (!arguments.length) return precision;
    precision = +_;
    x = graticuleX(y0, y1, 90);
    y = graticuleY(x0, x1, precision);
    X = graticuleX(Y0, Y1, 90);
    Y = graticuleY(X0, X1, precision);
    return graticule;
  };

  return graticule
      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])
      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);
}

function identity(x) {
  return x;
}

var areaSum = adder(),
    areaRingSum = adder(),
    x00$2,
    y00$2,
    x0$3,
    y0$3;

var areaStream = {
  point: noop,
  lineStart: noop,
  lineEnd: noop,
  polygonStart: function() {
    areaStream.lineStart = areaRingStart;
    areaStream.lineEnd = areaRingEnd;
  },
  polygonEnd: function() {
    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;
    areaSum.add(abs(areaRingSum));
    areaRingSum.reset();
  },
  result: function() {
    var area = areaSum / 2;
    areaSum.reset();
    return area;
  }
};

function areaRingStart() {
  areaStream.point = areaPointFirst;
}

function areaPointFirst(x, y) {
  areaStream.point = areaPoint;
  x00$2 = x0$3 = x, y00$2 = y0$3 = y;
}

function areaPoint(x, y) {
  areaRingSum.add(y0$3 * x - x0$3 * y);
  x0$3 = x, y0$3 = y;
}

function areaRingEnd() {
  areaPoint(x00$2, y00$2);
}

var x0$2 = Infinity,
    y0$2 = x0$2,
    x1 = -x0$2,
    y1 = x1;

var boundsStream = {
  point: boundsPoint,
  lineStart: noop,
  lineEnd: noop,
  polygonStart: noop,
  polygonEnd: noop,
  result: function() {
    var bounds = [[x0$2, y0$2], [x1, y1]];
    x1 = y1 = -(y0$2 = x0$2 = Infinity);
    return bounds;
  }
};

function boundsPoint(x, y) {
  if (x < x0$2) x0$2 = x;
  if (x > x1) x1 = x;
  if (y < y0$2) y0$2 = y;
  if (y > y1) y1 = y;
}

// TODO Enforce positive area for exterior, negative area for interior?

var X0 = 0,
    Y0 = 0,
    Z0 = 0,
    X1 = 0,
    Y1 = 0,
    Z1 = 0,
    X2 = 0,
    Y2 = 0,
    Z2 = 0,
    x00$1,
    y00$1,
    x0$1,
    y0$1;

var centroidStream = {
  point: centroidPoint,
  lineStart: centroidLineStart,
  lineEnd: centroidLineEnd,
  polygonStart: function() {
    centroidStream.lineStart = centroidRingStart;
    centroidStream.lineEnd = centroidRingEnd;
  },
  polygonEnd: function() {
    centroidStream.point = centroidPoint;
    centroidStream.lineStart = centroidLineStart;
    centroidStream.lineEnd = centroidLineEnd;
  },
  result: function() {
    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]
        : Z1 ? [X1 / Z1, Y1 / Z1]
        : Z0 ? [X0 / Z0, Y0 / Z0]
        : [NaN, NaN];
    X0 = Y0 = Z0 =
    X1 = Y1 = Z1 =
    X2 = Y2 = Z2 = 0;
    return centroid;
  }
};

function centroidPoint(x, y) {
  X0 += x;
  Y0 += y;
  ++Z0;
}

function centroidLineStart() {
  centroidStream.point = centroidPointFirstLine;
}

function centroidPointFirstLine(x, y) {
  centroidStream.point = centroidPointLine;
  centroidPoint(x0$1 = x, y0$1 = y);
}

function centroidPointLine(x, y) {
  var dx = x - x0$1, dy = y - y0$1, z = sqrt(dx * dx + dy * dy);
  X1 += z * (x0$1 + x) / 2;
  Y1 += z * (y0$1 + y) / 2;
  Z1 += z;
  centroidPoint(x0$1 = x, y0$1 = y);
}

function centroidLineEnd() {
  centroidStream.point = centroidPoint;
}

function centroidRingStart() {
  centroidStream.point = centroidPointFirstRing;
}

function centroidRingEnd() {
  centroidPointRing(x00$1, y00$1);
}

function centroidPointFirstRing(x, y) {
  centroidStream.point = centroidPointRing;
  centroidPoint(x00$1 = x0$1 = x, y00$1 = y0$1 = y);
}

function centroidPointRing(x, y) {
  var dx = x - x0$1,
      dy = y - y0$1,
      z = sqrt(dx * dx + dy * dy);

  X1 += z * (x0$1 + x) / 2;
  Y1 += z * (y0$1 + y) / 2;
  Z1 += z;

  z = y0$1 * x - x0$1 * y;
  X2 += z * (x0$1 + x);
  Y2 += z * (y0$1 + y);
  Z2 += z * 3;
  centroidPoint(x0$1 = x, y0$1 = y);
}

function PathContext(context) {
  this._context = context;
}

PathContext.prototype = {
  _radius: 4.5,
  pointRadius: function(_) {
    return this._radius = _, this;
  },
  polygonStart: function() {
    this._line = 0;
  },
  polygonEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line === 0) this._context.closePath();
    this._point = NaN;
  },
  point: function(x, y) {
    switch (this._point) {
      case 0: {
        this._context.moveTo(x, y);
        this._point = 1;
        break;
      }
      case 1: {
        this._context.lineTo(x, y);
        break;
      }
      default: {
        this._context.moveTo(x + this._radius, y);
        this._context.arc(x, y, this._radius, 0, tau);
        break;
      }
    }
  },
  result: noop
};

var lengthSum = adder(),
    lengthRing,
    x00,
    y00,
    x0,
    y0;

var lengthStream = {
  point: noop,
  lineStart: function() {
    lengthStream.point = lengthPointFirst;
  },
  lineEnd: function() {
    if (lengthRing) lengthPoint(x00, y00);
    lengthStream.point = noop;
  },
  polygonStart: function() {
    lengthRing = true;
  },
  polygonEnd: function() {
    lengthRing = null;
  },
  result: function() {
    var length = +lengthSum;
    lengthSum.reset();
    return length;
  }
};

function lengthPointFirst(x, y) {
  lengthStream.point = lengthPoint;
  x00 = x0 = x, y00 = y0 = y;
}

function lengthPoint(x, y) {
  x0 -= x, y0 -= y;
  lengthSum.add(sqrt(x0 * x0 + y0 * y0));
  x0 = x, y0 = y;
}

function PathString() {
  this._string = [];
}

PathString.prototype = {
  _radius: 4.5,
  _circle: circle(4.5),
  pointRadius: function(_) {
    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;
    return this;
  },
  polygonStart: function() {
    this._line = 0;
  },
  polygonEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line === 0) this._string.push("Z");
    this._point = NaN;
  },
  point: function(x, y) {
    switch (this._point) {
      case 0: {
        this._string.push("M", x, ",", y);
        this._point = 1;
        break;
      }
      case 1: {
        this._string.push("L", x, ",", y);
        break;
      }
      default: {
        if (this._circle == null) this._circle = circle(this._radius);
        this._string.push("M", x, ",", y, this._circle);
        break;
      }
    }
  },
  result: function() {
    if (this._string.length) {
      var result = this._string.join("");
      this._string = [];
      return result;
    } else {
      return null;
    }
  }
};

function circle(radius) {
  return "m0," + radius
      + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius
      + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius
      + "z";
}

function geoPath(projection, context) {
  var pointRadius = 4.5,
      projectionStream,
      contextStream;

  function path(object) {
    if (object) {
      if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
      geoStream(object, projectionStream(contextStream));
    }
    return contextStream.result();
  }

  path.area = function(object) {
    geoStream(object, projectionStream(areaStream));
    return areaStream.result();
  };

  path.measure = function(object) {
    geoStream(object, projectionStream(lengthStream));
    return lengthStream.result();
  };

  path.bounds = function(object) {
    geoStream(object, projectionStream(boundsStream));
    return boundsStream.result();
  };

  path.centroid = function(object) {
    geoStream(object, projectionStream(centroidStream));
    return centroidStream.result();
  };

  path.projection = function(_) {
    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;
  };

  path.context = function(_) {
    if (!arguments.length) return context;
    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);
    if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
    return path;
  };

  path.pointRadius = function(_) {
    if (!arguments.length) return pointRadius;
    pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
    return path;
  };

  return path.projection(projection).context(context);
}

function transformer(methods) {
  return function(stream) {
    var s = new TransformStream;
    for (var key in methods) s[key] = methods[key];
    s.stream = stream;
    return s;
  };
}

function TransformStream() {}

TransformStream.prototype = {
  constructor: TransformStream,
  point: function(x, y) { this.stream.point(x, y); },
  sphere: function() { this.stream.sphere(); },
  lineStart: function() { this.stream.lineStart(); },
  lineEnd: function() { this.stream.lineEnd(); },
  polygonStart: function() { this.stream.polygonStart(); },
  polygonEnd: function() { this.stream.polygonEnd(); }
};

function fit(projection, fitBounds, object) {
  var clip = projection.clipExtent && projection.clipExtent();
  projection.scale(150).translate([0, 0]);
  if (clip != null) projection.clipExtent(null);
  geoStream(object, projection.stream(boundsStream));
  fitBounds(boundsStream.result());
  if (clip != null) projection.clipExtent(clip);
  return projection;
}

function fitExtent(projection, extent, object) {
  return fit(projection, function(b) {
    var w = extent[1][0] - extent[0][0],
        h = extent[1][1] - extent[0][1],
        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),
        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,
        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;
    projection.scale(150 * k).translate([x, y]);
  }, object);
}

function fitSize(projection, size, object) {
  return fitExtent(projection, [[0, 0], size], object);
}

function fitWidth(projection, width, object) {
  return fit(projection, function(b) {
    var w = +width,
        k = w / (b[1][0] - b[0][0]),
        x = (w - k * (b[1][0] + b[0][0])) / 2,
        y = -k * b[0][1];
    projection.scale(150 * k).translate([x, y]);
  }, object);
}

function fitHeight(projection, height, object) {
  return fit(projection, function(b) {
    var h = +height,
        k = h / (b[1][1] - b[0][1]),
        x = -k * b[0][0],
        y = (h - k * (b[1][1] + b[0][1])) / 2;
    projection.scale(150 * k).translate([x, y]);
  }, object);
}

var maxDepth = 16, // maximum depth of subdivision
    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)

function resample(project, delta2) {
  return +delta2 ? resample$1(project, delta2) : resampleNone(project);
}

function resampleNone(project) {
  return transformer({
    point: function(x, y) {
      x = project(x, y);
      this.stream.point(x[0], x[1]);
    }
  });
}

function resample$1(project, delta2) {

  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {
    var dx = x1 - x0,
        dy = y1 - y0,
        d2 = dx * dx + dy * dy;
    if (d2 > 4 * delta2 && depth--) {
      var a = a0 + a1,
          b = b0 + b1,
          c = c0 + c1,
          m = sqrt(a * a + b * b + c * c),
          phi2 = asin(c /= m),
          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),
          p = project(lambda2, phi2),
          x2 = p[0],
          y2 = p[1],
          dx2 = x2 - x0,
          dy2 = y2 - y0,
          dz = dy * dx2 - dx * dy2;
      if (dz * dz / d2 > delta2 // perpendicular projected distance
          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end
          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance
        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);
        stream.point(x2, y2);
        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);
      }
    }
  }
  return function(stream) {
    var lambda00, x00, y00, a00, b00, c00, // first point
        lambda0, x0, y0, a0, b0, c0; // previous point

    var resampleStream = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },
      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }
    };

    function point(x, y) {
      x = project(x, y);
      stream.point(x[0], x[1]);
    }

    function lineStart() {
      x0 = NaN;
      resampleStream.point = linePoint;
      stream.lineStart();
    }

    function linePoint(lambda, phi) {
      var c = cartesian([lambda, phi]), p = project(lambda, phi);
      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
      stream.point(x0, y0);
    }

    function lineEnd() {
      resampleStream.point = point;
      stream.lineEnd();
    }

    function ringStart() {
      lineStart();
      resampleStream.point = ringPoint;
      resampleStream.lineEnd = ringEnd;
    }

    function ringPoint(lambda, phi) {
      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
      resampleStream.point = linePoint;
    }

    function ringEnd() {
      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);
      resampleStream.lineEnd = lineEnd;
      lineEnd();
    }

    return resampleStream;
  };
}

var transformRadians = transformer({
  point: function(x, y) {
    this.stream.point(x * radians, y * radians);
  }
});

function transformRotate(rotate) {
  return transformer({
    point: function(x, y) {
      var r = rotate(x, y);
      return this.stream.point(r[0], r[1]);
    }
  });
}

function scaleTranslate(k, dx, dy, sx, sy) {
  function transform(x, y) {
    x *= sx; y *= sy;
    return [dx + k * x, dy - k * y];
  }
  transform.invert = function(x, y) {
    return [(x - dx) / k * sx, (dy - y) / k * sy];
  };
  return transform;
}

function scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {
  var cosAlpha = cos(alpha),
      sinAlpha = sin(alpha),
      a = cosAlpha * k,
      b = sinAlpha * k,
      ai = cosAlpha / k,
      bi = sinAlpha / k,
      ci = (sinAlpha * dy - cosAlpha * dx) / k,
      fi = (sinAlpha * dx + cosAlpha * dy) / k;
  function transform(x, y) {
    x *= sx; y *= sy;
    return [a * x - b * y + dx, dy - b * x - a * y];
  }
  transform.invert = function(x, y) {
    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];
  };
  return transform;
}

function projection(project) {
  return projectionMutator(function() { return project; })();
}

function projectionMutator(projectAt) {
  var project,
      k = 150, // scale
      x = 480, y = 250, // translate
      lambda = 0, phi = 0, // center
      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate
      alpha = 0, // post-rotate angle
      sx = 1, // reflectX
      sy = 1, // reflectX
      theta = null, preclip = clipAntimeridian, // pre-clip angle
      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent
      delta2 = 0.5, // precision
      projectResample,
      projectTransform,
      projectRotateTransform,
      cache,
      cacheStream;

  function projection(point) {
    return projectRotateTransform(point[0] * radians, point[1] * radians);
  }

  function invert(point) {
    point = projectRotateTransform.invert(point[0], point[1]);
    return point && [point[0] * degrees, point[1] * degrees];
  }

  projection.stream = function(stream) {
    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));
  };

  projection.preclip = function(_) {
    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;
  };

  projection.postclip = function(_) {
    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
  };

  projection.clipAngle = function(_) {
    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;
  };

  projection.clipExtent = function(_) {
    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };

  projection.scale = function(_) {
    return arguments.length ? (k = +_, recenter()) : k;
  };

  projection.translate = function(_) {
    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];
  };

  projection.center = function(_) {
    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];
  };

  projection.rotate = function(_) {
    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];
  };

  projection.angle = function(_) {
    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;
  };

  projection.reflectX = function(_) {
    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;
  };

  projection.reflectY = function(_) {
    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;
  };

  projection.precision = function(_) {
    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);
  };

  projection.fitExtent = function(extent, object) {
    return fitExtent(projection, extent, object);
  };

  projection.fitSize = function(size, object) {
    return fitSize(projection, size, object);
  };

  projection.fitWidth = function(width, object) {
    return fitWidth(projection, width, object);
  };

  projection.fitHeight = function(height, object) {
    return fitHeight(projection, height, object);
  };

  function recenter() {
    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),
        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], sx, sy, alpha);
    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);
    projectTransform = compose(project, transform);
    projectRotateTransform = compose(rotate, projectTransform);
    projectResample = resample(projectTransform, delta2);
    return reset();
  }

  function reset() {
    cache = cacheStream = null;
    return projection;
  }

  return function() {
    project = projectAt.apply(this, arguments);
    projection.invert = project.invert && invert;
    return recenter();
  };
}

function azimuthalRaw(scale) {
  return function(x, y) {
    var cx = cos(x),
        cy = cos(y),
        k = scale(cx * cy);
    return [
      k * cy * sin(x),
      k * sin(y)
    ];
  }
}

function azimuthalInvert(angle) {
  return function(x, y) {
    var z = sqrt(x * x + y * y),
        c = angle(z),
        sc = sin(c),
        cc = cos(c);
    return [
      atan2(x * sc, z * cc),
      asin(z && y * sc / z)
    ];
  }
}

var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {
  return sqrt(2 / (1 + cxcy));
});

azimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {
  return 2 * asin(z / 2);
});

function geoAzimuthalEqualArea() {
  return projection(azimuthalEqualAreaRaw)
      .scale(124.75)
      .clipAngle(180 - 1e-3);
}

var azimuthalEquidistantRaw = azimuthalRaw(function(c) {
  return (c = acos(c)) && c / sin(c);
});

azimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {
  return z;
});

function geoAzimuthalEquidistant() {
  return projection(azimuthalEquidistantRaw)
      .scale(79.4188)
      .clipAngle(180 - 1e-3);
}

function mercatorRaw(lambda, phi) {
  return [lambda, log(tan((halfPi + phi) / 2))];
}

mercatorRaw.invert = function(x, y) {
  return [x, 2 * atan(exp(y)) - halfPi];
};

function geoMercator() {
  return mercatorProjection(mercatorRaw)
      .scale(961 / tau);
}

function mercatorProjection(project) {
  var m = projection(project),
      center = m.center,
      scale = m.scale,
      translate = m.translate,
      clipExtent = m.clipExtent,
      x0 = null, y0, x1, y1; // clip extent

  m.scale = function(_) {
    return arguments.length ? (scale(_), reclip()) : scale();
  };

  m.translate = function(_) {
    return arguments.length ? (translate(_), reclip()) : translate();
  };

  m.center = function(_) {
    return arguments.length ? (center(_), reclip()) : center();
  };

  m.clipExtent = function(_) {
    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };

  function reclip() {
    var k = pi * scale(),
        t = m(rotation(m.rotate()).invert([0, 0]));
    return clipExtent(x0 == null
        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw
        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]
        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);
  }

  return reclip();
}

function equirectangularRaw(lambda, phi) {
  return [lambda, phi];
}

equirectangularRaw.invert = equirectangularRaw;

function geoEquirectangular() {
  return projection(equirectangularRaw)
      .scale(152.63);
}

var A1 = 1.340264,
    A2 = -0.081106,
    A3 = 0.000893,
    A4 = 0.003796,
    M$1 = sqrt(3) / 2,
    iterations = 12;

function equalEarthRaw(lambda, phi) {
  var l = asin(M$1 * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;
  return [
    lambda * cos(l) / (M$1 * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),
    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))
  ];
}

equalEarthRaw.invert = function(x, y) {
  var l = y, l2 = l * l, l6 = l2 * l2 * l2;
  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {
    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;
    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);
    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;
    if (abs(delta) < epsilon2) break;
  }
  return [
    M$1 * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),
    asin(sin(l) / M$1)
  ];
};

function geoEqualEarth() {
  return projection(equalEarthRaw)
      .scale(177.158);
}

function gnomonicRaw(x, y) {
  var cy = cos(y), k = cos(x) * cy;
  return [cy * sin(x) / k, sin(y) / k];
}

gnomonicRaw.invert = azimuthalInvert(atan);

function geoGnomonic() {
  return projection(gnomonicRaw)
      .scale(144.049)
      .clipAngle(60);
}

function naturalEarth1Raw(lambda, phi) {
  var phi2 = phi * phi, phi4 = phi2 * phi2;
  return [
    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),
    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))
  ];
}

naturalEarth1Raw.invert = function(x, y) {
  var phi = y, i = 25, delta;
  do {
    var phi2 = phi * phi, phi4 = phi2 * phi2;
    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /
        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));
  } while (abs(delta) > epsilon && --i > 0);
  return [
    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),
    phi
  ];
};

function geoNaturalEarth1() {
  return projection(naturalEarth1Raw)
      .scale(175.295);
}

function orthographicRaw(x, y) {
  return [cos(y) * sin(x), sin(y)];
}

orthographicRaw.invert = azimuthalInvert(asin);

function geoOrthographic() {
  return projection(orthographicRaw)
      .scale(249.5)
      .clipAngle(90 + epsilon);
}

function stereographicRaw(x, y) {
  var cy = cos(y), k = 1 + cos(x) * cy;
  return [cy * sin(x) / k, sin(y) / k];
}

stereographicRaw.invert = azimuthalInvert(function(z) {
  return 2 * atan(z);
});

function geoStereographic() {
  return projection(stereographicRaw)
      .scale(250)
      .clipAngle(142);
}

function transverseMercatorRaw(lambda, phi) {
  return [log(tan((halfPi + phi) / 2)), -lambda];
}

transverseMercatorRaw.invert = function(x, y) {
  return [-y, 2 * atan(exp(x)) - halfPi];
};

function geoTransverseMercator() {
  var m = mercatorProjection(transverseMercatorRaw),
      center = m.center,
      rotate = m.rotate;

  m.center = function(_) {
    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);
  };

  m.rotate = function(_) {
    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);
  };

  return rotate([0, 0, 90])
      .scale(159.155);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}

var projectionById = {
  azimuthalEqualArea: geoAzimuthalEqualArea,
  azimuthalEquidistant: geoAzimuthalEquidistant,
  gnomonic: geoGnomonic,
  orthographic: geoOrthographic,
  stereographic: geoStereographic,
  equalEarth: geoEqualEarth,
  equirectangular: geoEquirectangular,
  mercator: geoMercator,
  transverseMercator: geoTransverseMercator,
  naturalEarth1: geoNaturalEarth1
};
var useGeoMap = function useGeoMap(_ref) {
  var width = _ref.width,
      height = _ref.height,
      projectionType = _ref.projectionType,
      projectionScale = _ref.projectionScale,
      projectionTranslation = _ref.projectionTranslation,
      projectionRotation = _ref.projectionRotation,
      fillColor = _ref.fillColor,
      borderWidth = _ref.borderWidth,
      borderColor = _ref.borderColor;
  var projection = React.useMemo(function () {
    return projectionById[projectionType]().scale(projectionScale).translate([width * projectionTranslation[0], height * projectionTranslation[1]]).rotate(projectionRotation);
  }, [width, height, projectionType, projectionScale, projectionTranslation[0], projectionTranslation[1], projectionRotation[0], projectionRotation[1], projectionRotation[2]]);
  var path = React.useMemo(function () {
    return geoPath(projection);
  }, [projection]);
  var graticule$1 = React.useMemo(function () {
    return graticule();
  });
  var theme = useTheme();
  var getBorderWidth = React.useMemo(function () {
    return typeof borderWidth === 'function' ? borderWidth : function () {
      return borderWidth;
    };
  }, [borderWidth]);
  var getBorderColor = useInheritedColor(borderColor, theme);
  var getFillColor = React.useMemo(function () {
    return typeof fillColor === 'function' ? fillColor : function () {
      return fillColor;
    };
  }, [fillColor]);
  return {
    projection: projection,
    path: path,
    graticule: graticule$1,
    getBorderWidth: getBorderWidth,
    getBorderColor: getBorderColor,
    getFillColor: getFillColor
  };
};
var useChoropleth = function useChoropleth(_ref2) {
  var features = _ref2.features,
      data = _ref2.data,
      match = _ref2.match,
      label = _ref2.label,
      value = _ref2.value,
      valueFormat = _ref2.valueFormat,
      colors = _ref2.colors,
      unknownColor = _ref2.unknownColor,
      domain = _ref2.domain;
  var findMatchingDatum = React.useMemo(function () {
    if (isFunction_1(match)) return match;
    return function (feature, datum) {
      var featureKey = get_1(feature, match);
      var datumKey = get_1(datum, match);
      return featureKey && featureKey === datumKey;
    };
  }, [match]);
  var getLabel = React.useMemo(function () {
    return isFunction_1(label) ? label : function (datum) {
      return get_1(datum, label);
    };
  }, [label]);
  var getValue = React.useMemo(function () {
    return isFunction_1(value) ? value : function (datum) {
      return get_1(datum, value);
    };
  }, [value]);
  var valueFormatter = React.useMemo(function () {
    if (valueFormat === undefined) return function (d) {
      return d;
    };
    if (isFunction_1(valueFormat)) return valueFormat;
    return format$1(valueFormat);
  }, [valueFormat]);
  var colorScale = React.useMemo(function () {
    return guessQuantizeColorScale(colors).domain(domain);
  }, [colors, domain]);
  var getFillColor = React.useMemo(function () {
    return function (feature) {
      if (feature.value === undefined) return unknownColor;
      return colorScale(feature.value);
    };
  }, [colorScale, unknownColor]);
  var boundFeatures = React.useMemo(function () {
    return features.map(function (feature) {
      var datum = data.find(function (datum) {
        return findMatchingDatum(feature, datum);
      });
      var datumValue = getValue(datum);
      if (datum) {
        var featureWithData = _objectSpread2(_objectSpread2({}, feature), {}, {
          data: datum,
          value: datumValue,
          formattedValue: valueFormatter(datumValue)
        });
        featureWithData.color = getFillColor(featureWithData);
        featureWithData.label = getLabel(featureWithData);
        return featureWithData;
      }
      return feature;
    });
  }, [features, data, findMatchingDatum, getValue, valueFormatter, getFillColor]);
  var legendData = useQuantizeColorScaleLegendData({
    scale: colorScale,
    valueFormat: valueFormatter
  });
  return {
    colorScale: colorScale,
    getFillColor: getFillColor,
    boundFeatures: boundFeatures,
    valueFormatter: valueFormatter,
    legendData: legendData
  };
};

var ChoroplethTooltip = React.memo(function (_ref) {
  var feature = _ref.feature;
  if (feature.data === undefined) return null;
  return jsxRuntime.jsx(BasicTooltip, {
    id: feature.label,
    color: feature.color,
    enableChip: true,
    value: feature.formattedValue
  });
});
ChoroplethTooltip.displayName = 'ChoroplethTooltip';

var commonPropTypes = {
  features: propTypes.arrayOf(propTypes.shape({
    id: propTypes.string.isRequired,
    type: propTypes.oneOf(['Feature']).isRequired,
    properties: propTypes.object,
    geometry: propTypes.object.isRequired
  })).isRequired,
  projectionType: propTypes.oneOf(Object.keys(projectionById)).isRequired,
  projectionScale: propTypes.number.isRequired,
  projectionTranslation: propTypes.arrayOf(propTypes.number).isRequired,
  projectionRotation: propTypes.arrayOf(propTypes.number).isRequired,
  fillColor: propTypes.oneOfType([propTypes.string, propTypes.func]).isRequired,
  borderWidth: propTypes.oneOfType([propTypes.number, propTypes.func]).isRequired,
  borderColor: inheritedColorPropType.isRequired,
  enableGraticule: propTypes.bool.isRequired,
  graticuleLineWidth: propTypes.number.isRequired,
  graticuleLineColor: propTypes.string.isRequired,
  isInteractive: propTypes.bool.isRequired,
  onMouseEnter: propTypes.func.isRequired,
  onMouseMove: propTypes.func.isRequired,
  onMouseLeave: propTypes.func.isRequired,
  onClick: propTypes.func.isRequired,
  tooltip: propTypes.any,
  layers: propTypes.arrayOf(propTypes.oneOfType([propTypes.oneOf(['graticule', 'features']), propTypes.func])).isRequired
};
var GeoMapPropTypes = _objectSpread2(_objectSpread2({}, commonPropTypes), {}, {
  role: propTypes.string.isRequired
});
var GeoMapCanvasPropTypes = _objectSpread2({
  pixelRatio: propTypes.number.isRequired
}, commonPropTypes);
var commonChoroplethPropTypes = {
  data: propTypes.arrayOf(propTypes.object).isRequired,
  match: propTypes.oneOfType([propTypes.string, propTypes.func]).isRequired,
  label: propTypes.oneOfType([propTypes.string, propTypes.func]).isRequired,
  value: propTypes.oneOfType([propTypes.string, propTypes.func]).isRequired,
  valueFormat: propTypes.oneOfType([propTypes.string, propTypes.func]),
  colors: quantizeColorScalePropType.isRequired,
  domain: propTypes.arrayOf(propTypes.number).isRequired,
  unknownColor: propTypes.string.isRequired,
  layers: propTypes.arrayOf(propTypes.oneOfType([propTypes.oneOf(['graticule', 'features', 'legends']), propTypes.func])).isRequired
};
_objectSpread2(_objectSpread2(_objectSpread2({}, GeoMapPropTypes), commonChoroplethPropTypes), {}, {
  role: propTypes.string.isRequired
});
_objectSpread2(_objectSpread2({}, GeoMapCanvasPropTypes), commonChoroplethPropTypes);
var commonDefaultProps = {
  projectionType: 'mercator',
  projectionScale: 100,
  projectionTranslation: [0.5, 0.5],
  projectionRotation: [0, 0, 0],
  enableGraticule: false,
  graticuleLineWidth: 0.5,
  graticuleLineColor: '#999999',
  fillColor: '#dddddd',
  borderWidth: 0,
  borderColor: '#000000',
  isInteractive: true,
  onMouseEnter: function onMouseEnter() {},
  onMouseLeave: function onMouseLeave() {},
  onMouseMove: function onMouseMove() {},
  onClick: function onClick() {},
  layers: ['graticule', 'features'],
  legends: []
};
var GeoMapDefaultProps = _objectSpread2(_objectSpread2({}, commonDefaultProps), {}, {
  role: 'img'
});
var GeoMapCanvasDefaultProps = _objectSpread2(_objectSpread2({}, commonDefaultProps), {}, {
  pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1
});
var commonChoroplethDefaultProps = {
  match: 'id',
  label: 'id',
  value: 'value',
  colors: 'PuBuGn',
  unknownColor: '#999',
  tooltip: ChoroplethTooltip,
  layers: ['graticule', 'features', 'legends']
};
var ChoroplethDefaultProps = _objectSpread2(_objectSpread2(_objectSpread2({}, GeoMapDefaultProps), commonChoroplethDefaultProps), {}, {
  role: 'img'
});
var ChoroplethCanvasDefaultProps = _objectSpread2(_objectSpread2({}, GeoMapCanvasDefaultProps), commonChoroplethDefaultProps);

var GeoGraticule = React.memo(function (_ref) {
  var path = _ref.path,
      graticule = _ref.graticule,
      lineWidth = _ref.lineWidth,
      lineColor = _ref.lineColor;
  return jsxRuntime.jsx("path", {
    fill: "none",
    strokeWidth: lineWidth,
    stroke: lineColor,
    d: path(graticule())
  });
});
GeoGraticule.displayName = 'GeoGraticule';

var GeoMapFeature = React.memo(function (_ref) {
  var feature = _ref.feature,
      path = _ref.path,
      fillColor = _ref.fillColor,
      borderWidth = _ref.borderWidth,
      borderColor = _ref.borderColor,
      _onClick = _ref.onClick,
      _onMouseEnter = _ref.onMouseEnter,
      _onMouseMove = _ref.onMouseMove,
      _onMouseLeave = _ref.onMouseLeave;
  return jsxRuntime.jsx("path", {
    fill: fillColor,
    strokeWidth: borderWidth,
    stroke: borderColor,
    strokeLinejoin: "bevel",
    d: path(feature),
    onMouseEnter: function onMouseEnter(event) {
      return _onMouseEnter(feature, event);
    },
    onMouseMove: function onMouseMove(event) {
      return _onMouseMove(feature, event);
    },
    onMouseLeave: function onMouseLeave(event) {
      return _onMouseLeave(feature, event);
    },
    onClick: function onClick(event) {
      return _onClick(feature, event);
    }
  }, feature.id);
});
GeoMapFeature.displayName = 'GeoMapFeature';

var GeoMap = React.memo(function (props) {
  var width = props.width,
      height = props.height,
      partialMargin = props.margin,
      features = props.features,
      layers = props.layers,
      projectionType = props.projectionType,
      projectionScale = props.projectionScale,
      projectionTranslation = props.projectionTranslation,
      projectionRotation = props.projectionRotation,
      fillColor = props.fillColor,
      borderWidth = props.borderWidth,
      borderColor = props.borderColor,
      enableGraticule = props.enableGraticule,
      graticuleLineWidth = props.graticuleLineWidth,
      graticuleLineColor = props.graticuleLineColor,
      isInteractive = props.isInteractive,
      onClick = props.onClick,
      Tooltip = props.tooltip,
      role = props.role;
  var _useDimensions = useDimensions(width, height, partialMargin),
      margin = _useDimensions.margin,
      outerWidth = _useDimensions.outerWidth,
      outerHeight = _useDimensions.outerHeight;
  var _useGeoMap = useGeoMap({
    width: width,
    height: height,
    projectionType: projectionType,
    projectionScale: projectionScale,
    projectionTranslation: projectionTranslation,
    projectionRotation: projectionRotation,
    fillColor: fillColor,
    borderWidth: borderWidth,
    borderColor: borderColor
  }),
      graticule = _useGeoMap.graticule,
      path = _useGeoMap.path,
      getFillColor = _useGeoMap.getFillColor,
      getBorderWidth = _useGeoMap.getBorderWidth,
      getBorderColor = _useGeoMap.getBorderColor;
  var theme = useTheme();
  var _useTooltip = useTooltip(),
      showTooltipFromEvent = _useTooltip.showTooltipFromEvent,
      hideTooltip = _useTooltip.hideTooltip;
  var handleClick = React.useCallback(function (feature, event) {
    return isInteractive && onClick && onClick(feature, event);
  }, [isInteractive, onClick]);
  var handleMouseEnter = React.useCallback(function (feature, event) {
    return isInteractive && Tooltip && showTooltipFromEvent(jsxRuntime.jsx(Tooltip, {
      feature: feature
    }), event);
  }, [isInteractive, showTooltipFromEvent, Tooltip]);
  var handleMouseMove = React.useCallback(function (feature, event) {
    return isInteractive && Tooltip && showTooltipFromEvent(jsxRuntime.jsx(Tooltip, {
      feature: feature
    }), event);
  }, [isInteractive, showTooltipFromEvent, Tooltip]);
  var handleMouseLeave = React.useCallback(function () {
    return isInteractive && hideTooltip();
  }, [isInteractive, hideTooltip]);
  return jsxRuntime.jsx(SvgWrapper, {
    width: outerWidth,
    height: outerHeight,
    margin: margin,
    theme: theme,
    role: role,
    children: layers.map(function (layer, i) {
      if (layer === 'graticule') {
        if (enableGraticule !== true) return null;
        return jsxRuntime.jsx(GeoGraticule, {
          path: path,
          graticule: graticule,
          lineWidth: graticuleLineWidth,
          lineColor: graticuleLineColor
        }, "graticule");
      }
      if (layer === 'features') {
        return jsxRuntime.jsx(React.Fragment, {
          children: features.map(function (feature) {
            return jsxRuntime.jsx(GeoMapFeature, {
              feature: feature,
              path: path,
              fillColor: getFillColor(feature),
              borderWidth: getBorderWidth(feature),
              borderColor: getBorderColor(feature),
              onMouseEnter: handleMouseEnter,
              onMouseMove: handleMouseMove,
              onMouseLeave: handleMouseLeave,
              onClick: handleClick
            }, feature.id);
          })
        }, "features");
      }
      return jsxRuntime.jsx(React.Fragment, {
        children: layer(props)
      }, i);
    })
  });
});
GeoMap.displayName = 'GeoMap';
GeoMap.defaultProps = GeoMapDefaultProps;
withContainer(GeoMap);

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;
  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }
  return _arr;
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}

var getFeatureFromMouseEvent = function getFeatureFromMouseEvent(event, el, features, projection) {
  var _getRelativeCursor = getRelativeCursor(el, event),
      _getRelativeCursor2 = _slicedToArray(_getRelativeCursor, 2),
      x = _getRelativeCursor2[0],
      y = _getRelativeCursor2[1];
  return features.find(function (f) {
    return geoContains(f, projection.invert([x, y]));
  });
};
var GeoMapCanvas = React.memo(function (props) {
  var width = props.width,
      height = props.height,
      partialMargin = props.margin,
      pixelRatio = props.pixelRatio,
      features = props.features,
      layers = props.layers,
      projectionType = props.projectionType,
      projectionScale = props.projectionScale,
      projectionTranslation = props.projectionTranslation,
      projectionRotation = props.projectionRotation,
      fillColor = props.fillColor,
      borderWidth = props.borderWidth,
      borderColor = props.borderColor,
      enableGraticule = props.enableGraticule,
      graticuleLineWidth = props.graticuleLineWidth,
      graticuleLineColor = props.graticuleLineColor,
      isInteractive = props.isInteractive,
      onClick = props.onClick,
      onMouseMove = props.onMouseMove,
      Tooltip = props.tooltip;
  var canvasEl = React.useRef(null);
  var theme = useTheme();
  var _useDimensions = useDimensions(width, height, partialMargin),
      margin = _useDimensions.margin,
      outerWidth = _useDimensions.outerWidth,
      outerHeight = _useDimensions.outerHeight;
  var _useGeoMap = useGeoMap({
    width: width,
    height: height,
    projectionType: projectionType,
    projectionScale: projectionScale,
    projectionTranslation: projectionTranslation,
    projectionRotation: projectionRotation,
    fillColor: fillColor,
    borderWidth: borderWidth,
    borderColor: borderColor
  }),
      projection = _useGeoMap.projection,
      graticule = _useGeoMap.graticule,
      path = _useGeoMap.path,
      getFillColor = _useGeoMap.getFillColor,
      getBorderWidth = _useGeoMap.getBorderWidth,
      getBorderColor = _useGeoMap.getBorderColor;
  React.useEffect(function () {
    if (!canvasEl) return;
    canvasEl.current.width = outerWidth * pixelRatio;
    canvasEl.current.height = outerHeight * pixelRatio;
    var ctx = canvasEl.current.getContext('2d');
    ctx.scale(pixelRatio, pixelRatio);
    ctx.fillStyle = theme.background;
    ctx.fillRect(0, 0, outerWidth, outerHeight);
    ctx.translate(margin.left, margin.top);
    path.context(ctx);
    layers.forEach(function (layer) {
      if (layer === 'graticule') {
        if (enableGraticule === true) {
          ctx.lineWidth = graticuleLineWidth;
          ctx.strokeStyle = graticuleLineColor;
          ctx.beginPath();
          path(graticule());
          ctx.stroke();
        }
      } else if (layer === 'features') {
        features.forEach(function (feature) {
          ctx.beginPath();
          path(feature);
          ctx.fillStyle = getFillColor(feature);
          ctx.fill();
          var borderWidth = getBorderWidth(feature);
          if (borderWidth > 0) {
            ctx.strokeStyle = getBorderColor(feature);
            ctx.lineWidth = borderWidth;
            ctx.stroke();
          }
        });
      } else {
        layer(ctx, props);
      }
    });
  }, [canvasEl, outerWidth, outerHeight, margin, pixelRatio, theme, path, graticule, getFillColor, getBorderWidth, getBorderColor, features, layers]);
  var _useTooltip = useTooltip(),
      showTooltipFromEvent = _useTooltip.showTooltipFromEvent,
      hideTooltip = _useTooltip.hideTooltip;
  var handleMouseMove = React.useCallback(function (event) {
    if (!isInteractive || !Tooltip) return;
    var feature = getFeatureFromMouseEvent(event, canvasEl.current, features, projection);
    if (feature) {
      showTooltipFromEvent(jsxRuntime.jsx(Tooltip, {
        feature: feature
      }), event);
    } else {
      hideTooltip();
    }
    onMouseMove && onMouseMove(feature || null, event);
  }, [showTooltipFromEvent, hideTooltip, isInteractive, Tooltip, canvasEl, features, projection]);
  var handleMouseLeave = React.useCallback(function () {
    return isInteractive && hideTooltip();
  }, [isInteractive, hideTooltip]);
  var handleClick = React.useCallback(function (event) {
    if (!isInteractive || !onClick) return;
    var feature = getFeatureFromMouseEvent(event, canvasEl.current, features, projection);
    if (feature) {
      onClick(feature, event);
    }
  }, [isInteractive, canvasEl, features, projection, onClick]);
  return jsxRuntime.jsx("canvas", {
    ref: canvasEl,
    width: outerWidth * pixelRatio,
    height: outerHeight * pixelRatio,
    style: {
      width: outerWidth,
      height: outerHeight,
      cursor: isInteractive ? 'auto' : 'normal'
    },
    onMouseMove: handleMouseMove,
    onMouseLeave: handleMouseLeave,
    onClick: handleClick
  });
});
GeoMapCanvas.displatName = 'GeoMapCanvas';
GeoMapCanvas.defaultProps = GeoMapCanvasDefaultProps;
withContainer(GeoMapCanvas);

var Choropleth = React.memo(function (_ref) {
  var width = _ref.width,
      height = _ref.height,
      partialMargin = _ref.margin,
      features = _ref.features,
      data = _ref.data,
      match = _ref.match,
      label = _ref.label,
      value = _ref.value,
      valueFormat = _ref.valueFormat,
      projectionType = _ref.projectionType,
      projectionScale = _ref.projectionScale,
      projectionTranslation = _ref.projectionTranslation,
      projectionRotation = _ref.projectionRotation,
      colors = _ref.colors,
      domain = _ref.domain,
      unknownColor = _ref.unknownColor,
      borderWidth = _ref.borderWidth,
      borderColor = _ref.borderColor,
      enableGraticule = _ref.enableGraticule,
      graticuleLineWidth = _ref.graticuleLineWidth,
      graticuleLineColor = _ref.graticuleLineColor,
      layers = _ref.layers,
      legends = _ref.legends,
      isInteractive = _ref.isInteractive,
      onClick = _ref.onClick,
      Tooltip = _ref.tooltip,
      role = _ref.role;
  var _useDimensions = useDimensions(width, height, partialMargin),
      margin = _useDimensions.margin,
      outerWidth = _useDimensions.outerWidth,
      outerHeight = _useDimensions.outerHeight;
  var _useGeoMap = useGeoMap({
    width: width,
    height: height,
    projectionType: projectionType,
    projectionScale: projectionScale,
    projectionTranslation: projectionTranslation,
    projectionRotation: projectionRotation,
    fillColor: function fillColor() {},
    borderWidth: borderWidth,
    borderColor: borderColor
  }),
      graticule = _useGeoMap.graticule,
      path = _useGeoMap.path,
      getBorderWidth = _useGeoMap.getBorderWidth,
      getBorderColor = _useGeoMap.getBorderColor;
  var _useChoropleth = useChoropleth({
    features: features,
    data: data,
    match: match,
    label: label,
    value: value,
    valueFormat: valueFormat,
    colors: colors,
    unknownColor: unknownColor,
    domain: domain
  }),
      getFillColor = _useChoropleth.getFillColor,
      boundFeatures = _useChoropleth.boundFeatures,
      legendData = _useChoropleth.legendData;
  var theme = useTheme();
  var _useTooltip = useTooltip(),
      showTooltipFromEvent = _useTooltip.showTooltipFromEvent,
      hideTooltip = _useTooltip.hideTooltip;
  var handleClick = React.useCallback(function (feature, event) {
    return isInteractive && onClick && onClick(feature, event);
  }, [isInteractive, onClick]);
  var handleMouseEnter = React.useCallback(function (feature, event) {
    return isInteractive && Tooltip && showTooltipFromEvent(jsxRuntime.jsx(Tooltip, {
      feature: feature
    }), event);
  }, [isInteractive, showTooltipFromEvent, Tooltip]);
  var handleMouseMove = React.useCallback(function (feature, event) {
    return isInteractive && Tooltip && showTooltipFromEvent(jsxRuntime.jsx(Tooltip, {
      feature: feature
    }), event);
  }, [isInteractive, showTooltipFromEvent, Tooltip]);
  var handleMouseLeave = React.useCallback(function () {
    return isInteractive && hideTooltip();
  }, [isInteractive, hideTooltip]);
  return jsxRuntime.jsx(SvgWrapper, {
    width: outerWidth,
    height: outerHeight,
    margin: margin,
    theme: theme,
    role: role,
    children: layers.map(function (layer, i) {
      if (layer === 'graticule') {
        if (enableGraticule !== true) return null;
        return jsxRuntime.jsx(GeoGraticule, {
          path: path,
          graticule: graticule,
          lineWidth: graticuleLineWidth,
          lineColor: graticuleLineColor
        }, "graticule");
      }
      if (layer === 'features') {
        return jsxRuntime.jsx(React.Fragment, {
          children: boundFeatures.map(function (feature) {
            return jsxRuntime.jsx(GeoMapFeature, {
              feature: feature,
              path: path,
              fillColor: getFillColor(feature),
              borderWidth: getBorderWidth(feature),
              borderColor: getBorderColor(feature),
              onMouseEnter: handleMouseEnter,
              onMouseMove: handleMouseMove,
              onMouseLeave: handleMouseLeave,
              onClick: handleClick
            }, feature.id);
          })
        }, "features");
      }
      if (layer === 'legends') {
        return legends.map(function (legend, i) {
          return jsxRuntime.jsx(BoxLegendSvg, _objectSpread2({
            containerWidth: width,
            containerHeight: height,
            data: legendData
          }, legend), i);
        });
      }
      return jsxRuntime.jsx(React.Fragment, {
        children: layer({})
      }, i);
    })
  });
});
Choropleth.displayName = 'Choropleth';
Choropleth.defaultProps = ChoroplethDefaultProps;
var Choropleth$1 = withContainer(Choropleth);

var ResponsiveChoropleth = function ResponsiveChoropleth(props) {
  return jsxRuntime.jsx(ResponsiveWrapper, {
    children: function children(_ref) {
      var width = _ref.width,
          height = _ref.height;
      return jsxRuntime.jsx(Choropleth$1, _objectSpread2({
        width: width,
        height: height
      }, props));
    }
  });
};

var getFeatureFromMouseEvent$1 = function getFeatureFromMouseEvent(event, el, features, projection) {
  var _getRelativeCursor = getRelativeCursor(el, event),
      _getRelativeCursor2 = _slicedToArray(_getRelativeCursor, 2),
      x = _getRelativeCursor2[0],
      y = _getRelativeCursor2[1];
  return features.find(function (f) {
    return geoContains(f, projection.invert([x, y]));
  });
};
var ChoroplethCanvas = React.memo(function (_ref) {
  var width = _ref.width,
      height = _ref.height,
      partialMargin = _ref.margin,
      pixelRatio = _ref.pixelRatio,
      features = _ref.features,
      data = _ref.data,
      match = _ref.match,
      label = _ref.label,
      value = _ref.value,
      valueFormat = _ref.valueFormat,
      projectionType = _ref.projectionType,
      projectionScale = _ref.projectionScale,
      projectionTranslation = _ref.projectionTranslation,
      projectionRotation = _ref.projectionRotation,
      colors = _ref.colors,
      domain = _ref.domain,
      unknownColor = _ref.unknownColor,
      borderWidth = _ref.borderWidth,
      borderColor = _ref.borderColor,
      enableGraticule = _ref.enableGraticule,
      graticuleLineWidth = _ref.graticuleLineWidth,
      graticuleLineColor = _ref.graticuleLineColor,
      layers = _ref.layers,
      legends = _ref.legends,
      isInteractive = _ref.isInteractive,
      onClick = _ref.onClick,
      onMouseMove = _ref.onMouseMove,
      Tooltip = _ref.tooltip;
  var canvasEl = React.useRef(null);
  var theme = useTheme();
  var _useDimensions = useDimensions(width, height, partialMargin),
      margin = _useDimensions.margin,
      outerWidth = _useDimensions.outerWidth,
      outerHeight = _useDimensions.outerHeight;
  var _useGeoMap = useGeoMap({
    width: width,
    height: height,
    projectionType: projectionType,
    projectionScale: projectionScale,
    projectionTranslation: projectionTranslation,
    projectionRotation: projectionRotation,
    fillColor: function fillColor() {},
    borderWidth: borderWidth,
    borderColor: borderColor
  }),
      projection = _useGeoMap.projection,
      graticule = _useGeoMap.graticule,
      path = _useGeoMap.path,
      getBorderWidth = _useGeoMap.getBorderWidth,
      getBorderColor = _useGeoMap.getBorderColor;
  var _useChoropleth = useChoropleth({
    features: features,
    data: data,
    match: match,
    label: label,
    value: value,
    valueFormat: valueFormat,
    colors: colors,
    unknownColor: unknownColor,
    domain: domain
  }),
      getFillColor = _useChoropleth.getFillColor,
      boundFeatures = _useChoropleth.boundFeatures,
      legendData = _useChoropleth.legendData;
  React.useEffect(function () {
    if (!canvasEl) return;
    canvasEl.current.width = outerWidth * pixelRatio;
    canvasEl.current.height = outerHeight * pixelRatio;
    var ctx = canvasEl.current.getContext('2d');
    ctx.scale(pixelRatio, pixelRatio);
    ctx.fillStyle = theme.background;
    ctx.fillRect(0, 0, outerWidth, outerHeight);
    ctx.translate(margin.left, margin.top);
    path.context(ctx);
    layers.forEach(function (layer) {
      if (layer === 'graticule') {
        if (enableGraticule === true) {
          ctx.lineWidth = graticuleLineWidth;
          ctx.strokeStyle = graticuleLineColor;
          ctx.beginPath();
          path(graticule());
          ctx.stroke();
        }
      } else if (layer === 'features') {
        boundFeatures.forEach(function (feature) {
          ctx.beginPath();
          path(feature);
          ctx.fillStyle = getFillColor(feature);
          ctx.fill();
          var borderWidth = getBorderWidth(feature);
          if (borderWidth > 0) {
            ctx.strokeStyle = getBorderColor(feature);
            ctx.lineWidth = borderWidth;
            ctx.stroke();
          }
        });
      } else if (layer === 'legends') {
        legends.forEach(function (legend) {
          renderLegendToCanvas(ctx, _objectSpread2(_objectSpread2({}, legend), {}, {
            data: legendData,
            containerWidth: width,
            containerHeight: height,
            theme: theme
          }));
        });
      }
    });
  }, [canvasEl, outerWidth, outerHeight, margin, pixelRatio, theme, path, graticule, getFillColor, getBorderWidth, getBorderColor, boundFeatures, legends, layers]);
  var _useTooltip = useTooltip(),
      showTooltipFromEvent = _useTooltip.showTooltipFromEvent,
      hideTooltip = _useTooltip.hideTooltip;
  var handleMouseMove = React.useCallback(function (event) {
    if (!isInteractive || !Tooltip) return;
    var feature = getFeatureFromMouseEvent$1(event, canvasEl.current, boundFeatures, projection);
    if (feature) {
      showTooltipFromEvent(jsxRuntime.jsx(Tooltip, {
        feature: feature
      }), event);
    } else {
      hideTooltip();
    }
    onMouseMove && onMouseMove(feature || null, event);
  }, [showTooltipFromEvent, hideTooltip, isInteractive, Tooltip, canvasEl, boundFeatures, projection]);
  var handleMouseLeave = React.useCallback(function () {
    return isInteractive && hideTooltip();
  }, [isInteractive, hideTooltip]);
  var handleClick = React.useCallback(function (event) {
    if (!isInteractive || !onClick) return;
    var feature = getFeatureFromMouseEvent$1(event, canvasEl.current, boundFeatures, projection);
    if (feature) {
      onClick(feature, event);
    }
  }, [isInteractive, canvasEl, boundFeatures, projection, onClick]);
  return jsxRuntime.jsx("canvas", {
    ref: canvasEl,
    width: outerWidth * pixelRatio,
    height: outerHeight * pixelRatio,
    style: {
      width: outerWidth,
      height: outerHeight,
      cursor: isInteractive ? 'auto' : 'normal'
    },
    onMouseMove: handleMouseMove,
    onMouseLeave: handleMouseLeave,
    onClick: handleClick
  });
});
ChoroplethCanvas.displayName = 'ChoroplethCanvas';
ChoroplethCanvas.defaultProps = ChoroplethCanvasDefaultProps;
withContainer(ChoroplethCanvas);

var styles$8 = {"container":"ChoroplethChart_container___o_05X"};

var ChoroplethChart = React__namespace.forwardRef(function ChoroplethChart(props, ref) {
    var geoJson = props.geoJson, data = props.data, min = props.min, max = props.max, _a = props.showTooltip, showTooltip = _a === void 0 ? false : _a, _b = props.showLegend, showLegend = _b === void 0 ? true : _b, _c = props.showAbsoluteTooltip, showAbsoluteTooltip = _c === void 0 ? true : _c, className = props.className, otherProps = __rest(props, ["geoJson", "data", "min", "max", "showTooltip", "showLegend", "showAbsoluteTooltip", "className"]);
    var features = React__namespace.useMemo(function () {
        if (geoJson.type === "FeatureCollection") {
            return geoJson.features;
        }
        else {
            throw new Error("Provided geoJson is not in expected format");
        }
    }, [geoJson]);
    var chartData = React__namespace.useMemo(function () {
        return data.map(function (v) { return ({ id: v.countryCode, value: v.value }); });
    }, [data]);
    return (React__namespace.createElement("div", { ref: ref, className: classnames(styles$8.container, className) },
        React__namespace.createElement(ResponsiveChoropleth, __assign({ data: chartData, domain: [min, max], features: features, colors: "blues", unknownColor: colors$1["color-grey-light"], label: "properties.name", valueFormat: ".2s", projectionType: "equirectangular", projectionTranslation: [0.5, 0.5], projectionRotation: [0, 0, 0], borderWidth: 0.5, borderColor: colors$1["color-grey-light"], tooltip: showTooltip
                ? function (tooltipProps) { return (React__namespace.createElement(ChartTooltip.Geo, __assign({}, tooltipProps.feature, { showAbsolute: showAbsoluteTooltip }))); }
                : undefined, isInteractive: showTooltip, legends: showLegend
                ? [
                    {
                        anchor: "bottom-left",
                        direction: "column",
                        justify: true,
                        translateY: -75,
                        itemsSpacing: 0,
                        itemWidth: 94,
                        itemHeight: 18,
                        itemDirection: "left-to-right",
                        itemTextColor: colors$1["color-ui-interface"],
                        itemOpacity: 0.85,
                        symbolSize: 18,
                        effects: [
                            {
                                on: "hover",
                                style: {
                                    itemTextColor: "#000000",
                                    itemOpacity: 1,
                                },
                            },
                        ],
                    },
                ]
                : undefined }, otherProps))));
});

var styles$7 = {"container":"AnnouncementBanner_container___2f4ZO","noCloseButton":"AnnouncementBanner_noCloseButton____3uTc","titleContainer":"AnnouncementBanner_titleContainer___3UBf-","titleIcon":"AnnouncementBanner_titleIcon___36bHZ","title":"AnnouncementBanner_title___nDGN_","subtitle":"AnnouncementBanner_subtitle___3GYsr","cta":"AnnouncementBanner_cta___1PtTO","closeButton":"AnnouncementBanner_closeButton___36nFH"};

var AnnouncementBanner = React__namespace.forwardRef(function AnnouncementBanner(props, ref) {
    var _a;
    var className = props.className, icon = props.icon, title = props.title, subtitle = props.subtitle, cta = props.cta, ctaClassName = props.ctaClassName, variant = props.variant, isUrgent = props.isUrgent, onClose = props.onClose, otherProps = __rest(props, ["className", "icon", "title", "subtitle", "cta", "ctaClassName", "variant", "isUrgent", "onClose"]);
    var uiColourNames = [variant, !isUrgent && "10"].filter(Boolean).join("-");
    var textColour = !isUrgent || (isUrgent && variant === "warning") ? "black" : "white";
    var iconColour = isUrgent ? textColour : variant;
    var announcementStyle = {
        "--announcement-color": "var(--color-ui-" + uiColourNames + ")",
        "--announcement-label-color": "var(--color-grey-" + textColour + ")",
        "--announcement-icon-color": "var(--color-ui-" + iconColour + ")",
    };
    return (React__namespace.createElement("div", __assign({ role: "banner", style: announcementStyle, ref: ref, className: classnames(styles$7.container, className, (_a = {}, _a[styles$7.noCloseButton] = !onClose, _a)) }, otherProps),
        React__namespace.createElement("div", { className: styles$7.titleContainer },
            React__namespace.createElement("span", { className: styles$7.titleIcon }, icon),
            React__namespace.createElement("span", { className: styles$7.title }, title)),
        subtitle && React__namespace.createElement("div", { className: styles$7.subtitle }, subtitle),
        cta && React__namespace.createElement("div", { className: classnames(styles$7.cta, ctaClassName) }, cta),
        onClose && (React__namespace.createElement(IconButton, { className: styles$7.closeButton, style: { color: textColour }, label: "Close announcement", onClick: onClose },
            React__namespace.createElement(CloseIcon, null)))));
});

function toInteger(dirtyNumber) {
  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
    return NaN;
  }

  var number = Number(dirtyNumber);

  if (isNaN(number)) {
    return number;
  }

  return number < 0 ? Math.ceil(number) : Math.floor(number);
}

function requiredArgs(required, args) {
  if (args.length < required) {
    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');
  }
}

/**
 * @name toDate
 * @category Common Helpers
 * @summary Convert the given argument to an instance of Date.
 *
 * @description
 * Convert the given argument to an instance of Date.
 *
 * If the argument is an instance of Date, the function returns its clone.
 *
 * If the argument is a number, it is treated as a timestamp.
 *
 * If the argument is none of the above, the function returns Invalid Date.
 *
 * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.
 *
 * @param {Date|Number} argument - the value to convert
 * @returns {Date} the parsed date in the local time zone
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Clone the date:
 * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))
 * //=> Tue Feb 11 2014 11:30:30
 *
 * @example
 * // Convert the timestamp to date:
 * const result = toDate(1392098430000)
 * //=> Tue Feb 11 2014 11:30:30
 */

function toDate(argument) {
  requiredArgs(1, arguments);
  var argStr = Object.prototype.toString.call(argument); // Clone the date

  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {
    // Prevent the date to lose the milliseconds when passed to new Date() in IE10
    return new Date(argument.getTime());
  } else if (typeof argument === 'number' || argStr === '[object Number]') {
    return new Date(argument);
  } else {
    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {
      // eslint-disable-next-line no-console
      console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"); // eslint-disable-next-line no-console

      console.warn(new Error().stack);
    }

    return new Date(NaN);
  }
}

/**
 * @name addMonths
 * @category Month Helpers
 * @summary Add the specified number of months to the given date.
 *
 * @description
 * Add the specified number of months to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the months added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 5 months to 1 September 2014:
 * const result = addMonths(new Date(2014, 8, 1), 5)
 * //=> Sun Feb 01 2015 00:00:00
 */

function addMonths(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var amount = toInteger(dirtyAmount);

  if (isNaN(amount)) {
    return new Date(NaN);
  }

  if (!amount) {
    // If 0 months, no-op to avoid changing times in the hour before end of DST
    return date;
  }

  var dayOfMonth = date.getDate(); // The JS Date object supports date math by accepting out-of-bounds values for
  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and
  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we
  // want except that dates will wrap around the end of a month, meaning that
  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So
  // we'll default to the end of the desired month by adding 1 to the desired
  // month and using a date of 0 to back up one day to the end of the desired
  // month.

  var endOfDesiredMonth = new Date(date.getTime());
  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);
  var daysInMonth = endOfDesiredMonth.getDate();

  if (dayOfMonth >= daysInMonth) {
    // If we're already at the end of the month, then this is the correct date
    // and we're done.
    return endOfDesiredMonth;
  } else {
    // Otherwise, we now know that setting the original day-of-month value won't
    // cause an overflow, so set the desired day-of-month. Note that we can't
    // just set the date of `endOfDesiredMonth` because that object may have had
    // its time changed in the unusual case where where a DST transition was on
    // the last day of the month and its local time was in the hour skipped or
    // repeated next to a DST transition.  So we use `date` instead which is
    // guaranteed to still have the original time.
    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);
    return date;
  }
}

/**
 * @name addMilliseconds
 * @category Millisecond Helpers
 * @summary Add the specified number of milliseconds to the given date.
 *
 * @description
 * Add the specified number of milliseconds to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the milliseconds added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 750 milliseconds to 10 July 2014 12:45:30.000:
 * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
 * //=> Thu Jul 10 2014 12:45:30.750
 */

function addMilliseconds(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var timestamp = toDate(dirtyDate).getTime();
  var amount = toInteger(dirtyAmount);
  return new Date(timestamp + amount);
}

/**
 * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.
 * They usually appear for dates that denote time before the timezones were introduced
 * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891
 * and GMT+01:00:00 after that date)
 *
 * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,
 * which would lead to incorrect calculations.
 *
 * This function returns the timezone offset in milliseconds that takes seconds in account.
 */
function getTimezoneOffsetInMilliseconds(date) {
  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));
  utcDate.setUTCFullYear(date.getFullYear());
  return date.getTime() - utcDate.getTime();
}

/**
 * @name startOfDay
 * @category Day Helpers
 * @summary Return the start of a day for the given date.
 *
 * @description
 * Return the start of a day for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of a day
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of a day for 2 September 2014 11:55:00:
 * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Sep 02 2014 00:00:00
 */

function startOfDay(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  date.setHours(0, 0, 0, 0);
  return date;
}

/**
 * @name addYears
 * @category Year Helpers
 * @summary Add the specified number of years to the given date.
 *
 * @description
 * Add the specified number of years to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the years added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 5 years to 1 September 2014:
 * const result = addYears(new Date(2014, 8, 1), 5)
 * //=> Sun Sep 01 2019 00:00:00
 */

function addYears(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addMonths(dirtyDate, amount * 12);
}

/**
 * Days in 1 week.
 *
 * @name daysInWeek
 * @constant
 * @type {number}
 * @default
 */
/**
 * Maximum allowed time.
 *
 * @name maxTime
 * @constant
 * @type {number}
 * @default
 */

var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;
/**
 * Minimum allowed time.
 *
 * @name minTime
 * @constant
 * @type {number}
 * @default
 */

var minTime = -maxTime;

/**
 * @name isValid
 * @category Common Helpers
 * @summary Is the given date valid?
 *
 * @description
 * Returns false if argument is Invalid Date and true otherwise.
 * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
 * Invalid Date is a Date, whose time value is NaN.
 *
 * Time value of Date: http://es5.github.io/#x15.9.1.1
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - Now `isValid` doesn't throw an exception
 *   if the first argument is not an instance of Date.
 *   Instead, argument is converted beforehand using `toDate`.
 *
 *   Examples:
 *
 *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |
 *   |---------------------------|---------------|---------------|
 *   | `new Date()`              | `true`        | `true`        |
 *   | `new Date('2016-01-01')`  | `true`        | `true`        |
 *   | `new Date('')`            | `false`       | `false`       |
 *   | `new Date(1488370835081)` | `true`        | `true`        |
 *   | `new Date(NaN)`           | `false`       | `false`       |
 *   | `'2016-01-01'`            | `TypeError`   | `false`       |
 *   | `''`                      | `TypeError`   | `false`       |
 *   | `1488370835081`           | `TypeError`   | `true`        |
 *   | `NaN`                     | `TypeError`   | `false`       |
 *
 *   We introduce this change to make *date-fns* consistent with ECMAScript behavior
 *   that try to coerce arguments to the expected type
 *   (which is also the case with other *date-fns* functions).
 *
 * @param {*} date - the date to check
 * @returns {Boolean} the date is valid
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // For the valid date:
 * var result = isValid(new Date(2014, 1, 31))
 * //=> true
 *
 * @example
 * // For the value, convertable into a date:
 * var result = isValid(1393804800000)
 * //=> true
 *
 * @example
 * // For the invalid date:
 * var result = isValid(new Date(''))
 * //=> false
 */

function isValid(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  return !isNaN(date);
}

/**
 * @name isSameDay
 * @category Day Helpers
 * @summary Are the given dates in the same day?
 *
 * @description
 * Are the given dates in the same day?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the first date to check
 * @param {Date|Number} dateRight - the second date to check
 * @returns {Boolean} the dates are in the same day
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?
 * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))
 * //=> true
 */

function isSameDay(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);
  var dateRightStartOfDay = startOfDay(dirtyDateRight);
  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();
}

/**
 * @name endOfDay
 * @category Day Helpers
 * @summary Return the end of a day for the given date.
 *
 * @description
 * Return the end of a day for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the end of a day
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The end of a day for 2 September 2014 11:55:00:
 * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Sep 02 2014 23:59:59.999
 */

function endOfDay(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  date.setHours(23, 59, 59, 999);
  return date;
}

/**
 * @name endOfMonth
 * @category Month Helpers
 * @summary Return the end of a month for the given date.
 *
 * @description
 * Return the end of a month for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the end of a month
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The end of a month for 2 September 2014 11:55:00:
 * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Sep 30 2014 23:59:59.999
 */

function endOfMonth(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var month = date.getMonth();
  date.setFullYear(date.getFullYear(), month + 1, 0);
  date.setHours(23, 59, 59, 999);
  return date;
}

/**
 * @name isLastDayOfMonth
 * @category Month Helpers
 * @summary Is the given date the last day of a month?
 *
 * @description
 * Is the given date the last day of a month?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to check
 * @returns {Boolean} the date is the last day of a month
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Is 28 February 2014 the last day of a month?
 * var result = isLastDayOfMonth(new Date(2014, 1, 28))
 * //=> true
 */

function isLastDayOfMonth(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  return endOfDay(date).getTime() === endOfMonth(date).getTime();
}

/**
 * @name startOfMonth
 * @category Month Helpers
 * @summary Return the start of a month for the given date.
 *
 * @description
 * Return the start of a month for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of a month
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of a month for 2 September 2014 11:55:00:
 * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Mon Sep 01 2014 00:00:00
 */

function startOfMonth(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  date.setDate(1);
  date.setHours(0, 0, 0, 0);
  return date;
}

/**
 * @name startOfYear
 * @category Year Helpers
 * @summary Return the start of a year for the given date.
 *
 * @description
 * Return the start of a year for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of a year
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of a year for 2 September 2014 11:55:00:
 * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))
 * //=> Wed Jan 01 2014 00:00:00
 */

function startOfYear(dirtyDate) {
  requiredArgs(1, arguments);
  var cleanDate = toDate(dirtyDate);
  var date = new Date(0);
  date.setFullYear(cleanDate.getFullYear(), 0, 1);
  date.setHours(0, 0, 0, 0);
  return date;
}

/**
 * @name endOfYear
 * @category Year Helpers
 * @summary Return the end of a year for the given date.
 *
 * @description
 * Return the end of a year for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the end of a year
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The end of a year for 2 September 2014 11:55:00:
 * var result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))
 * //=> Wed Dec 31 2014 23:59:59.999
 */

function endOfYear(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getFullYear();
  date.setFullYear(year + 1, 0, 0);
  date.setHours(23, 59, 59, 999);
  return date;
}

var formatDistanceLocale = {
  lessThanXSeconds: {
    one: 'less than a second',
    other: 'less than {{count}} seconds'
  },
  xSeconds: {
    one: '1 second',
    other: '{{count}} seconds'
  },
  halfAMinute: 'half a minute',
  lessThanXMinutes: {
    one: 'less than a minute',
    other: 'less than {{count}} minutes'
  },
  xMinutes: {
    one: '1 minute',
    other: '{{count}} minutes'
  },
  aboutXHours: {
    one: 'about 1 hour',
    other: 'about {{count}} hours'
  },
  xHours: {
    one: '1 hour',
    other: '{{count}} hours'
  },
  xDays: {
    one: '1 day',
    other: '{{count}} days'
  },
  aboutXWeeks: {
    one: 'about 1 week',
    other: 'about {{count}} weeks'
  },
  xWeeks: {
    one: '1 week',
    other: '{{count}} weeks'
  },
  aboutXMonths: {
    one: 'about 1 month',
    other: 'about {{count}} months'
  },
  xMonths: {
    one: '1 month',
    other: '{{count}} months'
  },
  aboutXYears: {
    one: 'about 1 year',
    other: 'about {{count}} years'
  },
  xYears: {
    one: '1 year',
    other: '{{count}} years'
  },
  overXYears: {
    one: 'over 1 year',
    other: 'over {{count}} years'
  },
  almostXYears: {
    one: 'almost 1 year',
    other: 'almost {{count}} years'
  }
};
function formatDistance(token, count, options) {
  options = options || {};
  var result;

  if (typeof formatDistanceLocale[token] === 'string') {
    result = formatDistanceLocale[token];
  } else if (count === 1) {
    result = formatDistanceLocale[token].one;
  } else {
    result = formatDistanceLocale[token].other.replace('{{count}}', count);
  }

  if (options.addSuffix) {
    if (options.comparison > 0) {
      return 'in ' + result;
    } else {
      return result + ' ago';
    }
  }

  return result;
}

function buildFormatLongFn(args) {
  return function () {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    // TODO: Remove String()
    var width = options.width ? String(options.width) : args.defaultWidth;
    var format = args.formats[width] || args.formats[args.defaultWidth];
    return format;
  };
}

var dateFormats = {
  full: 'EEEE, MMMM do, y',
  long: 'MMMM do, y',
  medium: 'MMM d, y',
  short: 'MM/dd/yyyy'
};
var timeFormats = {
  full: 'h:mm:ss a zzzz',
  long: 'h:mm:ss a z',
  medium: 'h:mm:ss a',
  short: 'h:mm a'
};
var dateTimeFormats = {
  full: "{{date}} 'at' {{time}}",
  long: "{{date}} 'at' {{time}}",
  medium: '{{date}}, {{time}}',
  short: '{{date}}, {{time}}'
};
var formatLong = {
  date: buildFormatLongFn({
    formats: dateFormats,
    defaultWidth: 'full'
  }),
  time: buildFormatLongFn({
    formats: timeFormats,
    defaultWidth: 'full'
  }),
  dateTime: buildFormatLongFn({
    formats: dateTimeFormats,
    defaultWidth: 'full'
  })
};

var formatRelativeLocale = {
  lastWeek: "'last' eeee 'at' p",
  yesterday: "'yesterday at' p",
  today: "'today at' p",
  tomorrow: "'tomorrow at' p",
  nextWeek: "eeee 'at' p",
  other: 'P'
};
function formatRelative(token, _date, _baseDate, _options) {
  return formatRelativeLocale[token];
}

function buildLocalizeFn(args) {
  return function (dirtyIndex, dirtyOptions) {
    var options = dirtyOptions || {};
    var context = options.context ? String(options.context) : 'standalone';
    var valuesArray;

    if (context === 'formatting' && args.formattingValues) {
      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
      var width = options.width ? String(options.width) : defaultWidth;
      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      var _defaultWidth = args.defaultWidth;

      var _width = options.width ? String(options.width) : args.defaultWidth;

      valuesArray = args.values[_width] || args.values[_defaultWidth];
    }

    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex; // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challange you to try to remove it!

    return valuesArray[index];
  };
}

var eraValues = {
  narrow: ['B', 'A'],
  abbreviated: ['BC', 'AD'],
  wide: ['Before Christ', 'Anno Domini']
};
var quarterValues = {
  narrow: ['1', '2', '3', '4'],
  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],
  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']
}; // Note: in English, the names of days of the week and months are capitalized.
// If you are making a new locale based on this one, check if the same is true for the language you're working on.
// Generally, formatted dates should look like they are in the middle of a sentence,
// e.g. in Spanish language the weekdays and months should be in the lowercase.

var monthValues = {
  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],
  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
};
var dayValues = {
  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']
};
var dayPeriodValues = {
  narrow: {
    am: 'a',
    pm: 'p',
    midnight: 'mi',
    noon: 'n',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  },
  abbreviated: {
    am: 'AM',
    pm: 'PM',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  },
  wide: {
    am: 'a.m.',
    pm: 'p.m.',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  }
};
var formattingDayPeriodValues = {
  narrow: {
    am: 'a',
    pm: 'p',
    midnight: 'mi',
    noon: 'n',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  },
  abbreviated: {
    am: 'AM',
    pm: 'PM',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  },
  wide: {
    am: 'a.m.',
    pm: 'p.m.',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  }
};

function ordinalNumber(dirtyNumber, _dirtyOptions) {
  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,
  // if they are different for different grammatical genders,
  // use `options.unit`:
  //
  //   var options = dirtyOptions || {}
  //   var unit = String(options.unit)
  //
  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
  // 'day', 'hour', 'minute', 'second'

  var rem100 = number % 100;

  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number + 'st';

      case 2:
        return number + 'nd';

      case 3:
        return number + 'rd';
    }
  }

  return number + 'th';
}

var localize = {
  ordinalNumber: ordinalNumber,
  era: buildLocalizeFn({
    values: eraValues,
    defaultWidth: 'wide'
  }),
  quarter: buildLocalizeFn({
    values: quarterValues,
    defaultWidth: 'wide',
    argumentCallback: function (quarter) {
      return Number(quarter) - 1;
    }
  }),
  month: buildLocalizeFn({
    values: monthValues,
    defaultWidth: 'wide'
  }),
  day: buildLocalizeFn({
    values: dayValues,
    defaultWidth: 'wide'
  }),
  dayPeriod: buildLocalizeFn({
    values: dayPeriodValues,
    defaultWidth: 'wide',
    formattingValues: formattingDayPeriodValues,
    defaultFormattingWidth: 'wide'
  })
};

function buildMatchPatternFn(args) {
  return function (string) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var matchResult = string.match(args.matchPattern);
    if (!matchResult) return null;
    var matchedString = matchResult[0];
    var parseResult = string.match(args.parsePattern);
    if (!parseResult) return null;
    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return {
      value: value,
      rest: rest
    };
  };
}

function buildMatchFn(args) {
  return function (string) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var width = options.width;
    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
    var matchResult = string.match(matchPattern);

    if (!matchResult) {
      return null;
    }

    var matchedString = matchResult[0];
    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {
      return pattern.test(matchedString);
    }) : findKey(parsePatterns, function (pattern) {
      return pattern.test(matchedString);
    });
    var value;
    value = args.valueCallback ? args.valueCallback(key) : key;
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return {
      value: value,
      rest: rest
    };
  };
}

function findKey(object, predicate) {
  for (var key in object) {
    if (object.hasOwnProperty(key) && predicate(object[key])) {
      return key;
    }
  }

  return undefined;
}

function findIndex(array, predicate) {
  for (var key = 0; key < array.length; key++) {
    if (predicate(array[key])) {
      return key;
    }
  }

  return undefined;
}

var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
var parseOrdinalNumberPattern = /\d+/i;
var matchEraPatterns = {
  narrow: /^(b|a)/i,
  abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
  wide: /^(before christ|before common era|anno domini|common era)/i
};
var parseEraPatterns = {
  any: [/^b/i, /^(a|c)/i]
};
var matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](th|st|nd|rd)? quarter/i
};
var parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i]
};
var matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
};
var parseMonthPatterns = {
  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
};
var matchDayPatterns = {
  narrow: /^[smtwf]/i,
  short: /^(su|mo|tu|we|th|fr|sa)/i,
  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
};
var parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
};
var matchDayPeriodPatterns = {
  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
  any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
};
var parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mi/i,
    noon: /^no/i,
    morning: /morning/i,
    afternoon: /afternoon/i,
    evening: /evening/i,
    night: /night/i
  }
};
var match = {
  ordinalNumber: buildMatchPatternFn({
    matchPattern: matchOrdinalNumberPattern,
    parsePattern: parseOrdinalNumberPattern,
    valueCallback: function (value) {
      return parseInt(value, 10);
    }
  }),
  era: buildMatchFn({
    matchPatterns: matchEraPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseEraPatterns,
    defaultParseWidth: 'any'
  }),
  quarter: buildMatchFn({
    matchPatterns: matchQuarterPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseQuarterPatterns,
    defaultParseWidth: 'any',
    valueCallback: function (index) {
      return index + 1;
    }
  }),
  month: buildMatchFn({
    matchPatterns: matchMonthPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseMonthPatterns,
    defaultParseWidth: 'any'
  }),
  day: buildMatchFn({
    matchPatterns: matchDayPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseDayPatterns,
    defaultParseWidth: 'any'
  }),
  dayPeriod: buildMatchFn({
    matchPatterns: matchDayPeriodPatterns,
    defaultMatchWidth: 'any',
    parsePatterns: parseDayPeriodPatterns,
    defaultParseWidth: 'any'
  })
};

/**
 * @type {Locale}
 * @category Locales
 * @summary English locale (United States).
 * @language English
 * @iso-639-2 eng
 * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}
 * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}
 */

var locale = {
  code: 'en-US',
  formatDistance: formatDistance,
  formatLong: formatLong,
  formatRelative: formatRelative,
  localize: localize,
  match: match,
  options: {
    weekStartsOn: 0
    /* Sunday */
    ,
    firstWeekContainsDate: 1
  }
};

/**
 * @name subMilliseconds
 * @category Millisecond Helpers
 * @summary Subtract the specified number of milliseconds from the given date.
 *
 * @description
 * Subtract the specified number of milliseconds from the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the milliseconds subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:
 * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
 * //=> Thu Jul 10 2014 12:45:29.250
 */

function subMilliseconds(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addMilliseconds(dirtyDate, -amount);
}

function addLeadingZeros(number, targetLength) {
  var sign = number < 0 ? '-' : '';
  var output = Math.abs(number).toString();

  while (output.length < targetLength) {
    output = '0' + output;
  }

  return sign + output;
}

/*
 * |     | Unit                           |     | Unit                           |
 * |-----|--------------------------------|-----|--------------------------------|
 * |  a  | AM, PM                         |  A* |                                |
 * |  d  | Day of month                   |  D  |                                |
 * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
 * |  m  | Minute                         |  M  | Month                          |
 * |  s  | Second                         |  S  | Fraction of second             |
 * |  y  | Year (abs)                     |  Y  |                                |
 *
 * Letters marked by * are not implemented but reserved by Unicode standard.
 */

var formatters$1 = {
  // Year
  y: function (date, token) {
    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens
    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |
    // |----------|-------|----|-------|-------|-------|
    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |
    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)

    var year = signedYear > 0 ? signedYear : 1 - signedYear;
    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);
  },
  // Month
  M: function (date, token) {
    var month = date.getUTCMonth();
    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);
  },
  // Day of the month
  d: function (date, token) {
    return addLeadingZeros(date.getUTCDate(), token.length);
  },
  // AM or PM
  a: function (date, token) {
    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';

    switch (token) {
      case 'a':
      case 'aa':
        return dayPeriodEnumValue.toUpperCase();

      case 'aaa':
        return dayPeriodEnumValue;

      case 'aaaaa':
        return dayPeriodEnumValue[0];

      case 'aaaa':
      default:
        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';
    }
  },
  // Hour [1-12]
  h: function (date, token) {
    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);
  },
  // Hour [0-23]
  H: function (date, token) {
    return addLeadingZeros(date.getUTCHours(), token.length);
  },
  // Minute
  m: function (date, token) {
    return addLeadingZeros(date.getUTCMinutes(), token.length);
  },
  // Second
  s: function (date, token) {
    return addLeadingZeros(date.getUTCSeconds(), token.length);
  },
  // Fraction of second
  S: function (date, token) {
    var numberOfDigits = token.length;
    var milliseconds = date.getUTCMilliseconds();
    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));
    return addLeadingZeros(fractionalSeconds, token.length);
  }
};

var MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function getUTCDayOfYear(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var timestamp = date.getTime();
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
  var startOfYearTimestamp = date.getTime();
  var difference = timestamp - startOfYearTimestamp;
  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;
}

// See issue: https://github.com/date-fns/date-fns/issues/376

function startOfUTCISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  var weekStartsOn = 1;
  var date = toDate(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}

// See issue: https://github.com/date-fns/date-fns/issues/376

function getUTCISOWeekYear(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getUTCFullYear();
  var fourthOfJanuaryOfNextYear = new Date(0);
  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);
  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);
  var fourthOfJanuaryOfThisYear = new Date(0);
  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);
  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);

  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

// See issue: https://github.com/date-fns/date-fns/issues/376

function startOfUTCISOWeekYear(dirtyDate) {
  requiredArgs(1, arguments);
  var year = getUTCISOWeekYear(dirtyDate);
  var fourthOfJanuary = new Date(0);
  fourthOfJanuary.setUTCFullYear(year, 0, 4);
  fourthOfJanuary.setUTCHours(0, 0, 0, 0);
  var date = startOfUTCISOWeek(fourthOfJanuary);
  return date;
}

var MILLISECONDS_IN_WEEK$1 = 604800000; // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function getUTCISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer
  // because the number of milliseconds in a week is not constant
  // (e.g. it's different in the week of the daylight saving time clock shift)

  return Math.round(diff / MILLISECONDS_IN_WEEK$1) + 1;
}

// See issue: https://github.com/date-fns/date-fns/issues/376

function startOfUTCWeek(dirtyDate, dirtyOptions) {
  requiredArgs(1, arguments);
  var options = dirtyOptions || {};
  var locale = options.locale;
  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);
  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }

  var date = toDate(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}

// See issue: https://github.com/date-fns/date-fns/issues/376

function getUTCWeekYear(dirtyDate, dirtyOptions) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate, dirtyOptions);
  var year = date.getUTCFullYear();
  var options = dirtyOptions || {};
  var locale = options.locale;
  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);
  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN

  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
  }

  var firstWeekOfNextYear = new Date(0);
  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);
  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);
  var firstWeekOfThisYear = new Date(0);
  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);

  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

// See issue: https://github.com/date-fns/date-fns/issues/376

function startOfUTCWeekYear(dirtyDate, dirtyOptions) {
  requiredArgs(1, arguments);
  var options = dirtyOptions || {};
  var locale = options.locale;
  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);
  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);
  var year = getUTCWeekYear(dirtyDate, dirtyOptions);
  var firstWeek = new Date(0);
  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeek.setUTCHours(0, 0, 0, 0);
  var date = startOfUTCWeek(firstWeek, dirtyOptions);
  return date;
}

var MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function getUTCWeek(dirtyDate, options) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer
  // because the number of milliseconds in a week is not constant
  // (e.g. it's different in the week of the daylight saving time clock shift)

  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
}

var dayPeriodEnum = {
  am: 'am',
  pm: 'pm',
  midnight: 'midnight',
  noon: 'noon',
  morning: 'morning',
  afternoon: 'afternoon',
  evening: 'evening',
  night: 'night'
};
/*
 * |     | Unit                           |     | Unit                           |
 * |-----|--------------------------------|-----|--------------------------------|
 * |  a  | AM, PM                         |  A* | Milliseconds in day            |
 * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
 * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
 * |  d  | Day of month                   |  D  | Day of year                    |
 * |  e  | Local day of week              |  E  | Day of week                    |
 * |  f  |                                |  F* | Day of week in month           |
 * |  g* | Modified Julian day            |  G  | Era                            |
 * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
 * |  i! | ISO day of week                |  I! | ISO week of year               |
 * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
 * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
 * |  l* | (deprecated)                   |  L  | Stand-alone month              |
 * |  m  | Minute                         |  M  | Month                          |
 * |  n  |                                |  N  |                                |
 * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |
 * |  p! | Long localized time            |  P! | Long localized date            |
 * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
 * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
 * |  s  | Second                         |  S  | Fraction of second             |
 * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
 * |  u  | Extended year                  |  U* | Cyclic year                    |
 * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
 * |  w  | Local week of year             |  W* | Week of month                  |
 * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
 * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
 * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
 *
 * Letters marked by * are not implemented but reserved by Unicode standard.
 *
 * Letters marked by ! are non-standard, but implemented by date-fns:
 * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)
 * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
 *   i.e. 7 for Sunday, 1 for Monday, etc.
 * - `I` is ISO week of year, as opposed to `w` which is local week of year.
 * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
 *   `R` is supposed to be used in conjunction with `I` and `i`
 *   for universal ISO week-numbering date, whereas
 *   `Y` is supposed to be used in conjunction with `w` and `e`
 *   for week-numbering date specific to the locale.
 * - `P` is long localized date format
 * - `p` is long localized time format
 */

var formatters = {
  // Era
  G: function (date, token, localize) {
    var era = date.getUTCFullYear() > 0 ? 1 : 0;

    switch (token) {
      // AD, BC
      case 'G':
      case 'GG':
      case 'GGG':
        return localize.era(era, {
          width: 'abbreviated'
        });
      // A, B

      case 'GGGGG':
        return localize.era(era, {
          width: 'narrow'
        });
      // Anno Domini, Before Christ

      case 'GGGG':
      default:
        return localize.era(era, {
          width: 'wide'
        });
    }
  },
  // Year
  y: function (date, token, localize) {
    // Ordinal number
    if (token === 'yo') {
      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)

      var year = signedYear > 0 ? signedYear : 1 - signedYear;
      return localize.ordinalNumber(year, {
        unit: 'year'
      });
    }

    return formatters$1.y(date, token);
  },
  // Local week-numbering year
  Y: function (date, token, localize, options) {
    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)

    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year

    if (token === 'YY') {
      var twoDigitYear = weekYear % 100;
      return addLeadingZeros(twoDigitYear, 2);
    } // Ordinal number


    if (token === 'Yo') {
      return localize.ordinalNumber(weekYear, {
        unit: 'year'
      });
    } // Padding


    return addLeadingZeros(weekYear, token.length);
  },
  // ISO week-numbering year
  R: function (date, token) {
    var isoWeekYear = getUTCISOWeekYear(date); // Padding

    return addLeadingZeros(isoWeekYear, token.length);
  },
  // Extended year. This is a single number designating the year of this calendar system.
  // The main difference between `y` and `u` localizers are B.C. years:
  // | Year | `y` | `u` |
  // |------|-----|-----|
  // | AC 1 |   1 |   1 |
  // | BC 1 |   1 |   0 |
  // | BC 2 |   2 |  -1 |
  // Also `yy` always returns the last two digits of a year,
  // while `uu` pads single digit years to 2 characters and returns other years unchanged.
  u: function (date, token) {
    var year = date.getUTCFullYear();
    return addLeadingZeros(year, token.length);
  },
  // Quarter
  Q: function (date, token, localize) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);

    switch (token) {
      // 1, 2, 3, 4
      case 'Q':
        return String(quarter);
      // 01, 02, 03, 04

      case 'QQ':
        return addLeadingZeros(quarter, 2);
      // 1st, 2nd, 3rd, 4th

      case 'Qo':
        return localize.ordinalNumber(quarter, {
          unit: 'quarter'
        });
      // Q1, Q2, Q3, Q4

      case 'QQQ':
        return localize.quarter(quarter, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // 1, 2, 3, 4 (narrow quarter; could be not numerical)

      case 'QQQQQ':
        return localize.quarter(quarter, {
          width: 'narrow',
          context: 'formatting'
        });
      // 1st quarter, 2nd quarter, ...

      case 'QQQQ':
      default:
        return localize.quarter(quarter, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Stand-alone quarter
  q: function (date, token, localize) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);

    switch (token) {
      // 1, 2, 3, 4
      case 'q':
        return String(quarter);
      // 01, 02, 03, 04

      case 'qq':
        return addLeadingZeros(quarter, 2);
      // 1st, 2nd, 3rd, 4th

      case 'qo':
        return localize.ordinalNumber(quarter, {
          unit: 'quarter'
        });
      // Q1, Q2, Q3, Q4

      case 'qqq':
        return localize.quarter(quarter, {
          width: 'abbreviated',
          context: 'standalone'
        });
      // 1, 2, 3, 4 (narrow quarter; could be not numerical)

      case 'qqqqq':
        return localize.quarter(quarter, {
          width: 'narrow',
          context: 'standalone'
        });
      // 1st quarter, 2nd quarter, ...

      case 'qqqq':
      default:
        return localize.quarter(quarter, {
          width: 'wide',
          context: 'standalone'
        });
    }
  },
  // Month
  M: function (date, token, localize) {
    var month = date.getUTCMonth();

    switch (token) {
      case 'M':
      case 'MM':
        return formatters$1.M(date, token);
      // 1st, 2nd, ..., 12th

      case 'Mo':
        return localize.ordinalNumber(month + 1, {
          unit: 'month'
        });
      // Jan, Feb, ..., Dec

      case 'MMM':
        return localize.month(month, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // J, F, ..., D

      case 'MMMMM':
        return localize.month(month, {
          width: 'narrow',
          context: 'formatting'
        });
      // January, February, ..., December

      case 'MMMM':
      default:
        return localize.month(month, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Stand-alone month
  L: function (date, token, localize) {
    var month = date.getUTCMonth();

    switch (token) {
      // 1, 2, ..., 12
      case 'L':
        return String(month + 1);
      // 01, 02, ..., 12

      case 'LL':
        return addLeadingZeros(month + 1, 2);
      // 1st, 2nd, ..., 12th

      case 'Lo':
        return localize.ordinalNumber(month + 1, {
          unit: 'month'
        });
      // Jan, Feb, ..., Dec

      case 'LLL':
        return localize.month(month, {
          width: 'abbreviated',
          context: 'standalone'
        });
      // J, F, ..., D

      case 'LLLLL':
        return localize.month(month, {
          width: 'narrow',
          context: 'standalone'
        });
      // January, February, ..., December

      case 'LLLL':
      default:
        return localize.month(month, {
          width: 'wide',
          context: 'standalone'
        });
    }
  },
  // Local week of year
  w: function (date, token, localize, options) {
    var week = getUTCWeek(date, options);

    if (token === 'wo') {
      return localize.ordinalNumber(week, {
        unit: 'week'
      });
    }

    return addLeadingZeros(week, token.length);
  },
  // ISO week of year
  I: function (date, token, localize) {
    var isoWeek = getUTCISOWeek(date);

    if (token === 'Io') {
      return localize.ordinalNumber(isoWeek, {
        unit: 'week'
      });
    }

    return addLeadingZeros(isoWeek, token.length);
  },
  // Day of the month
  d: function (date, token, localize) {
    if (token === 'do') {
      return localize.ordinalNumber(date.getUTCDate(), {
        unit: 'date'
      });
    }

    return formatters$1.d(date, token);
  },
  // Day of year
  D: function (date, token, localize) {
    var dayOfYear = getUTCDayOfYear(date);

    if (token === 'Do') {
      return localize.ordinalNumber(dayOfYear, {
        unit: 'dayOfYear'
      });
    }

    return addLeadingZeros(dayOfYear, token.length);
  },
  // Day of week
  E: function (date, token, localize) {
    var dayOfWeek = date.getUTCDay();

    switch (token) {
      // Tue
      case 'E':
      case 'EE':
      case 'EEE':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // T

      case 'EEEEE':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'formatting'
        });
      // Tu

      case 'EEEEEE':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'formatting'
        });
      // Tuesday

      case 'EEEE':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Local day of week
  e: function (date, token, localize, options) {
    var dayOfWeek = date.getUTCDay();
    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;

    switch (token) {
      // Numerical value (Nth day of week with current locale or weekStartsOn)
      case 'e':
        return String(localDayOfWeek);
      // Padded numerical value

      case 'ee':
        return addLeadingZeros(localDayOfWeek, 2);
      // 1st, 2nd, ..., 7th

      case 'eo':
        return localize.ordinalNumber(localDayOfWeek, {
          unit: 'day'
        });

      case 'eee':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // T

      case 'eeeee':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'formatting'
        });
      // Tu

      case 'eeeeee':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'formatting'
        });
      // Tuesday

      case 'eeee':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Stand-alone local day of week
  c: function (date, token, localize, options) {
    var dayOfWeek = date.getUTCDay();
    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;

    switch (token) {
      // Numerical value (same as in `e`)
      case 'c':
        return String(localDayOfWeek);
      // Padded numerical value

      case 'cc':
        return addLeadingZeros(localDayOfWeek, token.length);
      // 1st, 2nd, ..., 7th

      case 'co':
        return localize.ordinalNumber(localDayOfWeek, {
          unit: 'day'
        });

      case 'ccc':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'standalone'
        });
      // T

      case 'ccccc':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'standalone'
        });
      // Tu

      case 'cccccc':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'standalone'
        });
      // Tuesday

      case 'cccc':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'standalone'
        });
    }
  },
  // ISO day of week
  i: function (date, token, localize) {
    var dayOfWeek = date.getUTCDay();
    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;

    switch (token) {
      // 2
      case 'i':
        return String(isoDayOfWeek);
      // 02

      case 'ii':
        return addLeadingZeros(isoDayOfWeek, token.length);
      // 2nd

      case 'io':
        return localize.ordinalNumber(isoDayOfWeek, {
          unit: 'day'
        });
      // Tue

      case 'iii':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // T

      case 'iiiii':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'formatting'
        });
      // Tu

      case 'iiiiii':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'formatting'
        });
      // Tuesday

      case 'iiii':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // AM or PM
  a: function (date, token, localize) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';

    switch (token) {
      case 'a':
      case 'aa':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        });

      case 'aaa':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        }).toLowerCase();

      case 'aaaaa':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'narrow',
          context: 'formatting'
        });

      case 'aaaa':
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // AM, PM, midnight, noon
  b: function (date, token, localize) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue;

    if (hours === 12) {
      dayPeriodEnumValue = dayPeriodEnum.noon;
    } else if (hours === 0) {
      dayPeriodEnumValue = dayPeriodEnum.midnight;
    } else {
      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';
    }

    switch (token) {
      case 'b':
      case 'bb':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        });

      case 'bbb':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        }).toLowerCase();

      case 'bbbbb':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'narrow',
          context: 'formatting'
        });

      case 'bbbb':
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // in the morning, in the afternoon, in the evening, at night
  B: function (date, token, localize) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue;

    if (hours >= 17) {
      dayPeriodEnumValue = dayPeriodEnum.evening;
    } else if (hours >= 12) {
      dayPeriodEnumValue = dayPeriodEnum.afternoon;
    } else if (hours >= 4) {
      dayPeriodEnumValue = dayPeriodEnum.morning;
    } else {
      dayPeriodEnumValue = dayPeriodEnum.night;
    }

    switch (token) {
      case 'B':
      case 'BB':
      case 'BBB':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        });

      case 'BBBBB':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'narrow',
          context: 'formatting'
        });

      case 'BBBB':
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Hour [1-12]
  h: function (date, token, localize) {
    if (token === 'ho') {
      var hours = date.getUTCHours() % 12;
      if (hours === 0) hours = 12;
      return localize.ordinalNumber(hours, {
        unit: 'hour'
      });
    }

    return formatters$1.h(date, token);
  },
  // Hour [0-23]
  H: function (date, token, localize) {
    if (token === 'Ho') {
      return localize.ordinalNumber(date.getUTCHours(), {
        unit: 'hour'
      });
    }

    return formatters$1.H(date, token);
  },
  // Hour [0-11]
  K: function (date, token, localize) {
    var hours = date.getUTCHours() % 12;

    if (token === 'Ko') {
      return localize.ordinalNumber(hours, {
        unit: 'hour'
      });
    }

    return addLeadingZeros(hours, token.length);
  },
  // Hour [1-24]
  k: function (date, token, localize) {
    var hours = date.getUTCHours();
    if (hours === 0) hours = 24;

    if (token === 'ko') {
      return localize.ordinalNumber(hours, {
        unit: 'hour'
      });
    }

    return addLeadingZeros(hours, token.length);
  },
  // Minute
  m: function (date, token, localize) {
    if (token === 'mo') {
      return localize.ordinalNumber(date.getUTCMinutes(), {
        unit: 'minute'
      });
    }

    return formatters$1.m(date, token);
  },
  // Second
  s: function (date, token, localize) {
    if (token === 'so') {
      return localize.ordinalNumber(date.getUTCSeconds(), {
        unit: 'second'
      });
    }

    return formatters$1.s(date, token);
  },
  // Fraction of second
  S: function (date, token) {
    return formatters$1.S(date, token);
  },
  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)
  X: function (date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();

    if (timezoneOffset === 0) {
      return 'Z';
    }

    switch (token) {
      // Hours and optional minutes
      case 'X':
        return formatTimezoneWithOptionalMinutes(timezoneOffset);
      // Hours, minutes and optional seconds without `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `XX`

      case 'XXXX':
      case 'XX':
        // Hours and minutes without `:` delimiter
        return formatTimezone(timezoneOffset);
      // Hours, minutes and optional seconds with `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `XXX`

      case 'XXXXX':
      case 'XXX': // Hours and minutes with `:` delimiter

      default:
        return formatTimezone(timezoneOffset, ':');
    }
  },
  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)
  x: function (date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();

    switch (token) {
      // Hours and optional minutes
      case 'x':
        return formatTimezoneWithOptionalMinutes(timezoneOffset);
      // Hours, minutes and optional seconds without `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `xx`

      case 'xxxx':
      case 'xx':
        // Hours and minutes without `:` delimiter
        return formatTimezone(timezoneOffset);
      // Hours, minutes and optional seconds with `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `xxx`

      case 'xxxxx':
      case 'xxx': // Hours and minutes with `:` delimiter

      default:
        return formatTimezone(timezoneOffset, ':');
    }
  },
  // Timezone (GMT)
  O: function (date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();

    switch (token) {
      // Short
      case 'O':
      case 'OO':
      case 'OOO':
        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');
      // Long

      case 'OOOO':
      default:
        return 'GMT' + formatTimezone(timezoneOffset, ':');
    }
  },
  // Timezone (specific non-location)
  z: function (date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();

    switch (token) {
      // Short
      case 'z':
      case 'zz':
      case 'zzz':
        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');
      // Long

      case 'zzzz':
      default:
        return 'GMT' + formatTimezone(timezoneOffset, ':');
    }
  },
  // Seconds timestamp
  t: function (date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timestamp = Math.floor(originalDate.getTime() / 1000);
    return addLeadingZeros(timestamp, token.length);
  },
  // Milliseconds timestamp
  T: function (date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timestamp = originalDate.getTime();
    return addLeadingZeros(timestamp, token.length);
  }
};

function formatTimezoneShort(offset, dirtyDelimiter) {
  var sign = offset > 0 ? '-' : '+';
  var absOffset = Math.abs(offset);
  var hours = Math.floor(absOffset / 60);
  var minutes = absOffset % 60;

  if (minutes === 0) {
    return sign + String(hours);
  }

  var delimiter = dirtyDelimiter || '';
  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);
}

function formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {
  if (offset % 60 === 0) {
    var sign = offset > 0 ? '-' : '+';
    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);
  }

  return formatTimezone(offset, dirtyDelimiter);
}

function formatTimezone(offset, dirtyDelimiter) {
  var delimiter = dirtyDelimiter || '';
  var sign = offset > 0 ? '-' : '+';
  var absOffset = Math.abs(offset);
  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);
  var minutes = addLeadingZeros(absOffset % 60, 2);
  return sign + hours + delimiter + minutes;
}

function dateLongFormatter(pattern, formatLong) {
  switch (pattern) {
    case 'P':
      return formatLong.date({
        width: 'short'
      });

    case 'PP':
      return formatLong.date({
        width: 'medium'
      });

    case 'PPP':
      return formatLong.date({
        width: 'long'
      });

    case 'PPPP':
    default:
      return formatLong.date({
        width: 'full'
      });
  }
}

function timeLongFormatter(pattern, formatLong) {
  switch (pattern) {
    case 'p':
      return formatLong.time({
        width: 'short'
      });

    case 'pp':
      return formatLong.time({
        width: 'medium'
      });

    case 'ppp':
      return formatLong.time({
        width: 'long'
      });

    case 'pppp':
    default:
      return formatLong.time({
        width: 'full'
      });
  }
}

function dateTimeLongFormatter(pattern, formatLong) {
  var matchResult = pattern.match(/(P+)(p+)?/);
  var datePattern = matchResult[1];
  var timePattern = matchResult[2];

  if (!timePattern) {
    return dateLongFormatter(pattern, formatLong);
  }

  var dateTimeFormat;

  switch (datePattern) {
    case 'P':
      dateTimeFormat = formatLong.dateTime({
        width: 'short'
      });
      break;

    case 'PP':
      dateTimeFormat = formatLong.dateTime({
        width: 'medium'
      });
      break;

    case 'PPP':
      dateTimeFormat = formatLong.dateTime({
        width: 'long'
      });
      break;

    case 'PPPP':
    default:
      dateTimeFormat = formatLong.dateTime({
        width: 'full'
      });
      break;
  }

  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));
}

var longFormatters = {
  p: timeLongFormatter,
  P: dateTimeLongFormatter
};

var protectedDayOfYearTokens = ['D', 'DD'];
var protectedWeekYearTokens = ['YY', 'YYYY'];
function isProtectedDayOfYearToken(token) {
  return protectedDayOfYearTokens.indexOf(token) !== -1;
}
function isProtectedWeekYearToken(token) {
  return protectedWeekYearTokens.indexOf(token) !== -1;
}
function throwProtectedError(token, format, input) {
  if (token === 'YYYY') {
    throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(format, "`) for formatting years to the input `").concat(input, "`; see: https://git.io/fxCyr"));
  } else if (token === 'YY') {
    throw new RangeError("Use `yy` instead of `YY` (in `".concat(format, "`) for formatting years to the input `").concat(input, "`; see: https://git.io/fxCyr"));
  } else if (token === 'D') {
    throw new RangeError("Use `d` instead of `D` (in `".concat(format, "`) for formatting days of the month to the input `").concat(input, "`; see: https://git.io/fxCyr"));
  } else if (token === 'DD') {
    throw new RangeError("Use `dd` instead of `DD` (in `".concat(format, "`) for formatting days of the month to the input `").concat(input, "`; see: https://git.io/fxCyr"));
  }
}

// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
//   (one of the certain letters followed by `o`)
// - (\w)\1* matches any sequences of the same letter
// - '' matches two quote characters in a row
// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
//   except a single quote symbol, which ends the sequence.
//   Two quote characters do not end the sequence.
//   If there is no matching single quote
//   then the sequence will continue until the end of the string.
// - . matches any single character unmatched by previous parts of the RegExps

var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also
// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`

var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
var escapedStringRegExp = /^'([^]*?)'?$/;
var doubleQuoteRegExp = /''/g;
var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
/**
 * @name format
 * @category Common Helpers
 * @summary Format the date.
 *
 * @description
 * Return the formatted date string in the given format. The result may vary by locale.
 *
 * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
 * > See: https://git.io/fxCyr
 *
 * The characters wrapped between two single quotes characters (') are escaped.
 * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
 * (see the last example)
 *
 * Format of the string is based on Unicode Technical Standard #35:
 * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
 * with a few additions (see note 7 below the table).
 *
 * Accepted patterns:
 * | Unit                            | Pattern | Result examples                   | Notes |
 * |---------------------------------|---------|-----------------------------------|-------|
 * | Era                             | G..GGG  | AD, BC                            |       |
 * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |
 * |                                 | GGGGG   | A, B                              |       |
 * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |
 * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |
 * |                                 | yy      | 44, 01, 00, 17                    | 5     |
 * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |
 * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |
 * |                                 | yyyyy   | ...                               | 3,5   |
 * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |
 * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |
 * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |
 * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |
 * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |
 * |                                 | YYYYY   | ...                               | 3,5   |
 * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |
 * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |
 * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |
 * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |
 * |                                 | RRRRR   | ...                               | 3,5,7 |
 * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |
 * |                                 | uu      | -43, 01, 1900, 2017               | 5     |
 * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |
 * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |
 * |                                 | uuuuu   | ...                               | 3,5   |
 * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |
 * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |
 * |                                 | QQ      | 01, 02, 03, 04                    |       |
 * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |
 * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |
 * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |
 * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |
 * |                                 | qq      | 01, 02, 03, 04                    |       |
 * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |
 * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |
 * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |
 * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |
 * |                                 | MM      | 01, 02, ..., 12                   |       |
 * |                                 | MMM     | Jan, Feb, ..., Dec                |       |
 * |                                 | MMMM    | January, February, ..., December  | 2     |
 * |                                 | MMMMM   | J, F, ..., D                      |       |
 * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |
 * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |
 * |                                 | LL      | 01, 02, ..., 12                   |       |
 * |                                 | LLL     | Jan, Feb, ..., Dec                |       |
 * |                                 | LLLL    | January, February, ..., December  | 2     |
 * |                                 | LLLLL   | J, F, ..., D                      |       |
 * | Local week of year              | w       | 1, 2, ..., 53                     |       |
 * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |
 * |                                 | ww      | 01, 02, ..., 53                   |       |
 * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |
 * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |
 * |                                 | II      | 01, 02, ..., 53                   | 7     |
 * | Day of month                    | d       | 1, 2, ..., 31                     |       |
 * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |
 * |                                 | dd      | 01, 02, ..., 31                   |       |
 * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |
 * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |
 * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |
 * |                                 | DDD     | 001, 002, ..., 365, 366           |       |
 * |                                 | DDDD    | ...                               | 3     |
 * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |
 * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
 * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |
 * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |
 * |                                 | ii      | 01, 02, ..., 07                   | 7     |
 * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |
 * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |
 * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |
 * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |
 * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |
 * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |
 * |                                 | ee      | 02, 03, ..., 01                   |       |
 * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | eeeee   | M, T, W, T, F, S, S               |       |
 * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
 * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |
 * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |
 * |                                 | cc      | 02, 03, ..., 01                   |       |
 * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | ccccc   | M, T, W, T, F, S, S               |       |
 * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
 * | AM, PM                          | a..aa   | AM, PM                            |       |
 * |                                 | aaa     | am, pm                            |       |
 * |                                 | aaaa    | a.m., p.m.                        | 2     |
 * |                                 | aaaaa   | a, p                              |       |
 * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |
 * |                                 | bbb     | am, pm, noon, midnight            |       |
 * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |
 * |                                 | bbbbb   | a, p, n, mi                       |       |
 * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |
 * |                                 | BBBB    | at night, in the morning, ...     | 2     |
 * |                                 | BBBBB   | at night, in the morning, ...     |       |
 * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |
 * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |
 * |                                 | hh      | 01, 02, ..., 11, 12               |       |
 * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |
 * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |
 * |                                 | HH      | 00, 01, 02, ..., 23               |       |
 * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |
 * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |
 * |                                 | KK      | 01, 02, ..., 11, 00               |       |
 * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |
 * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |
 * |                                 | kk      | 24, 01, 02, ..., 23               |       |
 * | Minute                          | m       | 0, 1, ..., 59                     |       |
 * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |
 * |                                 | mm      | 00, 01, ..., 59                   |       |
 * | Second                          | s       | 0, 1, ..., 59                     |       |
 * |                                 | so      | 0th, 1st, ..., 59th               | 7     |
 * |                                 | ss      | 00, 01, ..., 59                   |       |
 * | Fraction of second              | S       | 0, 1, ..., 9                      |       |
 * |                                 | SS      | 00, 01, ..., 99                   |       |
 * |                                 | SSS     | 000, 001, ..., 999                |       |
 * |                                 | SSSS    | ...                               | 3     |
 * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |
 * |                                 | XX      | -0800, +0530, Z                   |       |
 * |                                 | XXX     | -08:00, +05:30, Z                 |       |
 * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |
 * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
 * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |
 * |                                 | xx      | -0800, +0530, +0000               |       |
 * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |
 * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |
 * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
 * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |
 * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |
 * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |
 * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |
 * | Seconds timestamp               | t       | 512969520                         | 7     |
 * |                                 | tt      | ...                               | 3,7   |
 * | Milliseconds timestamp          | T       | 512969520900                      | 7     |
 * |                                 | TT      | ...                               | 3,7   |
 * | Long localized date             | P       | 04/29/1453                        | 7     |
 * |                                 | PP      | Apr 29, 1453                      | 7     |
 * |                                 | PPP     | April 29th, 1453                  | 7     |
 * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |
 * | Long localized time             | p       | 12:00 AM                          | 7     |
 * |                                 | pp      | 12:00:00 AM                       | 7     |
 * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |
 * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |
 * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |
 * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |
 * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |
 * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |
 * Notes:
 * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
 *    are the same as "stand-alone" units, but are different in some languages.
 *    "Formatting" units are declined according to the rules of the language
 *    in the context of a date. "Stand-alone" units are always nominative singular:
 *
 *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
 *
 *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
 *
 * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
 *    the single quote characters (see below).
 *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)
 *    the output will be the same as default pattern for this unit, usually
 *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units
 *    are marked with "2" in the last column of the table.
 *
 *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`
 *
 * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).
 *    The output will be padded with zeros to match the length of the pattern.
 *
 *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`
 *
 * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
 *    These tokens represent the shortest form of the quarter.
 *
 * 5. The main difference between `y` and `u` patterns are B.C. years:
 *
 *    | Year | `y` | `u` |
 *    |------|-----|-----|
 *    | AC 1 |   1 |   1 |
 *    | BC 1 |   1 |   0 |
 *    | BC 2 |   2 |  -1 |
 *
 *    Also `yy` always returns the last two digits of a year,
 *    while `uu` pads single digit years to 2 characters and returns other years unchanged:
 *
 *    | Year | `yy` | `uu` |
 *    |------|------|------|
 *    | 1    |   01 |   01 |
 *    | 14   |   14 |   14 |
 *    | 376  |   76 |  376 |
 *    | 1453 |   53 | 1453 |
 *
 *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
 *    except local week-numbering years are dependent on `options.weekStartsOn`
 *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}
 *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).
 *
 * 6. Specific non-location timezones are currently unavailable in `date-fns`,
 *    so right now these tokens fall back to GMT timezones.
 *
 * 7. These patterns are not in the Unicode Technical Standard #35:
 *    - `i`: ISO day of week
 *    - `I`: ISO week of year
 *    - `R`: ISO week-numbering year
 *    - `t`: seconds timestamp
 *    - `T`: milliseconds timestamp
 *    - `o`: ordinal number modifier
 *    - `P`: long localized date
 *    - `p`: long localized time
 *
 * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.
 *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr
 *
 * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.
 *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - The second argument is now required for the sake of explicitness.
 *
 *   ```javascript
 *   // Before v2.0.0
 *   format(new Date(2016, 0, 1))
 *
 *   // v2.0.0 onward
 *   format(new Date(2016, 0, 1), "yyyy-MM-dd'T'HH:mm:ss.SSSxxx")
 *   ```
 *
 * - New format string API for `format` function
 *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).
 *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.
 *
 * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.
 *
 * @param {Date|Number} date - the original date
 * @param {String} format - the string of tokens
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is
 * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;
 *   see: https://git.io/fxCyr
 * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;
 *   see: https://git.io/fxCyr
 * @returns {String} the formatted date string
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} `date` must not be Invalid Date
 * @throws {RangeError} `options.locale` must contain `localize` property
 * @throws {RangeError} `options.locale` must contain `formatLong` property
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
 * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr
 * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr
 * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr
 * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr
 * @throws {RangeError} format string contains an unescaped latin alphabet character
 *
 * @example
 * // Represent 11 February 2014 in middle-endian format:
 * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')
 * //=> '02/11/2014'
 *
 * @example
 * // Represent 2 July 2014 in Esperanto:
 * import { eoLocale } from 'date-fns/locale/eo'
 * var result = format(new Date(2014, 6, 2), "do 'de' MMMM yyyy", {
 *   locale: eoLocale
 * })
 * //=> '2-a de julio 2014'
 *
 * @example
 * // Escape string by single quote characters:
 * var result = format(new Date(2014, 6, 2, 15), "h 'o''clock'")
 * //=> "3 o'clock"
 */

function format(dirtyDate, dirtyFormatStr, dirtyOptions) {
  requiredArgs(2, arguments);
  var formatStr = String(dirtyFormatStr);
  var options = dirtyOptions || {};
  var locale$1 = options.locale || locale;
  var localeFirstWeekContainsDate = locale$1.options && locale$1.options.firstWeekContainsDate;
  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);
  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN

  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
  }

  var localeWeekStartsOn = locale$1.options && locale$1.options.weekStartsOn;
  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);
  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }

  if (!locale$1.localize) {
    throw new RangeError('locale must contain localize property');
  }

  if (!locale$1.formatLong) {
    throw new RangeError('locale must contain formatLong property');
  }

  var originalDate = toDate(dirtyDate);

  if (!isValid(originalDate)) {
    throw new RangeError('Invalid time value');
  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.
  // This ensures that when UTC functions will be implemented, locales will be compatible with them.
  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376


  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);
  var utcDate = subMilliseconds(originalDate, timezoneOffset);
  var formatterOptions = {
    firstWeekContainsDate: firstWeekContainsDate,
    weekStartsOn: weekStartsOn,
    locale: locale$1,
    _originalDate: originalDate
  };
  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {
    var firstCharacter = substring[0];

    if (firstCharacter === 'p' || firstCharacter === 'P') {
      var longFormatter = longFormatters[firstCharacter];
      return longFormatter(substring, locale$1.formatLong, formatterOptions);
    }

    return substring;
  }).join('').match(formattingTokensRegExp).map(function (substring) {
    // Replace two single quote characters with one single quote character
    if (substring === "''") {
      return "'";
    }

    var firstCharacter = substring[0];

    if (firstCharacter === "'") {
      return cleanEscapedString(substring);
    }

    var formatter = formatters[firstCharacter];

    if (formatter) {
      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {
        throwProtectedError(substring, dirtyFormatStr, dirtyDate);
      }

      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {
        throwProtectedError(substring, dirtyFormatStr, dirtyDate);
      }

      return formatter(utcDate, substring, locale$1.localize, formatterOptions);
    }

    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');
    }

    return substring;
  }).join('');
  return result;
}

function cleanEscapedString(input) {
  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'");
}

/**
 * @name getDaysInMonth
 * @category Month Helpers
 * @summary Get the number of days in a month of the given date.
 *
 * @description
 * Get the number of days in a month of the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the number of days in a month
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // How many days are in February 2000?
 * const result = getDaysInMonth(new Date(2000, 1))
 * //=> 29
 */

function getDaysInMonth(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getFullYear();
  var monthIndex = date.getMonth();
  var lastDayOfMonth = new Date(0);
  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);
  lastDayOfMonth.setHours(0, 0, 0, 0);
  return lastDayOfMonth.getDate();
}

/**
 * @name subMonths
 * @category Month Helpers
 * @summary Subtract the specified number of months from the given date.
 *
 * @description
 * Subtract the specified number of months from the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the months subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 5 months from 1 February 2015:
 * const result = subMonths(new Date(2015, 1, 1), 5)
 * //=> Mon Sep 01 2014 00:00:00
 */

function subMonths(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addMonths(dirtyDate, -amount);
}

/**
 * @name isFirstDayOfMonth
 * @category Month Helpers
 * @summary Is the given date the first day of a month?
 *
 * @description
 * Is the given date the first day of a month?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to check
 * @returns {Boolean} the date is the first day of a month
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Is 1 September 2014 the first day of a month?
 * var result = isFirstDayOfMonth(new Date(2014, 8, 1))
 * //=> true
 */

function isFirstDayOfMonth(dirtyDate) {
  requiredArgs(1, arguments);
  return toDate(dirtyDate).getDate() === 1;
}

/**
 * @name isWithinInterval
 * @category Interval Helpers
 * @summary Is the given date within the interval?
 *
 * @description
 * Is the given date within the interval? (Including start and end.)
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - The function was renamed from `isWithinRange` to `isWithinInterval`.
 *   This change was made to mirror the use of the word "interval" in standard ISO 8601:2004 terminology:
 *
 *   ```
 *   2.1.3
 *   time interval
 *   part of the time axis limited by two instants
 *   ```
 *
 *   Also, this function now accepts an object with `start` and `end` properties
 *   instead of two arguments as an interval.
 *   This function now throws `RangeError` if the start of the interval is after its end
 *   or if any date in the interval is `Invalid Date`.
 *
 *   ```javascript
 *   // Before v2.0.0
 *
 *   isWithinRange(
 *     new Date(2014, 0, 3),
 *     new Date(2014, 0, 1), new Date(2014, 0, 7)
 *   )
 *
 *   // v2.0.0 onward
 *
 *   isWithinInterval(
 *     new Date(2014, 0, 3),
 *     { start: new Date(2014, 0, 1), end: new Date(2014, 0, 7) }
 *   )
 *   ```
 *
 * @param {Date|Number} date - the date to check
 * @param {Interval} interval - the interval to check
 * @returns {Boolean} the date is within the interval
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} The start of an interval cannot be after its end
 * @throws {RangeError} Date in interval cannot be `Invalid Date`
 *
 * @example
 * // For the date within the interval:
 * isWithinInterval(new Date(2014, 0, 3), {
 *   start: new Date(2014, 0, 1),
 *   end: new Date(2014, 0, 7)
 * })
 * //=> true
 *
 * @example
 * // For the date outside of the interval:
 * isWithinInterval(new Date(2014, 0, 10), {
 *   start: new Date(2014, 0, 1),
 *   end: new Date(2014, 0, 7)
 * })
 * //=> false
 *
 * @example
 * // For date equal to interval start:
 * isWithinInterval(date, { start, end: date }) // => true
 *
 * @example
 * // For date equal to interval end:
 * isWithinInterval(date, { start: date, end }) // => true
 */
function isWithinInterval(dirtyDate, interval) {
  requiredArgs(2, arguments);
  var time = toDate(dirtyDate).getTime();
  var startTime = toDate(interval.start).getTime();
  var endTime = toDate(interval.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

  if (!(startTime <= endTime)) {
    throw new RangeError('Invalid interval');
  }

  return time >= startTime && time <= endTime;
}

/**
 * @name setMonth
 * @category Month Helpers
 * @summary Set the month to the given date.
 *
 * @description
 * Set the month to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} month - the month of the new date
 * @returns {Date} the new date with the month set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set February to 1 September 2014:
 * const result = setMonth(new Date(2014, 8, 1), 1)
 * //=> Sat Feb 01 2014 00:00:00
 */

function setMonth(dirtyDate, dirtyMonth) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var month = toInteger(dirtyMonth);
  var year = date.getFullYear();
  var day = date.getDate();
  var dateWithDesiredMonth = new Date(0);
  dateWithDesiredMonth.setFullYear(year, month, 15);
  dateWithDesiredMonth.setHours(0, 0, 0, 0);
  var daysInMonth = getDaysInMonth(dateWithDesiredMonth); // Set the last day of the new month
  // if the original date was the last day of the longer month

  date.setMonth(month, Math.min(day, daysInMonth));
  return date;
}

/**
 * @name setYear
 * @category Year Helpers
 * @summary Set the year to the given date.
 *
 * @description
 * Set the year to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} year - the year of the new date
 * @returns {Date} the new date with the year set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set year 2013 to 1 September 2014:
 * const result = setYear(new Date(2014, 8, 1), 2013)
 * //=> Sun Sep 01 2013 00:00:00
 */

function setYear(dirtyDate, dirtyYear) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var year = toInteger(dirtyYear); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date

  if (isNaN(date.getTime())) {
    return new Date(NaN);
  }

  date.setFullYear(year);
  return date;
}

/**
 * @name subYears
 * @category Year Helpers
 * @summary Subtract the specified number of years from the given date.
 *
 * @description
 * Subtract the specified number of years from the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the years subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 5 years from 1 September 2014:
 * const result = subYears(new Date(2014, 8, 1), 5)
 * //=> Tue Sep 01 2009 00:00:00
 */

function subYears(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addYears(dirtyDate, -amount);
}

var styles$6 = {"popover":"DatePicker_popover___3V1kJ","month":"DatePicker_month___2ypxH","days":"DatePicker_days___3t1A_","dayNames":"DatePicker_dayNames___1hqA_","header":"DatePicker_header___3XWuP","monthControl":"DatePicker_monthControl___1Mgm-","monthPickerButton":"DatePicker_monthPickerButton___2FRk2","arrowDown":"DatePicker_arrowDown___oPabg","controls":"DatePicker_controls___15tVP","control":"DatePicker_control___1hC7F","chevronLeft":"DatePicker_chevronLeft___3WwGm","cell":"DatePicker_cell___19eN9"};

var MONTH_NAMES = [
    "January",
    "February",
    "March",
    "April",
    "May",
    "June",
    "July",
    "August",
    "September",
    "October",
    "November",
    "December",
];
var SHORT_MONTH_NAMES = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
var ALL_MONTHS = MONTH_NAMES.map(function (n, i) { return ({
    index: i,
    name: n,
    shortName: SHORT_MONTH_NAMES[i],
}); });
var createMonthsRange = function (startDate, months) {
    return Array.from(Array(months).keys()).map(function (d) { return addMonths(startDate, d); });
};

var styles$5 = {"wrapper":"MonthPicker_wrapper___ezI0B","picker":"MonthPicker_picker___2wXVW","months":"MonthPicker_months___1xfS2","header":"MonthPicker_header___3kuyD","yearPickerButton":"MonthPicker_yearPickerButton___3LFBx","arrowDown":"MonthPicker_arrowDown___2MJj2","pickerControl":"MonthPicker_pickerControl___-A5fw","controls":"MonthPicker_controls___1YN_7","control":"MonthPicker_control___3UaQ2","chevronLeft":"MonthPicker_chevronLeft___N6DPH","cell":"MonthPicker_cell___1ug7g"};

var styles$4 = {"wrapper":"YearPicker_wrapper____WNKe","picker":"YearPicker_picker___1M3Cw","years":"YearPicker_years___3cjo3","header":"YearPicker_header___3gSOL","pickerControl":"YearPicker_pickerControl___20BjO","controls":"YearPicker_controls___1uaak","control":"YearPicker_control___20LFk","chevronLeft":"YearPicker_chevronLeft___2HqER","cell":"YearPicker_cell___3y6lg"};

var YearPicker = React__namespace.forwardRef(function YearPicker(_a, ref) {
    var className = _a.className, boundingRange = _a.boundingRange, _b = _a.selectedDate, selectedDate = _b === void 0 ? new Date() : _b, onYearSelect = _a.onYearSelect, _c = _a.numYears, numYears = _c === void 0 ? 10 : _c;
    var _d = React__namespace.useState(selectedDate), currentVisibleDate = _d[0], setCurrentVisibleDate = _d[1];
    var _e = boundingRange || [], minDate = _e[0], maxDate = _e[1];
    var visibleYears = React__namespace.useMemo(function () {
        var currentYear = currentVisibleDate.getFullYear();
        return Array.from(Array(numYears).keys()).map(function (n) { return n - numYears + currentYear + 1; });
    }, [currentVisibleDate, numYears]);
    var isInRange = React__namespace.useCallback(function (date) {
        return (minDate ? startOfYear(date) >= startOfYear(minDate) : true) &&
            (maxDate ? startOfYear(date) <= startOfYear(maxDate) : true);
    }, [maxDate, minDate]);
    var showPrevious = React__namespace.useMemo(function () { return isInRange(endOfMonth(subYears(currentVisibleDate, numYears))); }, [currentVisibleDate, isInRange, numYears]);
    var showNext = React__namespace.useMemo(function () { return isInRange(startOfMonth(addYears(currentVisibleDate, 1))); }, [currentVisibleDate, isInRange]);
    var onPreviousClick = React__namespace.useCallback(function () {
        var newYear = subYears(currentVisibleDate, numYears);
        setCurrentVisibleDate(newYear);
    }, [currentVisibleDate, numYears]);
    var onNextClick = React__namespace.useCallback(function () {
        var newYear = addYears(currentVisibleDate, numYears);
        setCurrentVisibleDate(newYear);
    }, [currentVisibleDate, numYears]);
    return (React__namespace.createElement("div", { ref: ref, className: classnames(styles$4.wrapper, className), "data-testid": "year-picker" },
        React__namespace.createElement("div", { className: styles$4.picker },
            React__namespace.createElement("div", { className: styles$4.header },
                React__namespace.createElement("div", { className: styles$4.pickerControl, "data-testid": "year-picker-header" },
                    currentVisibleDate.getFullYear() - numYears + 1,
                    " - ",
                    currentVisibleDate.getFullYear()),
                React__namespace.createElement("div", { className: styles$4.controls },
                    showPrevious && (React__namespace.createElement(IconButton, { label: "Previous Years", "data-testid": "year-picker-previous-button", className: styles$4.control, onClick: onPreviousClick },
                        React__namespace.createElement(ChevronRightIcon, { className: styles$4.chevronLeft }))),
                    showNext && (React__namespace.createElement(IconButton, { label: "Next Years", "data-testid": "year-picker-next-button", className: styles$4.control, onClick: onNextClick },
                        React__namespace.createElement(ChevronRightIcon, null))))),
            React__namespace.createElement("div", { className: styles$4.years }, visibleYears.map(function (year) { return (React__namespace.createElement("div", { "data-testid": "year-picker-year", "data-active-year": year === selectedDate.getFullYear(), "data-inrange": isInRange(setYear(selectedDate, year)), className: styles$4.cell, key: year, onClick: function () {
                    onYearSelect && onYearSelect(setYear(selectedDate, year));
                } }, year)); })))));
});

var MonthPicker = React__namespace.forwardRef(function MonthPicker(_a, ref) {
    var className = _a.className, selectedDate = _a.selectedDate, onMonthSelect = _a.onMonthSelect, onYearSelectProp = _a.onYearSelect, boundingRange = _a.boundingRange, _b = _a.hideYearPicker, hideYearPicker = _b === void 0 ? false : _b, _c = _a.isPopover, isPopover = _c === void 0 ? false : _c, onOpenYearPickerProp = _a.onOpenYearPicker, numYears = _a.numYears;
    var _d = React__namespace.useState(false), isYearPicker = _d[0], setIsYearPicker = _d[1];
    var yearPickerButton = React__namespace.useRef(null);
    var _e = React__namespace.useState(selectedDate || new Date()), currentVisibleDate = _e[0], setCurrentVisibleDate = _e[1];
    var _f = boundingRange || [], minDate = _f[0], maxDate = _f[1];
    var isInRange = React__namespace.useCallback(function (date) {
        return (minDate ? startOfMonth(date) >= startOfMonth(minDate) : true) &&
            (maxDate ? startOfMonth(date) <= startOfMonth(maxDate) : true);
    }, [maxDate, minDate]);
    var showPrevious = React__namespace.useMemo(function () { return isInRange(endOfYear(subYears(currentVisibleDate, 1))); }, [currentVisibleDate, isInRange]);
    var showNext = React__namespace.useMemo(function () { return isInRange(startOfYear(addYears(currentVisibleDate, 1))); }, [currentVisibleDate, isInRange]);
    var onOpenYearPicker = React__namespace.useCallback(function () {
        if (isPopover && onOpenYearPickerProp) {
            onOpenYearPickerProp();
        }
        else {
            setIsYearPicker(true);
        }
    }, [isPopover, onOpenYearPickerProp]);
    var onCloseYearPicker = React__namespace.useCallback(function () {
        setIsYearPicker(false);
    }, []);
    var onPreviousClick = React__namespace.useCallback(function () {
        var newYear = subYears(currentVisibleDate, 1);
        setCurrentVisibleDate(newYear);
    }, [currentVisibleDate]);
    var onNextClick = React__namespace.useCallback(function () {
        var newYear = addYears(currentVisibleDate, 1);
        setCurrentVisibleDate(newYear);
    }, [currentVisibleDate]);
    var onYearSelect = React__namespace.useCallback(function (date) {
        onYearSelectProp && onYearSelectProp(date);
        onCloseYearPicker();
    }, [onCloseYearPicker, onYearSelectProp]);
    return (React__namespace.createElement("div", { ref: ref, className: classnames(styles$5.wrapper, className), "data-testid": "month-picker" },
        React__namespace.createElement("div", { className: styles$5.picker },
            React__namespace.createElement("div", { className: styles$5.header },
                React__namespace.createElement("div", { className: styles$5.pickerControl, "data-testid": "month-picker-year-heading" }, !hideYearPicker ? (React__namespace.createElement("button", { className: styles$5.yearPickerButton, "data-testid": "month-picker-year-button", onClick: onOpenYearPicker, ref: yearPickerButton },
                    currentVisibleDate.getFullYear(),
                    React__namespace.createElement(ArrowDownIcon, { className: styles$5.arrowDown }))) : (currentVisibleDate.getFullYear())),
                React__namespace.createElement("div", { className: styles$5.controls },
                    showPrevious && (React__namespace.createElement(IconButton, { label: "Previous Year", "data-testid": "month-picker-previous-button", className: styles$5.control, onClick: onPreviousClick },
                        React__namespace.createElement(ChevronRightIcon, { className: styles$5.chevronLeft }))),
                    showNext && (React__namespace.createElement(IconButton, { label: "Next Year", "data-testid": "month-picker-next-button", className: styles$5.control, onClick: onNextClick },
                        React__namespace.createElement(ChevronRightIcon, null))))),
            React__namespace.createElement("div", { className: styles$5.months }, ALL_MONTHS.map(function (month, i) { return (React__namespace.createElement("div", { "data-testid": "month-picker-month", "data-active-month": selectedDate && currentVisibleDate.getFullYear() === selectedDate.getFullYear()
                    ? selectedDate.getMonth() === i
                    : false, "data-inrange": isInRange(setMonth(currentVisibleDate, i)), className: styles$5.cell, key: i, onClick: function () {
                    onMonthSelect && onMonthSelect(new Date(currentVisibleDate.getFullYear(), i));
                } }, month.shortName)); }))),
        React__namespace.createElement(Popover, { isOpen: isYearPicker, onClose: onCloseYearPicker, anchorElement: yearPickerButton.current || undefined, popperOptions: {
                placement: "bottom-start",
                modifiers: [
                    {
                        name: "offset",
                        options: {
                            offset: [-10, -30],
                        },
                    },
                ],
            } }, isYearPicker && (React__namespace.createElement(YearPicker, { selectedDate: selectedDate, onYearSelect: onYearSelect, boundingRange: boundingRange, numYears: numYears })))));
});

var Month = React__default['default'].forwardRef(function Month(props, ref) {
    var boundingRange = props.boundingRange, onPreviousClick = props.onPreviousClick, onNextClick = props.onNextClick, onMonthSelectProp = props.onMonthSelect, onYearSelectProp = props.onYearSelect, _a = props.hideMonthPicker, hideMonthPicker = _a === void 0 ? false : _a, _b = props.hideYearPicker, hideYearPicker = _b === void 0 ? false : _b, showNext = props.showNext, showPrevious = props.showPrevious, numYears = props.numYears, highlightToday = props.highlightToday;
    var _c = React.useState(undefined), visiblePicker = _c[0], setVisiblePicker = _c[1];
    var nextPickerButton = React.useRef(null);
    var onOpenNextPicker = React.useCallback(function () {
        if (!hideMonthPicker && visiblePicker !== "month") {
            setVisiblePicker("month");
        }
        else if (!hideYearPicker && visiblePicker !== "year") {
            setVisiblePicker("year");
        }
    }, [hideMonthPicker, hideYearPicker, visiblePicker]);
    var onCloseNextPicker = React.useCallback(function () {
        if (!hideMonthPicker && visiblePicker === "month") {
            setVisiblePicker(undefined);
        }
        else if (!hideMonthPicker && visiblePicker === "year") {
            setVisiblePicker("month");
        }
        else {
            setVisiblePicker(undefined);
        }
    }, [hideMonthPicker, visiblePicker]);
    var onMonthSelect = React.useCallback(function (date) {
        onMonthSelectProp && onMonthSelectProp(date);
        onCloseNextPicker();
    }, [onCloseNextPicker, onMonthSelectProp]);
    var onYearSelect = React.useCallback(function (date) {
        onYearSelectProp && onYearSelectProp(date);
        onCloseNextPicker();
    }, [onCloseNextPicker, onYearSelectProp]);
    var _d = props.type === "range" ? props.rangeMonth : { days: props.days, month: props.month }, days = _d.days, month = _d.month;
    var startDate = (props.type === "range" ? props.range : [props.month])[0];
    var monthName = MONTH_NAMES[month.getMonth()];
    var headerText = monthName + " " + month.getFullYear();
    var isDayOfRangeMonth = function (thisDay) {
        return thisDay.inRange !== undefined;
    };
    return (React__default['default'].createElement("div", { className: styles$6.month, ref: ref },
        React__default['default'].createElement("div", { className: styles$6.header },
            React__default['default'].createElement("div", { className: styles$6.monthControl, "data-testid": "month-month-heading" }, !hideMonthPicker || !hideYearPicker ? (React__default['default'].createElement("button", { className: styles$6.monthPickerButton, "data-testid": "month-month-button", onClick: onOpenNextPicker, ref: nextPickerButton },
                headerText,
                React__default['default'].createElement(ArrowDownIcon, { className: styles$6.arrowDown }))) : (headerText)),
            React__default['default'].createElement("div", { className: styles$6.controls },
                showPrevious && (React__default['default'].createElement(IconButton, { label: "Previous Month", "data-testid": "month-previous-button", className: styles$6.control, onClick: onPreviousClick },
                    React__default['default'].createElement(ChevronRightIcon, { className: styles$6.chevronLeft }))),
                showNext && (React__default['default'].createElement(IconButton, { label: "Next Month", "data-testid": "month-next-button", className: styles$6.control, onClick: onNextClick },
                    React__default['default'].createElement(ChevronRightIcon, null))))),
        React__default['default'].createElement("div", { className: styles$6.dayNames },
            React__default['default'].createElement("div", { className: styles$6.cell }, "Mo"),
            React__default['default'].createElement("div", { className: styles$6.cell }, "Tu"),
            React__default['default'].createElement("div", { className: styles$6.cell }, "We"),
            React__default['default'].createElement("div", { className: styles$6.cell }, "Th"),
            React__default['default'].createElement("div", { className: styles$6.cell }, "Fr"),
            React__default['default'].createElement("div", { className: styles$6.cell }, "Sa"),
            React__default['default'].createElement("div", { className: styles$6.cell }, "Su")),
        React__default['default'].createElement("div", { className: styles$6.days }, days.map(function (day, i) { return (React__default['default'].createElement("div", { "data-testid": "month-day-" + (day.inCurrentMonth ? "active" : "inactive") + "-" + day.dateObj.getDate(), "data-active-month": day.inCurrentMonth, "data-outside-bounding-range": !isWithinInterval(day.dateObj, {
                start: boundingRange[0] || minTime,
                end: boundingRange[1] || maxTime,
            }), "data-inrange": isDayOfRangeMonth(day) ? day.inRange : false, "data-start": isDayOfRangeMonth(day) ? day.isStart : false, "data-selected": isDayOfRangeMonth(day) ? false : isSameDay(day.dateObj, props.value || 0), "data-end": isDayOfRangeMonth(day) ? day.isEnd : false, "data-week-start": day.dayName === "MONDAY", "data-week-end": day.dayName === "SUNDAY", "data-start-of-month": isFirstDayOfMonth(day.dateObj), "data-end-of-month": isLastDayOfMonth(day.dateObj), "data-highlight": highlightToday ? isSameDay(day.dateObj, new Date()) : false, className: styles$6.cell, key: i, onClick: function () {
                if (props.type === "range") {
                    if (startDate && props.isSelectionActive && day.dateObj >= startDate) {
                        props.setRange([startDate, day.dateObj]);
                        props.setSelectionActive(false);
                        props.onRangeSelect && props.onRangeSelect([startDate, day.dateObj]);
                    }
                    else {
                        props.setRange([day.dateObj, day.dateObj]);
                        props.setSelectionActive(true);
                    }
                }
                else {
                    props.setDate(day.dateObj);
                }
            }, onMouseEnter: function () {
                if (props.type === "range") {
                    if (startDate && props.isSelectionActive && day.dateObj >= startDate) {
                        props.setRange([startDate, day.dateObj]);
                    }
                }
            } }, day.dateObj.getDate())); })),
        hideMonthPicker && hideYearPicker ? null : (React__default['default'].createElement(Popover, { isOpen: !!visiblePicker, popoverClassName: styles$6.popover, onClose: onCloseNextPicker, anchorElement: nextPickerButton.current || undefined, popperOptions: {
                placement: "bottom-start",
                modifiers: [
                    {
                        name: "offset",
                        options: {
                            offset: [-10, -30],
                        },
                    },
                ],
            } },
            visiblePicker === "year" && (React__default['default'].createElement(YearPicker, { selectedDate: month, onYearSelect: onYearSelect, boundingRange: boundingRange, numYears: numYears })),
            visiblePicker === "month" && (React__default['default'].createElement(MonthPicker, { selectedDate: month, onMonthSelect: onMonthSelect, onYearSelect: onYearSelect, onOpenYearPicker: onOpenNextPicker, boundingRange: boundingRange, hideYearPicker: hideYearPicker, isPopover: true, numYears: numYears }))))));
});

var e=Object.defineProperty,t=Object.defineProperties,n=Object.getOwnPropertyDescriptors,r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable,s=(t,n,r)=>n in t?e(t,n,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[n]=r;const c=Symbol("DayOfMonth"),l=Symbol("DayOfRangeMonth");var g,f;(f=g||(g={})).MONDAY="MONDAY",f.TUESDAY="TUESDAY",f.WEDNESDAY="WEDNESDAY",f.THURSDAY="THURSDAY",f.FRIDAY="FRIDAY",f.SATURDAY="SATURDAY",f.SUNDAY="SUNDAY";const D=[g.SUNDAY,g.MONDAY,g.TUESDAY,g.WEDNESDAY,g.THURSDAY,g.FRIDAY,g.SATURDAY],d=new Map,h=new Map;function m(e,t){return function(e,t){const n=new Date(e.getTime());return n.setDate(t),n}(e,e.getDate()+t)}function y(e,t){const n=e.getMonth()+t,r=e.getFullYear()+Math.floor(n/11),o=new Date(e.getTime());return o.setMonth(n%11),o.setFullYear(r),o}function Y(e){const t=new Date(e.getTime());return t.setDate(1),t.setHours(0,0,0,0),t}function O(e,t){return e.getFullYear()===t.getFullYear()&&e.getMonth()===t.getMonth()&&e.getDate()===t.getDate()}function p(e,t){const n=new Date(e.getTime()),r=new Date(t.getTime());return n.setHours(0,0,0,0),r.setHours(0,0,0,0),n.getTime()>r.getTime()}function b(e,t){const n=new Date(e.getTime()),r=new Date(t.getTime());return n.setHours(0,0,0,0),r.setHours(0,0,0,0),n.getTime()<r.getTime()}function S(e){return `${e.getFullYear()}-${(e.getMonth()+1).toString().padStart(2,"0")}-${(e.getDate()+0).toString().padStart(2,"0")}`}function w(e,t=g.SUNDAY){const n=Y(e),r=D.findIndex((e=>e===t)),o=`${S(n)}-${t}`;if(r<0)throw new RangeError(`Invalid value for day provided: ${t}`);const a=d.get(o);if(a)return a;const s=n.getDay(),u=Array.from({length:42},((e,t)=>{const o=m(n,t-s-(r>s?7:0)+r);return {__type:c,dateObj:o,dayName:D[(t+r)%7],inCurrentMonth:(a=n,u=o,a.getFullYear()===u.getFullYear()&&a.getMonth()===u.getMonth()),ISODateString:S(o)};var a,u;})),i=D.slice(r).concat(D.slice(0,r));return d.set(o,{days:u,daysOfWeek:i,month:n}),{days:u,daysOfWeek:i,month:n}}function A(e,u,i,c=g.SUNDAY){let f=e.map((e=>{if(!(e instanceof Date))throw new TypeError("Given month is not an instance of Date");return `${e.getFullYear()}-${e.getMonth()}`})).join("|");if(f+=`|${u?S(u):""}`,f+=`|${i?S(i):""}`,f+=`|${c}`,h.has(f))return h.get(f);const D=e.reduce(((e,g,f)=>{const{days:D,daysOfWeek:d}=w(g,c);0===f&&(e.daysOfWeek=d.slice(0));const h=D.map((e=>{const c=Boolean(u&&O(e.dateObj,u)),g=Boolean(i&&O(e.dateObj,i));return f=((e,t)=>{for(var n in t||(t={}))o.call(t,n)&&s(e,n,t[n]);if(r)for(var n of r(t))a.call(t,n)&&s(e,n,t[n]);return e})({},e),D={__type:l,inRange:c||g||Boolean(u&&p(e.dateObj,u)&&i&&b(e.dateObj,i)),isStart:c,isEnd:g},t(f,n(D));var f,D;}));return e.months.push({days:h,month:Y(g)}),e}),{months:[],daysOfWeek:[]});return h.set(f,D),D}function T(e=new Date,t){const[n,r]=React.useState(Y(e)),[o,a]=React.useState(t||g.SUNDAY),{days:s,daysOfWeek:c}=w(n,o),l=React.useCallback((()=>{r((e=>Y(y(e,1))));}),[]),f=React.useCallback((()=>{r((e=>Y(y(e,-1))));}),[]),D=React.useCallback((e=>{r((t=>Y(function(e,t){if("number"!=typeof t)throw new TypeError(`Expected month to be a number but got ${t}`);if(t<0||t>11)throw new RangeError(`Month must be number between 0 and 11, but got ${t}`);const n=new Date(e.getTime());return n.setMonth(t),n}(t,e))));}),[]),d=React.useCallback((e=>{r((t=>Y(function(e,t){if("number"!=typeof t)throw new TypeError(`Expected month to be a number but got ${t}`);const n=new Date(e.getTime());return n.setFullYear(t),n}(t,e))));}),[]);return {days:s,daysOfWeek:c,setMonth:r,month:n,setStartOfWeek:a,nextMonth:l,prevMonth:f,setMonthOnly:D,setYearOnly:d}}function M(e,t={}){var n,r;const[o,a]=React.useState(e),[s,c]=React.useState((null==t?void 0:t.weekStartsOn)||g.SUNDAY),[l,f]=React.useState([(null==(n=null==t?void 0:t.range)?void 0:n[0])||null,(null==(r=null==t?void 0:t.range)?void 0:r[1])||null]),{months:D,daysOfWeek:d}=A(o,l[0],l[1],s);return {months:D,daysOfWeek:d,range:l,setMonths:a,setRange:React.useCallback((e=>{f((t=>{const[n,r]="function"==typeof e?e(t):e;if(n&&r&&b(r,n))throw new RangeError("Range end cannot be before the range start");return [n,r]}));}),[f]),setStartOfWeek:c}}

var styles$3 = {"wrapper":"DatePicker_wrapper___14E6s"};

var DatePicker = React__namespace.forwardRef(function DatePicker(_a, ref) {
    var className = _a.className, startDate = _a.startDate, _b = _a.hideMonthPicker, hideMonthPicker = _b === void 0 ? false : _b, _c = _a.hideYearPicker, hideYearPicker = _c === void 0 ? false : _c, value = _a.value, onValueChangeProp = _a.onValueChange, boundingRange = _a.boundingRange, highlightToday = _a.highlightToday;
    var _d = React__namespace.useState(startDate || new Date()), currentStartDate = _d[0], setCurrentStartDate = _d[1];
    var _e = T(currentStartDate, "MONDAY"), month = _e.month, setMonth = _e.setMonth, days = _e.days;
    var _f = boundingRange || [], minDate = _f[0], maxDate = _f[1];
    React__namespace.useEffect(function () {
        setCurrentStartDate(startDate || new Date());
    }, [startDate]);
    var isInRange = React__namespace.useCallback(function (date) { return (minDate ? date >= minDate : true) && (maxDate ? date <= maxDate : true); }, [maxDate, minDate]);
    var showPrevious = React__namespace.useMemo(function () { return isInRange(endOfMonth(subMonths(currentStartDate, 1))); }, [currentStartDate, isInRange]);
    var showNext = React__namespace.useMemo(function () { return isInRange(startOfMonth(addMonths(currentStartDate, 1))); }, [currentStartDate, isInRange]);
    var onPreviousClick = React__namespace.useCallback(function () {
        var newMonth = subMonths(currentStartDate, 1);
        setCurrentStartDate(newMonth);
        setMonth(newMonth);
    }, [currentStartDate, setMonth]);
    var onNextClick = React__namespace.useCallback(function () {
        var newMonth = addMonths(currentStartDate, 1);
        setCurrentStartDate(newMonth);
        setMonth(newMonth);
    }, [currentStartDate, setMonth]);
    var onMonthSelect = React__namespace.useCallback(function (date) {
        var newMonth = new Date(currentStartDate);
        newMonth.setMonth(date.getMonth());
        newMonth.setFullYear(date.getFullYear());
        setCurrentStartDate(newMonth);
        setMonth(newMonth);
    }, [currentStartDate, setMonth]);
    var onYearSelect = React__namespace.useCallback(function (date) {
        var newMonth = new Date(currentStartDate);
        newMonth.setFullYear(date.getFullYear());
        setCurrentStartDate(newMonth);
        setMonth(newMonth);
    }, [currentStartDate, setMonth]);
    var onValueChange = React__namespace.useCallback(function (newValue) {
        onValueChangeProp && onValueChangeProp(newValue);
        setMonth(newValue);
    }, [onValueChangeProp, setMonth]);
    return (React__namespace.createElement("div", { className: classnames(styles$3.wrapper, className), ref: ref, "data-testid": "date-picker" },
        React__namespace.createElement(Month, { type: "single", hideMonthPicker: hideMonthPicker, hideYearPicker: hideYearPicker, showPrevious: showPrevious, showNext: showNext, month: month, days: days, value: value, setDate: onValueChange, boundingRange: boundingRange || [null, null], onPreviousClick: onPreviousClick, onNextClick: onNextClick, onMonthSelect: onMonthSelect, onYearSelect: onYearSelect, highlightToday: highlightToday })));
});

var styles$2 = {"rangeWrapper":"DateRangePicker_rangeWrapper___6wrWa"};

var DateRangePicker = React__namespace.forwardRef(function DateRangePicker(_a, ref) {
    var className = _a.className, _b = _a.displayMonths, displayMonths = _b === void 0 ? 1 : _b, startDate = _a.startDate, _c = _a.hideMonthPicker, hideMonthPicker = _c === void 0 ? false : _c, _d = _a.hideYearPicker, hideYearPicker = _d === void 0 ? false : _d, value = _a.value, onValueChangeProp = _a.onValueChange, onRangeSelected = _a.onRangeSelected, boundingRange = _a.boundingRange, highlightToday = _a.highlightToday;
    var _e = React__namespace.useState(startDate || new Date()), currentStartDate = _e[0], setCurrentStartDate = _e[1];
    var dates = React__namespace.useMemo(function () { return createMonthsRange(currentStartDate, displayMonths); }, [currentStartDate, displayMonths]);
    var _f = M(dates, {
        weekStartsOn: "MONDAY",
        range: value,
    }), months = _f.months, range = _f.range, setRange = _f.setRange, setMonths = _f.setMonths;
    var _g = React__namespace.useState(false), isSelectionActive = _g[0], setSelectionActive = _g[1];
    var _h = boundingRange || [], minDate = _h[0], maxDate = _h[1];
    React__namespace.useEffect(function () {
        value && setRange(value);
    }, [setRange, value]);
    React__namespace.useEffect(function () {
        var newMonth = startDate || new Date();
        setCurrentStartDate(newMonth);
        setMonths(createMonthsRange(newMonth, displayMonths));
    }, [displayMonths, setMonths, startDate]);
    var isInRange = React__namespace.useCallback(function (date) { return (minDate ? date >= minDate : true) && (maxDate ? date <= maxDate : true); }, [maxDate, minDate]);
    var showPrevious = React__namespace.useCallback(function (offset) { return isInRange(endOfMonth(subMonths(currentStartDate, 1 - offset))); }, [currentStartDate, isInRange]);
    var showNext = React__namespace.useCallback(function (offset) { return isInRange(startOfMonth(addMonths(currentStartDate, 1 + offset))); }, [currentStartDate, isInRange]);
    var onPreviousClick = React__namespace.useCallback(function () {
        var newMonth = subMonths(currentStartDate, 1);
        setCurrentStartDate(newMonth);
        setMonths(createMonthsRange(newMonth, displayMonths));
    }, [currentStartDate, displayMonths, setMonths]);
    var onNextClick = React__namespace.useCallback(function () {
        var newMonth = addMonths(currentStartDate, 1);
        setCurrentStartDate(newMonth);
        setMonths(createMonthsRange(newMonth, displayMonths));
    }, [currentStartDate, displayMonths, setMonths]);
    var onMonthSelect = React__namespace.useCallback(function (date) {
        var newMonth = new Date(currentStartDate);
        newMonth.setMonth(date.getMonth());
        newMonth.setFullYear(date.getFullYear());
        setCurrentStartDate(newMonth);
        setMonths(createMonthsRange(newMonth, displayMonths));
    }, [currentStartDate, displayMonths, setMonths]);
    var onYearSelect = React__namespace.useCallback(function (date) {
        var newMonth = new Date(currentStartDate);
        newMonth.setFullYear(date.getFullYear());
        setCurrentStartDate(newMonth);
        setMonths(createMonthsRange(newMonth, displayMonths));
    }, [currentStartDate, displayMonths, setMonths]);
    var onValueChange = React__namespace.useCallback(function (newValue) {
        onValueChangeProp && onValueChangeProp(newValue);
        setRange(newValue);
    }, [onValueChangeProp, setRange]);
    return (React__namespace.createElement("div", { className: classnames(styles$2.rangeWrapper, className), ref: ref, "data-testid": "date-range-picker" }, months.map(function (rangeMonth, i) { return (React__namespace.createElement(Month, { type: "range", key: i, hideMonthPicker: hideMonthPicker, hideYearPicker: hideYearPicker, showPrevious: showPrevious(i), showNext: showNext(i), rangeMonth: rangeMonth, setRange: onValueChange, onRangeSelect: onRangeSelected, range: range, boundingRange: boundingRange || [null, null], isSelectionActive: isSelectionActive, setSelectionActive: setSelectionActive, onPreviousClick: onPreviousClick, onNextClick: onNextClick, onMonthSelect: onMonthSelect, onYearSelect: onYearSelect, highlightToday: highlightToday })); })));
});

var styles$1 = {"iconRight":"DateInput_iconRight___AVqMv","iconLeft":"DateInput_iconLeft___2uxyG","input":"DateInput_input___1vXmf"};

var DateInput = React__namespace.forwardRef(function DateInput(props, ref) {
    var className = props.className, value = props.value, startDate = props.startDate, boundingRange = props.boundingRange, highlightToday = props.highlightToday, onValueChangeProp = props.onValueChange, hideMonthPicker = props.hideMonthPicker, hideYearPicker = props.hideYearPicker;
    var innerRef = React__namespace.useRef(null);
    var textInputRef = useCombinedRefs(ref, innerRef);
    var _a = React__namespace.useState(false), open = _a[0], setOpen = _a[1];
    var _b = React__namespace.useState(value), thisValue = _b[0], setThisValue = _b[1];
    var resolvedValue = React__namespace.useMemo(function () { return value || thisValue; }, [thisValue, value]);
    var onValueChange = React__namespace.useCallback(function (newValue) {
        if (onValueChangeProp) {
            onValueChangeProp(newValue);
        }
        if (!value) {
            setThisValue(newValue);
        }
    }, [onValueChangeProp, value]);
    var onInputFocus = React__namespace.useCallback(function () {
        setOpen(true);
    }, []);
    var onClose = React__namespace.useCallback(function () {
        setOpen(false);
    }, []);
    return (React__namespace.createElement(React__namespace.Fragment, null,
        React__namespace.createElement(TextInput, { ref: textInputRef, className: className, inputClassName: styles$1.input, iconLeft: React__namespace.createElement(CalendarIcon, null), iconLeftClassName: styles$1.iconLeft, iconRight: React__namespace.createElement(ArrowDownIcon, null), iconRightClassName: styles$1.iconRight, focusOnControlClick: true, onFocus: onInputFocus, value: resolvedValue && format(resolvedValue, "do LLLL Y"), readOnly: true }),
        React__namespace.createElement(Popover, { isOpen: open, onClose: onClose, anchorElement: textInputRef.current || undefined, size: "auto", popperOptions: {
                placement: "bottom-start",
            }, "data-testid": "dateinput-popover", "data-is-open": open },
            React__namespace.createElement(DatePicker, { value: resolvedValue, startDate: startDate, boundingRange: boundingRange, highlightToday: highlightToday, onValueChange: onValueChange, hideMonthPicker: !open || hideMonthPicker, hideYearPicker: !open || hideYearPicker }))));
});

var styles = {"iconRight":"DateRangeInput_iconRight___2qkvK","iconLeft":"DateRangeInput_iconLeft___1ub46","input":"DateRangeInput_input___2F-LY"};

var DateRangeInput = React__namespace.forwardRef(function DateInput(props, ref) {
    var className = props.className, value = props.value, startDate = props.startDate, boundingRange = props.boundingRange, highlightToday = props.highlightToday, onValueChange = props.onValueChange, onRangeSelected = props.onRangeSelected, hideMonthPicker = props.hideMonthPicker, hideYearPicker = props.hideYearPicker, displayMonths = props.displayMonths;
    var innerRef = React__namespace.useRef(null);
    var textInputRef = useCombinedRefs(ref, innerRef);
    var _a = React__namespace.useState(false), open = _a[0], setOpen = _a[1];
    var _b = React__namespace.useState(value), thisValue = _b[0], setThisValue = _b[1];
    React__namespace.useEffect(function () {
        setThisValue(value);
    }, [value]);
    var onThisValueChange = React__namespace.useCallback(function (newValue) {
        if (onValueChange) {
            onValueChange(newValue);
        }
        setThisValue(newValue);
    }, [onValueChange]);
    var onInputFocus = React__namespace.useCallback(function () {
        setOpen(true);
    }, []);
    var onClose = React__namespace.useCallback(function () {
        setOpen(false);
    }, []);
    var getFormattedValue = function () {
        var firstValue = thisValue && thisValue[0] && format(thisValue[0], "do LLLL Y");
        var secondValue = thisValue && thisValue[1] && format(thisValue[1], "do LLLL Y");
        if (firstValue && !secondValue)
            return firstValue;
        else if (secondValue && !firstValue)
            return secondValue;
        else if (firstValue && secondValue)
            return firstValue + " - " + secondValue;
        return "";
    };
    return (React__namespace.createElement(React__namespace.Fragment, null,
        React__namespace.createElement(TextInput, { ref: textInputRef, className: className, inputClassName: styles.input, iconLeft: React__namespace.createElement(CalendarIcon, null), iconLeftClassName: styles.iconLeft, iconRight: React__namespace.createElement(ArrowDownIcon, null), iconRightClassName: styles.iconRight, focusOnControlClick: true, onFocus: onInputFocus, value: getFormattedValue(), readOnly: true }),
        React__namespace.createElement(Popover, { isOpen: open, onClose: onClose, anchorElement: textInputRef.current || undefined, size: "auto", popperOptions: {
                placement: "bottom-start",
            }, "data-testid": "daterangeinput-popover", "data-is-open": open },
            React__namespace.createElement(DateRangePicker, { value: thisValue, startDate: startDate, boundingRange: boundingRange, highlightToday: highlightToday, displayMonths: displayMonths, onValueChange: onThisValueChange, onRangeSelected: onRangeSelected, hideMonthPicker: !open || hideMonthPicker, hideYearPicker: !open || hideYearPicker }))));
});

exports.AlertIcon = AlertIcon;
exports.AnnouncementBanner = AnnouncementBanner;
exports.AnnouncementIcon = AnnouncementIcon;
exports.ArrowDownIcon = ArrowDownIcon;
exports.ArrowThinRightIcon = ArrowThinRightIcon;
exports.ArrowUpDownIcon = ArrowUpDownIcon;
exports.Autosuggest = Autosuggest;
exports.BankIcon = BankIcon;
exports.BellIcon = BellIcon;
exports.BinIcon = BinIcon;
exports.BookOpenTextIcon = BookOpenTextIcon;
exports.Button = Button;
exports.CalendarIcon = CalendarIcon;
exports.Card = Card;
exports.CartIcon = CartIcon;
exports.ChartLegend = ChartLegend;
exports.CheckIcon = CheckIcon;
exports.Checkbox = Checkbox;
exports.ChevronDownIcon = ChevronDownIcon;
exports.ChevronLeftIcon = ChevronLeftIcon;
exports.ChevronRightIcon = ChevronRightIcon;
exports.ChoroplethChart = ChoroplethChart;
exports.CircleAlertIcon = CircleAlertIcon;
exports.CircleCheckIcon = CircleCheckIcon;
exports.CircleEmptyInfoIcon = CircleEmptyInfoIcon;
exports.CircleEmptyQuestionIcon = CircleEmptyQuestionIcon;
exports.CircleIcon = CircleIcon;
exports.CircleQuestionIcon = CircleQuestionIcon;
exports.ClipboardCopy = ClipboardCopy;
exports.ClipboardInput = ClipboardInput;
exports.CloseIcon = CloseIcon;
exports.CloudDownloadIcon = CloudDownloadIcon;
exports.ClusterIcon = ClusterIcon;
exports.CodeBlock = CodeBlock;
exports.Col = Col;
exports.CopyIcon = CopyIcon;
exports.DashboardPill = DashboardPill;
exports.DataTable = DataTable;
exports.DateInput = DateInput;
exports.DatePicker = DatePicker;
exports.DateRangeInput = DateRangeInput;
exports.DateRangePicker = DateRangePicker;
exports.DoorIcon = DoorIcon;
exports.EntityInfo = EntityInfo;
exports.ErrorDialog = ErrorDialog;
exports.ExchangeIcon = ExchangeIcon;
exports.FilterIcon = FilterIcon;
exports.FlagIcon = FlagIcon;
exports.FlashIcon = FlashIcon;
exports.FloatingElement = FloatingElement;
exports.Grid = Grid$1;
exports.HighlightText = HighlightText;
exports.IconButton = IconButton;
exports.IconLabel = IconLabel;
exports.IndicatorLabel = IndicatorLabel;
exports.IndicatorPill = IndicatorPill;
exports.InfoIcon = InfoIcon;
exports.InvoiceIcon = InvoiceIcon;
exports.LeftArrowIcon = LeftArrowIcon;
exports.LineChart = LineChart;
exports.LinkIcon = LinkIcon;
exports.ListIcon = ListIcon;
exports.LogOutIcon = LogOutIcon;
exports.Modal = Modal;
exports.ModalBody = ModalBody;
exports.MonthPicker = MonthPicker;
exports.OrchardProvider = OrchardProvider;
exports.Pagination = Pagination;
exports.PencilIcon = PencilIcon;
exports.Pill = Pill;
exports.PlusIcon = PlusIcon;
exports.Popover = Popover;
exports.PowerCordPlugIcon = PowerCordPlugIcon;
exports.ProgressBar = ProgressBar;
exports.ReloadIcon = ReloadIcon;
exports.RightArrowIcon = RightArrowIcon;
exports.Row = Row;
exports.SearchIcon = SearchIcon;
exports.SelectInput = SelectInput;
exports.SendIcon = SendIcon;
exports.SetDownIcon = SetDownIcon;
exports.SettingsIcon = SettingsIcon;
exports.ShieldCheckIcon = ShieldCheckIcon;
exports.Skeleton = Skeleton;
exports.Spinner = Spinner;
exports.SquareNewWindowIcon = SquareNewWindowIcon;
exports.StarEmptyIcon = StarEmptyIcon;
exports.StarHalfIcon = StarHalfIcon;
exports.StarIcon = StarIcon;
exports.StatsCircleIcon = StatsCircleIcon;
exports.StopwatchIcon = StopwatchIcon;
exports.Switch = Switch;
exports.SyncIcon = SyncIcon;
exports.Tab = Tab;
exports.TabPanel = TabPanel;
exports.Tabs = Tabs;
exports.TextArea = TextArea;
exports.TextInput = TextInput;
exports.TextLink = TextLink;
exports.ThumbnailsIcon = ThumbnailsIcon;
exports.ToastProvider = ToastProvider;
exports.Tooltip = Tooltip;
exports.TooltipContent = TooltipContent;
exports.Typography = Typography;
exports.UserIcon = UserIcon;
exports.YearPicker = YearPicker;
exports.buttonStyles = buttonStyles;
exports.colors = colors$1;
exports.textLinkStyles = textLinkStyles;
exports.useToast = useToast;
//# sourceMappingURL=index.js.map
